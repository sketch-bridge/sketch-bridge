[
  {
    "name": "107-Arduino-24LCxx",
    "version": "1.1.0",
    "sentence": "Arduino library providing a modern C++ wrapper around littlefs."
  },
  {
    "name": "107-Arduino-APDS-9950",
    "version": "1.1.0",
    "sentence": "Arduino library for the Avago / Broadcom APDS-9950 Digital Proximity, RGB and Ambient Light Sensor"
  },
  {
    "name": "107-Arduino-AS504x",
    "version": "1.3.0",
    "sentence": "Arduino library for interfacing with various Austria Micro Systems angle position sensors."
  },
  {
    "name": "107-Arduino-BMP388",
    "version": "1.3.0",
    "sentence": "Arduino library for interfacing with the BMP388 barometric pressure sensor which can be used for inferring altitude information."
  },
  {
    "name": "107-Arduino-BoostUnits",
    "version": "1.1.0",
    "sentence": "Arduino library for providing boost::units for the Arduino platform."
  },
  {
    "name": "107-Arduino-CriticalSection",
    "version": "1.1.0",
    "sentence": "Arduino library for providing a consistent critical section interface over various Arduino platforms."
  },
  {
    "name": "107-Arduino-Cyphal",
    "version": "3.5.0",
    "sentence": "Arduino library for providing a convenient C++ interface for accessing OpenCyphal."
  },
  {
    "name": "107-Arduino-Cyphal-Support",
    "version": "0.3.1",
    "sentence": "Arduino library for providing a various support functions for building a full Cyphal compliant application."
  },
  {
    "name": "107-Arduino-Debug",
    "version": "1.3.0",
    "sentence": "Arduino library for providing convenient macros for printf-style debugging."
  },
  {
    "name": "107-Arduino-MCP2515",
    "version": "1.5.0",
    "sentence": "Arduino library for controlling the MCP2515 in order to receive/transmit CAN frames."
  },
  {
    "name": "107-Arduino-NMEA-Parser",
    "version": "1.2.0",
    "sentence": "Arduino library for interfacing with any GPS, GLONASS, Galileo or GNSS module and interpreting its NMEA messages."
  },
  {
    "name": "107-Arduino-Sensor",
    "version": "1.1.0",
    "sentence": "A unified sensor abstraction layer used by all 107-system sensor libraries."
  },
  {
    "name": "107-Arduino-Servo-RP2040",
    "version": "0.2.0",
    "sentence": "Hardware-PWM based servo signal generation for RP2040."
  },
  {
    "name": "107-Arduino-TCS3472",
    "version": "1.1.0",
    "sentence": "Arduino library for TCS3472 color sensor"
  },
  {
    "name": "107-Arduino-TMF8801",
    "version": "1.5.0",
    "sentence": "Arduino library for interfacing with the TMF8801 time-of-flight distance sensor."
  },
  {
    "name": "107-Arduino-TSL2550",
    "version": "1.1.0",
    "sentence": "Arduino library for TSL2550 ambient light sensor"
  },
  {
    "name": "107-Arduino-UniqueId",
    "version": "1.2.0",
    "sentence": "Arduino library for providing a unique 64-bit ID over various Arduino platforms."
  },
  {
    "name": "107-Arduino-littlefs",
    "version": "0.6.0",
    "sentence": "Arduino library providing a modern C++ wrapper around littlefs."
  },
  {
    "name": "1NCE Arduino Blueprint",
    "version": "1.0.0",
    "sentence": "Sample integration of 1NCE SDK with Arduino, providing demos for various features of 1NCE OS."
  },
  {
    "name": "1euroFilter",
    "version": "1.0.0",
    "sentence": "Algorithm to filter noisy signals for high precision and responsiveness."
  },
  {
    "name": "24s02ya__M24SR02-Y",
    "version": "1.0.7",
    "sentence": "Library for interfacing with 24s02ya__M24SR02-Y NFC chips."
  },
  {
    "name": "3BC Language Virtual Machine",
    "version": "0.1.3",
    "sentence": "3BC Language Virtual Machine"
  },
  {
    "name": "74HC138",
    "version": "0.1.0",
    "sentence": "Arduino library for the 74HC138 3-to-8 line decoder/demultiplexer."
  },
  {
    "name": "74HC154",
    "version": "0.1.0",
    "sentence": "Arduino library for the 74HC154 4 to 16 line decoder/demultiplexer."
  },
  {
    "name": "74XX595",
    "version": "1.5.2",
    "sentence": "Arduino library for control 74XX595 IC"
  },
  {
    "name": "7Segment",
    "version": "1.0.2",
    "sentence": "7Segment"
  },
  {
    "name": "8x8 Led Matrix Soldered",
    "version": "1.0.0",
    "sentence": "8x8 LED Matrix library."
  },
  {
    "name": "A1301",
    "version": "0.2.3",
    "sentence": "Arduino library for A1301 et al magnetometer."
  },
  {
    "name": "A4963",
    "version": "0.3.0",
    "sentence": "Library for A4963 brushless motor controler"
  },
  {
    "name": "A4990MotorShield",
    "version": "2.0.0",
    "sentence": "Arduino library for the Pololu A4990 Dual Motor Driver Shield"
  },
  {
    "name": "A89306_asukiaaa",
    "version": "1.0.2",
    "sentence": "It controls A89306"
  },
  {
    "name": "AA_MCP2515",
    "version": "1.0.7",
    "sentence": "MCP2515 CAN Controller Library"
  },
  {
    "name": "ABB PowerOne Aurora inverter communication protocol",
    "version": "1.0.3",
    "sentence": "ABB PowerOne Aurora inverter communication protocol for Arduino, esp8266 and esp32 (Library)."
  },
  {
    "name": "ACAN",
    "version": "2.0.4",
    "sentence": "A Teensy 3.1 / 3.2, 3.5, 3.6 CAN driver."
  },
  {
    "name": "ACAN2040",
    "version": "1.0.4",
    "sentence": "ACAN2040"
  },
  {
    "name": "ACAN2515",
    "version": "2.1.4",
    "sentence": "Driver for MCP2515 CAN Controller"
  },
  {
    "name": "ACAN2515Tiny",
    "version": "1.0.6",
    "sentence": "Driver for MCP2515 CAN Controller"
  },
  {
    "name": "ACAN2517",
    "version": "1.1.15",
    "sentence": "Driver for the MCP2517FD, the MCP2518FD and the MCP251863 CAN Controllers (CAN 2.0B mode)"
  },
  {
    "name": "ACAN2517FD",
    "version": "2.1.14",
    "sentence": "Driver for MCP2517FD and MCP2518FD CAN Controller (CAN FD mode)"
  },
  {
    "name": "ACANFD_FeatherM4CAN",
    "version": "2.0.0",
    "sentence": "An Adafruit Feather M4 CAN board CANFD driver."
  },
  {
    "name": "ACANFD_GIGA_R1",
    "version": "1.0.0",
    "sentence": "An Arduino GIGA R1 FDCAN driver."
  },
  {
    "name": "ACANFD_STM32",
    "version": "1.0.1",
    "sentence": "A STM32 FDCAN driver."
  },
  {
    "name": "ACAN_ESP32",
    "version": "2.0.1",
    "sentence": "An ESP32 CAN Driver."
  },
  {
    "name": "ACAN_STM32",
    "version": "1.0.2",
    "sentence": "A STM32 CAN driver."
  },
  {
    "name": "ACAN_T4",
    "version": "1.1.8",
    "sentence": "A Teensy 4.0 / 4.1 CAN / CANFD driver."
  },
  {
    "name": "ACD10",
    "version": "0.2.1",
    "sentence": "Arduino library for the ACD10 CO2 sensor."
  },
  {
    "name": "ACD3100",
    "version": "0.1.2",
    "sentence": "Arduino library for the ACD3100 CO2 sensor."
  },
  {
    "name": "ACDU",
    "version": "1.0.2",
    "sentence": "Support library for ACDU hardware unit."
  },
  {
    "name": "ACE128",
    "version": "2.0.1",
    "sentence": "Access the Bourns ACE-128 Absolute Contacting Encoder over I2C or digital pins"
  },
  {
    "name": "ACI_10K_AN-temp-sensor",
    "version": "1.0.0",
    "sentence": "Read temperature with analog input and 10K RTD"
  },
  {
    "name": "ACROBOTIC SSD1306",
    "version": "1.0.1",
    "sentence": "Library for SSD1306-powered OLED 128x64 displays!"
  },
  {
    "name": "ACS-M1128",
    "version": "2.2.1-b2",
    "sentence": "ACS-M1128 SAM Element IoT WiFi Connectivity"
  },
  {
    "name": "ACS712",
    "version": "0.3.10",
    "sentence": "ACS712 library for Arduino."
  },
  {
    "name": "AD5144A",
    "version": "0.3.1",
    "sentence": "Arduino Library for AD5144A 4 Channel digital potentiometer."
  },
  {
    "name": "AD520X",
    "version": "0.5.1",
    "sentence": "Arduino library for SPI AD5204 and AD5206 digital potentiometers"
  },
  {
    "name": "AD5231 Arduino Library",
    "version": "0.1.0",
    "sentence": "Arduino Library for controlling the Analog Devices AD5231 SPI Digital Potentiometer (DigiPot)"
  },
  {
    "name": "AD523X",
    "version": "0.1.0",
    "sentence": "Arduino library for SPI AD5231 and AD5235 10 bit digital potentiometers.."
  },
  {
    "name": "AD5245",
    "version": "0.4.0",
    "sentence": "Arduino Library for AD5245 digital potentiometer."
  },
  {
    "name": "AD5246",
    "version": "0.2.1",
    "sentence": "Arduino Library for AD5246, I2C 128 step rheostat."
  },
  {
    "name": "AD5248",
    "version": "0.1.1",
    "sentence": "Library for I2C digital potentiometer AD5243 and rheostat AD5248"
  },
  {
    "name": "AD524X",
    "version": "0.5.1",
    "sentence": "Arduino Library for AD524X"
  },
  {
    "name": "AD5254_asukiaaa",
    "version": "1.0.5",
    "sentence": "It manages potentiometer AD5254 or AD5253"
  },
  {
    "name": "AD5263",
    "version": "0.1.3",
    "sentence": "Library to control digital potentiometer AD5263 and compatibles."
  },
  {
    "name": "AD5593R",
    "version": "0.1.0",
    "sentence": "Arduino library for AD5593R, I2C, 8 channel ADC / DAC / GPIO device."
  },
  {
    "name": "AD5620",
    "version": "0.2.1",
    "sentence": "Arduino library for AD5620 Digital Analog Convertor (12 bit)."
  },
  {
    "name": "AD5660",
    "version": "0.1.2",
    "sentence": "Arduino library for AD5660 Digital Analog Convertor (16 bit)."
  },
  {
    "name": "AD5680",
    "version": "0.3.2",
    "sentence": "Arduino library for AD5680 Digital Analog Convertor (18 bit)."
  },
  {
    "name": "AD568X",
    "version": "0.3.1",
    "sentence": "Arduino library for AD568X series Digital Analog Convertor."
  },
  {
    "name": "AD56X8",
    "version": "0.3.1",
    "sentence": "Arduino library for AD56X8, SPI 8 channel Digital Analog Convertor."
  },
  {
    "name": "AD57X4R",
    "version": "5.0.1",
    "sentence": "Provides an SPI based interface to the AD5724R, AD5734R, and the AD5754R Quad 12-/14-/16-Bit Unipolar/Bipolar Voltage Output DACs."
  },
  {
    "name": "AD7173",
    "version": "0.5.4",
    "sentence": "Arduino library for Analog Devices AD7173 analog digital converter"
  },
  {
    "name": "AD7190forESP32",
    "version": "1.0.0",
    "sentence": "Basic library for analog Devices AD7190 running on ESP32"
  },
  {
    "name": "AD7193",
    "version": "1.0.0",
    "sentence": "Library for AD7193 Sigma-Delta ADC with PGA"
  },
  {
    "name": "AD7367",
    "version": "0.1.0",
    "sentence": "Arduino library for the AD7367, 2 channel simultaneous sampling 14 bit ADC."
  },
  {
    "name": "AD7367_SPI",
    "version": "0.1.0",
    "sentence": "Arduino library for the AD7367, 2 channel consecutive sampling 14 bit ADC."
  },
  {
    "name": "AD7390 DAC library",
    "version": "1.0.0",
    "sentence": "Arduino library for the AD7390 digital to analog converter (DAC)"
  },
  {
    "name": "AD74xx",
    "version": "0.1.2",
    "sentence": "AD74xx Driver for Arduino framework"
  },
  {
    "name": "AD75019",
    "version": "1.0.2",
    "sentence": "Arduino Library for the Analog Devices AD75019 Crosspoint Switch"
  },
  {
    "name": "AD7747",
    "version": "1.0.3",
    "sentence": "AD7747 Library"
  },
  {
    "name": "AD8495",
    "version": "0.1.1",
    "sentence": "Arduino library for the AD8494, AD8495, AD8496 and AD8497 thermocouple.."
  },
  {
    "name": "AD9833",
    "version": "0.4.3",
    "sentence": "Arduino library for AD9833 function generator. Supports hardware SPI and software SPI."
  },
  {
    "name": "AD9850SPI",
    "version": "1.0.2",
    "sentence": "Arduino SPI library for AD9850"
  },
  {
    "name": "AD985X",
    "version": "0.7.1",
    "sentence": "Arduino library for AD9850 and AD9851 function generators. Supports both hardware SPI as software SPI."
  },
  {
    "name": "ADC081S",
    "version": "0.3.0",
    "sentence": "Arduino library for ADC081S 8 bit ADC (SPI)."
  },
  {
    "name": "ADC08XS",
    "version": "0.3.0",
    "sentence": "Arduino library for ADC08XS 8, 10, 12 bit ADC (SPI), 2 or 4 channel."
  },
  {
    "name": "ADCButtons",
    "version": "1.0.0",
    "sentence": "A simple ADC 16 Buttons and 4x4 keypad library."
  },
  {
    "name": "ADCDRP",
    "version": "1.3.2",
    "sentence": "Arduino library for ADC data analysis."
  },
  {
    "name": "ADCTouch",
    "version": "1.0.3",
    "sentence": "Create Touch Sensors with a single (Analog)Pin without external Hardware"
  },
  {
    "name": "ADCTouchSensor",
    "version": "0.0.12",
    "sentence": "Create Touch Sensors with a single analog pin without external hardware"
  },
  {
    "name": "ADC_SAmpler",
    "version": "1.3.0",
    "sentence": "Enable analog sequencer with  timer on SAM3x DUE"
  },
  {
    "name": "ADC_SEQR",
    "version": "3.0.0",
    "sentence": "Enable analog sequencer on SAM3x DUE"
  },
  {
    "name": "ADE7753",
    "version": "1.0.0",
    "sentence": "ADE7753 is an IC designed for energy measurement and power monitoring applications of single phase AC line."
  },
  {
    "name": "ADE7880Energy",
    "version": "1.1.1",
    "sentence": "Energi monitor ADE7880_Energy"
  },
  {
    "name": "ADE9000",
    "version": "1.0.0",
    "sentence": "Library to interface with the ADE9000 by Analog Devices."
  },
  {
    "name": "ADF7023",
    "version": "1.0.2",
    "sentence": "An Arduino library for RF communication with Analog Devices RF Transceiver ADF7023."
  },
  {
    "name": "ADG2128",
    "version": "1.0.0",
    "sentence": "A library for the ADG2128 analog cross-point switch."
  },
  {
    "name": "ADG725",
    "version": "0.1.2",
    "sentence": "Arduino library for ADG725 - 16 to 1 channel (2x) multiplexer."
  },
  {
    "name": "ADG726",
    "version": "0.1.2",
    "sentence": "Arduino library for ADG726 - 16 to 1 channel (2x) multiplexer."
  },
  {
    "name": "ADG728",
    "version": "0.1.1",
    "sentence": "Arduino Library for I2C ADG728 matrix switch. 1x8 Multiplexer."
  },
  {
    "name": "ADG729",
    "version": "0.1.1",
    "sentence": "Arduino Library for I2C ADG729 matrix switch. 2x4 Multiplexer."
  },
  {
    "name": "ADG731",
    "version": "0.1.2",
    "sentence": "Arduino library for ADG731 - 32 to 1 channel multiplexer."
  },
  {
    "name": "ADG732",
    "version": "0.1.2",
    "sentence": "Arduino library for ADG732 - 32 to 1 channel multiplexer."
  },
  {
    "name": "ADNS3080",
    "version": "1.0.2",
    "sentence": "Interface for the ADNS3080 mouse sensor."
  },
  {
    "name": "ADS1110",
    "version": "1.3.0",
    "sentence": "ADS1110 Driver (16-BIT ADC with Onboard Reference, PGA and I2C Interface)"
  },
  {
    "name": "ADS1115",
    "version": "1.0.0",
    "sentence": "ADS1115 library for Arduino. Easy to use."
  },
  {
    "name": "ADS1115-Driver",
    "version": "1.0.2",
    "sentence": "Lightweight arduino library for the ADS1115 ADC converter IC"
  },
  {
    "name": "ADS1115_WE",
    "version": "1.5.4",
    "sentence": "A library for the ADS1115 and the ADS1015 ADC"
  },
  {
    "name": "ADS1118 library",
    "version": "1.0.3",
    "sentence": "Arduino library for TI ADS1118 (16-Bit Analog-to-Digital Converter with Internal Reference and Temperature Sensor)."
  },
  {
    "name": "ADS1119 library",
    "version": "1.0.3",
    "sentence": "Arduino library for Texas Instruments ADS1119 (4ch mux 16-Bit Analog-to-Digital Converter)"
  },
  {
    "name": "ADS1148",
    "version": "1.0.0",
    "sentence": "Library for the ADS1148 16-bit ADC."
  },
  {
    "name": "ADS1219",
    "version": "1.0.0",
    "sentence": "ADS1219 24 bit ADC"
  },
  {
    "name": "ADS1220",
    "version": "0.1.0",
    "sentence": "Arduino library for ADS1220 24-bit, 2-kSPS, four-channel, low-power, delta-sigma ADC with PGA, VREF, SPI and two IDACs"
  },
  {
    "name": "ADS1220_WE",
    "version": "1.0.18",
    "sentence": "A library for the ADS1220 ADC"
  },
  {
    "name": "ADS122U04 ADC Arduino Library",
    "version": "1.0.4",
    "sentence": "Arduino library for the TI ADS122U04"
  },
  {
    "name": "ADS1232",
    "version": "1.0.2",
    "sentence": "Simple Library to interface the Texas Instruments ADS1232 ADC."
  },
  {
    "name": "ADS1256",
    "version": "1.3.0",
    "sentence": "An Arduino-compatible library for the 24-bit ADS1256 analog-to-digital converter."
  },
  {
    "name": "ADS1X15",
    "version": "0.5.2",
    "sentence": "Arduino library for ADS1015 - I2C 12 bit ADC and ADS1115 I2C 16 bit ADC"
  },
  {
    "name": "ADS1x1x",
    "version": "0.1.1",
    "sentence": "Arduino library for ADS101x / ADS111x Ultra-Small, Low-Power, I2C-Compatible, ADCs"
  },
  {
    "name": "ADS7828",
    "version": "1.0.0",
    "sentence": "ADS7828 is a 8-channel 12-bit Analog to Digital Converter (ADC) with an I2C interface."
  },
  {
    "name": "ADSWeather",
    "version": "0.1.1",
    "sentence": "Arduino library to interface with the Argent Data Systems weather station sensor assembly."
  },
  {
    "name": "ADT7470",
    "version": "0.2.1",
    "sentence": "ADT7470 Library"
  },
  {
    "name": "ADXL345",
    "version": "0.2.0",
    "sentence": "A acceleration sensor library for Arduino"
  },
  {
    "name": "ADXL345_WE",
    "version": "3.0.1",
    "sentence": "A library for the ADXL345 accelerometer"
  },
  {
    "name": "ADXL362",
    "version": "1.5.0",
    "sentence": "Library for ADXL362 - http://analog.com/adxl362"
  },
  {
    "name": "ADXL372",
    "version": "0.7.1",
    "sentence": "Arduino library for the ADXL372 accelerometer"
  },
  {
    "name": "AD_Sensors",
    "version": "1.3.5",
    "sentence": "The Library implements a set of methods for working with a digital and analog sensors."
  },
  {
    "name": "ADebouncer",
    "version": "1.1.0",
    "sentence": "Advanced Debouncer Library for Arduino."
  },
  {
    "name": "AEBO",
    "version": "0.0.3",
    "sentence": "A library useful for AEBO robot."
  },
  {
    "name": "AESLib",
    "version": "2.3.6",
    "sentence": "AES encryption"
  },
  {
    "name": "AES_CMAC",
    "version": "1.0.0",
    "sentence": "AES-CMAC library"
  },
  {
    "name": "AFArray",
    "version": "0.4.0",
    "sentence": "Simple Array ADT for Arduino Framework with template."
  },
  {
    "name": "AFE44XX library",
    "version": "1.0.0",
    "sentence": "Library for the AFE44XX based pulse oximeter"
  },
  {
    "name": "AFE4950",
    "version": "1.0.1",
    "sentence": "AFE4950 library for interfacing the AFE4950 biomedical sensor with Arduino compatible MCU."
  },
  {
    "name": "AFE_NXP_Arduino",
    "version": "0.2.0",
    "sentence": "Class library for NXP Analog Front End"
  },
  {
    "name": "AGS02MA",
    "version": "0.4.2",
    "sentence": "Arduino library for AGS02MA - TVOC sensor"
  },
  {
    "name": "AGS2616",
    "version": "0.1.0",
    "sentence": "Arduino library for AGS2616 - Hydrogen H2 sensor."
  },
  {
    "name": "AGS3870",
    "version": "0.1.0",
    "sentence": "Arduino library for AGS3870 - Methane CH4 sensor."
  },
  {
    "name": "AGS3871",
    "version": "0.1.1",
    "sentence": "Arduino library for AGS3871 - CarbonMonoxide CO sensor."
  },
  {
    "name": "AGirs",
    "version": "1.0.5",
    "sentence": "A Girs infrared server for the Arduino platform."
  },
  {
    "name": "AHT20",
    "version": "1.0.2",
    "sentence": "library to drive AHT20 temperature and humidity IC. Forked from https://github.com/sparkfun/SparkFun_Qwiic_Humidity_AHT20_Arduino_Library"
  },
  {
    "name": "AIChatBot",
    "version": "1.4.0",
    "sentence": "AI Chat Library for Arduino"
  },
  {
    "name": "AIOModule",
    "version": "0.1.0",
    "sentence": "AIO Modules for ESP8266 and Arduino"
  },
  {
    "name": "AIS 4G board",
    "version": "1.3.1",
    "sentence": "Enables AIS 4G network connection use by AIS 4G Board"
  },
  {
    "name": "AIS_NB_BC95",
    "version": "1.1.0",
    "sentence": "AIS NB-IoT."
  },
  {
    "name": "AIStarter",
    "version": "1.0.1",
    "sentence": "AIStarter programming interface."
  },
  {
    "name": "AISwitch",
    "version": "0.3.2",
    "sentence": "Switch actions and functions based on parameters"
  },
  {
    "name": "AITINKR_AIOT_DEVBOARD",
    "version": "1.0.0",
    "sentence": "A library to drive the AITINKR_AIOT_DEVBOARD."
  },
  {
    "name": "AITINKR_AIOT_V2",
    "version": "1.2.0",
    "sentence": "Library for controlling motors, servos, buttons, camera, and MQTT with the AITinkr AIOT V2."
  },
  {
    "name": "AITINKR_JSON_FIELDS",
    "version": "1.0.1",
    "sentence": "A library to manage dynamic JSON fields for IoT devices."
  },
  {
    "name": "AITINKR_SHIELDS",
    "version": "1.0.3",
    "sentence": "A library to drive the AITINKR_SHIELDS to work with Arduino."
  },
  {
    "name": "AIfES for Arduino",
    "version": "2.2.0",
    "sentence": "The stand alone TinyML solution for self learning smart sensors, systems and almost any Arduino board."
  },
  {
    "name": "AJSP",
    "version": "0.1.2",
    "sentence": "Another JSON Streaming Parser"
  },
  {
    "name": "ALA",
    "version": "2.3.8",
    "sentence": "Arduino Light Animation (ALA) library"
  },
  {
    "name": "ALLBOT",
    "version": "1.0.0",
    "sentence": "The library for the ALLBOT modular robotic system."
  },
  {
    "name": "ALog",
    "version": "0.3.2",
    "sentence": "Low-power general-purpose data logger library, written for the Arduino-based ALog but expandable to other devices."
  },
  {
    "name": "AM1002-UART",
    "version": "1.0.1",
    "sentence": "Arduino library to control Cubic AM1002"
  },
  {
    "name": "AM1008W-K I2C",
    "version": "1.0.0",
    "sentence": "Arduino library to control Cubic AM1008W-K I2C"
  },
  {
    "name": "AM2302-Sensor",
    "version": "1.4.0",
    "sentence": "This library read temperature and humidity from the AM2302 (aka DHT22) senor."
  },
  {
    "name": "AM2315",
    "version": "0.2.1",
    "sentence": "Arduino library for I2C AM2315 temperature and humidity sensor."
  },
  {
    "name": "AM2315C",
    "version": "0.2.1",
    "sentence": "Arduino library for I2C AM2315C temperature and humidity sensor."
  },
  {
    "name": "AM2320_asukiaaa",
    "version": "1.1.4",
    "sentence": "It controls AM2320 or CM2320"
  },
  {
    "name": "AM232X",
    "version": "0.5.1",
    "sentence": "Arduino library for AM2320 AM2321 and AM2323 I2C temperature and humidity sensor."
  },
  {
    "name": "AM4096",
    "version": "1.0.0",
    "sentence": "An Arduino library for interfacing with the AM4096 rotary magnetic encoder."
  },
  {
    "name": "AM50288H",
    "version": "0.0.2",
    "sentence": "A 14 segment LCD display library for Arduino"
  },
  {
    "name": "AMIS30543",
    "version": "1.1.0",
    "sentence": "AMIS-30543 SPI stepper motor driver library"
  },
  {
    "name": "AMT25",
    "version": "0.1.0",
    "sentence": "Arduino library for SPI based AMT25 rotary encoder."
  },
  {
    "name": "AMY Synthesizer",
    "version": "1.0.3",
    "sentence": "AMY, the Music Synthesizer Library"
  },
  {
    "name": "AMYTOL_Robot",
    "version": "1.2.2",
    "sentence": "A powerful however, easy to use library to control NexGen Robot motors."
  },
  {
    "name": "AMx8x5",
    "version": "1.0.0",
    "sentence": "RTC driver for Ambiq, Abracom and Microcrystal"
  },
  {
    "name": "ANSI",
    "version": "0.3.2",
    "sentence": "Arduino library to send ANSI escape sequences."
  },
  {
    "name": "ANT-Arduino",
    "version": "2.0.3",
    "sentence": "Library for communicating with various ANT radios from Dynastream Innovations."
  },
  {
    "name": "ANTIRTOS",
    "version": "1.0.4",
    "sentence": "No any RTOS needed, you will see - seamlessly manage all your tasks without unnecessary waiting, keep your interrupts blazing fast."
  },
  {
    "name": "ANTPLUS-Arduino",
    "version": "1.2.0",
    "sentence": "Library for easy ANT+ integration"
  },
  {
    "name": "AP3216_WE",
    "version": "1.2.2",
    "sentence": "An Arduino library for the AP3216 (CJMCU 3216) ambient light and proximity sensor."
  },
  {
    "name": "AP33772S",
    "version": "1.0.0",
    "sentence": "Library for AP33772S USB C PD 3.1 Sink Controller."
  },
  {
    "name": "APA102",
    "version": "3.0.0",
    "sentence": "APA102/SK9822 LED strip library"
  },
  {
    "name": "APDS9900",
    "version": "0.2.0",
    "sentence": "Arduino library for the I2C APDS9900 light sensor and proximity detector."
  },
  {
    "name": "APRS-Decoder-Lib",
    "version": "0.0.7",
    "sentence": "Library to decode APRS messages."
  },
  {
    "name": "APRS-IS-Lib",
    "version": "0.0.7",
    "sentence": "APRS-IS library for ESP32"
  },
  {
    "name": "APSNode",
    "version": "0.1.2",
    "sentence": "Apogeo Space Library for IoT networking"
  },
  {
    "name": "AP_DCC_Library",
    "version": "1.2.2",
    "sentence": "Library for (NMRA/RCN) Digital Command Control (DCC)"
  },
  {
    "name": "AS-289R2 Thermal Printer Shield",
    "version": "1.1.1",
    "sentence": "Arduino Library for Thermal Printer Shieid"
  },
  {
    "name": "AS1115",
    "version": "1.1.1",
    "sentence": "AS1115 display library."
  },
  {
    "name": "AS3935",
    "version": "1.0.5",
    "sentence": "Library to support Austrian Microsystems AS3935 lightning sensor."
  },
  {
    "name": "AS3935MI",
    "version": "1.3.6",
    "sentence": "A library for the Austria Microsystems AS3935 Franklin Lightning Detector, supporting I2C and SPI interfaces."
  },
  {
    "name": "AS5040",
    "version": "0.1.2",
    "sentence": "AMS AS5040 magnetic rotary encoder library"
  },
  {
    "name": "AS5047P",
    "version": "2.2.2",
    "sentence": "An Arduino library for the AS5047P high-resolution rotary position sensor."
  },
  {
    "name": "AS5200L",
    "version": "1.0.0",
    "sentence": "Arduino library interfacing AS5200L magnetic encoder over I2C bus."
  },
  {
    "name": "AS5600",
    "version": "0.6.4",
    "sentence": "Arduino library for AS5600 and AS5600L magnetic rotation meter."
  },
  {
    "name": "AS5600_PsW",
    "version": "1.1.0",
    "sentence": "AS5600 Library"
  },
  {
    "name": "AS5X47",
    "version": "1.0.1",
    "sentence": "A library that reads angles from AS5047 and AS5147 sensors."
  },
  {
    "name": "AS6212 Temperature Sensor",
    "version": "1.0.4",
    "sentence": "Arduino Library for interfacing with the AMS AS6212 Temperature Sensor"
  },
  {
    "name": "ASTRON_CCS811",
    "version": "1.0.0",
    "sentence": "Easy and fast library for CCS811 sensor"
  },
  {
    "name": "AStar32U4",
    "version": "1.1.1",
    "sentence": "A-Star 32U4 Arduino library"
  },
  {
    "name": "AT24C",
    "version": "1.1.0",
    "sentence": "A library for using the AT24C series i2c serial eeproms."
  },
  {
    "name": "AT24C256",
    "version": "1.0.0",
    "sentence": "Library for the AT24C256 EEPROM"
  },
  {
    "name": "AT24C256 library",
    "version": "1.0.0",
    "sentence": "Library for the <a href=\"https://ww1.microchip.com/downloads/en/DeviceDoc/doc0670.pdf\">AT24C256 I2C EEPROM</a>."
  },
  {
    "name": "AT24CM01",
    "version": "2.2.0",
    "sentence": "AT24CM01 EEPROM Library for Arduino Devices."
  },
  {
    "name": "AT24Cxx",
    "version": "1.0.0",
    "sentence": "Library for Atmel's AT24Cxx Series EEPROMs."
  },
  {
    "name": "AT24MAC402",
    "version": "1.1.0",
    "sentence": "EEPROM I2C library for AT24MAC402/602"
  },
  {
    "name": "AT42QT",
    "version": "0.6.0",
    "sentence": "Arduino library for the Microchip AT42QT series capacitive touch sensors."
  },
  {
    "name": "ATC_MiThermometer",
    "version": "0.5.0",
    "sentence": "Arduino library for BLE ATC_MiThermometer thermometer/hygrometer sensors."
  },
  {
    "name": "ATC_MiThermometer-Arduino",
    "version": "0.5.7",
    "sentence": "A library for interacting with ATC Mi Thermometers over BLE."
  },
  {
    "name": "ATD1.47-S3 Lib",
    "version": "1.0.0",
    "sentence": "Arduino library of ATD1.47-S3"
  },
  {
    "name": "ATD3.5-S3",
    "version": "1.3.0",
    "sentence": "Library for ATD3.5-S3"
  },
  {
    "name": "ATM90E26 Arduino",
    "version": "0.1.0",
    "sentence": "ATM90E26 Energy Monitor Support for Arduino"
  },
  {
    "name": "ATMAC_EEPROM",
    "version": "1.0.0",
    "sentence": "A library that interfaces the AT24MAC402/602 EEPROM chip."
  },
  {
    "name": "ATMlib",
    "version": "1.2.6",
    "sentence": "The Arduboy Tracker Music library."
  },
  {
    "name": "ATOM_DTU_CAT1",
    "version": "0.0.1",
    "sentence": "Library for ATOM DTU CAT1 development kit"
  },
  {
    "name": "ATOM_DTU_LoRaWAN",
    "version": "0.0.1",
    "sentence": "Library for ATOM DTU LoRaWAN development kit"
  },
  {
    "name": "ATOM_DTU_NB",
    "version": "0.0.2",
    "sentence": "Library for ATOM DTU NB development kit"
  },
  {
    "name": "ATmega32U4 Grove Air quality sensor",
    "version": "0.0.1",
    "sentence": "ATmega32U4 Arduino library to read values from Grove Air Quality Sensor."
  },
  {
    "name": "ATmega_Slow_PWM",
    "version": "1.0.0",
    "sentence": "This library enables you to use ISR-based PWM channels on AVR ATmega164, ATmega324, ATmega644, ATmega1284 with MCUdude MightyCore, to create and output PWM any GPIO pin"
  },
  {
    "name": "ATmega_TimerInterrupt",
    "version": "1.1.1",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an AVR ATmega164, ATmega324, ATmega644, ATmega1284 with MCUdude MightyCore"
  },
  {
    "name": "ATtinySerialOut",
    "version": "2.3.1",
    "sentence": "Minimal bit-bang send serial 115200 or 38400 baud for 1 MHz or 230400 baud for 8/16 MHz ATtiny clock. Perfect for debugging purposes. Code size is only 76 bytes@38400 baud or 196 bytes@115200 baud (including first call)"
  },
  {
    "name": "ATtiny_PWM",
    "version": "1.2.0",
    "sentence": "This library enables you to use Hardware-based PWM channels on Arduino AVR ATtiny-based boards (ATtiny3217, etc.), using megaTinyCore, to create and output PWM to pins."
  },
  {
    "name": "ATtiny_Slow_PWM",
    "version": "1.0.0",
    "sentence": "This library enables you to use ISR-based PWM channels on Arduino AVR ATtiny-based boards (ATtiny3217, etc.), using megaTinyCore, to create and output PWM any GPIO pin."
  },
  {
    "name": "ATtiny_TimerInterrupt",
    "version": "1.0.1",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on Arduino AVR ATtiny-based boards (ATtiny3217, etc.) using megaTinyCore"
  },
  {
    "name": "AUnit",
    "version": "1.7.1",
    "sentence": "A unit testing framework for Arduino platforms inspired by ArduinoUnit and Google Test."
  },
  {
    "name": "AVR Standard C Time Library",
    "version": "2.0.0-2",
    "sentence": "<h3>Real Time functions for Goldilocks ATmega1284p & ATmega2560</h3>"
  },
  {
    "name": "AVR-IoT MCP9808",
    "version": "1.1.5",
    "sentence": "Low level Arduino driver for the MCP9808 Digital Temperatur Sensor, mainly focused for the AVR-IoT Cellular Mini"
  },
  {
    "name": "AVR-IoT VEML3328",
    "version": "1.1.2",
    "sentence": "Low-level Arduino driver for the VEML3328 RGBCIR Color Sensor [1], which is mainly focused on the AVR-IoT Cellular Mini development kit."
  },
  {
    "name": "AVR-IoT-Cellular",
    "version": "1.3.11",
    "sentence": "Library for the AVR-IoT Cellular Mini Board"
  },
  {
    "name": "AVR-context",
    "version": "0.9.1",
    "sentence": "This library provides a low-level facility for context switching between multiple threads of execution and contains an implementation of asymmetric stackful coroutines on an AVR micro-controller."
  },
  {
    "name": "AVRUtils",
    "version": "1.3.0",
    "sentence": "AVRUtils"
  },
  {
    "name": "AVR_PWM",
    "version": "1.2.0",
    "sentence": "This library enables you to use Hardware-based PWM channels on AVR-based boards, such as Nano, UNO, Mega, Leonardo, 32u4, etc., to create and output PWM."
  },
  {
    "name": "AVR_Slow_PWM",
    "version": "1.2.3",
    "sentence": "This library enables you to use ISR-based PWM channels on AVR-based boards, such as Mega-2560, UNO,Nano, Leonardo, etc., to create and output PWM any GPIO pin."
  },
  {
    "name": "AViShaESPCam",
    "version": "1.0.0",
    "sentence": "AViShaESPCam adalah library untuk mempermudah penggunaan ESP32-CAM."
  },
  {
    "name": "AViShaMQTT",
    "version": "1.0.0",
    "sentence": "Library ini memungkinkan perangkat ESP untuk berkomunikasi menggunakan protokol MQTT."
  },
  {
    "name": "AViShaWiFi",
    "version": "1.0.0",
    "sentence": "AViShaWiFi adalah library untuk menyederhanakan penggunaan WiFi pada ESP8266 dan ESP32."
  },
  {
    "name": "AVision_ESP8266",
    "version": "1.0.7",
    "sentence": "Libraries for easy and quick programming on the A-Vision ESP8266 learning board"
  },
  {
    "name": "AWS-SDK-ESP8266",
    "version": "1.0.0",
    "sentence": "SDK for AWS using ESP8266"
  },
  {
    "name": "AX-Mini",
    "version": "1.0.0",
    "sentence": "Library for AX-Mini"
  },
  {
    "name": "AXP202X_Library",
    "version": "1.1.2",
    "sentence": "Arduino library for X-Power AXP202 chip"
  },
  {
    "name": "AY3891x",
    "version": "2.0.0",
    "sentence": "Library for General Instrument AY-3-8910, AY-3-8912 Programmable Sound Generator chip."
  },
  {
    "name": "AbleButtons",
    "version": "0.4.0",
    "sentence": "The Arduino Button Library Extension (ABLE) is a simple, lightweight button library to capture input from buttons connected to the Arduino."
  },
  {
    "name": "AbsoluteMouse",
    "version": "0.1.0",
    "sentence": "Arduino library to control cursor over USB, using absolute positioning."
  },
  {
    "name": "AcaiaArduinoBLE",
    "version": "3.1.1",
    "sentence": "A library that connects BLE devices to Acaia Scales."
  },
  {
    "name": "AccelMotor",
    "version": "1.3.0",
    "sentence": "Library for smooth control motor with encoder"
  },
  {
    "name": "AccelStepper",
    "version": "1.64.0",
    "sentence": "Allows Arduino boards to control a variety of stepper motors."
  },
  {
    "name": "AccelStepperWithDistances",
    "version": "1.0.4",
    "sentence": "This library allows you work with the popular AccelStepper not with steps, but milimeter distances!"
  },
  {
    "name": "Accelerometer ADXL335",
    "version": "1.0.1",
    "sentence": "Arduino library to control Grove - 3-Axis Analog Accelerometer ADXL335."
  },
  {
    "name": "Accelerometer ADXL345",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove 3Axis Digital Accelerometer ADXL345."
  },
  {
    "name": "Accelerometer_H3LIS331DL",
    "version": "1.0.2",
    "sentence": "Arduino library to control Grove 3-Axis Digital Accelerometer(±400g)."
  },
  {
    "name": "Accelerometer_MMA7660",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - 3-Axis Digital Accelerometer(±1.5g)."
  },
  {
    "name": "AccessPermissionManager",
    "version": "1.0.0",
    "sentence": "Implements access permission control of filesystem resources."
  },
  {
    "name": "Accessories",
    "version": "1.2.2",
    "sentence": "This is a library for Arduino to handle accessories like lights, motors."
  },
  {
    "name": "Accessory Shield",
    "version": "1.5.2",
    "sentence": "Allows an Arduino board to use the DFRobot Accessory Shield"
  },
  {
    "name": "AceButton",
    "version": "1.10.1",
    "sentence": "An adjustable, compact, event-driven button library that handles debouncing and dispatches events to a user-defined event handler."
  },
  {
    "name": "AceCRC",
    "version": "1.1.1",
    "sentence": "Cyclic Redundancy Check (CRC) algorithms: crc8, crc16ccitt, crc16modbus, crc32."
  },
  {
    "name": "AceCommon",
    "version": "1.6.2",
    "sentence": "Small low-level classes and functions for Arduino: incrementMod(), decToBcd(). strcmp_PP(), PrintStr<N>, PrintStrN, printPad{N}To(), printIntAsFloat(), TimingStats, formUrlEncode(), FCString, KString, hashDjb2(), binarySearch(), linearSearch(), isSorted(), reverse(), and so on."
  },
  {
    "name": "AceMenu",
    "version": "0.1.3",
    "sentence": "A library that makes coding a user Menu a breeze."
  },
  {
    "name": "AceRoutine",
    "version": "1.5.1",
    "sentence": "A low-memory, fast-switching, cooperative multitasking library using stackless coroutines on Arduino platforms."
  },
  {
    "name": "AceSPI",
    "version": "0.4.0",
    "sentence": "Unified interface for selecting hardware or software SPI implementations on Arduino platforms."
  },
  {
    "name": "AceSegment",
    "version": "0.13.0",
    "sentence": "Library for rendering seven segment LED modules using the TM1637, TM1638, MAX7219, HT16K33, or 74HC595 controller chips."
  },
  {
    "name": "AceSegmentWriter",
    "version": "0.5.0",
    "sentence": "Write decimal numbers, hex numbers, temperature, clock digits, characters, and strings to the seven segment LED modules supported by the AceSegment library."
  },
  {
    "name": "AceSorting",
    "version": "1.0.0",
    "sentence": "Various sorting algorithms for Arduino, including Bubble Sort, Insertion Sort, Selection Sort, Shell Sort (3 versions), Comb Sort (4 versions), Quick Sort (3 versions)."
  },
  {
    "name": "AceTMI",
    "version": "0.6.0",
    "sentence": "Interfaces for communicating with the TM1637 and TM1638 LED controllers on Arduino platforms."
  },
  {
    "name": "AceTime",
    "version": "2.4.0",
    "sentence": "Date, time, timezone classes for Arduino supporting the full IANA TZ Database to convert epoch seconds to date and time components in different time zones."
  },
  {
    "name": "AceTimeClock",
    "version": "1.3.0",
    "sentence": "Clock classes for Arduino that provide an auto-incrementing count of seconds since a known epoch which can be synchronized from external sources such as an NTP server, a DS3231 RTC chip, or an STM32 RTC chip."
  },
  {
    "name": "AceUtils",
    "version": "0.6.0",
    "sentence": "Useful Arduino utilities which are too small as separate libraries, but complex enough to be shared among multiple projects, and often have external dependencies to other libraries."
  },
  {
    "name": "AceWire",
    "version": "0.4.1",
    "sentence": "Fast and compact software I2C implementations (SimpleWireInterface, SimpleWireFastInterface) on Arduino platforms. Also provides adapter classes to allow the use of third party I2C libraries using the same API."
  },
  {
    "name": "AcksenButton",
    "version": "1.3.0",
    "sentence": "Flexible button library supporting debounce, long presses, repeated presses with acceleration."
  },
  {
    "name": "AcksenIntEEPROM",
    "version": "1.1.0",
    "sentence": "Arduino Library for storing data in 8-bit AVR internal EEPROM memory."
  },
  {
    "name": "AcksenPump",
    "version": "1.8.1",
    "sentence": "Brewing-focused pump control I/O library for Arduino."
  },
  {
    "name": "AcksenUtils",
    "version": "1.4.0",
    "sentence": "Arduino utility library with miscellaneous functions."
  },
  {
    "name": "Acrome-SMD",
    "version": "2.0.0",
    "sentence": "To use SMD Red boards with Arduino."
  },
  {
    "name": "Adafruit 10DOF",
    "version": "1.1.1",
    "sentence": "Library for the Adafruit 10DOF Breakout."
  },
  {
    "name": "Adafruit 9DOF",
    "version": "1.1.4",
    "sentence": "Library for the Adafruit 9DOF Breakout."
  },
  {
    "name": "Adafruit AD569x Library",
    "version": "1.0.1",
    "sentence": "Arduino library for the AD569x 16-/14-/12-bit DAC"
  },
  {
    "name": "Adafruit ADG72x",
    "version": "1.0.0",
    "sentence": "Arduino library for the ADG728 or ADG729 I2C analog switch matrix"
  },
  {
    "name": "Adafruit ADS1X15",
    "version": "2.5.0",
    "sentence": "Arduino library for ADS1015/1115 ADCs."
  },
  {
    "name": "Adafruit ADS7830",
    "version": "1.0.0",
    "sentence": "Arduino library for the ADS7830 8-bit ADC in the Adafruit shop"
  },
  {
    "name": "Adafruit ADT7410 Library",
    "version": "1.3.1",
    "sentence": "Arduino library for the ADT7410 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit ADXL343",
    "version": "1.6.4",
    "sentence": "Unified driver for the ADXL343 Accelerometer"
  },
  {
    "name": "Adafruit ADXL345",
    "version": "1.3.4",
    "sentence": "Unified driver for the ADXL345 Accelerometer"
  },
  {
    "name": "Adafruit ADXL375",
    "version": "1.1.2",
    "sentence": "Unified driver for the ADXL375 Accelerometer"
  },
  {
    "name": "Adafruit AGS02MA",
    "version": "1.0.2",
    "sentence": "Arduino library for the AGS02MA gas / TVOC sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit AHRS",
    "version": "2.3.6",
    "sentence": "AHRS (Altitude and Heading Reference System) for various Adafruit motion sensors"
  },
  {
    "name": "Adafruit AHT10",
    "version": "0.1.0",
    "sentence": "Arduino library for the AHT10 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit AHTX0",
    "version": "2.0.5",
    "sentence": "Arduino library for the AHT10 and AHT20 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit AM radio library",
    "version": "1.0.6",
    "sentence": "Arduino library for AM radio on samd21 microcontroller"
  },
  {
    "name": "Adafruit AM2315",
    "version": "2.2.3",
    "sentence": "Library code for AM2315 sensors"
  },
  {
    "name": "Adafruit AM2320 sensor library",
    "version": "1.2.5",
    "sentence": "Arduino library for AM2320 I2C Temp & Humidity Sensors"
  },
  {
    "name": "Adafruit AMG88xx Library",
    "version": "1.3.2",
    "sentence": "Arduino library for AMG88xx 8x8 Thermocouple Sensors."
  },
  {
    "name": "Adafruit APDS9960 Library",
    "version": "1.3.0",
    "sentence": "This is a library for the Adafruit APDS9960 gesture/proximity/color/light sensor."
  },
  {
    "name": "Adafruit AS726X",
    "version": "1.2.3",
    "sentence": "Adafruit Channel Visible Light / Color Sensor Breakout"
  },
  {
    "name": "Adafruit AS7341",
    "version": "1.4.1",
    "sentence": "Arduino library for the AS7341 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit AVRProg",
    "version": "1.4.7",
    "sentence": "Arduino library for programming AVR chips from Arduino"
  },
  {
    "name": "Adafruit AW9523",
    "version": "1.0.5",
    "sentence": "Arduino library for the AW9523 GPIO expanders in the Adafruit shop"
  },
  {
    "name": "Adafruit Arcada GifDecoder",
    "version": "1.3.3",
    "sentence": "This is a library to display animated GIFs on Adafruit Arcada boards"
  },
  {
    "name": "Adafruit Arcada Library",
    "version": "2.5.8",
    "sentence": "This is a library to abstract away arcade/gameplay display, sounds and controls."
  },
  {
    "name": "Adafruit BD3491FS",
    "version": "1.1.2",
    "sentence": "Arduino library for the BD3491FS Sound Processor in the Adafruit shop"
  },
  {
    "name": "Adafruit BLEFirmata",
    "version": "1.1.2",
    "sentence": "Modified Firmata code to work with Adafruit's nRF8001 Breakout and BlueFruit modules"
  },
  {
    "name": "Adafruit BME280 Library",
    "version": "2.2.4",
    "sentence": "Arduino library for BME280 sensors."
  },
  {
    "name": "Adafruit BME680 Library",
    "version": "2.0.5",
    "sentence": "Arduino library for BME680 and BME688 sensors."
  },
  {
    "name": "Adafruit BMP085 Library",
    "version": "1.2.4",
    "sentence": "A powerful but easy to use BMP085/BMP180 Library"
  },
  {
    "name": "Adafruit BMP085 Unified",
    "version": "1.1.3",
    "sentence": "Unified sensor driver for Adafruit's BMP085 & BMP180 breakouts"
  },
  {
    "name": "Adafruit BMP183 Library",
    "version": "1.1.3",
    "sentence": "Non-Unified BMP library"
  },
  {
    "name": "Adafruit BMP183 Unified Library",
    "version": "1.1.3",
    "sentence": "Arduino library for the BMP183 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit BMP280 Library",
    "version": "2.6.8",
    "sentence": "Arduino library for BMP280 sensors."
  },
  {
    "name": "Adafruit BMP3XX Library",
    "version": "2.1.6",
    "sentence": "Arduino library for BMP3XX series temperature/pressure sensors"
  },
  {
    "name": "Adafruit BNO055",
    "version": "1.6.4",
    "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor."
  },
  {
    "name": "Adafruit BNO08x",
    "version": "1.2.5",
    "sentence": "Arduino library for the BNO08x sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit BNO08x RVC",
    "version": "1.0.2",
    "sentence": "Arduino library for the BNO08x_RVC sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit BluefruitLE nRF51",
    "version": "1.10.0",
    "sentence": "Arduino library for nRF51822-based Adafruit Bluefruit LE modules"
  },
  {
    "name": "Adafruit BusIO",
    "version": "1.17.0",
    "sentence": "This is a library for abstracting away UART, I2C and SPI interfacing"
  },
  {
    "name": "Adafruit CAN",
    "version": "0.2.1",
    "sentence": "Arduino library for native CAN."
  },
  {
    "name": "Adafruit CAP1188 Library",
    "version": "1.1.3",
    "sentence": "Arduino library for the Adafruit CAP1188 8-Channel Capacitive Touch Sensor Breakout"
  },
  {
    "name": "Adafruit CC3000 Library",
    "version": "1.0.4",
    "sentence": "Library code for Adafruit's CC3000 WiFi breakouts."
  },
  {
    "name": "Adafruit CCS811 Library",
    "version": "1.1.3",
    "sentence": "This is a library for the Adafruit CCS811 I2C gas sensor breakout."
  },
  {
    "name": "Adafruit CH9328",
    "version": "1.0.0",
    "sentence": "Library for the Adafruit CH9328 UART to USB HID Breakout"
  },
  {
    "name": "Adafruit CPFS",
    "version": "1.1.0",
    "sentence": "Arduino library for accessing a board's CircuitPython flash filesystem and presenting it over USB."
  },
  {
    "name": "Adafruit CST8XX Library",
    "version": "1.1.1",
    "sentence": "Arduino library for CST8xx-based Capacitive touch screen"
  },
  {
    "name": "Adafruit Circuit Playground",
    "version": "1.12.0",
    "sentence": "All in one library to control Adafruit's Circuit Playground board."
  },
  {
    "name": "Adafruit DAC7578 Library",
    "version": "1.0.0",
    "sentence": "Arduino library for the DAC7578 - 8 x Channel 12-bit I2C DAC"
  },
  {
    "name": "Adafruit DAP library",
    "version": "1.8.3",
    "sentence": "Arduino library for DAP programming on ARM cortex microcontroller"
  },
  {
    "name": "Adafruit DMA neopixel library",
    "version": "1.3.3",
    "sentence": "Arduino library for NeoPixel DMA on SAMD21 and SAMD51 microcontrollers"
  },
  {
    "name": "Adafruit DPS310",
    "version": "1.1.5",
    "sentence": "Library for the Adafruit DPS310 barometric pressure sensor."
  },
  {
    "name": "Adafruit DRV2605 Library",
    "version": "1.2.4",
    "sentence": "Arduino library for Adafruit DRV2605L Haptic Controller Breakout"
  },
  {
    "name": "Adafruit DS1841",
    "version": "1.0.3",
    "sentence": "Arduino library for the DS1841 breakouts in the Adafruit shop"
  },
  {
    "name": "Adafruit DS248x",
    "version": "1.2.0",
    "sentence": "Library for the Adafruit DS2484 I2C to 1-Wire adapter"
  },
  {
    "name": "Adafruit DS3502",
    "version": "1.0.3",
    "sentence": "Arduino library for the DS3502 I2C Potentiometer in the Adafruit shop"
  },
  {
    "name": "Adafruit Debounce",
    "version": "1.0.0",
    "sentence": "Arduino library for basic GPIO/expander button handling"
  },
  {
    "name": "Adafruit DotStar",
    "version": "1.2.5",
    "sentence": "Adafruit DotStar LED Library"
  },
  {
    "name": "Adafruit DotStarMatrix",
    "version": "1.0.9",
    "sentence": "Adafruit_GFX-compatible library for DotStar grids"
  },
  {
    "name": "Adafruit EMC2101",
    "version": "1.0.7",
    "sentence": "Arduino library for the EMC2101 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit EPD",
    "version": "4.5.6",
    "sentence": "ePaper display driver"
  },
  {
    "name": "Adafruit ESP8266",
    "version": "1.1.2",
    "sentence": "Example code for ESP8266 chipset"
  },
  {
    "name": "Adafruit FONA Library",
    "version": "1.3.13",
    "sentence": "Arduino library for the Adafruit FONA"
  },
  {
    "name": "Adafruit FRAM I2C",
    "version": "2.0.3",
    "sentence": "Driver for Adafruit's I2C-Based EEPROM / FRAM Breakouts"
  },
  {
    "name": "Adafruit FRAM SPI",
    "version": "2.6.2",
    "sentence": "Driver for Adafruit's SPI-Based FRAM Breakouts"
  },
  {
    "name": "Adafruit FT5336",
    "version": "1.0.0",
    "sentence": "Arduino library for FT5336-based Capacitive touch screen"
  },
  {
    "name": "Adafruit FT6206 Library",
    "version": "1.1.0",
    "sentence": "Arduino library for FT6206-based Capacitive touch screen"
  },
  {
    "name": "Adafruit FXAS21002C",
    "version": "2.2.3",
    "sentence": "Unified sensor driver for the FXAS210002C Gyroscope"
  },
  {
    "name": "Adafruit FXOS8700",
    "version": "2.2.2",
    "sentence": "Unified sensor driver for the FXOS8700 Accelerometer/Magnetometer"
  },
  {
    "name": "Adafruit Faux86",
    "version": "0.2.0",
    "sentence": "Adafruit Faux86"
  },
  {
    "name": "Adafruit Feather OLED",
    "version": "2.0.4",
    "sentence": "Helper class to work with 128x32 and 128x64 OLED displays on Adafruit Feathers"
  },
  {
    "name": "Adafruit Fingerprint Sensor Library",
    "version": "2.1.3",
    "sentence": "Arduino library for interfacing to the fingerprint sensor in the Adafruit shop"
  },
  {
    "name": "Adafruit Floppy",
    "version": "0.6.1",
    "sentence": "Adafruit's floppy disk drive interfacing library"
  },
  {
    "name": "Adafruit Flora Pixel Library",
    "version": "1.0.0",
    "sentence": "Arduino Library for Adafruit Flora Pixels"
  },
  {
    "name": "Adafruit FreeTouch Library",
    "version": "1.1.3",
    "sentence": "Arduino library for QTouch on samd21 microcontroller"
  },
  {
    "name": "Adafruit GC9A01A",
    "version": "1.1.1",
    "sentence": "Library for GC9A01A displays"
  },
  {
    "name": "Adafruit GFX Library",
    "version": "1.11.11",
    "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from."
  },
  {
    "name": "Adafruit GPS Library",
    "version": "1.7.5",
    "sentence": "An interrupt-based GPS library for no-parsing-required use"
  },
  {
    "name": "Adafruit Graphic VFD Display Library",
    "version": "1.1.2",
    "sentence": "Adafruit's 128x64 Graphic VFD Display Library"
  },
  {
    "name": "Adafruit HDC1000 Library",
    "version": "2.0.2",
    "sentence": "Arduino library for HDC1000 and HDC1008 sensors."
  },
  {
    "name": "Adafruit HDC302x",
    "version": "1.0.3",
    "sentence": "Library for the Adafruit HDC3022 Precision Temperature & Humidity Breakout"
  },
  {
    "name": "Adafruit HMC5883 Unified",
    "version": "1.2.3",
    "sentence": "Adafruit HMC5883L 3-Axis Magnetometer Breakout library using Adafruit's Unified Sensor Library."
  },
  {
    "name": "Adafruit HTS221",
    "version": "0.1.5",
    "sentence": "Arduino library for the HTS221 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit HTU21DF Library",
    "version": "1.1.2",
    "sentence": "Arduino library for the HTU21D-F sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit HTU31D Library",
    "version": "1.1.3",
    "sentence": "Arduino library for the HTU31D sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit HUSB238 Library",
    "version": "1.0.1",
    "sentence": "Arduino library for the HUSB I2C USB PD sink driver"
  },
  {
    "name": "Adafruit HX711",
    "version": "1.0.2",
    "sentence": "Library for the Adafruit HX711 ADC Breakout"
  },
  {
    "name": "Adafruit HX8357 Library",
    "version": "1.1.20",
    "sentence": "Adafruit HX8357 3.5\" display library."
  },
  {
    "name": "Adafruit ICM20649",
    "version": "1.0.4",
    "sentence": "Arduino library for the ICM20649 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit ICM20X",
    "version": "2.0.7",
    "sentence": "Arduino library for the ICM20X Family sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit ILI9341",
    "version": "1.6.1",
    "sentence": "Library for Adafruit ILI9341 displays"
  },
  {
    "name": "Adafruit INA219",
    "version": "1.2.3",
    "sentence": "INA219 Current Sensor"
  },
  {
    "name": "Adafruit INA228 Library",
    "version": "2.0.0",
    "sentence": "Arduino library for the INA228 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit INA260 Library",
    "version": "1.5.2",
    "sentence": "Arduino library for the INA260 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit INA3221 Library",
    "version": "1.0.3",
    "sentence": "Arduino library for INA3221."
  },
  {
    "name": "Adafruit IO Arduino",
    "version": "4.3.0",
    "sentence": "Arduino library to access Adafruit IO."
  },
  {
    "name": "Adafruit IS31FL3731 Library",
    "version": "2.0.2",
    "sentence": "Arduino library for the Adafruit IS31FL3731 Charlieplex LED driver and CharliePlex FeatherWing."
  },
  {
    "name": "Adafruit IS31FL3741 Library",
    "version": "1.2.3",
    "sentence": "Arduino library for the Adafruit IS31FL3741 LED Matrix driver"
  },
  {
    "name": "Adafruit ImageReader Library",
    "version": "2.9.2",
    "sentence": "Companion library for Adafruit_GFX and Adafruit_EPD to load images from SD card."
  },
  {
    "name": "Adafruit IntelliKeys",
    "version": "0.2.3",
    "sentence": "IntelliKeys library for Arduino"
  },
  {
    "name": "Adafruit InternalFlash",
    "version": "0.1.1",
    "sentence": "Internal Flash filesystem support for FAT"
  },
  {
    "name": "Adafruit Keypad",
    "version": "1.3.2",
    "sentence": "Diode-multiplexed keypad support for Arduino"
  },
  {
    "name": "Adafruit L3GD20 U",
    "version": "2.0.3",
    "sentence": "Unified sensor driver for the L3GD20 Gyroscope"
  },
  {
    "name": "Adafruit LC709203F",
    "version": "1.3.4",
    "sentence": "Arduino library for the LC709203F battery monitors in the Adafruit shop"
  },
  {
    "name": "Adafruit LED Backpack Library",
    "version": "1.5.1",
    "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks"
  },
  {
    "name": "Adafruit LIS2MDL",
    "version": "2.1.8",
    "sentence": "Unified Magnetometer sensor driver for Adafruit's LIS2MDL Breakout"
  },
  {
    "name": "Adafruit LIS331",
    "version": "1.0.6",
    "sentence": "Library for the Adafruit LIS331 Accelerometer family."
  },
  {
    "name": "Adafruit LIS3DH",
    "version": "1.3.0",
    "sentence": "Library for the Adafruit LIS3DH Accelerometer."
  },
  {
    "name": "Adafruit LIS3MDL",
    "version": "1.2.4",
    "sentence": "Library for the Adafruit LIS3MDL magnetometer."
  },
  {
    "name": "Adafruit LPS28",
    "version": "1.0.0",
    "sentence": "Arduino library for the LPS28 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit LPS2X",
    "version": "2.0.6",
    "sentence": "Arduino library for the LPS22 & LPS25 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit LPS35HW",
    "version": "1.0.6",
    "sentence": "Arduino library for the LPS35HW sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit LSM303 Accel",
    "version": "1.1.8",
    "sentence": "Unified Accelerometer sensor driver for Adafruit's LSM303 Breakout"
  },
  {
    "name": "Adafruit LSM303DLH Mag",
    "version": "1.0.10",
    "sentence": "Unified Magnetometer sensor driver for Adafruit's LSM303 Breakout"
  },
  {
    "name": "Adafruit LSM303DLHC",
    "version": "1.0.4",
    "sentence": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)"
  },
  {
    "name": "Adafruit LSM6DS",
    "version": "4.7.4",
    "sentence": "Arduino library for the LSM6DS sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit LSM9DS0 Library",
    "version": "2.0.4",
    "sentence": "Arduino library for LSM9DS0 9-DOF sensor board."
  },
  {
    "name": "Adafruit LSM9DS1 Library",
    "version": "2.2.1",
    "sentence": "Arduino library for LSM9DS1 9-DOF sensor board."
  },
  {
    "name": "Adafruit LTR329 and LTR303",
    "version": "2.0.1",
    "sentence": "Arduino library for the LTR329 and LTR303 light sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit LTR390 Library",
    "version": "1.1.2",
    "sentence": "Arduino library for the LTR390 UV sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit LiquidCrystal",
    "version": "2.0.4",
    "sentence": "Fork of LiquidCrystal HD44780-compatible LCD driver library, now with support for ATtiny85."
  },
  {
    "name": "Adafruit LittlevGL Glue Library",
    "version": "2.1.6",
    "sentence": "Simplifies use of LittlevGL library with Adafruit displays."
  },
  {
    "name": "Adafruit MAX1704X",
    "version": "1.0.3",
    "sentence": "Arduino library for the MAX17048 battery monitors in the Adafruit shop"
  },
  {
    "name": "Adafruit MAX31855 library",
    "version": "1.4.2",
    "sentence": "Library for the Adafruit Thermocouple breakout with MAX31855K"
  },
  {
    "name": "Adafruit MAX31856 library",
    "version": "1.2.7",
    "sentence": "Library for the Adafruit Thermocouple Amplifier breakout with MAX31856"
  },
  {
    "name": "Adafruit MAX31865 library",
    "version": "1.6.2",
    "sentence": "Library for the Adafruit RTD Amplifier breakout with MAX31865"
  },
  {
    "name": "Adafruit MAX9744 Library",
    "version": "1.0.0",
    "sentence": "Arduino library for controlling the Adafruit MAX9744 Amplifier"
  },
  {
    "name": "Adafruit MCP23008 library",
    "version": "2.1.0",
    "sentence": "Arduino Library for the MCP23008 (and '9) I2C I/O expander"
  },
  {
    "name": "Adafruit MCP23017 Arduino Library",
    "version": "2.3.2",
    "sentence": "Arduino Library for MCP23XXX I2C and SPI GPIO port expanders"
  },
  {
    "name": "Adafruit MCP2515",
    "version": "0.2.1",
    "sentence": "Arduino library for MCP2515 CAN controller."
  },
  {
    "name": "Adafruit MCP3008",
    "version": "1.3.3",
    "sentence": "MCP3008 8-Channel 10-Bit ADC"
  },
  {
    "name": "Adafruit MCP3421",
    "version": "1.0.0",
    "sentence": "Arduino library for the MCP3421 18-bit ADC in the Adafruit shop"
  },
  {
    "name": "Adafruit MCP4725",
    "version": "2.0.2",
    "sentence": "MCP4725 12-bit I2C DAC"
  },
  {
    "name": "Adafruit MCP4728",
    "version": "1.0.9",
    "sentence": "Arduino library for the MCP4728 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit MCP9600 Library",
    "version": "2.0.4",
    "sentence": "Arduino library for the MCP9600 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit MCP9808 Library",
    "version": "2.0.2",
    "sentence": "Arduino library for the MCP9808 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit MFRC630 RFID",
    "version": "1.1.1",
    "sentence": "Arduino library for I2C and SPI access to the MFRC630 RFID/Near Field Communication chip"
  },
  {
    "name": "Adafruit MLX90393",
    "version": "2.0.5",
    "sentence": "Driver for the MLX90393 magenetic field sensor"
  },
  {
    "name": "Adafruit MLX90395",
    "version": "1.0.3",
    "sentence": "Driver for the MLX90395 magenetic field sensor"
  },
  {
    "name": "Adafruit MLX90614 Library",
    "version": "2.1.5",
    "sentence": "Arduino library for the MLX90614 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit MLX90640",
    "version": "1.1.1",
    "sentence": "Arduino library for the MLX90640 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit MMA8451 Library",
    "version": "1.2.3",
    "sentence": "Arduino library for the MMA8451 Accelerometer sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit MMC56x3",
    "version": "1.0.2",
    "sentence": "Unified Magnetometer sensor driver for Adafruit's MMC5603 or MMC5613 Breakout"
  },
  {
    "name": "Adafruit MP3",
    "version": "1.2.6",
    "sentence": "mp3 decoder"
  },
  {
    "name": "Adafruit MPL115A2",
    "version": "2.0.2",
    "sentence": "Driver for the Adafruit MPL115A2 barometric pressure sensor breakout"
  },
  {
    "name": "Adafruit MPL3115A2 Library",
    "version": "2.1.2",
    "sentence": "Arduino library for the MPL3115A2 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit MPR121",
    "version": "1.1.3",
    "sentence": "Arduino library for the MPR121-based capacitive sensors in the Adafruit shop."
  },
  {
    "name": "Adafruit MPRLS Library",
    "version": "1.2.2",
    "sentence": "Arduino library for MPRLS series pressure sensors"
  },
  {
    "name": "Adafruit MPU6050",
    "version": "2.2.6",
    "sentence": "Arduino library for the MPU6050 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit MQTT Library",
    "version": "2.5.9",
    "sentence": "MQTT library that supports the FONA, ESP8266, ESP32, Yun, and generic Arduino Client hardware."
  },
  {
    "name": "Adafruit MS8607",
    "version": "1.0.4",
    "sentence": "Arduino library for MS8607 sensors."
  },
  {
    "name": "Adafruit MSA301",
    "version": "1.1.2",
    "sentence": "Library for the Adafruit MSA301 Accelerometer."
  },
  {
    "name": "Adafruit MiniMLX90614",
    "version": "1.0.0",
    "sentence": "A simplified MLX90614 library for use with the Trinket/Gemma"
  },
  {
    "name": "Adafruit Motor Shield V2 Library",
    "version": "1.1.3",
    "sentence": "Library for the Adafruit Motor Shield V2 for Arduino. It supports DC motors & stepper motors with microstepping as well as stacking-support."
  },
  {
    "name": "Adafruit Motor Shield library",
    "version": "1.0.1",
    "sentence": "Adafruit Motor shield V1 firmware with basic Microstepping support. Works with all Arduinos and the Mega"
  },
  {
    "name": "Adafruit NAU7802 Library",
    "version": "1.0.5",
    "sentence": "Arduino library for the NAU7802 ADC converter in the Adafruit shop"
  },
  {
    "name": "Adafruit NeoMatrix",
    "version": "1.3.3",
    "sentence": "Adafruit_GFX-compatible library for NeoPixel grids"
  },
  {
    "name": "Adafruit NeoMatrix ZeroDMA library",
    "version": "1.0.4",
    "sentence": "Arduino library for DMA control of NeoMatrix on samd21 microcontroller"
  },
  {
    "name": "Adafruit NeoPXL8",
    "version": "1.3.0",
    "sentence": "Arduino library for controlling 8 NeoPixel LED strips using DMA on ATSAMD21, ATSAMD51, RP2040 and ESP32S3"
  },
  {
    "name": "Adafruit NeoPixel",
    "version": "1.12.4",
    "sentence": "Arduino library for controlling single-wire-based LED pixels and strip."
  },
  {
    "name": "Adafruit NeoTrellis M4 Library",
    "version": "1.3.3",
    "sentence": "Examples and code for the NeoTrellis M4"
  },
  {
    "name": "Adafruit OV7670",
    "version": "1.2.4",
    "sentence": "A library for the OV7670 camera."
  },
  {
    "name": "Adafruit PCD8544 Nokia 5110 LCD library",
    "version": "2.0.3",
    "sentence": "Arduino driver for PC8544, most commonly found in small Nokia 5110's"
  },
  {
    "name": "Adafruit PCF8574",
    "version": "1.1.1",
    "sentence": "Arduino library for the PCF8574 I2C GPIO expander Adafruit shop"
  },
  {
    "name": "Adafruit PCF8591",
    "version": "1.0.4",
    "sentence": "Arduino library for Adafruit PCF8591 combo ADC + DAC"
  },
  {
    "name": "Adafruit PCT2075",
    "version": "1.0.5",
    "sentence": "Arduino library for the PCT2075 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit PM25 AQI Sensor",
    "version": "1.2.0",
    "sentence": "This is an Arduino library for the Adafruit PM2.5 Air Quality Sensor"
  },
  {
    "name": "Adafruit PN532",
    "version": "1.3.3",
    "sentence": "Arduino library for SPI and I2C access to the PN532 RFID/Near Field Communication chip"
  },
  {
    "name": "Adafruit PS2 Trackpad",
    "version": "1.2.4",
    "sentence": "PS2 library for Adafruit capacitive trackpads"
  },
  {
    "name": "Adafruit PWM Servo Driver Library",
    "version": "3.0.2",
    "sentence": "Adafruit PWM Servo Driver Library"
  },
  {
    "name": "Adafruit PixelDust",
    "version": "1.1.3",
    "sentence": "Arduino library for particle simulation"
  },
  {
    "name": "Adafruit Pixie",
    "version": "1.1.7",
    "sentence": "Arduino library for controlling Serial-based ultra-bright LED pixels and strip."
  },
  {
    "name": "Adafruit Protomatter",
    "version": "1.7.0",
    "sentence": "A library for Adafruit RGB LED matrices."
  },
  {
    "name": "Adafruit PyCamera Library",
    "version": "1.0.7",
    "sentence": "Arduino library for the MEMENTO ESP32-S3 camera"
  },
  {
    "name": "Adafruit RA8875",
    "version": "1.4.4",
    "sentence": "Adafruit's Arduino driver for the RA8875 TFT driver"
  },
  {
    "name": "Adafruit RGB LCD Shield Library",
    "version": "1.2.2",
    "sentence": "Library for the Adafruit RGB 16x2 LCD Shield."
  },
  {
    "name": "Adafruit S-35710 Library",
    "version": "1.0.0",
    "sentence": "Arduino library for S-35710."
  },
  {
    "name": "Adafruit SCD30",
    "version": "1.0.11",
    "sentence": "Arduino library for the SCD30 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit SGP30 Sensor",
    "version": "2.0.3",
    "sentence": "This is an Arduino library for the Adafruit SGP30 Gas / Air Quality Sensor"
  },
  {
    "name": "Adafruit SGP40 Sensor",
    "version": "1.1.3",
    "sentence": "This is an Arduino library for the Adafruit SGP40 Gas / Air Quality Sensor"
  },
  {
    "name": "Adafruit SH110X",
    "version": "2.1.11",
    "sentence": "SH110X oled driver library for monochrome displays with SH1107 or SH1106G drivers"
  },
  {
    "name": "Adafruit SHARP Memory Display",
    "version": "1.1.3",
    "sentence": "This is an Arduino library for the Adafruit Monochrome SHARP Memory Displays"
  },
  {
    "name": "Adafruit SHT31 Library",
    "version": "2.2.2",
    "sentence": "Arduino library for SHT31 temperature & humidity sensor."
  },
  {
    "name": "Adafruit SHT4x Library",
    "version": "1.0.5",
    "sentence": "Arduino library for SHT4x temperature & humidity sensor."
  },
  {
    "name": "Adafruit SHTC3 Library",
    "version": "1.0.1",
    "sentence": "Arduino library for SHTC3 temperature & humidity sensor."
  },
  {
    "name": "Adafruit SI1145 Library",
    "version": "1.2.2",
    "sentence": "Arduino library for the SI1145 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit SPIFlash",
    "version": "5.0.1",
    "sentence": "SPI Flash filesystem support for FAT and CircuitPython FS support from within Arduino"
  },
  {
    "name": "Adafruit SSD1305",
    "version": "2.2.3",
    "sentence": "SSD1305 library for Monochrome OLEDs based on SSD1305 drivers"
  },
  {
    "name": "Adafruit SSD1306",
    "version": "2.5.13",
    "sentence": "SSD1306 oled driver library for monochrome 128x64 and 128x32 displays"
  },
  {
    "name": "Adafruit SSD1306 EMULATOR",
    "version": "0.1.0",
    "sentence": "SSD1306 emulator oled driver library for monochrome 128x64 and 128x32 displays"
  },
  {
    "name": "Adafruit SSD1306 Wemos Mini OLED",
    "version": "1.1.2",
    "sentence": "SSD1306 oled driver library for Wemos D1 Mini OLED shield"
  },
  {
    "name": "Adafruit SSD1325",
    "version": "1.3.0",
    "sentence": "SSD1325 monochrome OLED library"
  },
  {
    "name": "Adafruit SSD1327",
    "version": "1.0.4",
    "sentence": "SSD1327 library for grayscale OLEDs based on SSD1327 drivers"
  },
  {
    "name": "Adafruit SSD1331 OLED Driver Library for Arduino",
    "version": "1.2.2",
    "sentence": "For 0.96\" OLEDs in the Adafruit shop"
  },
  {
    "name": "Adafruit SSD1351 library",
    "version": "1.3.2",
    "sentence": "Adafruit library for the 1.27\" and 1.5\" color OLEDs in the shop"
  },
  {
    "name": "Adafruit ST7735 and ST7789 Library",
    "version": "1.11.0",
    "sentence": "This is a library for the Adafruit ST7735, ST7789, ST7796S SPI displays."
  },
  {
    "name": "Adafruit STMPE610",
    "version": "1.1.6",
    "sentence": "Arduino library for STMPE610/811 resistive touch screen controllers"
  },
  {
    "name": "Adafruit Sensor Calibration",
    "version": "1.1.5",
    "sentence": "Calibration helper for various Arduino compatibles"
  },
  {
    "name": "Adafruit Sensor Lab",
    "version": "0.8.2",
    "sentence": "Arduino library for scientific sensor readings/fusions/manipulations"
  },
  {
    "name": "Adafruit Si4713 Library",
    "version": "1.2.3",
    "sentence": "Arduino library for the Si4714 FM+RDS Transmitter in the Adafruit shop"
  },
  {
    "name": "Adafruit Si5351 Library",
    "version": "1.4.2",
    "sentence": "Driver for Adafruit's Si5351 Clockgen Breakout"
  },
  {
    "name": "Adafruit Si7021 Library",
    "version": "1.5.3",
    "sentence": "Arduino library for Si7021 sensors."
  },
  {
    "name": "Adafruit SleepyDog Library",
    "version": "1.6.5",
    "sentence": "Arduino library to use the watchdog timer for system reset and low power sleep."
  },
  {
    "name": "Adafruit SoftServo",
    "version": "1.0.4",
    "sentence": "A lightweight software servo library, designed for Trinket/Gemma but good for other Arduino-compats"
  },
  {
    "name": "Adafruit Soundboard library",
    "version": "1.1.2",
    "sentence": "Arduino Library for UART control of the Adafruit Soundboard"
  },
  {
    "name": "Adafruit TCA8418",
    "version": "1.0.2",
    "sentence": "Arduino library for the TCA8418 Matrix Keypad Drivers in the Adafruit shop"
  },
  {
    "name": "Adafruit TCS34725",
    "version": "1.4.4",
    "sentence": "Driver for Adafruit's TCS34725 RGB Color Sensor Breakout"
  },
  {
    "name": "Adafruit TFTLCD Library",
    "version": "1.0.3",
    "sentence": "Adafruit 2.8\" TFT display Library"
  },
  {
    "name": "Adafruit TLA202x",
    "version": "1.0.2",
    "sentence": "Arduino library for the TLA202x sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit TLC5947",
    "version": "1.2.3",
    "sentence": "Adafruit's Arduino driver for the TLC5947 PWM LED Driver Breakout."
  },
  {
    "name": "Adafruit TLC59711",
    "version": "1.3.4",
    "sentence": "Library for our Adafruit 12-channel PWM/LED driver."
  },
  {
    "name": "Adafruit TMP006",
    "version": "1.1.0",
    "sentence": "This is a library for the Adafruit TMP006 Infrared Thermopile Sensor"
  },
  {
    "name": "Adafruit TMP007 Library",
    "version": "1.1.2",
    "sentence": "Arduino library for Adafruit TMP007 Thermopile sensor Breakout"
  },
  {
    "name": "Adafruit TMP117",
    "version": "1.0.3",
    "sentence": "Arduino library for the TMP117 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit TPA2016 Library",
    "version": "1.2.2",
    "sentence": "Arduino library for the Adafruit TPA2016(D2) I2C controlled AGC audio amplifier"
  },
  {
    "name": "Adafruit TSC2007",
    "version": "1.1.2",
    "sentence": "Arduino library for the TSC2007 resistive touch screen drivers in the Adafruit shop"
  },
  {
    "name": "Adafruit TSC2046",
    "version": "1.0.1",
    "sentence": "A library for the TI TSC2046 touchscreen."
  },
  {
    "name": "Adafruit TSL2561",
    "version": "1.1.2",
    "sentence": "Unified sensor driver for Adafruit's TSL2561 breakouts"
  },
  {
    "name": "Adafruit TSL2591 Library",
    "version": "1.4.5",
    "sentence": "Library for the TSL2591 digital luminosity (light) sensors."
  },
  {
    "name": "Adafruit TensorFlow Lite",
    "version": "1.2.5",
    "sentence": "This is a library to abstract away TensorFlow Lite for Adafruit/Arcada boards"
  },
  {
    "name": "Adafruit TestBed",
    "version": "1.13.2",
    "sentence": "Adafruit's internal test bed code library"
  },
  {
    "name": "Adafruit Thermal Printer Library",
    "version": "1.4.1",
    "sentence": "Arduino Library for Small Thermal Printers"
  },
  {
    "name": "Adafruit TiCoServo",
    "version": "1.0.6",
    "sentence": "Use NeoPixels and servos in the same Arduino sketch (with caveats)"
  },
  {
    "name": "Adafruit TinyFlash",
    "version": "1.0.4",
    "sentence": "Barebones Winbond SPI flash library for Arduino and Trinket"
  },
  {
    "name": "Adafruit TinyRGBLCDShield",
    "version": "1.1.2",
    "sentence": "Adafruit_RGBLCDShield library ported to Trinket/Gemma"
  },
  {
    "name": "Adafruit TinyUSB Library",
    "version": "3.4.2",
    "sentence": "TinyUSB library for Arduino"
  },
  {
    "name": "Adafruit TouchScreen",
    "version": "1.1.5",
    "sentence": "Adafruit TouchScreen display library."
  },
  {
    "name": "Adafruit Trellis Library",
    "version": "1.0.1",
    "sentence": "Arduino library for controlling Adafruit Trellis"
  },
  {
    "name": "Adafruit UNTZtrument",
    "version": "2.0.3",
    "sentence": "Adafruit UNTZtrument"
  },
  {
    "name": "Adafruit Unified Sensor",
    "version": "1.1.15",
    "sentence": "Required for all Adafruit Unified Sensor based libraries."
  },
  {
    "name": "Adafruit VC0706 Serial Camera Library",
    "version": "1.2.2",
    "sentence": "Library for VC0706-based Serial JPEG Cameras"
  },
  {
    "name": "Adafruit VCNL4020 Library",
    "version": "1.0.1",
    "sentence": "Arduino library for the VCNL4020 light and proximity sensor"
  },
  {
    "name": "Adafruit VCNL4040",
    "version": "1.0.4",
    "sentence": "Arduino library for the VCNL4040 Breakouts in the Adafruit shop"
  },
  {
    "name": "Adafruit VCNL4200 Library",
    "version": "1.0.1",
    "sentence": "Arduino library for VCNL4200."
  },
  {
    "name": "Adafruit VEML6070 Library",
    "version": "1.0.8",
    "sentence": "Arduino library for VEML6070"
  },
  {
    "name": "Adafruit VEML6075 Library",
    "version": "2.2.2",
    "sentence": "Arduino library for VEML6075"
  },
  {
    "name": "Adafruit VEML7700 Library",
    "version": "2.1.6",
    "sentence": "Arduino library for the VEML7700 sensors in the Adafruit shop"
  },
  {
    "name": "Adafruit VL53L1X",
    "version": "3.1.2",
    "sentence": "Sensor driver for VL53L1X / VL53L1CX Time of Flight sensor"
  },
  {
    "name": "Adafruit VS1053 Library",
    "version": "1.3.2",
    "sentence": "This is a library for the Adafruit VS1053 Codec Breakout and Music Maker Shields"
  },
  {
    "name": "Adafruit WS2801 Library",
    "version": "1.1.3",
    "sentence": "Arduino library for controlling strips/pixels using WS2801 driver chips"
  },
  {
    "name": "Adafruit WavePlayer Library",
    "version": "1.0.7",
    "sentence": "Helper library for wrangling Wave files"
  },
  {
    "name": "Adafruit WipperSnapper",
    "version": "1.0.0-beta.97",
    "sentence": "Arduino application for Adafruit.io WipperSnapper"
  },
  {
    "name": "Adafruit XCA9554",
    "version": "1.0.0",
    "sentence": "Arduino library for TCA9554 or PCA9554 8-bit GPIO expanders"
  },
  {
    "name": "Adafruit Zero DMA Library",
    "version": "1.1.3",
    "sentence": "DMA helper/wrapped for ATSAMD21 such as Arduino Zero & Feather M0"
  },
  {
    "name": "Adafruit Zero FFT Library",
    "version": "1.0.6",
    "sentence": "FFT library for Arduino Zero / Adafruit Feather M0 (SAMD21 processor)."
  },
  {
    "name": "Adafruit Zero I2S Library",
    "version": "1.2.4",
    "sentence": "I2S audio playback library for the Arduino Zero / Adafruit M0 (SAMD21 processor) and M4 (SAMD51) boards"
  },
  {
    "name": "Adafruit Zero PDM Library",
    "version": "1.2.3",
    "sentence": "PDM Microphone Input library for Arduino Zero / Adafruit Feather M0 (SAMD21 processor)."
  },
  {
    "name": "Adafruit ZeroTimer Library",
    "version": "2.2.4",
    "sentence": "Arduino library for SAMD21/SAMD51 timer control"
  },
  {
    "name": "Adafruit composite video Library",
    "version": "1.0.4",
    "sentence": "Arduino library for composite video on samd21 microcontroller"
  },
  {
    "name": "Adafruit microbit Library",
    "version": "1.3.4",
    "sentence": "Arduino library for using micro:bit nRF51"
  },
  {
    "name": "Adafruit nRF8001",
    "version": "1.1.1",
    "sentence": "Drivers for Adafruit's nRF8001 Bluetooth Low Energy Breakout"
  },
  {
    "name": "Adafruit nRFCrypto",
    "version": "0.1.2",
    "sentence": "Arduino Cryptography library using hardware-accelerated ARM CryptoCell CC310 on nRF52-based Adafruit Bluefruit LE modules"
  },
  {
    "name": "Adafruit seesaw Library",
    "version": "1.7.9",
    "sentence": "This is a library for the Adafruit seesaw helper IC."
  },
  {
    "name": "Adafruit_4_01_ColourEPaper",
    "version": "1.0.0",
    "sentence": "Adafruit connector library for the WaveShare 4.01 Colour Epaper display"
  },
  {
    "name": "Adafruit_VCNL4010",
    "version": "1.1.2",
    "sentence": "Sensor driver for VCNL4010 IR proximity sensor"
  },
  {
    "name": "Adafruit_VL53L0X",
    "version": "1.2.4",
    "sentence": "Sensor driver for VL53L0X Time of Flight sensor"
  },
  {
    "name": "Adafruit_VL6180X",
    "version": "1.4.4",
    "sentence": "Sensor driver for VL6180X Time of Flight sensor"
  },
  {
    "name": "AdagioPro",
    "version": "1.0.0",
    "sentence": "Controls Adagio RGB Poollights over RS-485"
  },
  {
    "name": "Adaino",
    "version": "0.1.0",
    "sentence": "An Analog Data Acquisition library for Arduino and IoT."
  },
  {
    "name": "AdaptiveMapping",
    "version": "1.0.2",
    "sentence": "A library that makes it easier to map inputs to a range."
  },
  {
    "name": "Adeon",
    "version": "1.1.1",
    "sentence": "Adeon is a software solution for controlling GSM devices (GSM gates, relays, modules etc.) via SMS commands."
  },
  {
    "name": "Adler",
    "version": "0.2.5",
    "sentence": "Arduino Library for calculating Adler-32 and Adler-16 checksum."
  },
  {
    "name": "AdvKeyPad",
    "version": "1.0.1",
    "sentence": "Arduino library for a KeyPad connected to a PCF8574."
  },
  {
    "name": "Advance Seven Segment",
    "version": "1.0.1",
    "sentence": "Summary"
  },
  {
    "name": "AdvancedLogger",
    "version": "1.3.0",
    "sentence": "Library for simple logging to memory with comprehensive format."
  },
  {
    "name": "AdvancedSerial",
    "version": "0.0.1",
    "sentence": "A library for enhanced serial communication on Arduino, capable of handling and displaying all variable types in their native or hexadecimal byte value formats."
  },
  {
    "name": "AfricasTalking",
    "version": "1.0.1",
    "sentence": "A library to enable easy intergration of Africas Talking communication APIs with esp8266."
  },
  {
    "name": "Afstandssensor - HCSR04",
    "version": "1.0.2",
    "sentence": "Bibliotek til HC-SR04 ultralyd afstandssensor."
  },
  {
    "name": "AgIsoStack",
    "version": "0.1.5",
    "sentence": "A free ISOBUS (ISO11783) and J1939 CAN Stack for Teensy."
  },
  {
    "name": "AgileStateMachine",
    "version": "1.0.5",
    "sentence": "Arduino/C++ library to simply and efficiently model and run a finite state machine"
  },
  {
    "name": "Ai COCOCAM",
    "version": "1.0.0",
    "sentence": "Kocoafab library for Ai COCOCAM on various orangeboards(arduino compatible boards)"
  },
  {
    "name": "Ai Esp32 Rotary Encoder",
    "version": "1.7.0",
    "sentence": "Easy implement rotary encoder to your application for ESP32 and ESP8266"
  },
  {
    "name": "AioP13",
    "version": "1.0.4",
    "sentence": "Another implementation of G3RUHs PLAN-13 for satellite and sun prediction."
  },
  {
    "name": "Air Commander Entire Control",
    "version": "1.0.2",
    "sentence": "A library to directly interface with the Air Commander Entire"
  },
  {
    "name": "AirGradient Air Quality Sensor",
    "version": "3.2.0",
    "sentence": "ESP32-C3 / ESP8266 library for air quality monitor measuring PM, CO2, Temperature, TVOC and Humidity with OLED display."
  },
  {
    "name": "AirNgin ESP32 MQTT Client",
    "version": "0.1.7",
    "sentence": "A library for ESP32 to connect to AirNgin IoT platform."
  },
  {
    "name": "Akafugu Four Letter Word Library",
    "version": "1.0.0",
    "sentence": "Akafugu Four Letter Word Library"
  },
  {
    "name": "Akafugu TWIDisplay Library",
    "version": "1.0.1",
    "sentence": "Akafugu TWIDisplay Library"
  },
  {
    "name": "Akafugu TWIKeyboard Library",
    "version": "1.0.1",
    "sentence": "Akafugu TWIKeyboard Library"
  },
  {
    "name": "Akafugu TWILiquidCrystal Library",
    "version": "1.0.2",
    "sentence": "Akafugu TWILiquidCrystal Library"
  },
  {
    "name": "Akafugu WireRtc Library",
    "version": "1.0.1",
    "sentence": "Akafugu WireRtc Library"
  },
  {
    "name": "AlPlc_Opta",
    "version": "1.2.0",
    "sentence": "Arduino IDE PLC runtime library for Arduino Opta"
  },
  {
    "name": "AlPlc_PMC",
    "version": "1.0.6",
    "sentence": "Arduino IDE PLC runtime library for Arduino Portenta Machine Control"
  },
  {
    "name": "Alarm",
    "version": "1.0.0",
    "sentence": "Allows you to run functions after an interval without having to delay."
  },
  {
    "name": "AlertMe",
    "version": "1.0.0",
    "sentence": "Allows for sending email and SMS from nothing but the ESP8266!"
  },
  {
    "name": "Alfredo-NoU2",
    "version": "2.0.7",
    "sentence": "Library for the Alfredo NoU2 robot control board."
  },
  {
    "name": "Alfredo-NoU3",
    "version": "1.0.6",
    "sentence": "Library for the Alfredo NoU3 robot control board."
  },
  {
    "name": "AlfredoCRSF",
    "version": "1.0.1",
    "sentence": "CSRF serial protocol Arduino library"
  },
  {
    "name": "AlfredoConnect-Receive",
    "version": "1.0.0",
    "sentence": "Library for communicating over a serial connection to AlfredoConnect-Desktop."
  },
  {
    "name": "Algoduino",
    "version": "0.2.3",
    "sentence": "A simple API client implementation in C++ for the Algorand Blockchain."
  },
  {
    "name": "AlignedJoy",
    "version": "1.0.1",
    "sentence": "Allows Arduino/Genuino boards to read a variety of analog joystick by aligning axis values (XY)."
  },
  {
    "name": "AliyunIoTSDK",
    "version": "0.3.0",
    "sentence": "A toplevel client library for aliyun MQTT messaging."
  },
  {
    "name": "AllSensors DLHR",
    "version": "1.0.1",
    "sentence": "Support for the AllSensors DLHR Series Low Voltage Digital Pressure Sensors."
  },
  {
    "name": "AllSensors DLV",
    "version": "1.0.0",
    "sentence": "Support for the AllSensors DLV Series Low Voltage Digital Pressure Sensors."
  },
  {
    "name": "AllThingsTalk LTE-M SDK",
    "version": "2.0.4",
    "sentence": "Connect your LTE-M enabled Arduino device to AllThingsTalk IoT Platform."
  },
  {
    "name": "AllThingsTalk LoRaWAN SDK",
    "version": "3.1.6",
    "sentence": "LoRaWAN SDK for AllThingsTalk Maker"
  },
  {
    "name": "AllThingsTalk WiFi SDK",
    "version": "2.1.2",
    "sentence": "Connect and control your device with AllThingsTalk"
  },
  {
    "name": "AllWize",
    "version": "1.1.6",
    "sentence": "Arduino-compatible library to interface RC1701HP-OSP/WIZE radio modules"
  },
  {
    "name": "AlmaviosLitMqtt",
    "version": "0.3.0",
    "sentence": "A Simple MQTT client for connection with cloud providers"
  },
  {
    "name": "AlmostRandom",
    "version": "0.21.0",
    "sentence": "AlmostRandom generates random number from a few entropy sources within the Arduino."
  },
  {
    "name": "AloesDevice",
    "version": "1.0.1",
    "sentence": "MQTT connector for Aloes"
  },
  {
    "name": "Alpenglow FUnicorn",
    "version": "2.0.0",
    "sentence": "Controls the LED message on the FUnicorn."
  },
  {
    "name": "AltController",
    "version": "1.0.2",
    "sentence": "Alternative keyboard controller for Project 1, Physical Computing"
  },
  {
    "name": "AltSoftSerial",
    "version": "1.4.0",
    "sentence": "Software emulated serial using hardware timers for improved compatibility"
  },
  {
    "name": "AlternativeLSS",
    "version": "0.9.0",
    "sentence": "Asynchronous control of Lynxmotion LSS smart servos."
  },
  {
    "name": "Altino",
    "version": "1.0.2",
    "sentence": "The library for the Altino car."
  },
  {
    "name": "AmazonDRS",
    "version": "1.0.0",
    "sentence": "AmazonDRS library for Arduino."
  },
  {
    "name": "Ambient ESP32 ESP8266 lib",
    "version": "1.0.5",
    "sentence": "Ambient library for Arduino ESP32 and ESP8266."
  },
  {
    "name": "AmbientCO2",
    "version": "0.3.0",
    "sentence": "Arduino library for CozIR Ambient CO2 sensors."
  },
  {
    "name": "Ambimate",
    "version": "1.1.0",
    "sentence": "A library for the Ambimate sensor board from TE"
  },
  {
    "name": "Amethyste_LSM6DS3",
    "version": "1.0.0",
    "sentence": "Expose les fonctionnalités des capteurs LSM6DS3."
  },
  {
    "name": "AmigaMouseJoyEmu",
    "version": "0.1.0",
    "sentence": "Library to emulate Amiga Mouse or joystick"
  },
  {
    "name": "AmperkaFET",
    "version": "1.0.0",
    "sentence": "Allows to control the power switches through the output shift register."
  },
  {
    "name": "Amytol_Sample",
    "version": "1.0.0",
    "sentence": "A library and samples to get you started"
  },
  {
    "name": "Analog Buttons",
    "version": "1.2.0",
    "sentence": "Arduino multi button support library"
  },
  {
    "name": "Analog-Digital Multiplexers",
    "version": "3.0.0",
    "sentence": "Arduino library for controlling analog/digital multiplexers (A/D mux)."
  },
  {
    "name": "AnalogFilter",
    "version": "1.0.2",
    "sentence": "Analog filter library, used to slow down the sampling rate of analog reads."
  },
  {
    "name": "AnalogIO-Arduino",
    "version": "1.1.1",
    "sentence": "This library allows to read a value from an analog input like an potentiometer, or from a digital input like an encoder. Moreover, allows to write it on digital output, exactly on PWM pin."
  },
  {
    "name": "AnalogKey",
    "version": "1.1.0",
    "sentence": "Library for matrix analog keyboard"
  },
  {
    "name": "AnalogKeyboard",
    "version": "0.3.6",
    "sentence": "LIB to assist in the use of analog keyboard in embedded systems."
  },
  {
    "name": "AnalogKeypad",
    "version": "0.2.5",
    "sentence": "Arduino Library for (Robotdyn) 4x4 and 4x3 AnalogKeypad"
  },
  {
    "name": "AnalogKeypad by Makuna",
    "version": "1.2.0",
    "sentence": "A library that makes interfacing an analog keypad easy."
  },
  {
    "name": "AnalogLEDDriver",
    "version": "0.0.4",
    "sentence": "A non-blocking Library for controlling LED(s), using an analogue (PWM) port."
  },
  {
    "name": "AnalogMultiButton",
    "version": "1.0.0",
    "sentence": "An Arduino library to capture button presses on multiple buttons through a single analog pin."
  },
  {
    "name": "AnalogPin",
    "version": "0.2.9",
    "sentence": "Arduino Library for AnalogPin"
  },
  {
    "name": "AnalogRTCLib",
    "version": "1.1.0",
    "sentence": "Library for Analog Devices Real Time Clocks."
  },
  {
    "name": "AnalogReadAsync",
    "version": "1.0.1",
    "sentence": "Asynchronous version of analogRead()."
  },
  {
    "name": "AnalogSelector",
    "version": "1.0.0",
    "sentence": "Read a potentiometer or other analog input as a multi-selector switch."
  },
  {
    "name": "AnalogTouch",
    "version": "1.0.0",
    "sentence": "AnalogTouch library for Arduino"
  },
  {
    "name": "AnalogUVSensor",
    "version": "0.1.6",
    "sentence": "AnalogUVSensor library for Arduino."
  },
  {
    "name": "AnalogWrite_ESP32",
    "version": "1.0.5",
    "sentence": "Function analogWrite and Servo support for ESP32"
  },
  {
    "name": "Andee",
    "version": "3.3.2",
    "sentence": "Annikken Andee Library for Annikken Andee U, Android and iOS boards."
  },
  {
    "name": "Andee101",
    "version": "1.2.4",
    "sentence": "Annikken Andee101 Library for Arduino 101"
  },
  {
    "name": "AndeeMobile",
    "version": "1.0.2",
    "sentence": "For use with the Annikken AndeeMobile"
  },
  {
    "name": "AndreyRybalko WT2003M02 MP3 Decoder",
    "version": "1.0.1",
    "sentence": "Library for the WT2003M02 MP3 decoder board v3.0."
  },
  {
    "name": "Angle",
    "version": "0.2.0",
    "sentence": "Library to convert between floating point angle to minutes hours representation."
  },
  {
    "name": "AngleConvertor",
    "version": "0.2.1",
    "sentence": "Library to convert between different less known angle formats."
  },
  {
    "name": "AnimatedGIF",
    "version": "2.1.1",
    "sentence": "Universal GIF player for MCUs with at least 32K of RAM."
  },
  {
    "name": "Animately",
    "version": "0.2.0",
    "sentence": "Precise animation of props or robots without the need for thread-blocking (delay()) or complex state machines."
  },
  {
    "name": "Animation Tools",
    "version": "0.8.5",
    "sentence": "Simplifies creating behaviours for Servos and LEDs"
  },
  {
    "name": "Anitracks_ADS7142",
    "version": "0.1.5",
    "sentence": "A library for the ADS7142 ADC"
  },
  {
    "name": "Anitracks_PCA95x5",
    "version": "0.1.3",
    "sentence": "Arduino library for PCA9535 and PCA9555 (Remote 16-bit I2C and SMBus I/O Expander with Interrupt Output and Configuration Registers)"
  },
  {
    "name": "Anomalia",
    "version": "1.0.0",
    "sentence": "Arduino library for data processing anomalies."
  },
  {
    "name": "Antares ESP8266 HTTP",
    "version": "1.3.3",
    "sentence": "A library to simplify the process of fetching/deploying data to Antares IoT platform"
  },
  {
    "name": "Antares ESP8266 MQTT",
    "version": "0.9.2",
    "sentence": "A library to simplify the process of subscribing and publishing data to Antares IoT platform via MQTT on ESP8266"
  },
  {
    "name": "AntaresLoraID",
    "version": "1.1.0",
    "sentence": "Lora.id Arduino Library for Dragino/RFM and standalone LoRaWAN modules."
  },
  {
    "name": "AntiDelay",
    "version": "1.1.3",
    "sentence": "AntiDelay is a library that aims to provide non-blocking delay functionality."
  },
  {
    "name": "AntiKeyRepetition",
    "version": "1.0.0",
    "sentence": "Prevents keys(buttons) from being triggered continuously."
  },
  {
    "name": "AnyRtttl",
    "version": "2.3.0",
    "sentence": "A feature rich arduino library for playing rtttl melodies."
  },
  {
    "name": "Anyleaf",
    "version": "0.2.2",
    "sentence": "Driver for the AnyLeaf pH, EC, and RTD sensors."
  },
  {
    "name": "ApSDM120",
    "version": "1.0.0",
    "sentence": "Library for interfacing meter SDM120 with Arduino, tested whith Mega 2560"
  },
  {
    "name": "App Fernando K",
    "version": "1.0.0",
    "sentence": "Library that helps working with the Fernando K app"
  },
  {
    "name": "AppleMIDI",
    "version": "3.2.0",
    "sentence": "AppleMIDI (aka rtpMIDI) MIDI I/Os for Arduino"
  },
  {
    "name": "Appnostic SC16IS7XX Arduino Library",
    "version": "1.0.0",
    "sentence": "Arduino Library for SC16IS7XX I2C and SPI UART interfaces"
  },
  {
    "name": "Approximate",
    "version": "1.4.0",
    "sentence": "The Approximate Library is a WiFi Arduino library for building proximate interactions between your Internet of Things and the ESP8266 or ESP32."
  },
  {
    "name": "Approxy",
    "version": "1.1.0",
    "sentence": "Library approximating arrays of data"
  },
  {
    "name": "AqualaboSensor",
    "version": "0.0.1",
    "sentence": "Aqualabo Sensors."
  },
  {
    "name": "Arancino",
    "version": "3.1.1",
    "sentence": "Enables communication between microcontroller and Arancino Module running mainly in Arancino boards."
  },
  {
    "name": "Aranet4",
    "version": "1.4.1",
    "sentence": "Aranet4 communication library for ESP32"
  },
  {
    "name": "Arara",
    "version": "2.1.1",
    "sentence": "Biblioteca para o controlador Arara"
  },
  {
    "name": "ArcPID",
    "version": "0.0.3",
    "sentence": "PID controller"
  },
  {
    "name": "ArdBitmap",
    "version": "2.0.3",
    "sentence": "A library to compress and draw bitmaps on the Arduboy game system."
  },
  {
    "name": "ArdOSC",
    "version": "2.2.0",
    "sentence": "Open Sound Control(OSC) Library for Arduino."
  },
  {
    "name": "ArdRTOS",
    "version": "1.0.4",
    "sentence": "ArdRTOS provides a real-time operating system for embedded systems."
  },
  {
    "name": "ArdTap",
    "version": "1.1.1",
    "sentence": "A library to manage an Arduino board from a mobile in a couple of minutes. No coding, only configuration."
  },
  {
    "name": "ArdVoice",
    "version": "0.1.1",
    "sentence": "A library to play audio (voices) on the Arduboy game system."
  },
  {
    "name": "ArduCAM",
    "version": "1.0.0",
    "sentence": "Using the ArduCAM camera module on the Arduino platform"
  },
  {
    "name": "ArduMax AD5241 Driver",
    "version": "1.0.2",
    "sentence": "Driver for Analog Devices AD5241/2 and AD5280/2 digital potentiometers."
  },
  {
    "name": "ArduMax MCP41xxx Driver",
    "version": "1.0.6",
    "sentence": "Driver for Microchip MCP41xxx/42xxx digital potentiometers and MCP43xxx/44xxx digital rheostats."
  },
  {
    "name": "ArduMekaWiFi",
    "version": "1.0.0",
    "sentence": "Library Sederhana Untuk Menghubungkan ESP ke WiFi."
  },
  {
    "name": "ArduPID",
    "version": "0.2.1",
    "sentence": "PID library for Arduinos with greater accuracy than the legacy Arduino PID library"
  },
  {
    "name": "ArduProf",
    "version": "2.0.0",
    "sentence": "A thin layer framework for developer to code inter-task communication by an event driven method, running on different RTOS."
  },
  {
    "name": "ArduRoomba",
    "version": "2.1.0",
    "sentence": "A library that allows simple serial interfacing with iRobot Create 2 (and similar) robots."
  },
  {
    "name": "ArduTFLite",
    "version": "1.0.2",
    "sentence": "TensorFlow Lite Micro library in Arduino style."
  },
  {
    "name": "ArduZ80",
    "version": "1.0.1",
    "sentence": "The first Z80 emulation library for Arduino."
  },
  {
    "name": "Arduboy",
    "version": "1.1.1",
    "sentence": "The Arduboy core library."
  },
  {
    "name": "Arduboy-BistercianNumbers",
    "version": "1.1.0",
    "sentence": "Tiny 4x4 Bistercian Numerical Display for the Arduboy game system."
  },
  {
    "name": "Arduboy-TinyFont",
    "version": "3.2.0",
    "sentence": "Tiny 4x4 Font for Arduboy which contains the small ASCII Table from 32 to 127. The sprite for the font uses 192 bytes."
  },
  {
    "name": "Arduboy2",
    "version": "6.0.0",
    "sentence": "An alternative library for use with the Arduboy game system."
  },
  {
    "name": "ArduboyI2C",
    "version": "2.1.2",
    "sentence": "An I2C library for Arduboy multiplayer games."
  },
  {
    "name": "ArduboyPlaytune",
    "version": "1.0.4",
    "sentence": "A library for playing musical scores and tones that is compatible with the Arduboy game system."
  },
  {
    "name": "ArduboyRaycast",
    "version": "1.1.0",
    "sentence": "A library for making raycasting games on Arduboy"
  },
  {
    "name": "ArduboyTones",
    "version": "1.0.3",
    "sentence": "A library for playing a sequence of tones, intended for use with the Arduboy game system."
  },
  {
    "name": "Arducam_Mega",
    "version": "2.0.12",
    "sentence": "Examples of spi cameras used on different hardware."
  },
  {
    "name": "Arducam_mini",
    "version": "1.0.1",
    "sentence": "Using the ArduCAM camera module on the Arduino platform"
  },
  {
    "name": "Arduino Cloud Provider Examples",
    "version": "1.2.1",
    "sentence": "Examples of how to connect various Arduino boards to cloud providers"
  },
  {
    "name": "Arduino Learning Board",
    "version": "1.0.0",
    "sentence": "A combined library created to support the Arduino Learning Board project"
  },
  {
    "name": "Arduino Low Power",
    "version": "1.2.2",
    "sentence": "Power save primitives features for SAMD and nRF52 32bit boards"
  },
  {
    "name": "Arduino OPL2",
    "version": "2.1.3",
    "sentence": "Use this library to control the OPL2 Audio Board or OPL3 Duo!"
  },
  {
    "name": "Arduino POST HTTP Parser",
    "version": "1.0.0",
    "sentence": "A library that allows for easy parsing of POST packages."
  },
  {
    "name": "Arduino SigFox for MKRFox1200",
    "version": "1.0.5",
    "sentence": "Helper library for MKR Fox 1200 board and ATAB8520E Sigfox module"
  },
  {
    "name": "Arduino Smart Watch",
    "version": "1.0.0",
    "sentence": "A library that makes coding a watch for Arduino Micro and so on"
  },
  {
    "name": "Arduino Uno WiFi Dev Ed Library",
    "version": "0.0.3",
    "sentence": "This library allows users to use network features like rest and mqtt. Includes some tools for the ESP8266."
  },
  {
    "name": "Arduino-I2C-KM1",
    "version": "2.0.2",
    "sentence": "KeiganMotor KM-1 control library using I2C communication"
  },
  {
    "name": "Arduino-Websocket-Fast",
    "version": "1.0.0",
    "sentence": "Websocket client library (fast data sending)."
  },
  {
    "name": "ArduinoArcherPanelClient",
    "version": "1.0.1",
    "sentence": "Client library for websocket based communication with Archer Cloud panels."
  },
  {
    "name": "ArduinoBLE",
    "version": "1.3.7",
    "sentence": "Enables Bluetooth® Low Energy connectivity on the Arduino MKR WiFi 1010, Arduino UNO WiFi Rev.2, Arduino Nano 33 IoT, Arduino Nano 33 BLE, Nicla Sense ME and UNO R4 WiFi."
  },
  {
    "name": "ArduinoBearSSL",
    "version": "1.7.4",
    "sentence": "Port of BearSSL to Arduino."
  },
  {
    "name": "ArduinoBlue",
    "version": "3.1.2",
    "sentence": "Interface your Arduino using my mobile app using bluetooth low energy."
  },
  {
    "name": "ArduinoCloudStorage",
    "version": "0.6.2",
    "sentence": "CloudStorage lets you store and retrive values from a remote server."
  },
  {
    "name": "ArduinoCloudThing",
    "version": "1.7.3",
    "sentence": "Easly connect your Arduino/Genuino board to the Arduino Cloud"
  },
  {
    "name": "ArduinoComponents",
    "version": "0.3.0",
    "sentence": "A library for writing modern OO Arduino."
  },
  {
    "name": "ArduinoDMX",
    "version": "1.0.1",
    "sentence": "Control DMX lights with your Arduino."
  },
  {
    "name": "ArduinoECCX08",
    "version": "1.3.8",
    "sentence": "Arduino Library for the Atmel/Microchip ECC508 and ECC608 crypto chips"
  },
  {
    "name": "ArduinoESPAT",
    "version": "1.0.3",
    "sentence": "A library to control esp-8266 from Arduino by AT commands easier."
  },
  {
    "name": "ArduinoFacil",
    "version": "1.0.2",
    "sentence": "Librería (más bien conjunto de macros) para facilitar el uso de Arduino en castellano para principiantes."
  },
  {
    "name": "ArduinoFritzApi",
    "version": "0.1.1",
    "sentence": "An arduino Library for Automation of Fritz!Box, Fritz!DECT and FRITZ!Powerline devices"
  },
  {
    "name": "ArduinoGraphics",
    "version": "1.1.3",
    "sentence": "Core graphics library for Arduino."
  },
  {
    "name": "ArduinoHttpClient",
    "version": "0.6.1",
    "sentence": "[EXPERIMENTAL] Easily interact with web servers from Arduino, using HTTP and WebSockets."
  },
  {
    "name": "ArduinoHttpServer",
    "version": "0.10.0",
    "sentence": "Server side minimalistic HTTP protocol implementation."
  },
  {
    "name": "ArduinoIHC",
    "version": "1.0.10",
    "sentence": "A Library for connecting to the IHC Controller data in/out."
  },
  {
    "name": "ArduinoINA219",
    "version": "1.1.1",
    "sentence": "INA219 hi-side i2c current/power sensor Library"
  },
  {
    "name": "ArduinoIRC",
    "version": "0.2.0",
    "sentence": "Easy library to make an Arduino IRC Bot (Also supports Twitch chat)."
  },
  {
    "name": "ArduinoIoTCloud",
    "version": "2.3.1",
    "sentence": "This library allows connecting to the Arduino IoT Cloud service."
  },
  {
    "name": "ArduinoIoTCloudBearSSL",
    "version": "1.1.2",
    "sentence": "Port of BearSSL to Arduino."
  },
  {
    "name": "ArduinoJson",
    "version": "7.3.0",
    "sentence": "A simple and efficient JSON library for embedded C++."
  },
  {
    "name": "ArduinoLang",
    "version": "0.1.0",
    "sentence": "Translate Wiring and CPP language to your native language."
  },
  {
    "name": "ArduinoLearningKitStarter",
    "version": "1.2.1",
    "sentence": "Library for the ArduinoLearningKitStarter (ALKS) board by RoboticsBrno with definition of pins and initialization of peripheries."
  },
  {
    "name": "ArduinoLog",
    "version": "1.1.1",
    "sentence": "Small logging framework"
  },
  {
    "name": "ArduinoMDNS",
    "version": "1.0.0",
    "sentence": "mDNS Library for Arduino"
  },
  {
    "name": "ArduinoMenu library",
    "version": "4.21.4",
    "sentence": "Generic menu/interactivity system"
  },
  {
    "name": "ArduinoModbus",
    "version": "1.0.9",
    "sentence": "Use Modbus equipment with your Arduino."
  },
  {
    "name": "ArduinoMotorCarrier",
    "version": "2.0.3",
    "sentence": "Allows use of the Arduino Motor Carrier"
  },
  {
    "name": "ArduinoMqtt",
    "version": "1.6.0",
    "sentence": "MQTT Client library for Arduino based on the Eclipse Paho project."
  },
  {
    "name": "ArduinoMqttClient",
    "version": "0.1.8",
    "sentence": "[BETA] Allows you to send and receive MQTT messages using Arduino."
  },
  {
    "name": "ArduinoOSC",
    "version": "0.5.1",
    "sentence": "OSC subscriber / publisher for Arduino"
  },
  {
    "name": "ArduinoOTA",
    "version": "1.1.0",
    "sentence": "Upload sketch over network to Arduino board with WiFi or Ethernet libraries"
  },
  {
    "name": "ArduinoQueue",
    "version": "1.2.5",
    "sentence": "Queue Library"
  },
  {
    "name": "ArduinoRS485",
    "version": "1.1.0",
    "sentence": "Enables sending and receiving data using the RS-485 standard with RS-485 shields, like the MKR 485 Shield."
  },
  {
    "name": "ArduinoSTL",
    "version": "1.3.3",
    "sentence": "A port of uClibc++ Arduino library."
  },
  {
    "name": "ArduinoSensors",
    "version": "2.0.0",
    "sentence": "A Library of Libraries of Sensors"
  },
  {
    "name": "ArduinoSound",
    "version": "0.2.1",
    "sentence": "[EXPERIMENTAL] A simple way to play and analyze audio data using Arduino."
  },
  {
    "name": "ArduinoTEA5767",
    "version": "1.0.0",
    "sentence": "A simple to use library for the TEA5767 I2C FM receiver IC."
  },
  {
    "name": "ArduinoThread",
    "version": "2.1.1",
    "sentence": "A simple way to run Threads on Arduino"
  },
  {
    "name": "ArduinoThreadRunOnce",
    "version": "0.1.0",
    "sentence": "Run an ArduinoThread just one time"
  },
  {
    "name": "ArduinoTrace",
    "version": "1.2.0",
    "sentence": "A dead-simple tracing library to debug your programs"
  },
  {
    "name": "ArduinoUniqueID",
    "version": "1.3.0",
    "sentence": "Arduino Library to gets the Manufacture Serial Number from the Atmel AVR, SAM, SAMD, STM32, and ESP Microcontroller."
  },
  {
    "name": "ArduinoUnit",
    "version": "3.0.4",
    "sentence": "Flexible test framework for arduino projects."
  },
  {
    "name": "ArduinoUserInterface",
    "version": "1.0.0",
    "sentence": "A simple LCD user interface for Arduino."
  },
  {
    "name": "ArduinoWebsockets",
    "version": "0.5.4",
    "sentence": "A library for writing modern Websockets applications with Arduino."
  },
  {
    "name": "Arduino_10BASE_T1S",
    "version": "0.1.0",
    "sentence": "Generic library for providing IP based 10BASE-T1S communication."
  },
  {
    "name": "Arduino_APA102",
    "version": "1.0.0",
    "sentence": "Control rgb LEDs APA102"
  },
  {
    "name": "Arduino_APDS9960",
    "version": "1.0.4",
    "sentence": "A library for the APDS-9960 sensor"
  },
  {
    "name": "Arduino_AVRSTL",
    "version": "1.2.5",
    "sentence": "A port of ArduinoSTL Arduino library."
  },
  {
    "name": "Arduino_AdvancedAnalog",
    "version": "1.5.0",
    "sentence": "Advanced Analog library for STM32H7 boards"
  },
  {
    "name": "Arduino_Alvik",
    "version": "1.1.0",
    "sentence": "Library to code Arduino Alvik robot"
  },
  {
    "name": "Arduino_AlvikCarrier",
    "version": "1.1.0",
    "sentence": "Library and firmware for Arduino Alvik Carrier board"
  },
  {
    "name": "Arduino_BHY2",
    "version": "1.0.8",
    "sentence": "Library for BHI260AP and BME688 chip on the Nicla Sense ME"
  },
  {
    "name": "Arduino_BHY2Host",
    "version": "1.0.9",
    "sentence": "Library for Host boards that interact with BHY2 chip on Nicla Sense ME"
  },
  {
    "name": "Arduino_BMI270_BMM150",
    "version": "1.2.1",
    "sentence": "Allows you to read the accelerometer, magnetometer and gyroscope values from the IMU on your Arduino Nano 33 BLE Sense Rev2"
  },
  {
    "name": "Arduino_BQ24195",
    "version": "0.9.2",
    "sentence": "Arduino library for the BQ24195 Power Management IC"
  },
  {
    "name": "Arduino_Braccio_plusplus",
    "version": "1.3.3",
    "sentence": "Board support library for the Arduino Braccio++ 6-DOF robot arm."
  },
  {
    "name": "Arduino_BuiltIn",
    "version": "1.0.0",
    "sentence": "Shell Arduino library to provide the standard built-in libraries"
  },
  {
    "name": "Arduino_CMSIS-DSP",
    "version": "5.7.0",
    "sentence": "CMSIS-DSP library ported to arduino mbed cores."
  },
  {
    "name": "Arduino_CRC32",
    "version": "1.0.0",
    "sentence": "Arduino library providing a simple interface to perform checksum calculations utilizing the CRC-32 algorithm."
  },
  {
    "name": "Arduino_Cellular",
    "version": "1.2.1",
    "sentence": "This library provides a toolkit for interacting with the official Arduino Pro 4G Modules."
  },
  {
    "name": "Arduino_CloudConnectionFeedback",
    "version": "0.2.0",
    "sentence": "Block program execution until the device is connected to the cloud and provide user with feedback on connection status."
  },
  {
    "name": "Arduino_ConnectionHandler",
    "version": "1.0.0",
    "sentence": "Arduino Library for network connection management (WiFi, GSM, NB, [Ethernet], Notecard)"
  },
  {
    "name": "Arduino_DebugUtils",
    "version": "1.4.0",
    "sentence": "Debugging module with different debug levels, timestamps and printf-style output."
  },
  {
    "name": "Arduino_EMBRYO_2",
    "version": "0.1.0",
    "sentence": "Control stepper motor"
  },
  {
    "name": "Arduino_ESP32_OTA",
    "version": "0.3.1",
    "sentence": "Firmware update for ESP32."
  },
  {
    "name": "Arduino_EdgeControl",
    "version": "0.2.0",
    "sentence": "Arduino Library for Arduino Edge Control"
  },
  {
    "name": "Arduino_GigaDisplay",
    "version": "1.0.2",
    "sentence": "Examples for GIGA Display Shield"
  },
  {
    "name": "Arduino_GigaDisplayTouch",
    "version": "1.0.1",
    "sentence": "Touch library for Arduino Giga Display Shield"
  },
  {
    "name": "Arduino_GigaDisplay_GFX",
    "version": "1.0.0",
    "sentence": "GFX library for GIGA Display Shield"
  },
  {
    "name": "Arduino_GroveI2C_Ultrasonic",
    "version": "1.0.0",
    "sentence": "Get distance and travel time from M5stack Grove I2C ultrasonic sensor."
  },
  {
    "name": "Arduino_HS300x",
    "version": "1.0.0",
    "sentence": "Allows you to read the temperature and humidity sensors of your Nano 33 BLE Sense R2."
  },
  {
    "name": "Arduino_HTS221",
    "version": "1.0.0",
    "sentence": "Allows you to read the temperature and humidity sensors of your Nano 33 BLE Sense."
  },
  {
    "name": "Arduino_JSON",
    "version": "0.2.0",
    "sentence": "[BETA] Process JSON in your Arduino sketches."
  },
  {
    "name": "Arduino_KNN",
    "version": "0.1.0",
    "sentence": "[BETA] Arduino library for the K-Nearest Neighbors algorithm."
  },
  {
    "name": "Arduino_LPS22HB",
    "version": "1.0.2",
    "sentence": "Allows you to read the pressure sensor of your Nano 33 BLE Sense."
  },
  {
    "name": "Arduino_LSM6DS3",
    "version": "1.0.3",
    "sentence": "Allows you to read the accelerometer, gyroscope, and temperature values from the LSM6DS3 IMU on your Arduino Nano 33 IoT or Arduino Uno WiFi Rev2 boards."
  },
  {
    "name": "Arduino_LSM6DSOX",
    "version": "1.1.2",
    "sentence": "Allows you to read the accelerometer and gyroscope values from the LSM6DSOX IMU on your Arduino Nano RP2040 Connect."
  },
  {
    "name": "Arduino_LSM9DS1",
    "version": "1.1.1",
    "sentence": "Allows you to read the accelerometer, magnetometer and gyroscope values from the LSM9DS1 IMU on your Arduino Nano 33 BLE Sense."
  },
  {
    "name": "Arduino_LowPowerPortentaC33",
    "version": "1.0.1",
    "sentence": "Provides access to the low power functionality of the Renesas RA6M5 microcontroller used in the Portenta C33 Boards"
  },
  {
    "name": "Arduino_LowPowerPortentaH7",
    "version": "1.0.0",
    "sentence": "A library to use low-power modes on the Portenta H7 board."
  },
  {
    "name": "Arduino_MAX17332",
    "version": "1.0.1",
    "sentence": "A library for driving MAX17332 BMS."
  },
  {
    "name": "Arduino_MCHPTouch",
    "version": "1.2.3",
    "sentence": "A library for the Atmel touch sensors"
  },
  {
    "name": "Arduino_MKRENV",
    "version": "1.2.1",
    "sentence": "Allows you to read the temperature, humidity, pressure, light and UV sensors of your MKR ENV Shield."
  },
  {
    "name": "Arduino_MKRGPS",
    "version": "1.0.0",
    "sentence": "Allows you to read the location from the GPS on your MKR GPS shield."
  },
  {
    "name": "Arduino_MKRIoTCarrier",
    "version": "2.1.0",
    "sentence": "Controlling the IoT MKR Carrier"
  },
  {
    "name": "Arduino_MKRMEM",
    "version": "1.1.0",
    "sentence": "SPIFFS on W25Q16DV for Arduino MKRMEM Shield."
  },
  {
    "name": "Arduino_MKRRGB",
    "version": "1.1.0",
    "sentence": "Allows you to draw on your MKR RGB shield."
  },
  {
    "name": "Arduino_MKRTHERM",
    "version": "1.0.0",
    "sentence": "Allows you to read the temperature sensors connected to your MKR THERM shield."
  },
  {
    "name": "Arduino_MachineControl",
    "version": "1.1.2",
    "sentence": "DEPRECATED. Arduino Library for Portenta Machine Control - PMC"
  },
  {
    "name": "Arduino_MultiWiFi",
    "version": "1.0.0",
    "sentence": "allows to configure multiple WiFi networks."
  },
  {
    "name": "Arduino_NiclaSenseEnv",
    "version": "1.0.0",
    "sentence": "Read sensor data from the Nicla Sense Env board and control the board behaviour."
  },
  {
    "name": "Arduino_NineAxesMotion",
    "version": "1.1.2",
    "sentence": "Arduino 9 Axes Motion Shield Library"
  },
  {
    "name": "Arduino_OAuth",
    "version": "0.1.0",
    "sentence": "[BETA] OAuth 1.0 client library for Arduino."
  },
  {
    "name": "Arduino_OPC_UA",
    "version": "0.1.2",
    "sentence": "Arduino port of the open62541 providing OPC UA for Arduino Opta."
  },
  {
    "name": "Arduino_OV767X",
    "version": "0.0.2",
    "sentence": "Capture images from your OmniVision OV7670 camera in your Arduino sketches."
  },
  {
    "name": "Arduino_OplaUI",
    "version": "1.1.0",
    "sentence": "User interface helpers and widgets for the Arduino Oplà IoT Kit (MKR IoT Carrier)"
  },
  {
    "name": "Arduino_Opta_Blueprint",
    "version": "0.2.6",
    "sentence": "Library used to connect OPTA and OPTA Expansion Modules on I2C / UART"
  },
  {
    "name": "Arduino_PF1550",
    "version": "0.3.1",
    "sentence": "Arduino library for the PF1550 Power Management IC"
  },
  {
    "name": "Arduino_POSIXStorage",
    "version": "1.2.1",
    "sentence": "POSIX Storage Library for the Portenta C33, Portenta H7, Portenta Machine Control, and Opta"
  },
  {
    "name": "Arduino_PortentaBreakout",
    "version": "1.1.0",
    "sentence": "Arduino Library for Arduino Portenta Breakout Carrier"
  },
  {
    "name": "Arduino_PortentaMachineControl",
    "version": "1.0.2",
    "sentence": "Arduino Library for Portenta Machine Control (PMC)"
  },
  {
    "name": "Arduino_Portenta_OTA",
    "version": "1.2.1",
    "sentence": "Firmware update for the Portenta H7."
  },
  {
    "name": "Arduino_PowerManagement",
    "version": "1.0.0",
    "sentence": "A library to charge and monitor the battery and use low power modes on the Portenta C33, Portenta H7 and Nicla Vision boards."
  },
  {
    "name": "Arduino_Pro_Tutorials",
    "version": "1.0.6",
    "sentence": "This library contains the complete Arduino sketches from the Pro Tutorials."
  },
  {
    "name": "Arduino_ScienceJournal",
    "version": "1.3.0",
    "sentence": "The Arduino Science Journal firmware for the Physics Lab kit and the Arduino Nano 33 BLE Sense."
  },
  {
    "name": "Arduino_ScienceKitCarrier",
    "version": "0.2.1",
    "sentence": "Library and firmware for Arduino Science Kit R3"
  },
  {
    "name": "Arduino_SecureElement",
    "version": "0.3.0",
    "sentence": "Arduino Library for the Atmel/Microchip ECC508 and ECC608 and NXP SE050 crypto chips"
  },
  {
    "name": "Arduino_Sensorkit",
    "version": "1.4.0",
    "sentence": "Arduino Sensor Kit"
  },
  {
    "name": "Arduino_SerialUpdater",
    "version": "0.0.1",
    "sentence": "small bossac porting for Arduino platforms"
  },
  {
    "name": "Arduino_Threads",
    "version": "0.3.0",
    "sentence": "Easy multi-threading for your Mbed OS-based Arduino."
  },
  {
    "name": "Arduino_TinyGL",
    "version": "0.0.1",
    "sentence": "[EXPERIMENTAL] TinyGL library for GIGA Display Shield"
  },
  {
    "name": "Arduino_USBHostMbed5",
    "version": "0.3.1",
    "sentence": "ARM Mbed5 USBHOST library port for Arduino."
  },
  {
    "name": "Arduino_UnifiedStorage",
    "version": "1.1.0",
    "sentence": "Simplify cross-device storage management on Portenta platforms with a single library supporting SD, Flash, and USB storage access."
  },
  {
    "name": "ArduinosInSpace",
    "version": "1.2.0",
    "sentence": "A library for interfacing hardware with the Objects In Space video game."
  },
  {
    "name": "Ardwloop",
    "version": "0.3.1",
    "sentence": "A library to ease controlling an Arduino program from a Java or Kotlin application."
  },
  {
    "name": "ArgParse",
    "version": "1.0.0",
    "sentence": "A library for splitting a string with arguments into an array."
  },
  {
    "name": "Ark-Cpp-Client",
    "version": "1.4.1",
    "sentence": "A simple API client implementation in C++ for the ARK Blockchain."
  },
  {
    "name": "Ark-Cpp-Crypto",
    "version": "1.1.0",
    "sentence": "A simple Cryptography Implementation in C++ for the ARK Blockchain."
  },
  {
    "name": "Array",
    "version": "1.2.1",
    "sentence": "An array container similar to the C++ std::array"
  },
  {
    "name": "ArrayExt",
    "version": "0.0.1",
    "sentence": "Expand the array and set the average value for front, back, left and right."
  },
  {
    "name": "ArrayList",
    "version": "1.0.2",
    "sentence": "A templated class for creating dynamic or fixed size arrays. Based off of Java's ArrayList class."
  },
  {
    "name": "ArrayUtils",
    "version": "0.0.3",
    "sentence": "Array utility functions for arduino."
  },
  {
    "name": "ArrbotMonitor",
    "version": "1.1.0",
    "sentence": "Plotter-friendly display macros."
  },
  {
    "name": "ArsaLearn",
    "version": "1.1.0",
    "sentence": "Ability to code completely simple"
  },
  {
    "name": "ArtNet",
    "version": "0.8.0",
    "sentence": "Art-Net Sender/Receiver for Arduino (Ethernet, WiFi)"
  },
  {
    "name": "ArticulatedLib",
    "version": "1.0.0",
    "sentence": "Articulated Library"
  },
  {
    "name": "ArtificialRTC",
    "version": "1.0.0",
    "sentence": "A library for date and time calculation on ESP8266, ESP32 and Arduino boards with internal millis function support;"
  },
  {
    "name": "ArtnetWifi",
    "version": "1.6.1",
    "sentence": "ArtNet with the ESP8266, ESP32, RP2040 and more."
  },
  {
    "name": "Artron DS1338",
    "version": "1.0.0",
    "sentence": "Arduino library of RTC DS1338."
  },
  {
    "name": "ArtronShop_BH1750",
    "version": "1.0.0",
    "sentence": "Arduino library of BH1750 Ambient Light (Lux) Sensor"
  },
  {
    "name": "ArtronShop_HDC302x",
    "version": "1.0.0",
    "sentence": "Arduino library of HDC302x Digital humidity and temperature sensor"
  },
  {
    "name": "ArtronShop_LineMessaging",
    "version": "1.0.1",
    "sentence": "LINE Messaging library for ESP32, ESP8266 and Arduino Uno R4 WiFi"
  },
  {
    "name": "ArtronShop_LineNotify",
    "version": "1.1.0",
    "sentence": "LINE Notify library for ESP32, ESP8266 and Arduino Uno R4 WiFi"
  },
  {
    "name": "ArtronShop_PCF85363",
    "version": "1.1.0",
    "sentence": "Arduino library of PCF85363A Real-Time Clock/calendar with 64 byte RAM"
  },
  {
    "name": "ArtronShop_RX8130CE",
    "version": "1.0.0",
    "sentence": "Arduino library of RX8130CE Real-Time Clock/calendar with 4 byte RAM"
  },
  {
    "name": "ArtronShop_SHT3x",
    "version": "1.0.0",
    "sentence": "Arduino library of SHT3x Digital humidity and temperature sensor"
  },
  {
    "name": "ArtronShop_SHT45",
    "version": "1.0.0",
    "sentence": "Arduino library of SHT45 Digital humidity and temperature sensor"
  },
  {
    "name": "ArtronShop_SPL06-001",
    "version": "1.0.0",
    "sentence": "Arduino library of SPL06-001 Digital pressure sensor"
  },
  {
    "name": "ArucoLite",
    "version": "1.0.0",
    "sentence": "Lightweight ArUco tracking"
  },
  {
    "name": "ArxContainer",
    "version": "0.7.0",
    "sentence": "C++ container-like classes (vector, map, etc.) for Arduino which cannot use STL"
  },
  {
    "name": "ArxRobot Library",
    "version": "3.1.0",
    "sentence": "Enables easy access to the controls of Arxterra robots."
  },
  {
    "name": "ArxSmartPtr",
    "version": "0.3.0",
    "sentence": "C++ smart pointer-like classes for Arduino which cannot use standard smart pointers"
  },
  {
    "name": "ArxStringUtils",
    "version": "0.3.2",
    "sentence": "Arduino String utilities"
  },
  {
    "name": "ArxTypeTraits",
    "version": "0.3.1",
    "sentence": "C++ type_traits for Arduino which cannot use it as default"
  },
  {
    "name": "ArylicHTTP",
    "version": "0.0.3",
    "sentence": "ESP32 Library for controling Arylic audio devices."
  },
  {
    "name": "AsciiMassage",
    "version": "1.7.0",
    "sentence": "AsciiMassage is a microcontroller message packer and parser for the ASCII format in different protocols."
  },
  {
    "name": "AskSinPP",
    "version": "5.0.3",
    "sentence": "Homematic Protocol Library"
  },
  {
    "name": "AsproSolarShield",
    "version": "1.0.0",
    "sentence": "AsproSolarShield Library"
  },
  {
    "name": "AstroCalcs",
    "version": "1.0.0",
    "sentence": "Astronomy calculations library."
  },
  {
    "name": "AstroMech",
    "version": "0.1.0",
    "sentence": "Protocol for exchanging small amounts of data over audio."
  },
  {
    "name": "Async TCP",
    "version": "3.3.5",
    "sentence": "Async TCP Library for ESP32"
  },
  {
    "name": "AsyncAnalog",
    "version": "0.2.0",
    "sentence": "Arduino Library for async reading of an analog pin"
  },
  {
    "name": "AsyncBMP180Wrapper",
    "version": "1.0.2",
    "sentence": "Async wrapper for Sparkfun BMP180 lib"
  },
  {
    "name": "AsyncButton",
    "version": "1.0.0",
    "sentence": "A library that implements async buttons."
  },
  {
    "name": "AsyncDNSServer_ESP32_ENC",
    "version": "1.0.0",
    "sentence": "Fully Asynchronous DNS Server Library for ESP32 boards using LwIP ENC28J60 Ethernet."
  },
  {
    "name": "AsyncDNSServer_ESP32_Ethernet",
    "version": "1.2.0",
    "sentence": "Fully Asynchronous DNS Server Library for ESP32/S2/S3/C3 boards using LwIP W5500, W6100 or ENC28J60 Ethernet."
  },
  {
    "name": "AsyncDNSServer_ESP32_W5500",
    "version": "1.0.0",
    "sentence": "Fully Asynchronous DNS Server Library for ESP32 boards using LwIP W5500 Ethernet."
  },
  {
    "name": "AsyncDNSServer_ESP32_W6100",
    "version": "1.0.0",
    "sentence": "Fully Asynchronous DNS Server Library for ESP32 boards using LwIP W6100 Ethernet."
  },
  {
    "name": "AsyncDNSServer_RP2040W",
    "version": "1.0.0",
    "sentence": "Fully Asynchronous DNS Server Library for RASPBERRY_PI_PICO_W using CYW43439 WiFi with arduino-pico core."
  },
  {
    "name": "AsyncDNSServer_STM32",
    "version": "1.1.1",
    "sentence": "Asynchronous DNS Server Library for STM32F/L/H/G/WB/MP1 using LAN8720 or built-in LAN8742A Ethernet"
  },
  {
    "name": "AsyncDNSServer_Teensy41",
    "version": "1.1.2-1",
    "sentence": "Fully Asynchronous DNS Server Library for Teensy 4.1 using QNEthernet."
  },
  {
    "name": "AsyncDNSServer_WT32_ETH01",
    "version": "1.0.0",
    "sentence": "Fully Asynchronous DNS Server Library for WT32_ETH01 or ESP32-based boards using LwIP LAN8720 Ethernet."
  },
  {
    "name": "AsyncDelay",
    "version": "1.1.2",
    "sentence": "Simple abstraction library implementing delays and timeouts."
  },
  {
    "name": "AsyncESP32_ENC_Manager",
    "version": "1.0.0",
    "sentence": "ESP32 + LwIP ENC28J60, including ESP32-S2, ESP32-S3 and ESP32-C3, Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncESP32_Ethernet_Manager",
    "version": "1.0.0",
    "sentence": "ESP32 + LwIP W5500 / ENC28J60, including ESP32-S2, ESP32-S3 and ESP32-C3, Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncESP32_SC_ENC_Manager",
    "version": "1.1.0",
    "sentence": "ESP32_S2/S3/C3 + LwIP + LwIP ENC28J60 Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncESP32_SC_Ethernet_Manager",
    "version": "1.1.0",
    "sentence": "ESP32_S2/S3/C3 + LwIP W5500 / ENC28J60 Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncESP32_SC_W5500_Manager",
    "version": "1.1.0",
    "sentence": "ESP32_S2/S3/C3 + LwIP W5500 Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncESP32_SC_W6100_Manager",
    "version": "1.1.0",
    "sentence": "ESP32_S2/S3/C3 + LwIP W6100 Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncESP32_W5500_Manager",
    "version": "1.0.0",
    "sentence": "ESP32 + LwIP W5500, including ESP32-S2, ESP32-S3 and ESP32-C3, Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncESP32_W6100_Manager",
    "version": "1.0.0",
    "sentence": "ESP32 + LwIP W6100 Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncESP8266_ENC_Manager",
    "version": "1.0.0",
    "sentence": "(ESP8266 + LwIP ENC28J60) Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncESP8266_Ethernet_Manager",
    "version": "1.0.0",
    "sentence": "(ESP8266 + LwIP W5500 / W5100(S) / ENC28J60) Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncESP8266_W5100_Manager",
    "version": "1.0.0",
    "sentence": "(ESP8266 + LwIP W5100 / W5100S) Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncESP8266_W5500_Manager",
    "version": "1.0.0",
    "sentence": "(ESP8266 + LwIP W5500) Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncEspFsWebserver",
    "version": "1.0.8",
    "sentence": "ESPAsyncWebserver with steroids"
  },
  {
    "name": "AsyncHTTPRequest_ESP32_Ethernet",
    "version": "1.15.0",
    "sentence": "Simple Async HTTP Request library, supporting GET, POST, PUT, PATCH, DELETE and HEAD, on top of AsyncTCP library for ESP32/S2/S3/C3, WT32_ETH01 (ESP32 + LAN8720), ESP32 using LwIP ENC28J60, W5500, W6100 or LAN8720."
  },
  {
    "name": "AsyncHTTPRequest_Generic",
    "version": "1.13.0",
    "sentence": "Simple Async HTTP Request library, supporting GET, POST, PUT, PATCH, DELETE and HEAD, on top of AsyncTCP libraries, such as AsyncTCP, ESPAsyncTCP, AsyncTCP_STM32, etc.. for ESP32 (including ESP32_S2, ESP32_S3 and ESP32_C3), WT32_ETH01 (ESP32 + LAN8720), ESP32 with LwIP ENC28J60, W5500 or W6100, ESP8266 (WiFi, W5x00 or ENC28J60) and currently STM32 with LAN8720 or built-in LAN8742A Ethernet."
  },
  {
    "name": "AsyncHTTPRequest_RP2040W",
    "version": "1.3.0",
    "sentence": "Simple Async HTTP Request library, supporting GET, POST, PUT, PATCH, DELETE and HEAD, on top of AsyncTCP_RP2040W library for RASPBERRY_PI_PICO_W with CYW43439 WiFi."
  },
  {
    "name": "AsyncHTTPRequest_Teensy41",
    "version": "1.10.0",
    "sentence": "Simple Async HTTP Request library, supporting GET, POST, PUT, PATCH, DELETE and HEAD, on top of Teensy41_AsyncTCP for Teensy 4.1 using QNEthernet"
  },
  {
    "name": "AsyncHTTPSRequest_ESP32_Ethernet",
    "version": "2.7.0",
    "sentence": "Simple Async HTTPS Request library, supporting GET, POST, PUT, PATCH, DELETE and HEAD, on top of AsyncTCP_SSL library for ESP32/S2/S3/C3, WT32_ETH01 (ESP32 + LAN8720), ESP32 using LwIP ENC28J60, W5500, W6100 or LAN8720."
  },
  {
    "name": "AsyncHTTPSRequest_Generic",
    "version": "2.5.0",
    "sentence": "Simple Async HTTPS Request library, supporting GET, POST, PUT, PATCH, DELETE and HEAD, on top of AsyncTCP_SSL library for ESP32 (including ESP32_S2, ESP32_S3 and ESP32_C3), WT32_ETH01 (ESP32 + LAN8720) and ESP32 with LwIP ENC28J60, W5500 or W6100."
  },
  {
    "name": "AsyncLiquidCrystal",
    "version": "1.0.1",
    "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs), in a non-blocking way."
  },
  {
    "name": "AsyncMQTT_ESP32",
    "version": "1.10.0",
    "sentence": "Arduino Library for ESP32/S2/S3/C3 asynchronous MQTT client implementation"
  },
  {
    "name": "AsyncMQTT_Generic",
    "version": "1.8.1",
    "sentence": "Arduino Library for ESP8266, ESP32, Portenta_H7, STM32 and RP2040W asynchronous MQTT client implementation"
  },
  {
    "name": "AsyncOTA",
    "version": "1.0.0",
    "sentence": "Asynchronous over-the-air (OTA) firmware updates for ESP32."
  },
  {
    "name": "AsyncSMS",
    "version": "1.2.0",
    "sentence": "Simple asynchronous SMS library for SIM800L"
  },
  {
    "name": "AsyncSerial",
    "version": "1.0.0",
    "sentence": "Library that allow to recieve a serial port stream in a non blocking process"
  },
  {
    "name": "AsyncServoLib",
    "version": "1.0.0",
    "sentence": "Library for non blocking controlling a servo"
  },
  {
    "name": "AsyncSonar",
    "version": "1.0.0",
    "sentence": "Library for non blocking controlling a ultrasonic sensor like HC-SR04"
  },
  {
    "name": "AsyncStepperLib",
    "version": "1.0.0",
    "sentence": "AsyncStepper is a library for non blocking stepper motor control"
  },
  {
    "name": "AsyncStream",
    "version": "1.1.0",
    "sentence": "Async read from Stream objects (Serial, etc)"
  },
  {
    "name": "AsyncTCP",
    "version": "1.1.4",
    "sentence": "Async TCP Library for ESP32. Forked from https://github.com/me-no-dev/AsyncTCP"
  },
  {
    "name": "AsyncTCP_RP2040W",
    "version": "1.2.0",
    "sentence": "Asynchronous TCP Library for RASPBERRY_PI_PICO_W using CYW43439 WiFi with arduino-pico core"
  },
  {
    "name": "AsyncTCP_SSL",
    "version": "1.3.1",
    "sentence": "Asynchronous SSL TCP Library for ESP32."
  },
  {
    "name": "AsyncTask",
    "version": "1.0.0",
    "sentence": "Asynchronous & Non-Blocking Function Executor for All Arduino Like Platforms"
  },
  {
    "name": "AsyncTaskLib",
    "version": "1.0.0",
    "sentence": "Library that implements a non blockin task"
  },
  {
    "name": "AsyncTelegram2",
    "version": "2.3.1",
    "sentence": "Powerful, flexible and secure Arduino Telegram BOT library. Hardware independent, it can be used with any MCU capable of handling an SSL connection."
  },
  {
    "name": "AsyncTimer",
    "version": "2.4.1",
    "sentence": "JavaScript-like async timing functions (setTimeout, setInterval)."
  },
  {
    "name": "AsyncTimerLib",
    "version": "1.0.0",
    "sentence": "Simple non blocking timer with callback function"
  },
  {
    "name": "AsyncUDP_ESP32_Ethernet",
    "version": "2.1.0",
    "sentence": "Fully Asynchronous UDP Library for ESP32 boards using LwIP W5500, W6100 or ENC28J60 Ethernet"
  },
  {
    "name": "AsyncUDP_ESP32_SC_ENC",
    "version": "2.1.0",
    "sentence": "Fully Asynchronous UDP Library for ESP32_S2/S3/C3 boards using LwIP ENC28J60 Ethernet"
  },
  {
    "name": "AsyncUDP_ESP32_SC_Ethernet",
    "version": "2.2.0",
    "sentence": "Fully Asynchronous UDP Library for ESP32S2/S3/C3 boards using LwIP W5500, W6100 or ENC28J60 Ethernet"
  },
  {
    "name": "AsyncUDP_ESP32_SC_W5500",
    "version": "2.1.0",
    "sentence": "Fully Asynchronous UDP Library for ESP32S2/S3/C3 boards using LwIP W5500 Ethernet"
  },
  {
    "name": "AsyncUDP_ESP32_SC_W6100",
    "version": "2.1.0",
    "sentence": "Fully Asynchronous UDP Library for ESP32S2/S3/C3 boards using LwIP W6100 Ethernet"
  },
  {
    "name": "AsyncUDP_ESP32_W5500",
    "version": "2.0.0",
    "sentence": "Fully Asynchronous UDP Library for ESP32 boards using LwIP W5500 Ethernet"
  },
  {
    "name": "AsyncUDP_ESP32_W6100",
    "version": "2.0.0",
    "sentence": "Fully Asynchronous UDP Library for ESP32 boards using LwIP W6100 Ethernet"
  },
  {
    "name": "AsyncUDP_Ethernet",
    "version": "1.2.1",
    "sentence": "Fully Asynchronous UDP Library for ESP8266 using W5x00 or ENC28J60 Ethernet. The library is easy to use and includes support for Unicast, Broadcast and Multicast environments."
  },
  {
    "name": "AsyncUDP_RP2040W",
    "version": "1.0.0",
    "sentence": "Fully Asynchronous UDP Library for RASPBERRY_PI_PICO_W using CYW43439 WiFi with arduino-pico core. The library is easy to use and includes support for Unicast, Broadcast and Multicast environments."
  },
  {
    "name": "AsyncUDP_STM32",
    "version": "1.3.0",
    "sentence": "Fully Asynchronous UDP Library for STM32 using LAN8720 or built-in LAN8742A Ethernet."
  },
  {
    "name": "AsyncUDP_Teensy41",
    "version": "1.2.1",
    "sentence": "Fully Asynchronous UDP Library for Teensy 4.1 using QNEthernet. The library is easy to use and includes support for Unicast, Broadcast and Multicast environments."
  },
  {
    "name": "AsyncUDP_WT32_ETH01",
    "version": "2.1.0",
    "sentence": "Fully Asynchronous UDP Library for WT32_ETH01 (ESP32 + LAN8720)."
  },
  {
    "name": "AsyncUdp_ESP32_ENC",
    "version": "2.0.0",
    "sentence": "Fully Asynchronous UDP Library for ESP32 boards using LwIP ENC28J60 Ethernet"
  },
  {
    "name": "AsyncWT32_ETH01_Manager",
    "version": "1.0.0",
    "sentence": "ESP32 + LwIP LAN8720, including WT32-S1, ESP32-S2, ESP32-S3 and ESP32-C3, Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "AsyncWebConfig",
    "version": "1.0.2",
    "sentence": "A web based configuration editor for asynchron web server."
  },
  {
    "name": "AsyncWebSerial",
    "version": "1.0.1",
    "sentence": "Browser-based logging and debugging for ESP32 using the Web Serial API."
  },
  {
    "name": "AsyncWebServer_ESP32_ENC",
    "version": "1.6.3",
    "sentence": "AsyncWebServer for (ESP32 + ENC28J60)"
  },
  {
    "name": "AsyncWebServer_ESP32_SC_ENC",
    "version": "1.8.0",
    "sentence": "AsyncWebServer for (ESP32_S2/S3/C3 + LwIP ENC28J60)"
  },
  {
    "name": "AsyncWebServer_ESP32_SC_W5500",
    "version": "1.8.1",
    "sentence": "AsyncWebServer for (ESP32_S2/S3/C3 + LwIP W5500)"
  },
  {
    "name": "AsyncWebServer_ESP32_SC_W6100",
    "version": "1.8.1",
    "sentence": "AsyncWebServer for (ESP32_S2/S3/C3 + LwIP W6100)"
  },
  {
    "name": "AsyncWebServer_ESP32_W5500",
    "version": "1.6.4",
    "sentence": "AsyncWebServer for (ESP32 + LwIP W5500)"
  },
  {
    "name": "AsyncWebServer_ESP32_W6100",
    "version": "1.6.4",
    "sentence": "AsyncWebServer for (ESP32 + LwIP W6100)"
  },
  {
    "name": "AsyncWebServer_Ethernet",
    "version": "1.5.1",
    "sentence": "Asynchronous HTTP and WebSocket Server Library for ESP8266 using W5x00 or ENC28J60 Ethernet"
  },
  {
    "name": "AsyncWebServer_RP2040W",
    "version": "1.5.0",
    "sentence": "Asynchronous WebServer Library for RASPBERRY_PI_PICO_W using CYW43439 WiFi with arduino-pico core."
  },
  {
    "name": "AsyncWebServer_STM32",
    "version": "1.6.1",
    "sentence": "AsyncWebServer for STM32F/L/H/G/WB/MP1 using LAN8720 or builtin LAN8742A Ethernet"
  },
  {
    "name": "AsyncWebServer_Teensy41",
    "version": "1.7.0",
    "sentence": "Asynchronous HTTP and WebSocket Server Library for Teensy 4.1 using QNEthernet"
  },
  {
    "name": "AsyncWebServer_WT32_ETH01",
    "version": "1.6.2",
    "sentence": "AsyncWebServer for WT32_ETH01 using LAN8720"
  },
  {
    "name": "Async_Operations",
    "version": "1.0.2",
    "sentence": "A library for accurately keeping track of long tasks without blocking the main thread"
  },
  {
    "name": "Asynchrony",
    "version": "1.0.0",
    "sentence": "A way to schedule functions to be executed in the future, similar to asynchrony in other languages."
  },
  {
    "name": "AtTouch",
    "version": "1.0.4",
    "sentence": "Arduino Library for the Atmel AT42QT1070 QTouch 7-channel Sensor IC via i2c."
  },
  {
    "name": "Atmega328_IO",
    "version": "3.1.8",
    "sentence": "Library for robot Cing with Atmega328."
  },
  {
    "name": "Atmega32u4_IO",
    "version": "3.0.2",
    "sentence": "Library for robot Cing with Atmega328."
  },
  {
    "name": "Atmega8_IO",
    "version": "3.0.7",
    "sentence": "Library for robot Cing with Atmega8."
  },
  {
    "name": "Atmega8_IO_basic",
    "version": "3.0.6",
    "sentence": "Library for robot Cing with Atmega8."
  },
  {
    "name": "Atmel TSS463C VAN bus Datalink Controller library",
    "version": "2.0.2",
    "sentence": "A library for the Atmel TSS463/TSS461 VAN Datalink Controller"
  },
  {
    "name": "AtomicWeight",
    "version": "0.3.1",
    "sentence": "Arduino library for atomic weights, calculate massPercentage of elements in a formula."
  },
  {
    "name": "AtrivaTECH PicUNO",
    "version": "1.0.1",
    "sentence": "Arduino library for programming PicUNO with device specific functions."
  },
  {
    "name": "AttachInterruptEx",
    "version": "0.1.3",
    "sentence": "AttachInterruptEx extends the standard AttachInterrupt function to allow for a variety of callable objects as timer callbacks."
  },
  {
    "name": "Attiny84_IO",
    "version": "3.0.7",
    "sentence": "Library for robot Cing with Attiny84."
  },
  {
    "name": "Attiny84_IO_basic",
    "version": "3.0.7",
    "sentence": "Library for robot Cing with Attiny84."
  },
  {
    "name": "Attiny85_IO",
    "version": "3.0.7",
    "sentence": "Library for robot Cing with Attiny85."
  },
  {
    "name": "Attiny85_IO_basic",
    "version": "3.0.7",
    "sentence": "Library for robot Cing with Attiny85."
  },
  {
    "name": "Audio",
    "version": "1.0.6",
    "sentence": "Allows playing audio files from an SD card. For Arduino Due only."
  },
  {
    "name": "Audio - Adafruit Fork",
    "version": "1.3.1",
    "sentence": "Adafruit SAMD51 port of Teensy Audio Library - Flexible, High Quality Audio Processing"
  },
  {
    "name": "AudioFrequencyMeter",
    "version": "1.0.3",
    "sentence": "Get the fundamental pitch of an audio signal"
  },
  {
    "name": "AudioShieldDTMF",
    "version": "1.0.1",
    "sentence": "MCP4921 Audio Shield DTMF Example"
  },
  {
    "name": "AudioZero",
    "version": "1.1.2",
    "sentence": "Allows playing audio files from an SD card. For Arduino Zero, MKRZero and MKR1000 only."
  },
  {
    "name": "AutoAnalogAudio",
    "version": "1.53.0",
    "sentence": "Automated analog reads and analog output (streaming) using Arduino DAC(or PWM), ADC, DMA and Timers"
  },
  {
    "name": "AutoConnect",
    "version": "1.4.2",
    "sentence": "ESP8266/ESP32 WLAN configuration at runtime with web interface."
  },
  {
    "name": "AutoOTA",
    "version": "1.2.0",
    "sentence": "Library for checking OTA updates"
  },
  {
    "name": "AutoPID",
    "version": "1.0.3",
    "sentence": "Automatic PID controller"
  },
  {
    "name": "Automaton",
    "version": "1.0.2",
    "sentence": "A multi tasking table driven finite state machine framework"
  },
  {
    "name": "Automaton-Esp8266",
    "version": "0.1.0",
    "sentence": "Esp8266 State Machines for the Automaton Framework"
  },
  {
    "name": "AverageAngle",
    "version": "0.2.2",
    "sentence": "Arduino library to calculate correctly the average of multiple angles."
  },
  {
    "name": "AverageValue",
    "version": "1.0.0",
    "sentence": "Calculates the average value of some values."
  },
  {
    "name": "AvrHeap",
    "version": "0.2.7",
    "sentence": "Library to runtime analyse the structure of the heap (AVR 328)."
  },
  {
    "name": "AvrTracing",
    "version": "1.0.0",
    "sentence": "The last hope for the desperate AVR programmer. A small (344 bytes) Arduino library to have real program traces and to find the place where your program hangs."
  },
  {
    "name": "Awesome",
    "version": "1.1.0",
    "sentence": "The library that supports the Awesome Shield PCB."
  },
  {
    "name": "AwesomeClickButton",
    "version": "1.0.1",
    "sentence": "Arduino awesome click button."
  },
  {
    "name": "AwsIotWiFiClient",
    "version": "0.2.2",
    "sentence": "A library to connect Wi-Fi microcontrollers to AWS IoT Core."
  },
  {
    "name": "AxisJoystick",
    "version": "2.2.3",
    "sentence": "The Library implements a set of methods for working with an axis joystick controller."
  },
  {
    "name": "Azure RTOS ThreadX",
    "version": "1.0.3",
    "sentence": "Azure RTOS ThreadX Library for Arduino"
  },
  {
    "name": "Azure SDK for C",
    "version": "1.1.8",
    "sentence": "Azure SDK for C library for Arduino."
  },
  {
    "name": "AzureIoTHubMQTTClient",
    "version": "0.2.3",
    "sentence": "Azure IoT Hub client library for ESP8266 via MQTT protocol."
  },
  {
    "name": "BBE IoT Class Library",
    "version": "1.0.0",
    "sentence": "This is the C++ class library for students' use in IoT class to control smart systems."
  },
  {
    "name": "BBQ10Keyboard",
    "version": "1.1.0",
    "sentence": "Library for using the BBQ10Keyboard PMOD"
  },
  {
    "name": "BDSP",
    "version": "0.1.1",
    "sentence": "The library implements a binary data separation protocol."
  },
  {
    "name": "BGWiFiConfig",
    "version": "1.1.0",
    "sentence": "BGWiFiConfig是一个为esp8266和esp32设计的简单易用Arduino配网库。"
  },
  {
    "name": "BH1730",
    "version": "1.0.0",
    "sentence": "An easy to use library for reading light values from the BH1730 light sensor"
  },
  {
    "name": "BH1750",
    "version": "1.3.0",
    "sentence": "Arduino library for the digital light sensor breakout boards containing the BH1750FVI IC"
  },
  {
    "name": "BH1750FVI",
    "version": "1.1.1",
    "sentence": "Enables reading the digital light sensor"
  },
  {
    "name": "BH1750FVI_RT",
    "version": "0.3.2",
    "sentence": "Arduino library for BH1750FVI (GY-30) lux sensor"
  },
  {
    "name": "BH1750_WE",
    "version": "1.1.10",
    "sentence": "An Arduino library for the BH1750 light intensity sensor."
  },
  {
    "name": "BIP66",
    "version": "0.3.2",
    "sentence": "A simple Bitcoin BIP66 Implementation in C++ for the ARK Ecosystem."
  },
  {
    "name": "BLE SDK for Arduino",
    "version": "1.0.1",
    "sentence": "Nordic BLE SDK for Arduino for nRF8001 products such as the BLE Shield, Blend and Blend Micro."
  },
  {
    "name": "BLE-MIDI",
    "version": "2.2.0",
    "sentence": "BLE-MIDI I/Os for Arduino"
  },
  {
    "name": "BLEPeripheral",
    "version": "0.4.0",
    "sentence": "An Arduino library for creating custom BLE peripherals."
  },
  {
    "name": "BLESensorGateway",
    "version": "1.0.0",
    "sentence": "allows to read data from a local BLE sensor and send it to Arduino Cloud and viceversa."
  },
  {
    "name": "BLESerial",
    "version": "1.1.0",
    "sentence": "A library to communicate with BLE Serial Modules"
  },
  {
    "name": "BLVD20KM_asukiaaa",
    "version": "1.3.2",
    "sentence": "It controls BLVD20KM or BLVD40NM"
  },
  {
    "name": "BM12O2021-A",
    "version": "1.0.1",
    "sentence": "Arduino library for 9-bit UART access to the BM12O2021-A/BMD12K202 that NMOS Driver Module"
  },
  {
    "name": "BM12O2321-A",
    "version": "1.0.1",
    "sentence": "Arduino library for 9-bit UART access to the BM12O2321-A/BMD12K232 that H-bridge Drive Module"
  },
  {
    "name": "BM2102-9x-1",
    "version": "1.0.1",
    "sentence": "Arduino library for UART and I2C access to the BM2102-9x-1/BMC21M0x1 that Sub-1G OOK Transmitter Transparent Transmission Module"
  },
  {
    "name": "BM22S2021-1",
    "version": "1.0.1",
    "sentence": "Arduino library for UART access to the BM22S2021-1/BMA26M202 that Smoke Detector Digital Sensor"
  },
  {
    "name": "BM22S3021-1",
    "version": "1.0.1",
    "sentence": "Arduino library for UART access to the BM22S3021-1/BMA36M302 that Semiconductor Gas Detector Module"
  },
  {
    "name": "BM22S3031-1",
    "version": "1.0.1",
    "sentence": "Arduino library for UART access to the BM22S3031-1/BMA36M303 that Catalytic Gas Detector Module"
  },
  {
    "name": "BM22S3221-1",
    "version": "1.0.1",
    "sentence": "Arduino library for UART access to the BM22S3221-1/BMA56M322 that CO Detection Module"
  },
  {
    "name": "BM22S3421-1",
    "version": "1.0.1",
    "sentence": "Arduino library for UART access to the BM22S3421-1/BMA34M421 that Alcohol Detector Module"
  },
  {
    "name": "BM22S4221-1",
    "version": "1.0.1",
    "sentence": "Arduino library for UART access to the BM22S4221-1/BMA46M422 that PIR Detector Module"
  },
  {
    "name": "BM2302-9x-1",
    "version": "1.0.1",
    "sentence": "Arduino library for UART and I2C access to the BM2302-9x-1/BMC23M0x1 that Sub-1G OOK Receiver Transparent Transmission Module"
  },
  {
    "name": "BM25S2021-1",
    "version": "1.0.1",
    "sentence": "Arduino library for I2C and OneWire access to the BM25S2021-1/BME33M251 that Temperature and Humidity Mdoule"
  },
  {
    "name": "BM25S3221-1",
    "version": "1.0.1",
    "sentence": "Arduino library for UART access the BM25S3221-1/BME25K322 that Laser Dust Detection Module"
  },
  {
    "name": "BM25S3321-1",
    "version": "1.0.1",
    "sentence": "Arduino library for UART access the BM25S3321-1/BME58M332 that CO2 Detector Digital Module"
  },
  {
    "name": "BM25S3421-1",
    "version": "1.0.1",
    "sentence": "Arduino library for UART access to the BM25S3421-1/BME53M421 that VOC Detection Module"
  },
  {
    "name": "BM32O2531-A",
    "version": "1.0.1",
    "sentence": "Arduino library for 9-bit UART access to the BM32O2531-A/BMD32K253 that LCD Module"
  },
  {
    "name": "BM32S2031-1",
    "version": "1.0.2",
    "sentence": "Arduino library for UART access to the BM32S2031-1/BMS31M001 that Second Generation Proximity Sensing Module."
  },
  {
    "name": "BM32S3021-1",
    "version": "1.0.3",
    "sentence": "Arduino library for UART access to the BM32S3021-1/BMS31M002 that 1D Infrared Gesture Control Digital Module."
  },
  {
    "name": "BM42S5321-1",
    "version": "1.0.1",
    "sentence": "Arduino library for I2C/UART access to the BM42S5321-1/BML36K532 that Laser Ranging Module"
  },
  {
    "name": "BM52D5021-1",
    "version": "1.0.1",
    "sentence": "Arduino library for  BM52D5021-1/BMN31K502 that Microporous Atomiser Module"
  },
  {
    "name": "BM52D5121-1",
    "version": "1.0.1",
    "sentence": "Arduino library for  BM52D5121-1/BMN31K512 that Low Power Atomiser Module"
  },
  {
    "name": "BM62S2201-1",
    "version": "1.0.1",
    "sentence": "Arduino library for I2C  or UART access to the BM62S2201-1/BME21M621 that Air Pressure Module"
  },
  {
    "name": "BM64 Library",
    "version": "1.1.2",
    "sentence": "BM64/BM62 Library for Arduino"
  },
  {
    "name": "BM7701-00-1",
    "version": "1.0.2",
    "sentence": "Arduino library for UART access to the BM7701-00-1/BMC77M001 that Bluetooth 5.2 BLE module"
  },
  {
    "name": "BM92S2021-A",
    "version": "1.0.1",
    "sentence": "Arduino library for 9-bit UART access to the BM92S2021-A/BMA92K202 that Color Sensor Module"
  },
  {
    "name": "BM92S2222-A",
    "version": "1.0.1",
    "sentence": "Arduino library for the BM92S2222-A/BMA92K222 that Fingerprint Module."
  },
  {
    "name": "BMB22M210",
    "version": "1.0.3",
    "sentence": "Arduino library for UART access to the BMB22M210/BMB22T101 UART Expansion Module"
  },
  {
    "name": "BMC",
    "version": "2.2.5",
    "sentence": "Fully featured MIDI Controller Library with a Companion Editor App for 32-bit Teensy boards, Requires Teensyduino."
  },
  {
    "name": "BMC11T001",
    "version": "1.0.2",
    "sentence": "Arduino library for UART access to the BMC11T001 that NFC Card Reader Shield"
  },
  {
    "name": "BMC36M0x1",
    "version": "1.0.2",
    "sentence": "Arduino library for  UART access to the BMC36M0x1 that Sub-1GHz FSK Transceiver Transparent Transmission Module"
  },
  {
    "name": "BMC56M001",
    "version": "1.0.2",
    "sentence": "Arduino library for UART access to the BMC56M001 that 2.4G GFSK Transceiver Transparent Transmission Module"
  },
  {
    "name": "BMC81M001",
    "version": "1.0.4",
    "sentence": "Arduino library for UART access to the BMC81M001 that WIFI Module"
  },
  {
    "name": "BMD11M134",
    "version": "1.0.2",
    "sentence": "Arduino library for I2C access to the BMD11M134 that 4-Digit Digital Tube Module"
  },
  {
    "name": "BMD26M088",
    "version": "1.0.3",
    "sentence": "Arduino library for I2C access to the BMD26M088 that RGB LED 8×8 Module"
  },
  {
    "name": "BMD31M090",
    "version": "1.0.2",
    "sentence": "Arduino library for I2C access to the BMD31M090 that 0.96 inch OLED Display Module"
  },
  {
    "name": "BMD58T280",
    "version": "1.0.4",
    "sentence": "Arduino library for SPI or EBI access to the BMD58T280 that 2.8 inch TFT-LCD Display Shield"
  },
  {
    "name": "BME280",
    "version": "3.0.0",
    "sentence": "Provides a library for reading and interpreting Bosch BME280 environmental sensor data over I2C, SPI or Sw SPI."
  },
  {
    "name": "BME280_Arduino_I2C",
    "version": "1.1.1",
    "sentence": "A simple library to recive data from BME280 sensor over I2C interface"
  },
  {
    "name": "BME280_Mini",
    "version": "1.0.0",
    "sentence": "A very lightweight library to read data from a Bosch BME280 sensor over an I2C interface"
  },
  {
    "name": "BME280_Zanshin",
    "version": "1.0.4",
    "sentence": "Access the Bosch BME280 temperature, humidity and pressure sensor"
  },
  {
    "name": "BME34M101",
    "version": "1.0.1",
    "sentence": "Arduino library for UART access to the BME34M101 that Soil Moisture Detection Module"
  },
  {
    "name": "BME63M001",
    "version": "1.0.2",
    "sentence": "Arduino library for UART access to the BME63M001 that TDS Water Quality Detector Module"
  },
  {
    "name": "BME680",
    "version": "1.0.10",
    "sentence": "Arduino library to access and control the Bosch BME680 sensor and get temperature, humidity, pressure and gas readings."
  },
  {
    "name": "BME68x Sensor library",
    "version": "1.2.40408",
    "sentence": "Bosch Sensortec BME680 and BME688 sensor library"
  },
  {
    "name": "BME82M131",
    "version": "1.0.2",
    "sentence": "Arduino library for I2C access to the BME82M131 that Ambient Light Detection Module"
  },
  {
    "name": "BMH06203",
    "version": "1.0.2",
    "sentence": "Arduino library for I2C access to the BMH06203/BMH63K203 that IR Temperature Module."
  },
  {
    "name": "BMH08002-4",
    "version": "1.0.2",
    "sentence": "Arduino library for UART access to the BMH08002-4/BMH83M002 that Oximeter and Heart Rate Module"
  },
  {
    "name": "BMH12M105",
    "version": "1.0.2",
    "sentence": "Arduino library for I2C or UART access to the BMH12M105 that Weighing Module"
  },
  {
    "name": "BMH23M001",
    "version": "1.0.1",
    "sentence": "Arduino library for I2C access to the BMH23M001 that 24-Bit ADC Module."
  },
  {
    "name": "BMH23M002",
    "version": "1.0.1",
    "sentence": "Arduino library for I2C or SPI access to the BMH23M002 that 24-Bit ADC Module"
  },
  {
    "name": "BMI270_Sensor",
    "version": "0.0.1",
    "sentence": "Library for BMI270 sensor"
  },
  {
    "name": "BMK22M131",
    "version": "1.0.1",
    "sentence": "Arduino library for I2C access to the BMK22M131 that Button-LED Module"
  },
  {
    "name": "BMK52M134",
    "version": "1.0.1",
    "sentence": "Arduino library for I2C access to the BMK52M134 that 4-KEY Capacitive Touch Module"
  },
  {
    "name": "BMK52T016",
    "version": "1.0.2",
    "sentence": "Arduino library for I2C access to the BMK52T016 that 16-Key Capacitive Touch Shield"
  },
  {
    "name": "BMK54T004",
    "version": "1.0.2",
    "sentence": "Arduino library for I2C access to the BMK54T004 that Slide+4-Key Capacitive Touch Shield"
  },
  {
    "name": "BMK56T004",
    "version": "1.0.2",
    "sentence": "Arduino library for I2C access to the BMK56T004 that Wheel+4-Key Capacitive Touch Shield"
  },
  {
    "name": "BML36M001",
    "version": "1.0.3",
    "sentence": "Arduino library for I2C access to the BML36M001 Laser Ranging Module"
  },
  {
    "name": "BMN31K522",
    "version": "1.0.2",
    "sentence": "Arduino library for UART access to the BMN31K522 Atomization Adapter Module"
  },
  {
    "name": "BMP180MI",
    "version": "1.0.1",
    "sentence": "A library for the Bosch Sensortec BMP085 / BMP180 Digital Pressure Sensors."
  },
  {
    "name": "BMP280",
    "version": "1.0.3",
    "sentence": "DFRobot Standard library modified by dvarrel"
  },
  {
    "name": "BMP280_DEV",
    "version": "1.0.21",
    "sentence": "An Arduino compatible, non-blocking, I2C/SPI library for the Bosch BMP280 barometer."
  },
  {
    "name": "BMP388_DEV",
    "version": "1.0.11",
    "sentence": "An Arduino compatible, non-blocking, I2C/SPI library for the Bosch BMP388 barometer."
  },
  {
    "name": "BMP73T102",
    "version": "1.0.1",
    "sentence": "Arduino library for the BMP73T102 that Dual-channel Motor Driver Shield"
  },
  {
    "name": "BMP73T104",
    "version": "1.0.2",
    "sentence": "Arduino library for the BMP73T104 that Four-channel Motor Driver Shield"
  },
  {
    "name": "BMP75M131",
    "version": "1.0.1",
    "sentence": "Arduino library for I2C access to the BMP75M131 that Relay Module"
  },
  {
    "name": "BMS26M833",
    "version": "1.0.1",
    "sentence": "Arduino library for I2C access to the BMS26M833 that Infrared Thermopile Array Mdoule"
  },
  {
    "name": "BMS33M332",
    "version": "1.0.1",
    "sentence": "Arduino library for I2C access to the BMS33M332 that Proximity&Light Mdoule"
  },
  {
    "name": "BMS36T001",
    "version": "1.0.2",
    "sentence": "Arduino library for UART access to the BMS36T001 that IR Proximity Sensing + Motor Driver Shield"
  },
  {
    "name": "BMS56M605",
    "version": "1.0.1",
    "sentence": "Arduino library for I2C access to the BMS56M605 that Gyroscope&Acceleration Mdoule"
  },
  {
    "name": "BMS81M001",
    "version": "1.0.2",
    "sentence": "Arduino library for IIC access to the BMS81M001 that Wake On Shake Module"
  },
  {
    "name": "BMV23M001",
    "version": "1.0.2",
    "sentence": "Arduino library for IIC access to the BMV23M001 that Sound Detector module"
  },
  {
    "name": "BMV31T001",
    "version": "1.0.2",
    "sentence": "Arduino library for one-wire access to the BMV31T001 that Voice Playback Shield"
  },
  {
    "name": "BMV36T001",
    "version": "1.0.1",
    "sentence": "Arduino library for SPI access to the BMV36T001 that Record and Playback Shield"
  },
  {
    "name": "BMV51T001",
    "version": "1.0.2",
    "sentence": "Arduino library for UART access to the BMV51T001 that MIDI Shield"
  },
  {
    "name": "BMV56T123",
    "version": "1.0.2",
    "sentence": "Arduino library for UART access to the BMV56T123 that Creative Music Touch Shield"
  },
  {
    "name": "BMx280MI",
    "version": "1.2.3",
    "sentence": "A library for the Bosch Sensortec BME280 and BMP280 Digital Pressure Sensors."
  },
  {
    "name": "BNO055",
    "version": "1.2.1",
    "sentence": "Allows to use the IMU MKR Shield"
  },
  {
    "name": "BNO055SimplePacketComs",
    "version": "0.4.0",
    "sentence": "Serve the BNo055 sensor using a SimplePacketComs Server."
  },
  {
    "name": "BOF-Bling_On_ofF",
    "version": "1.0.0",
    "sentence": "Arduino library for playing with relay, LED, and other On/OFF."
  },
  {
    "name": "BPLib",
    "version": "1.0.0",
    "sentence": "This library simplifies using the RN-42 Bluetooth Module"
  },
  {
    "name": "BQ25887",
    "version": "0.1.2",
    "sentence": "Library for the BQ25887 2S Lithium Battery Charger"
  },
  {
    "name": "BQ25896",
    "version": "1.0.0",
    "sentence": "Arduino library for BQ25896 single-Cell Battery Charger"
  },
  {
    "name": "BQ76952",
    "version": "1.1.1",
    "sentence": "TI-BQ76952 BMS IC library for Arduino"
  },
  {
    "name": "BRAINZY",
    "version": "1.0.1",
    "sentence": "A library that makes coding user-friendly for programming robots."
  },
  {
    "name": "BSEC Software Library",
    "version": "1.8.1492",
    "sentence": "Bosch Sensortec Environmental Cluster (BSEC) Software library"
  },
  {
    "name": "BSON",
    "version": "2.0.5",
    "sentence": "Binary JSON packet builder for Arduino"
  },
  {
    "name": "BTLE",
    "version": "1.0.0",
    "sentence": "Arduino library for basic Bluetooth LE communication."
  },
  {
    "name": "BTS7960",
    "version": "1.0.0",
    "sentence": "Library for BTS7960 Dual H-Bridge 43A DC Motor controller"
  },
  {
    "name": "BTS7960_Motordriver",
    "version": "1.0.0",
    "sentence": "A library that helps control a brushed DC motor using BTS7960 motor driver easy."
  },
  {
    "name": "BUCO-PI",
    "version": "0.0.1",
    "sentence": "A library to simplify creating, operating, and using your DIY Internet of Things devices using BUCO PI devices."
  },
  {
    "name": "BY8X01-16P Audio Module Library",
    "version": "1.0.8",
    "sentence": "Library to control a BY8001-16P or BY83001-16P audio module from an Arduino board."
  },
  {
    "name": "Babelduino",
    "version": "0.5.0",
    "sentence": "A library that allows writing and highlighting code in local language."
  },
  {
    "name": "BackSeatDriver",
    "version": "1.0.1",
    "sentence": "Simple move and turn semantics for self-driving vehicles."
  },
  {
    "name": "BackgroundAudio",
    "version": "1.3.1",
    "sentence": "Plays MP3, AAC, and WAV via an IRQ based mechanism to allow \"multitasking\" while playing"
  },
  {
    "name": "Balboa Spa communications",
    "version": "1.0.3",
    "sentence": "Use Arduino to control your BalBoa Spa Pack."
  },
  {
    "name": "Balboa32U4",
    "version": "1.1.2",
    "sentence": "Balboa 32U4 Arduino library"
  },
  {
    "name": "BaleMessengerBot_Arduino",
    "version": "0.1.0",
    "sentence": "Arduino Bale Bot library."
  },
  {
    "name": "Ballvalve",
    "version": "1.1.1",
    "sentence": "A library to control 5 wire electric ball valves like the US Solid MSV-00015."
  },
  {
    "name": "BalmIot",
    "version": "1.0.0",
    "sentence": "Library to easily make  GET and UP  requests to a BALM IOT."
  },
  {
    "name": "Bang",
    "version": "1.0.1",
    "sentence": "Use the command line interface of your host machine as a 'Service' for your Arduino!"
  },
  {
    "name": "BanglaDuino",
    "version": "1.0.2",
    "sentence": "This library gives power to your Arduino to write in Bangla."
  },
  {
    "name": "BanglaText",
    "version": "1.0.0",
    "sentence": "Bangla text renderer in esp supported displays for ESP boards, by mamunul"
  },
  {
    "name": "BarcodeGFX",
    "version": "1.0.0",
    "sentence": "Draw barcodes on displays compatible with Adafruit GFX."
  },
  {
    "name": "BareBoneSim800",
    "version": "1.25.0",
    "sentence": "A BareBone Arduino Library For SIM800 Modules"
  },
  {
    "name": "BaroLibrary",
    "version": "1.0.0",
    "sentence": "Library for Measurement Specialties MS5637-02BA03 Altimeter/Pressure sensor (including Freetronics BARO module)."
  },
  {
    "name": "Bas.Button",
    "version": "1.2.1",
    "sentence": "A simple button class that calls a callback function when pressed."
  },
  {
    "name": "Bas.CallbackCaller",
    "version": "1.0.0",
    "sentence": "A class that encapsulates the registering and calling of a callback function."
  },
  {
    "name": "Bas.SinglePinDevice",
    "version": "1.0.0",
    "sentence": "A class for simple devices that can be turned on or off by writing to a single pin."
  },
  {
    "name": "Base32-Decode",
    "version": "1.0.1",
    "sentence": "Base32 decoder; able to handle both binary and string encoded data."
  },
  {
    "name": "Base64",
    "version": "1.0.2",
    "sentence": "A Base64 library for Arduino"
  },
  {
    "name": "Basecamp",
    "version": "0.1.8",
    "sentence": "A basic IoT library for the ESP32"
  },
  {
    "name": "BasicColorLedControl",
    "version": "1.0.0",
    "sentence": "This is a tiny and clearly arranged Arduino library for the basic RGB LED functionalities."
  },
  {
    "name": "BasicEncoder",
    "version": "1.1.4",
    "sentence": "BasicEncoder counts pulses from one or more simple rotary encoder control knobs."
  },
  {
    "name": "BasicLinearAlgebra",
    "version": "5.1.0",
    "sentence": "A library for representing matrices and doing matrix math on arduino"
  },
  {
    "name": "BasicLinkedList",
    "version": "1.0.0",
    "sentence": "A templated class for creating dynamic Linked Lists. A Linked List is a Linked List where each node points to the next node in the list."
  },
  {
    "name": "BasicTag",
    "version": "1.3.2",
    "sentence": "Functional C Library for abstracting variables as tags."
  },
  {
    "name": "BasicTimer",
    "version": "1.0.2",
    "sentence": "Basic Timer Interface"
  },
  {
    "name": "BasicTinkering",
    "version": "1.0.0",
    "sentence": "A collection of wrapper classes for commonly used electronic components."
  },
  {
    "name": "BasicsLibrary",
    "version": "1.1.0",
    "sentence": "Library for beginners with examples."
  },
  {
    "name": "Batflow",
    "version": "1.0.0",
    "sentence": "Battery lookup"
  },
  {
    "name": "Battery Sense",
    "version": "1.2.0",
    "sentence": "Arduino battery sensing library"
  },
  {
    "name": "BatteryMeter",
    "version": "1.0.0",
    "sentence": "A library for reading a voltage from a battery and displaying the results."
  },
  {
    "name": "Battery_18650_Stats",
    "version": "1.0.0",
    "sentence": "Library to calculate 18650 charge level"
  },
  {
    "name": "Battery_Shield",
    "version": "1.0.6",
    "sentence": "Библиотека для работы с Battery Shield - источником автономного питания (ИАП)."
  },
  {
    "name": "BaudotCode",
    "version": "1.0.1",
    "sentence": "Easily encode and decode ITA-2 5 bit Baudot code for for RTTY on Arduino"
  },
  {
    "name": "BeShell",
    "version": "0.3.4",
    "sentence": "A JavaScript framework for ESP32 Platform"
  },
  {
    "name": "Beacon",
    "version": "1.0.0",
    "sentence": "An AMX-style Ethernet beacon, allowing for remote discovery."
  },
  {
    "name": "BeaconNano",
    "version": "1.0.0",
    "sentence": "Create a Beacon from an Arduino Nano Ble"
  },
  {
    "name": "BeeDataLogger",
    "version": "3.0.0",
    "sentence": "Example libraries for the Bee Data Logger"
  },
  {
    "name": "BeeMotionS3",
    "version": "3.0.0",
    "sentence": "Example libraries for the Bee Motion S3"
  },
  {
    "name": "BeeS3",
    "version": "3.0.0",
    "sentence": "Helper library for Bee S3 Board"
  },
  {
    "name": "Beelan LoRaWAN",
    "version": "2.5.0",
    "sentence": "LoRaWAN Arduino Library for standalone LoRaWAN modules class A and C with a simple API."
  },
  {
    "name": "Benchmark",
    "version": "1.0.2",
    "sentence": "Measure code execution time"
  },
  {
    "name": "Better Joystick",
    "version": "1.0.2",
    "sentence": "A library that handles and processes inputs from dual-axis Arduino joysticks."
  },
  {
    "name": "BetterOTA",
    "version": "1.2.2",
    "sentence": "Easy to use Over The Air Code Uploading and Terminal for the ESP8266 and ESP32."
  },
  {
    "name": "BetterWiFiNINA",
    "version": "1.4.1",
    "sentence": "An improved fork of WiFiNINA library"
  },
  {
    "name": "Bifrost library for HC-SR04",
    "version": "2.0.0",
    "sentence": "A library for the HC-SR04 ultrasonic distance sensor."
  },
  {
    "name": "BigCrystal",
    "version": "2.0.1",
    "sentence": "A library that displays double height characters on LCD displays."
  },
  {
    "name": "BigFont01",
    "version": "1.0.3",
    "sentence": "Library for displaying large characters on LCD character displays using the HD44780 driver."
  },
  {
    "name": "BigFont01_I2C",
    "version": "1.0.4",
    "sentence": "Library for displaying large characters on LCD character displays using the HD44780 driver."
  },
  {
    "name": "BigFont02",
    "version": "1.0.1",
    "sentence": "Library for displaying large characters on LCD character displays using the HD44780 driver."
  },
  {
    "name": "BigFont02_I2C",
    "version": "1.0.2",
    "sentence": "Library for displaying large characters on LCD character displays using the HD44780 driver."
  },
  {
    "name": "BigNums2x2",
    "version": "1.0.3",
    "sentence": "Creates a set of 2x2 character Big Numbers for a 2x16 character LCD."
  },
  {
    "name": "Bind",
    "version": "0.2.3",
    "sentence": "A UI toolkit for arduino."
  },
  {
    "name": "BioData",
    "version": "0.1.0",
    "sentence": "Interpret biological signals in real-time."
  },
  {
    "name": "BirdhouseSDK",
    "version": "1.0.0",
    "sentence": "An Arduino library to easy control lots of relays effects, buttons with debouncer, analog indicators and more"
  },
  {
    "name": "BistableRelay",
    "version": "1.0.0",
    "sentence": "A simple library to control a bistable relay with set and reset pins."
  },
  {
    "name": "BitArray",
    "version": "0.2.8",
    "sentence": "Arduino library for compact array of objects with a size expressed in bits."
  },
  {
    "name": "BitBang_I2C",
    "version": "2.2.1",
    "sentence": "Bit-bang the I2C protocol on any 2 GPIO pins on any system."
  },
  {
    "name": "BitBool",
    "version": "1.2.0",
    "sentence": "The ultimate bit manipulation tool."
  },
  {
    "name": "BitFlash_Client",
    "version": "1.0.0",
    "sentence": "OTA firmware update library for ESP32"
  },
  {
    "name": "BitPack",
    "version": "1.3.5",
    "sentence": "Library for packing bit flags into byte array"
  },
  {
    "name": "BitReader",
    "version": "1.3.0",
    "sentence": "The BitReader library is an arduino library that allows one to read or write data which is not aligned on 8, 16 or 32 bits variables."
  },
  {
    "name": "Bitcraze PMW3901",
    "version": "1.2.0",
    "sentence": "PMW3901 Optical flow sensor driver."
  },
  {
    "name": "BitkitRobit",
    "version": "1.0.1",
    "sentence": "Arduino library for Bitkit Robit."
  },
  {
    "name": "Bits and Droids flight sim library",
    "version": "1.6.16",
    "sentence": "Use serial communication to control Microsoft Flight Simulator 2020."
  },
  {
    "name": "BlaeckSerial",
    "version": "4.3.1",
    "sentence": "A simple library to send binary (sensor) data via Serial port to your PC."
  },
  {
    "name": "BlaeckTCP",
    "version": "3.0.0",
    "sentence": "A simple library to send binary (sensor) data via Ethernet/Wifi to your PC."
  },
  {
    "name": "Bleeper",
    "version": "1.1.0",
    "sentence": "A library to store generic configurations."
  },
  {
    "name": "Bleeping Library",
    "version": "0.0.1",
    "sentence": "Simple BLE ESP Provisioning and Configuration"
  },
  {
    "name": "BlenderServoAnimation",
    "version": "2.0.0",
    "sentence": "Library to control servos based on an exported Blender animation."
  },
  {
    "name": "BlinkCode Library",
    "version": "0.1.0",
    "sentence": "Asynchronous BlinkCode library for indicating flash fault codes."
  },
  {
    "name": "BlinkControl",
    "version": "1.1.0",
    "sentence": "This is an Arduino/ESP32 module for easily manage multiple LED on/off, blinking or Buzzer beats with different pattern."
  },
  {
    "name": "BlinkSuite",
    "version": "1.0.0",
    "sentence": "A library for blinking pins on and off or in a sequence."
  },
  {
    "name": "Blinkenlight",
    "version": "2.3.0",
    "sentence": "Supercharge your status LEDs / beepers"
  },
  {
    "name": "Blinker",
    "version": "0.3.10230510",
    "sentence": "Build a easy way for your IoT project."
  },
  {
    "name": "Blinker_PMSX003ST",
    "version": "1.0.0",
    "sentence": "Arduino library for Plantower PMSX003ST family sensors."
  },
  {
    "name": "BlockNot",
    "version": "2.3.0",
    "sentence": "BlockNot gives you non-blocking timers with simplicity."
  },
  {
    "name": "BlueDisplay",
    "version": "4.0.1",
    "sentence": "This library enables an Android smartphone or tablet to act as a graphical display for your Arduino.<br/>"
  },
  {
    "name": "BlueDot BMA400 Library",
    "version": "1.0.0",
    "sentence": "BlueDot library for BMA400 sensors."
  },
  {
    "name": "BlueDot BME280 Library",
    "version": "1.0.9",
    "sentence": "BlueDot library for BME280 sensors."
  },
  {
    "name": "BlueDot BME280 TSL2591",
    "version": "1.0.4",
    "sentence": "BlueDot library for BME280 and TSL2591 sensors."
  },
  {
    "name": "BlueDot SGP40 SHT40",
    "version": "1.0.2",
    "sentence": "BlueDot library for SGP40 and SHT40 sensors."
  },
  {
    "name": "BlueFairy",
    "version": "1.0.0",
    "sentence": "Task Scheduler, Keyboard Control, Machine State"
  },
  {
    "name": "BlueRobotics Arduino_I2C_ESC Library",
    "version": "1.0.0",
    "sentence": "A library for I2C based control of BlueRobotics ESCs"
  },
  {
    "name": "BlueRobotics Keller LD Library",
    "version": "1.1.2",
    "sentence": "A simple and easy library for the Keller LD series pressure/depth sensors"
  },
  {
    "name": "BlueRobotics MS5837 Library",
    "version": "1.1.1",
    "sentence": "A simple and easy library for the MS5837 pressure/depth sensor"
  },
  {
    "name": "BlueRobotics TSYS01 Library",
    "version": "1.0.1",
    "sentence": "A simple and easy library for the TSYS01 temperature sensor"
  },
  {
    "name": "BlueVGA Library for BluePill",
    "version": "0.1.3",
    "sentence": "VGA library for STM32F103C8T6 (BluePill) that can manipulate a 224x240 pixels with 8x8 Tiles or Characters from a user defined bitmap font"
  },
  {
    "name": "Bluebird",
    "version": "0.0.2",
    "sentence": "All in one library to control Teknikio's Bluebird board."
  },
  {
    "name": "Bluepad32 for NINA-W10 boards",
    "version": "1.3.5",
    "sentence": "Enables gamepad support for NINA-based boards like the Nano RP2040 Connect, MKR WiFi 1010, MKR VIDOR 4000, UNO WiFi Rev.2 and Nano 33 IoT."
  },
  {
    "name": "Blues Notecard Environment Variable Manager",
    "version": "1.0.2",
    "sentence": "A utility class to support usage and management of Notecard-based environment variables."
  },
  {
    "name": "Blues Wireless Notecard",
    "version": "1.6.3",
    "sentence": "An easy to use Notecard Library for Arduino."
  },
  {
    "name": "Blues Wireless Notecard Auxiliary Wi-Fi",
    "version": "1.0.1",
    "sentence": "A utility class to support external Wi-Fi operations."
  },
  {
    "name": "Blues Wireless Notecard Pseudo Sensor",
    "version": "1.1.0",
    "sentence": "Sensor class used for Notecard testing and examples."
  },
  {
    "name": "Blues-Minimal-I2C",
    "version": "0.0.4",
    "sentence": "Blues-Minimal-I2C"
  },
  {
    "name": "BluetoothSerial",
    "version": "1.1.0",
    "sentence": "Handles the Bluetooth Serial connection to BluetoothSerial Connect iOS app."
  },
  {
    "name": "BluetoothTPMS",
    "version": "1.0.1",
    "sentence": "Bluetooth TPMS Library for Arduino"
  },
  {
    "name": "BluetoothTerminal",
    "version": "0.3.0",
    "sentence": "A library to implement serial-like communication over BLE."
  },
  {
    "name": "Bluewhale",
    "version": "1.0.4",
    "sentence": "GameCube comms library using the RP2040s PIO"
  },
  {
    "name": "Blynk",
    "version": "1.3.2",
    "sentence": "Build a smartphone app for your project in minutes!"
  },
  {
    "name": "BlynkESP32_BT_WF",
    "version": "1.2.2",
    "sentence": "Enable inclusion of both ESP32 Blynk BT/BLE and WiFi libraries. Then select one at reboot or run both. Eliminate hardcoding your Wifi and Blynk credentials and configuration data saved in either LittleFS, SPIFFS or EEPROM."
  },
  {
    "name": "BlynkEthernet_Manager",
    "version": "1.5.2",
    "sentence": "Simple Ethernet Manager for MultiBlynk for Teensy, SAM DUE, SAMD21, SAMD51, nRF52, ESP32, ESP8266, RP2040-based (Nano_RP2040_Connect, RASPBERRY_PI_PICO) boards, etc. with or without SSL, configuration data saved in ESP8266/ESP32 LittleFS, SPIFFS, nRF52/RP2040 LittleFS/InternalFS, EEPROM, DueFlashStorage or SAMD FlashStorage."
  },
  {
    "name": "BlynkEthernet_STM32_WM",
    "version": "1.2.2",
    "sentence": "Simple Blynk Credentials Manager for STM32 boards using built-in LAN8742A Ethernet, LAN8720, ENC28J60 or W5x00 Ethernet shields, with or without SSL, configuration data saved in EEPROM."
  },
  {
    "name": "BlynkGSM_Manager",
    "version": "1.2.1",
    "sentence": "Simple GSM shield Credentials Manager for Blynk and ESP32 / ESP8266 boards, with or without SSL, configuration data saved in LittleFS / SPIFFS / EEPROM."
  },
  {
    "name": "BlynkGate",
    "version": "1.0.2",
    "sentence": "Connect your IOT Projects to Blynk."
  },
  {
    "name": "BlynkNcpDriver",
    "version": "0.6.3",
    "sentence": "A shared interface to the services provided by Blynk.NCP"
  },
  {
    "name": "Blynk_Async_ESP32_BT_WF",
    "version": "1.2.2",
    "sentence": "Simple WiFiManager for Blynk and ESP32 with or without SSL, configuration data saved in either SPIFFS or EEPROM. Enable inclusion of both ESP32 Blynk BT/BLE and WiFi libraries. Then select one at reboot or run both. Eliminate hardcoding your Wifi and Blynk credentials and configuration data saved in either LittleFS, SPIFFS or EEPROM. Using AsyncWebServer instead of WebServer, with WiFi networks scanning for selection in Configuration Portal."
  },
  {
    "name": "Blynk_Async_GSM_Manager",
    "version": "1.2.1",
    "sentence": "Simple GSM shield Credentials Manager for Blynk and ESP32 / ESP8266 boards, with or without SSL, configuration data saved in LittleFS / SPIFFS / EEPROM."
  },
  {
    "name": "Blynk_Async_WM",
    "version": "1.6.2",
    "sentence": "Simple Async WiFiManager for Blynk and ESP32 (including ESP32-S2, ESP32-C3), ESP8266 with or without SSL, configuration data saved in either LittleFS, SPIFFS or EEPROM. Now working with new ESP8266 core v3.0.1 and ESP32 core v1.0.6"
  },
  {
    "name": "Blynk_Esp8266AT_WM",
    "version": "1.3.1",
    "sentence": "Simple WiFiManager for Blynk with MultiWiFi Credentials, for Mega, SAM DUE, SAMD21, SAMD51, nRF52, STM32F/L/H/G/WB/MP1, Teensy, RP2040-based RASPBERRY_PI_PICO, etc. boards running ESP8266/ESP32-AT shields. Configuration data saved in EEPROM, EEPROM-emulated FlashStorage_STM32 or FlashStorage_SAMD, SAM-DUE DueFlashStorage or nRF52/TP2040 LittleFS."
  },
  {
    "name": "Blynk_Teensy",
    "version": "1.0.1",
    "sentence": "Enable Blynk support of Teensy boards, especially latest Teensy 4.0/4.1, using WiFi, Ethernet, BT/BLE and GMSM/GPRS shields"
  },
  {
    "name": "Blynk_WiFiManager",
    "version": "1.6.2",
    "sentence": "Simple WiFiManager for Blynk and ESP32 (including ESP32-S2, ESP32-C3), ESP8266 with or without SSL, configuration data saved in either LittleFS, SPIFFS or EEPROM. Now working with new ESP8266 core v3.0.0 and ESP32 core v1.0.6"
  },
  {
    "name": "Blynk_WiFiNINA_WM",
    "version": "1.1.2",
    "sentence": "Simple WiFiManager for Blynk and Mega, UNO WiFi Rev2, Teensy, SAM DUE, SAMD21, SAMD51, STM32, nRF52, RP2040-based boards, etc. using WiFiNINA shields, configuration data saved in EEPROM, FlashStorage_SAMD, FlashStorage_STM32, DueFlashStorage, nRF52/RP2040 LittleFS"
  },
  {
    "name": "Bme280",
    "version": "1.0.6",
    "sentence": "Library for Bosch Sensortec BME280 – combined temperature, pressure, humidity sensor."
  },
  {
    "name": "BnrOneAPlus",
    "version": "1.0.1",
    "sentence": "Interfacing Bot´n Roll ONE A+ robot from botnroll.com"
  },
  {
    "name": "Board Identify",
    "version": "0.2.0",
    "sentence": "An Arduino library which allows identification of over 100 different boards/controllers."
  },
  {
    "name": "BobaBlox",
    "version": "2.2.0",
    "sentence": "A library that makes it easy to code simple hardware interactions with the Arduino."
  },
  {
    "name": "Bofu",
    "version": "1.0.0",
    "sentence": "A library to send and receive bofu blinds controller messages."
  },
  {
    "name": "BohleBots_BNO055",
    "version": "1.3.1",
    "sentence": "Library for the BNO055 as easy to use compass."
  },
  {
    "name": "Boho",
    "version": "0.4.0",
    "sentence": "Encryption, authentication, Secure communication."
  },
  {
    "name": "Bolder Flight Systems AMS5812",
    "version": "3.2.3",
    "sentence": "Library for communicating with Analog Microelectronics AMS-5812 pressure transducers."
  },
  {
    "name": "Bolder Flight Systems AMS5915",
    "version": "6.0.3",
    "sentence": "Library for communicating with Analog Microelectronics AMS-5915 pressure transducers."
  },
  {
    "name": "Bolder Flight Systems Ainstein USD1",
    "version": "1.1.3",
    "sentence": "Library for communicating with the Ainstein US-D1 RADAR altimeter."
  },
  {
    "name": "Bolder Flight Systems Airdata Calculations",
    "version": "4.0.0",
    "sentence": "Airdata library."
  },
  {
    "name": "Bolder Flight Systems BME280",
    "version": "5.2.6",
    "sentence": "Library for communicating with the BME280 environment sensor."
  },
  {
    "name": "Bolder Flight Systems BMI088",
    "version": "1.0.1",
    "sentence": "Library for communicating with the Bosch BMI088 6 axis IMU."
  },
  {
    "name": "Bolder Flight Systems Checksum",
    "version": "4.0.0",
    "sentence": "Checksum library."
  },
  {
    "name": "Bolder Flight Systems Circular Buffer",
    "version": "5.0.0",
    "sentence": "Circular buffer library."
  },
  {
    "name": "Bolder Flight Systems Controls",
    "version": "4.0.0",
    "sentence": "Controls library."
  },
  {
    "name": "Bolder Flight Systems Eigen",
    "version": "3.0.2",
    "sentence": "Eigen Matrix Math Library."
  },
  {
    "name": "Bolder Flight Systems Excitation",
    "version": "4.0.0",
    "sentence": "Library of excitation waveforms."
  },
  {
    "name": "Bolder Flight Systems Filter",
    "version": "4.0.0",
    "sentence": "Filter library."
  },
  {
    "name": "Bolder Flight Systems Honeywell HG4930",
    "version": "1.0.0",
    "sentence": "Library for communicating with the Honeywell HG4930 IMU"
  },
  {
    "name": "Bolder Flight Systems Imap",
    "version": "2.3.2",
    "sentence": "Float to integer mapping."
  },
  {
    "name": "Bolder Flight Systems LEB128",
    "version": "2.1.1",
    "sentence": "LEB128 library."
  },
  {
    "name": "Bolder Flight Systems MPU9250",
    "version": "5.6.0",
    "sentence": "Library for communicating with the MPU-9250 and MPU-9255 nine-axis Inertial Measurement Units (IMU)."
  },
  {
    "name": "Bolder Flight Systems MS4525",
    "version": "1.1.3",
    "sentence": "Library for communicating with MS4525DO pressure transducers."
  },
  {
    "name": "Bolder Flight Systems Message Framing",
    "version": "3.2.0",
    "sentence": "Message framing library."
  },
  {
    "name": "Bolder Flight Systems PWM",
    "version": "6.0.2",
    "sentence": "Library for sending commands to PWM servos."
  },
  {
    "name": "Bolder Flight Systems Polytools",
    "version": "4.1.0",
    "sentence": "Polynomial fitting and evaluation."
  },
  {
    "name": "Bolder Flight Systems SBUS",
    "version": "8.1.4",
    "sentence": "Library for communicating with SBUS receivers and servos."
  },
  {
    "name": "Bolder Flight Systems Statistics",
    "version": "4.0.4",
    "sentence": "Stats library."
  },
  {
    "name": "Bolder Flight Systems Terabee",
    "version": "1.0.2",
    "sentence": "Library for communicating with Terabee Evo Hub."
  },
  {
    "name": "Bolder Flight Systems UBLOX",
    "version": "6.0.6",
    "sentence": "Library for communicating with uBlox GPS receivers."
  },
  {
    "name": "Bolder Flight Systems ULEB128",
    "version": "2.1.2",
    "sentence": "ULEB128 library."
  },
  {
    "name": "Bolder Flight Systems Unit Conversions",
    "version": "5.0.0",
    "sentence": "Unit conversion library."
  },
  {
    "name": "Bolder Flight Systems VectorNav",
    "version": "4.0.4",
    "sentence": "Library for communicating with VectorNav IMU and INS sensors."
  },
  {
    "name": "Bonezegei ILI9341",
    "version": "1.1.2",
    "sentence": "Simple Library for ILI9341 LCD Module"
  },
  {
    "name": "Bonezegei LCD1602 I2C",
    "version": "1.0.4",
    "sentence": "HD44780 with PCF8574 I2C"
  },
  {
    "name": "Bonezegei_A4988",
    "version": "1.0.0",
    "sentence": "Stepper Motor Driver (A4988)"
  },
  {
    "name": "Bonezegei_Compute",
    "version": "1.0.0",
    "sentence": "Bonezegei Compute (BZC)"
  },
  {
    "name": "Bonezegei_DHT11",
    "version": "1.0.1",
    "sentence": "DHT11"
  },
  {
    "name": "Bonezegei_DHT22",
    "version": "1.0.0",
    "sentence": "DHT22"
  },
  {
    "name": "Bonezegei_DRV8825",
    "version": "1.0.1",
    "sentence": "Stepper Motor Driver (DRV8825)"
  },
  {
    "name": "Bonezegei_DS1307",
    "version": "1.0.2",
    "sentence": "DS1307 Driver"
  },
  {
    "name": "Bonezegei_DS3231",
    "version": "1.0.2",
    "sentence": "DS3231 Driver"
  },
  {
    "name": "Bonezegei_GL",
    "version": "1.0.3",
    "sentence": "Bonezegei Graphics Library (Beta)"
  },
  {
    "name": "Bonezegei_GPS",
    "version": "1.0.1",
    "sentence": "GPS Library"
  },
  {
    "name": "Bonezegei_GSM",
    "version": "1.0.3",
    "sentence": "GSM Library via Serial Port"
  },
  {
    "name": "Bonezegei_HCSR04",
    "version": "1.0.1",
    "sentence": "Ultrasonic Sensor"
  },
  {
    "name": "Bonezegei_HD44780",
    "version": "1.0.2",
    "sentence": "16 x 2 LCD Library"
  },
  {
    "name": "Bonezegei_I2CScan",
    "version": "1.0.5",
    "sentence": "Scans I2C device from 0 to 255 and show the address of active devices"
  },
  {
    "name": "Bonezegei_ILI9341v2",
    "version": "1.0.6",
    "sentence": "ILI9341 Driver"
  },
  {
    "name": "Bonezegei_LCD2004_I2C",
    "version": "1.0.4",
    "sentence": "HD44780 with PCF8574 I2C"
  },
  {
    "name": "Bonezegei_List",
    "version": "1.0.0",
    "sentence": "Simple List Class"
  },
  {
    "name": "Bonezegei_PCA9685",
    "version": "1.0.2",
    "sentence": "I2C PWM Expander"
  },
  {
    "name": "Bonezegei_PCF8574",
    "version": "1.0.1",
    "sentence": "PCF8574 driver"
  },
  {
    "name": "Bonezegei_Printf",
    "version": "1.0.1",
    "sentence": "Simple Printf"
  },
  {
    "name": "Bonezegei_Protocol",
    "version": "1.0.2",
    "sentence": "Bonezegei Protocol (BZP)"
  },
  {
    "name": "Bonezegei_RS485",
    "version": "1.0.0",
    "sentence": "RS485 to UART"
  },
  {
    "name": "Bonezegei_SSD1306",
    "version": "1.0.6",
    "sentence": "OLED Library"
  },
  {
    "name": "Bonezegei_Search",
    "version": "1.0.6",
    "sentence": "Simple Array keyword Search"
  },
  {
    "name": "Bonezegei_SoftSerial",
    "version": "1.0.4",
    "sentence": "Software Serial Beta"
  },
  {
    "name": "Bonezegei_ULN2003_Stepper",
    "version": "1.0.1",
    "sentence": "Stepper Motor Driver Library"
  },
  {
    "name": "Bonezegei_Utility",
    "version": "1.1.8",
    "sentence": "Simple Utility for Bonezegei Libraries"
  },
  {
    "name": "Bonezegei_WS2812",
    "version": "1.0.4",
    "sentence": "WS2812"
  },
  {
    "name": "Bonezegei_XPT2046",
    "version": "1.0.1",
    "sentence": "Simple Library XPT2046 Resistive Touch Controller"
  },
  {
    "name": "Bonezegei_XPT2046v2",
    "version": "1.0.0",
    "sentence": "XPT2046 Driver"
  },
  {
    "name": "Boodskap IoT Digital Twin library",
    "version": "1.0.0",
    "sentence": "Arduino library for sending & receving sensor data"
  },
  {
    "name": "Boodskap Message library",
    "version": "1.0.2",
    "sentence": "Arduino library for sending sensor messages to Boodskap IoT Platform"
  },
  {
    "name": "BoodskapTransceiver",
    "version": "1.0.1",
    "sentence": "Boodskap IoT Platform Arduino Library"
  },
  {
    "name": "BoolArray",
    "version": "0.3.0",
    "sentence": "Arduino library for compact array of booleans of max size 2000 (UNO)."
  },
  {
    "name": "BooleanButton",
    "version": "1.1.0",
    "sentence": "library for monitoring the state, transitions, and timing of a boolean variable, creating a virtual button that emulates a switch."
  },
  {
    "name": "Bootstrapper",
    "version": "1.18.3",
    "sentence": "A client library for MQTT messaging."
  },
  {
    "name": "Bosch_BME280_Arduino",
    "version": "1.1.0",
    "sentence": "C++ Library for the Bosch BME280 Sensor based on the original Bosch Sensor API v3.5.1"
  },
  {
    "name": "BotleticsSIM7000",
    "version": "1.0.6",
    "sentence": "Arduino library for the Botletics SIM7000 Shield and other SIMCom modules"
  },
  {
    "name": "Botly",
    "version": "2.5.0",
    "sentence": "Librarie permettant de piloter le robot Botly développé par l'association La Machinerie"
  },
  {
    "name": "Bounce2",
    "version": "2.71.0",
    "sentence": "Debouncing library for Arduino and Wiring."
  },
  {
    "name": "BowlerCom",
    "version": "3.15.0",
    "sentence": "A library to communicate between an arduino and a computer."
  },
  {
    "name": "Braccio",
    "version": "2.0.4",
    "sentence": "Allows to move each Braccio parts using simple calls."
  },
  {
    "name": "BraccioRobot",
    "version": "1.0.0",
    "sentence": "Braccio Robot controller API."
  },
  {
    "name": "BraccioV2",
    "version": "0.2.1",
    "sentence": "A library that enables more functionality for use with the Tinkerkit Braccio Arm."
  },
  {
    "name": "Brasilino",
    "version": "1.0.2",
    "sentence": "Biblioteca de tradução e facilitação de funções para Arduino em PT-BR"
  },
  {
    "name": "BresserWeatherSensorReceiver",
    "version": "0.31.0",
    "sentence": "Bresser 5-in-1/6-in-1/7-in-1 868 MHz Weather Sensor Radio Receiver for Arduino based on CC1101, SX1276/RFM95W, SX1262 or LR1121."
  },
  {
    "name": "Bridge",
    "version": "1.7.0",
    "sentence": "Enables the communication between the Linux processor and the microcontroller. For Arduino/Genuino Yún, Yún Shield and TRE only."
  },
  {
    "name": "BridgeHttpClient",
    "version": "3.2.1",
    "sentence": "A practical and easy to use generic HTTP client library for the Yun."
  },
  {
    "name": "Brief",
    "version": "1.0.6",
    "sentence": "A scriptable firmware and protocol for interfacing hardware."
  },
  {
    "name": "Brino",
    "version": "1.0.1",
    "sentence": "A biblioteca possibilita o uso de termos em portugues (Brino) para a programacao do arduino."
  },
  {
    "name": "Brushless Servo",
    "version": "1.3.0",
    "sentence": "A library to use Brushless Motors with Servo syntax."
  },
  {
    "name": "Brzo I2C",
    "version": "1.3.3",
    "sentence": "Brzo I2C is a fast I2C Implementation written in Assembly for the esp8266"
  },
  {
    "name": "BufferUtils",
    "version": "3.0.0",
    "sentence": "An Arduino library for working with Buffers."
  },
  {
    "name": "Buffered Oreon SSD1351",
    "version": "2.0.0",
    "sentence": "Library for the OLEDs based on SSD1351"
  },
  {
    "name": "Buffered Streams",
    "version": "1.0.8",
    "sentence": "Implementation of Arduino's Stream class which use internal ring buffers to emulate a pair of connected Streams or a Loopback Stream."
  },
  {
    "name": "Bugtton",
    "version": "1.0.6",
    "sentence": "Fast button debounce library for ATmega328P. Uses registers instead of digitalRead."
  },
  {
    "name": "BusInOut_Arduino",
    "version": "0.1.1",
    "sentence": "BusInOut (mbed style multiple GPIO pins control)"
  },
  {
    "name": "BusRepeater_NXP_Arduino",
    "version": "1.0.4",
    "sentence": "Demo code for PCA9617ADP-ARD"
  },
  {
    "name": "ButtinoRAK",
    "version": "0.1.5",
    "sentence": "Library for the Lualtek Button handler for RAK devices"
  },
  {
    "name": "Button",
    "version": "1.0.0",
    "sentence": "Button is a tiny library to make reading buttons very simple."
  },
  {
    "name": "Button-Arduino",
    "version": "2.0.0",
    "sentence": "This library allows to manage a button."
  },
  {
    "name": "Button2",
    "version": "2.3.4",
    "sentence": "Arduino/ESP library to simplify working with buttons."
  },
  {
    "name": "ButtonClickCheck",
    "version": "1.0.0",
    "sentence": "This is a library for checking the state of a button connected to an Arduino. [Korean]아두이노에 연결된 버튼의 상태를 확인하기 위한 라이브러리입니다."
  },
  {
    "name": "ButtonControl",
    "version": "1.0.0",
    "sentence": "Short clicks, long clicks and double clicks. Click count and button press time."
  },
  {
    "name": "ButtonDebounce",
    "version": "1.0.1",
    "sentence": "A library that makes easy to use button with debounce."
  },
  {
    "name": "ButtonFever",
    "version": "1.0.0",
    "sentence": "Powerful button tools for managing various button events of standalone button or button array."
  },
  {
    "name": "ButtonGestures",
    "version": "2.0.6",
    "sentence": "Use one button for up to 6 different functions using gestures!"
  },
  {
    "name": "ButtonKing",
    "version": "1.0.2",
    "sentence": "Arduino libary for improving the usage of a singe input button."
  },
  {
    "name": "ButtonMatrix",
    "version": "1.0.3",
    "sentence": "ButtonMatrix library for keypads directly connected to the Arduiono/ESP or via external IO"
  },
  {
    "name": "ButtonSuite",
    "version": "2.1.1",
    "sentence": "A library for using a simple mechanical push (momentary) button as a momentary button, a latching button, a counter, an enumerator, and more."
  },
  {
    "name": "ButtonToSwitch",
    "version": "4.0.1",
    "sentence": "Implement simple to complex switches out of simple buttons -or any other momentary digital input signal- this library with an easy consistent API will take care of debouncing, deglitching, toggle on-off, keep activation times in a completely unnatended manner."
  },
  {
    "name": "ButtonToSwitch_ESP32",
    "version": "4.4.0",
    "sentence": "Implement simple to complex switches out of simple buttons, this library with an easy consistent API will take care of debouncing, deglitching, toggle on-off, keep activation times in a completely unnatended manner."
  },
  {
    "name": "Button_SL",
    "version": "1.1.5",
    "sentence": "Button query"
  },
  {
    "name": "Button_TT",
    "version": "1.1.1",
    "sentence": "Library of classes and functions to support drawing buttons on a pixel display."
  },
  {
    "name": "ButtonnIRQ",
    "version": "1.0.1",
    "sentence": "Button function based on IRQ"
  },
  {
    "name": "Buzz",
    "version": "1.0.3",
    "sentence": "AC/static electricity-based motion detection using only the ADC and a wire!"
  },
  {
    "name": "Buzzer",
    "version": "1.0.0",
    "sentence": "Allows Arduino/Genuino boards to simplify the use of the Buzzer."
  },
  {
    "name": "BuzzerManager",
    "version": "2.2.2",
    "sentence": "A library to manage multiple buzzers with flexible beep control."
  },
  {
    "name": "BuzzerMelody",
    "version": "1.1.0",
    "sentence": "This library provides a simple solution for playing one or more melodies on piezoelectric passive buzzers using the arduino core tone function in a non-blocking way."
  },
  {
    "name": "ByteConvert",
    "version": "0.1.3",
    "sentence": "Library for converting variables to bytes and reverse"
  },
  {
    "name": "BytebeamArduino",
    "version": "1.1.0",
    "sentence": "A small Arduino Library for Bytebeam Cloud that just works."
  },
  {
    "name": "Byteduino",
    "version": "0.2.5",
    "sentence": "A light implementation of Obyte cryptocurrency platform (formerly Byteball) for ESP8266 and ESP32"
  },
  {
    "name": "CAGEduino",
    "version": "0.4.0",
    "sentence": "Arduino library for CAGEduino board on CAGEBOT platform."
  },
  {
    "name": "CAN",
    "version": "0.3.1",
    "sentence": "An Arduino library for sending and receiving data using CAN bus."
  },
  {
    "name": "CAN Adafruit Fork",
    "version": "1.2.1",
    "sentence": "An Arduino library for sending and receiving data using CAN bus."
  },
  {
    "name": "CAN_BUS_Shield",
    "version": "2.3.3",
    "sentence": "Seeed Arduino library to control  CAN BUS and CAN BUS FD."
  },
  {
    "name": "CB-HCHO-V4",
    "version": "1.0.0",
    "sentence": "Arduino library to control Cubic CB-HCHO-V4"
  },
  {
    "name": "CBUS",
    "version": "1.2.0",
    "sentence": "Library for MERG CBUS"
  },
  {
    "name": "CBUS2515",
    "version": "1.2.0",
    "sentence": "Library for MERG CBUS using MCP2515, 25625 ICs"
  },
  {
    "name": "CBUSACAN2040",
    "version": "1.2.0",
    "sentence": "Library for MERG CBUS using CAN2040 driver"
  },
  {
    "name": "CBUSBUZZER",
    "version": "1.1.4",
    "sentence": "Arduino library for MERG CBUS buzzer processing"
  },
  {
    "name": "CBUSLED",
    "version": "1.1.8",
    "sentence": "Arduino library for MERG CBUS LED processing"
  },
  {
    "name": "CBUSMCP_CAN",
    "version": "1.2.1",
    "sentence": "Library for MERG CBUS using the MCP_CAN library for MCP2515"
  },
  {
    "name": "CBUSSwitch",
    "version": "1.1.8",
    "sentence": "Arduino library for MERG CBUS pushbutton switch processing"
  },
  {
    "name": "CBUSconfig",
    "version": "1.1.18",
    "sentence": "Arduino library for MERG CBUS module configuration"
  },
  {
    "name": "CBeeper",
    "version": "1.0.0",
    "sentence": "Arduino Beeper Control"
  },
  {
    "name": "CC-Lantern",
    "version": "1.4.3",
    "sentence": "Arduino library for controlling single-wire-based LED pixels and strip."
  },
  {
    "name": "CC1101",
    "version": "1.0.2",
    "sentence": "Arduino library for CC1101 transceiver."
  },
  {
    "name": "CC3000 MDNS",
    "version": "1.0.0",
    "sentence": "Simple multicast DNS name resolution library for Adafruit's CC3000 and Arduino."
  },
  {
    "name": "CCIR476",
    "version": "1.2.1",
    "sentence": "Encode and Decode CCIR476 symbols for SITOR / AMTOR based messages on Arduino"
  },
  {
    "name": "CCS811-Soldered",
    "version": "1.0.0",
    "sentence": "CCS811 Environmental Sensor"
  },
  {
    "name": "CD22M3494EZ",
    "version": "1.0.0",
    "sentence": "A library for controlling the CD22M3494EZ device."
  },
  {
    "name": "CD4511B Seven Segment Display Driver",
    "version": "1.0.0",
    "sentence": "Arduino library that drives seven segment displays using CD4511B chips."
  },
  {
    "name": "CD74HC4067",
    "version": "1.0.2",
    "sentence": "A library for interfacing with the CD74HC4067 Mux."
  },
  {
    "name": "CEClient",
    "version": "0.1.1",
    "sentence": "A library which allows communication with HDMI CEC capable devices."
  },
  {
    "name": "CERP - DF-Robot Wireless GamePad V2.0 for Arduino library",
    "version": "1.0.6",
    "sentence": "Is a lightweight library for DF-Robot Wireless GamePad V2.0 for Arduino"
  },
  {
    "name": "CESmartCamp",
    "version": "12.2.0",
    "sentence": "Made it for CESmartCamp#12"
  },
  {
    "name": "CF Rotary Encoder",
    "version": "1.0.0",
    "sentence": "A library for Arduino that helps interface for Rotary Encoders."
  },
  {
    "name": "CFPushButton",
    "version": "1.0.0",
    "sentence": "A library for Arduino that helps interface for Push Buttons."
  },
  {
    "name": "CFSM",
    "version": "0.3.0",
    "sentence": "A State Design Pattern for State Machines in C-Language."
  },
  {
    "name": "CH32_Deep_Sleep",
    "version": "1.0.0",
    "sentence": "Ease the use of Deep Sleep with autowakeup and with/without wake on interrupt"
  },
  {
    "name": "CH55xSwitchControl",
    "version": "1.1.0",
    "sentence": "A library to automate Nintendo Switch games using CH55x microcontrollers."
  },
  {
    "name": "CH9328-Keyboard",
    "version": "1.0.2",
    "sentence": "USB HID Keyboard using WCH CH9328 chip. It is almost compatible with Arduino Keyboard library."
  },
  {
    "name": "CH9329_Keyboard",
    "version": "1.0.3",
    "sentence": "This library and the CH9329 chip allows an Arduino board without USB capability to act as a keyboard."
  },
  {
    "name": "CHT8305",
    "version": "0.2.2",
    "sentence": "Arduino library for CHT8305 temperature and humidity sensor."
  },
  {
    "name": "CHT8310",
    "version": "0.2.0",
    "sentence": "Arduino library for CHT8310 temperature and humidity sensor."
  },
  {
    "name": "CHT832X",
    "version": "0.1.0",
    "sentence": "Arduino library for CHT832X temperature and humidity sensor."
  },
  {
    "name": "CHx01",
    "version": "1.0.4",
    "sentence": "Allow to read ultrasound data from Invensense CH101, or CH201 devices, detects targets and computes range."
  },
  {
    "name": "CIE-PN532",
    "version": "1.0.0",
    "sentence": "Arduino library for SPI access to the Italian Electronic Identity Card (CIE) with the PN532 NFC reader"
  },
  {
    "name": "CIE1931",
    "version": "1.0.1",
    "sentence": "Arduino library for calculating PWM DCs for a linear LED brightness ramp."
  },
  {
    "name": "CJKit",
    "version": "1.0.5",
    "sentence": "Supporting Library for the CanSat Júnior Kit."
  },
  {
    "name": "CLAIRE",
    "version": "0.1.16",
    "sentence": "API to interface with CLAIRE water management demonstrator at DEIS-AAU."
  },
  {
    "name": "CLed",
    "version": "1.0.0",
    "sentence": "Arduino LED Control"
  },
  {
    "name": "CM1106 I2C",
    "version": "1.0.2",
    "sentence": "Arduino library to control Cubic CM1106 I2C"
  },
  {
    "name": "CMMC Easy",
    "version": "0.0.1",
    "sentence": "CMMC Easy is a library for managing time without delay function"
  },
  {
    "name": "CMMC MQTT Connector",
    "version": "1.3.3",
    "sentence": "MQTT Connector library"
  },
  {
    "name": "CMMC OTA",
    "version": "1.0.5",
    "sentence": "CMMC OTA"
  },
  {
    "name": "CMMC Packet",
    "version": "1.0.1",
    "sentence": "A simple CMMC Packet data structure."
  },
  {
    "name": "CMMC WiFi Connector",
    "version": "3.0.8",
    "sentence": "WiFiConnector by CMMC"
  },
  {
    "name": "CMMC_Interval",
    "version": "0.0.1",
    "sentence": "CMMC_Interval"
  },
  {
    "name": "CMMC_LED",
    "version": "0.0.1",
    "sentence": "An easy led controller"
  },
  {
    "name": "CMMC_NB-IoT",
    "version": "0.0.3",
    "sentence": "CMMC_NB-IoT"
  },
  {
    "name": "CNCShield",
    "version": "2.0.0",
    "sentence": "Lightweight library for the Arduino CNC Shield."
  },
  {
    "name": "CONTROLLINO",
    "version": "3.0.10",
    "sentence": "Support library for CONTROLLINO PLC boards"
  },
  {
    "name": "CPPTasks",
    "version": "0.1.2",
    "sentence": "A simple hardware agnostic library written in C++11 implementing coroutines/state machines"
  },
  {
    "name": "CPUTemp",
    "version": "1.0.2",
    "sentence": "Retrieve the internal temperature of the processor!"
  },
  {
    "name": "CPUVolt",
    "version": "1.0.3",
    "sentence": "Calculate the processors Vcc voltage using only the internal registers"
  },
  {
    "name": "CQRobotTDS",
    "version": "0.1.1",
    "sentence": "Simplify the use of CQRobot TDS sensor."
  },
  {
    "name": "CRC",
    "version": "1.0.3",
    "sentence": "Library for CRC for Arduino"
  },
  {
    "name": "CRC Simula Arduino IDE Library",
    "version": "1.0.0",
    "sentence": "Support Library for Chicago Robotics Simula Boards."
  },
  {
    "name": "CRC VCNL4200 Library",
    "version": "1.1.1",
    "sentence": "Library for control of the Vishay VCNL4200 proximity and ambient light sensor package.  Now includes limited interrupt support."
  },
  {
    "name": "CRC32",
    "version": "2.0.0",
    "sentence": "An Arduino library for calculating a CRC32 checksum."
  },
  {
    "name": "CRCx",
    "version": "0.4.0",
    "sentence": "CRC calculation for Arduino and other C++ programs"
  },
  {
    "name": "CRMX_TimoTwo",
    "version": "0.1.32",
    "sentence": "Provides a library for reading and interpreting CRMX TimoTwo MKR Shield data over SPI."
  },
  {
    "name": "CRMui3",
    "version": "1.4.0",
    "sentence": "CRMui3 WebFramework build a web app (Web UI) for ESP8266 and ESP32 in your project in minutes! / CRMui3 WebFramework для esp8266 и esp32. Позволяет быстро и просто создать веб интерфейс для настройки и управления устройством."
  },
  {
    "name": "CROZONE-VEML6040",
    "version": "0.1.0",
    "sentence": "It is a library for use with the CROZONE VEML6040 module of Crozone Technology Company Limited."
  },
  {
    "name": "CRSF",
    "version": "0.0.1",
    "sentence": "Бібліотека для радіо керованих моделей протоколом CRSF"
  },
  {
    "name": "CRT",
    "version": "1.0.0",
    "sentence": "Bunch of CRT functions for LEDs"
  },
  {
    "name": "CS5464 Arduino",
    "version": "0.1.0",
    "sentence": "CS5464 Energy Monitor Support for Arduino"
  },
  {
    "name": "CS5490",
    "version": "1.2.4",
    "sentence": "A library control an integrated circuit Cirrus Logic - CS5490"
  },
  {
    "name": "CS5530",
    "version": "0.8.0",
    "sentence": "An Arduino library for CS5530 based weight scales."
  },
  {
    "name": "CSE_ArduinoRS485",
    "version": "1.0.13",
    "sentence": "Allows sending and receiving data through the RS-485 interface, using any Arduino-compatible boards."
  },
  {
    "name": "CSE_CircularBuffer",
    "version": "0.0.2",
    "sentence": "Simple circular buffer for all Arduino boards."
  },
  {
    "name": "CSE_GNSS",
    "version": "1.0.1",
    "sentence": "Arduino library for reading and writing NMEA-supported GNSS/GPS modules."
  },
  {
    "name": "CSE_MillisTimer",
    "version": "0.0.1",
    "sentence": "Arduino library for simplifying the use of millis() based timers."
  },
  {
    "name": "CSE_ModbusRTU",
    "version": "0.0.8",
    "sentence": "Arduino library for implementing Modbus RTU communication protocol on Arduino-supported boards."
  },
  {
    "name": "CSE_ZH06",
    "version": "0.0.1",
    "sentence": "Arduino library for reading Winsen ZH06 laser dust sensor."
  },
  {
    "name": "CST816S",
    "version": "1.3.0",
    "sentence": "Capacitive touch screen library"
  },
  {
    "name": "CST816_TouchLib",
    "version": "2.2.0",
    "sentence": "A CST816 touch and gesture library, tested using the LilyGO T-Display ESP32-S3 and T-Display S3 AMOLED. Includes gestures. Includes a rudimentary GUI registration method to aid support for buttons."
  },
  {
    "name": "CSV Parser",
    "version": "1.4.1",
    "sentence": "CSV Parser for Arduino."
  },
  {
    "name": "CSWBattery",
    "version": "0.1.0",
    "sentence": "The library for the diy smartwatch projects, which operates with their batteries."
  },
  {
    "name": "CSWButtons",
    "version": "0.2.0",
    "sentence": "The library for the diy smartwatch projects, which operates with their buttons."
  },
  {
    "name": "CTBot",
    "version": "2.1.14",
    "sentence": "Simple Arduino Telegram BOT library for ESP8266/ESP32"
  },
  {
    "name": "CTC GO CORE",
    "version": "1.4.0",
    "sentence": "All in one library containing examples from lessons and projects for CTC GO! Core Module"
  },
  {
    "name": "CTC GO MOTIONS",
    "version": "1.0.0",
    "sentence": "All in one library containing examples from lessons and projects for CTC GO! Motions Expansion"
  },
  {
    "name": "CTRL",
    "version": "1.5.1",
    "sentence": "Buttons, rotary encoders, potentiometers, leds & multiplexers."
  },
  {
    "name": "CV7OEMFR",
    "version": "3.1.2",
    "sentence": "Enables provisioning."
  },
  {
    "name": "CWLibrary",
    "version": "1.0.1",
    "sentence": "Library to send CW message (Morse) with your custom function and device."
  },
  {
    "name": "CWW Morse Transmit",
    "version": "1.2.1",
    "sentence": "Send Morse Code on a digital I/O pin with optional audio sidetone."
  },
  {
    "name": "CX_Devices",
    "version": "1.0.0",
    "sentence": "Library for getting telemetry from arduino esp8266."
  },
  {
    "name": "CX_MQTT",
    "version": "1.0.0",
    "sentence": "Library for sending telemetry and receiving commands from arduino esp8266 via mqtt."
  },
  {
    "name": "Cabluino",
    "version": "0.0.5",
    "sentence": "A Library establishing a connection between Arduino and Cables using the WebSerial API."
  },
  {
    "name": "CafeIOT",
    "version": "0.1.0",
    "sentence": "CafeIOT library for Eep8266."
  },
  {
    "name": "CafeIot_Arduino",
    "version": "0.2.0",
    "sentence": "CafeIot library for Arduino."
  },
  {
    "name": "CalibratedSpeed",
    "version": "1.0.0",
    "sentence": "Arduino Library for calibrating DC motors"
  },
  {
    "name": "CallMyFunction",
    "version": "0.0.2",
    "sentence": "Arduino library to call function with time restrictions"
  },
  {
    "name": "Callables",
    "version": "1.0.0",
    "sentence": "General Callables API"
  },
  {
    "name": "Callback",
    "version": "1.1.0",
    "sentence": "A simple implementation of Signals and Slots for writing more flexible callbacks"
  },
  {
    "name": "CallbackButton",
    "version": "1.0.0",
    "sentence": "Listen to pushbutton click events on an asynchronous and non-blocking way using callback functions."
  },
  {
    "name": "CallbackHelper",
    "version": "0.1.3",
    "sentence": "Tool to generate std::function like callback APIs without the huge memory footprint of std::function"
  },
  {
    "name": "Calliope Arduino library",
    "version": "0.9.0",
    "sentence": "Arduino library for Calliope mini V1 - V3"
  },
  {
    "name": "Callmebot ESP32",
    "version": "2.0.0",
    "sentence": "Callmebot library for ESP32"
  },
  {
    "name": "Callmebot ESP8266",
    "version": "2.0.0",
    "sentence": "Callmebot library for ESP8266"
  },
  {
    "name": "Camino",
    "version": "1.7.0",
    "sentence": "A library for controlling an Arduino from Python over Serial."
  },
  {
    "name": "CanAirIO Air Quality Sensors Library",
    "version": "0.7.5",
    "sentence": "Air quality particle meter and CO2 sensors manager for multiple models."
  },
  {
    "name": "CanBusData_asukiaaa",
    "version": "1.0.1",
    "sentence": "It defines data frame of CAN bus."
  },
  {
    "name": "CanBusMCP2515_asukiaaa",
    "version": "1.1.1",
    "sentence": "It communicate with MCP2515 or MCP25625 on SPI to use CAN Bus."
  },
  {
    "name": "CanSat Kit Library",
    "version": "1.3.1",
    "sentence": "Library for CanSat Kit."
  },
  {
    "name": "CanSatNeXT",
    "version": "1.1.0",
    "sentence": "A library for using the hardware resources of CanSat NeXT board"
  },
  {
    "name": "CanSatNeXT_GNSS",
    "version": "1.0.2",
    "sentence": "Extension to the CanSatNeXT to add support for the GNSS module"
  },
  {
    "name": "Canon BLE remote",
    "version": "1.0.2",
    "sentence": "[BETA] Canon bluetooth remote control library for Arduino."
  },
  {
    "name": "CapacitiveSensor",
    "version": "0.5.1",
    "sentence": "Create capacitive sensors that can detect touch or proximity."
  },
  {
    "name": "Capacitor",
    "version": "1.1.0",
    "sentence": "Measure capacitance from 0.2pF to 100uF with no external hardware."
  },
  {
    "name": "CaptureTimer",
    "version": "0.9.0",
    "sentence": "Arduino Input Capture Library"
  },
  {
    "name": "Cardinal",
    "version": "1.0.2",
    "sentence": "An Arduino library that takes input in degrees and output a string or integer for the 4, 8, 16, or 32 compass headings (like North, South, East, and West)."
  },
  {
    "name": "Carduino",
    "version": "1.1.0",
    "sentence": "A library for Carduino, the programmable Cardano Logo and epoch countdown counter."
  },
  {
    "name": "CarreraDigitalControlUnit",
    "version": "0.8.4",
    "sentence": "Carrera® DIGITAL 124/132 interface library for Arduino and mbed OS"
  },
  {
    "name": "Cat GFX Thermal Printer Library",
    "version": "0.0.1",
    "sentence": "Adafruit GFX compatible arduino library for using cat thermal printers with the ESP32"
  },
  {
    "name": "CayenneLPP",
    "version": "1.4.0",
    "sentence": "CayenneLPP Arduino Library."
  },
  {
    "name": "CayenneLPPdec",
    "version": "0.2.0",
    "sentence": "CayenneLPP data decoder"
  },
  {
    "name": "CayenneMQTT",
    "version": "1.3.1",
    "sentence": "Connect a device to the Cayenne dashboard using MQTT."
  },
  {
    "name": "Cdrv8833",
    "version": "1.0.1",
    "sentence": "ESP32 class for the TI DRV8833 motor driver. Designed for unipolar (DC) motors only (not stepper)."
  },
  {
    "name": "Ch376msc",
    "version": "1.4.5",
    "sentence": "A library for CH376 file manager control chip."
  },
  {
    "name": "CharDisplay",
    "version": "1.1.2",
    "sentence": "Library for unicode progress pars, bitmap drawing graphics and plots (charts)"
  },
  {
    "name": "Charge n Boost",
    "version": "1.1.0",
    "sentence": "A library for the Charge 'n Boost lithium charger and usb booster"
  },
  {
    "name": "Charset",
    "version": "2.0.1",
    "sentence": "Charset library for Arduino"
  },
  {
    "name": "Chassis",
    "version": "2.1.1",
    "sentence": "Chassis is a C++ library for undercarriage control in robotics."
  },
  {
    "name": "ChatGPT_Client",
    "version": "0.2.2",
    "sentence": "Library for communication with ChatGPT"
  },
  {
    "name": "ChatGPTuino",
    "version": "0.1.0",
    "sentence": "Arduino library for making API calls to OpenAI's chatGPT."
  },
  {
    "name": "CheapLCD",
    "version": "0.9.1",
    "sentence": "A convenience library for using a common LCD shield available from SainSmart, DFRobot, HiLetgo, RobotDyne and others."
  },
  {
    "name": "CheapStepper",
    "version": "0.2.1",
    "sentence": "A library for the cheap but useful 28BYJ-48 5v stepper motor with ULN2003 driver board"
  },
  {
    "name": "CheckDS18B20",
    "version": "1.0.3",
    "sentence": "Check manufacturer of DS18B20 temperature sensors"
  },
  {
    "name": "CheerLights",
    "version": "1.0.4",
    "sentence": "Fetch and use the latest CheerLights color."
  },
  {
    "name": "Chirale_TensorFLowLite",
    "version": "2.0.0",
    "sentence": "Allows you to run machine learning models locally on all Arduino boards with mbed or ESP32 architecture."
  },
  {
    "name": "ChirpSDK",
    "version": "3.4.1",
    "sentence": "Chirp SDK"
  },
  {
    "name": "Chrono",
    "version": "1.2.0",
    "sentence": "Chronometer/stopwatch library that counts the time passed since started."
  },
  {
    "name": "Chronos",
    "version": "1.2.0",
    "sentence": "Easily manipulate date-times to perform scheduling, setup calendars and find points in time that are of interest."
  },
  {
    "name": "ChronosESP32",
    "version": "1.6.0",
    "sentence": "Setup your ESP32 as a smartwatch and connect to Chronos app over BLE."
  },
  {
    "name": "Ciao",
    "version": "0.1.1",
    "sentence": "Enables communication between microcontroller and MIPS cpu. Natively support network communications, terminal (linux) and file access."
  },
  {
    "name": "CipherCode",
    "version": "1.1.2",
    "sentence": "Library with functions to encode texts"
  },
  {
    "name": "Circios Roboter-Steuerung",
    "version": "1.0.0",
    "sentence": "Arduino-Bibliothek zum Ansteuern des \"Circios\" Schulroboters"
  },
  {
    "name": "CircuitPlaygroundGestures",
    "version": "1.0.1",
    "sentence": "Gesture recognizer for the Adafruit Circuit Playground."
  },
  {
    "name": "CircuitsFunBasic",
    "version": "1.0.3",
    "sentence": "Essential basic components library by CircuitsFun."
  },
  {
    "name": "CircuitsFunProjects",
    "version": "1.0.2",
    "sentence": "Beginner friendly projects and project libraries by CircuitsFun"
  },
  {
    "name": "CircularBuffer",
    "version": "1.4.0",
    "sentence": "Arduino circular buffer library"
  },
  {
    "name": "CircularBufferLib",
    "version": "1.0.0",
    "sentence": "CircularBuffer Library"
  },
  {
    "name": "CircularQueue",
    "version": "1.1.0",
    "sentence": "Implementation of Queue Data Structure for Arduino Boards."
  },
  {
    "name": "CirquePinnacle",
    "version": "1.0.1",
    "sentence": "A driver library for interfacing with the Cirque Pinnacle (1CA027) touch controller used in Cirque Glidepoint Circle Trackpads."
  },
  {
    "name": "Clap",
    "version": "1.0.0",
    "sentence": "Library for clap recognition and counting"
  },
  {
    "name": "CleanRTOS",
    "version": "0.0.8",
    "sentence": "Makes use of FreeRTOS on ESP32 much easier and safer."
  },
  {
    "name": "CliTerminal",
    "version": "0.2.0",
    "sentence": "Simple Serial Terminal"
  },
  {
    "name": "ClickButton",
    "version": "1.1.0",
    "sentence": "Effortless handle botton clicks."
  },
  {
    "name": "ClimaStick",
    "version": "1.3.1",
    "sentence": "Arduino ClimaStick v1 & v2 library for the Thinger.io Internet of Things Platform."
  },
  {
    "name": "ClimateGuard CG Anem",
    "version": "1.0.3",
    "sentence": "Library for communicating with the thermoanemometer CG-Anem."
  },
  {
    "name": "ClimateGuard RadSens",
    "version": "1.1.3",
    "sentence": "Library for communicating with the radiation detector module RadSens."
  },
  {
    "name": "Clip",
    "version": "0.1.0",
    "sentence": "Command Line Interface Parser"
  },
  {
    "name": "Clock",
    "version": "1.0.4",
    "sentence": "Arduino Software Clock"
  },
  {
    "name": "ClockForSeg_Lib",
    "version": "1.0.1",
    "sentence": "A library for Clock made of TM1637"
  },
  {
    "name": "ClosedCube BME680",
    "version": "1.2.0",
    "sentence": "Arduino library for Bosch Sensortec BME680 integrated environmental (temperature, humidity, pressure, gas and in-door air quality) sensor"
  },
  {
    "name": "ClosedCube HDC1010",
    "version": "1.2.2",
    "sentence": "Arduino library for Texas Instruments HDC1010 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor"
  },
  {
    "name": "ClosedCube HDC1080",
    "version": "1.3.2",
    "sentence": "Arduino library for Texas Instruments HDC1080 Low Power, High Accuracy Digital Humidity Sensor with Temperature Sensor"
  },
  {
    "name": "ClosedCube LPS25HB",
    "version": "1.0.1",
    "sentence": "Arduino library for STMicroelectronics LPS25HB MEMS pressure sensor: 260-1260 hPa absolute digital output barometer"
  },
  {
    "name": "ClosedCube MAX30205",
    "version": "1.0.3",
    "sentence": "Arduino library for Maxim Integrated MAX30205 Human Body Temperature Sensor"
  },
  {
    "name": "ClosedCube OPT3001",
    "version": "1.1.2",
    "sentence": "Arduino library for Texas Instruments OPT3001 Digital Ambient Light Sensor (ALS)"
  },
  {
    "name": "ClosedCube OPT3002",
    "version": "1.1.2",
    "sentence": "Arduino library for Texas Instruments OPT3002 Light to Digital Sensor"
  },
  {
    "name": "ClosedCube SHT31D",
    "version": "1.5.1",
    "sentence": "Arduino library for Sensirion SHT30-D, SHT31-D and SHT35-D Digital I2C Temperature & Humidity Sensors"
  },
  {
    "name": "ClosedCube SHT31D fork",
    "version": "1.5.2",
    "sentence": "Arduino library for Sensirion SHT30-D, SHT31-D and SHT35-D Digital I2C Temperature & Humidity Sensors"
  },
  {
    "name": "ClosedCube SHTC3",
    "version": "2020.5.5",
    "sentence": "Arduino library for Arduino library for Sensirion SHTC3 Digital Humidity and Temperature Sensor"
  },
  {
    "name": "ClosedCube Si7051",
    "version": "1.1.0",
    "sentence": "Arduino library for Silicon Labs Si7051 ±0.1°C Digital Temperature Sensor breakout board"
  },
  {
    "name": "ClosedCube Si7055",
    "version": "1.0.3",
    "sentence": "Arduino library for Silicon Labs Si7055 ±0.5°C Digital Temperature Sensor breakout board"
  },
  {
    "name": "ClosedCube TCA9538",
    "version": "1.1.3",
    "sentence": "Arduino library for Texas Instruments TCA9538 Remote 8-Bit I2C and SMBus Low-Power I/O Expander"
  },
  {
    "name": "ClosedCube TCA9546A",
    "version": "1.0.1",
    "sentence": "Arduino library for Texas Instruments TCA9546A 4-Channel I2C Multiplexer/Switch With Reset Function"
  },
  {
    "name": "ClosedCube TCA9548A",
    "version": "2019.3.23",
    "sentence": "Arduino library for Arduino library for Texas Instruments TCA9548A 8-Channel I2C Switch/Multiplexer"
  },
  {
    "name": "ClosedCube TMP116",
    "version": "1.0.2",
    "sentence": "Arduino library for ClosedCube TMP116 �0.2�C (max) High-Accuracy Low-Power I2C Temperature Sensor breakout board"
  },
  {
    "name": "ClosedCube TSYS01",
    "version": "2019.3.23",
    "sentence": "Arduino library for Arduino library for TE CONNECTIVITY +/-0.1C 24-bit Digital Temperature Sensor"
  },
  {
    "name": "ClosedCube_I2C_Driver",
    "version": "2019.6.6",
    "sentence": "Arduino library for ClosedCube I2C Driver (Wrapper)"
  },
  {
    "name": "Cloudchip IoT",
    "version": "2.1.1",
    "sentence": "Cloudchip.io communication library for Arduino, ESP8266 & EPS32"
  },
  {
    "name": "ClusterDuck Protocol",
    "version": "4.3.0",
    "sentence": "Mesh communication protocol."
  },
  {
    "name": "CmdMessenger",
    "version": "4.0.0",
    "sentence": "A serial messaging library for the Arduino and .NET/Mono platform."
  },
  {
    "name": "CmdParser",
    "version": "1.7.0",
    "sentence": "A simple and most powerfull cmd parser with small memory footprint"
  },
  {
    "name": "CmdSerial",
    "version": "1.1.2",
    "sentence": "Simple library that provides an easy way to input/output data from the sketch."
  },
  {
    "name": "CoAP simple library",
    "version": "1.3.28",
    "sentence": "Simple CoAP client/server library for generic Arduino Client hardware."
  },
  {
    "name": "CoDrone",
    "version": "2.2.1",
    "sentence": "A library for CoDrone users"
  },
  {
    "name": "CodeCell",
    "version": "1.2.4",
    "sentence": "CodeCell Arduino Library"
  },
  {
    "name": "CodeCodeCodec Library",
    "version": "0.1.77013",
    "sentence": "Arduino library for CodeCodeCodec's projects."
  },
  {
    "name": "CodeDebugScope",
    "version": "0.0.1",
    "sentence": "CodeDebugScope Library"
  },
  {
    "name": "CodeSizeProfiler",
    "version": "1.0.2",
    "sentence": "An Arduino library for profiling function execution time as a proxy for code size."
  },
  {
    "name": "Codec2",
    "version": "1.0.0",
    "sentence": "The Codec2 library is a proof-of-concept for running the Codec2 audio codec on an Arduino-compatible Adafruit Feather nRF52 Bluefruit LE board."
  },
  {
    "name": "CodingArray MotorShield V1 Library",
    "version": "1.0.1",
    "sentence": "A library for controlling the CodingArray MotorShield V1. Supports DC and stepper motors with microstepping and stacking capabilities."
  },
  {
    "name": "Cohere_Client",
    "version": "0.1.0",
    "sentence": "Arduino Library to connect with Cohere models"
  },
  {
    "name": "CoilCell",
    "version": "1.1.1",
    "sentence": "CoilCell Arduino Library"
  },
  {
    "name": "CoinMarketCapApi",
    "version": "1.1.0",
    "sentence": "A wrapper for the CoinMarketCap.com Api (supports ESP8266, ESP32 & WiFi101 boards)"
  },
  {
    "name": "Cojson",
    "version": "2.2.0",
    "sentence": "Zero-effort JSON reading and writing on Arduino platforms,"
  },
  {
    "name": "ColorConverter",
    "version": "1.1.0",
    "sentence": "Color Converter Library"
  },
  {
    "name": "Coloria",
    "version": "1.0.0",
    "sentence": "Coloria is an Arduino library for printing colored and formatted text to the serial monitor."
  },
  {
    "name": "ColourKit",
    "version": "1.0.3",
    "sentence": "Simple Arduino library for storing, manipulating, and using colour data."
  },
  {
    "name": "ComDriverSpi",
    "version": "1.1.5",
    "sentence": "SPI communication driver class"
  },
  {
    "name": "CommandParser",
    "version": "1.1.1",
    "sentence": "An Arduino library for parsing commands of the form COMMAND_NAME ARG1 ARG2 ARG3."
  },
  {
    "name": "Commander",
    "version": "4.2.3",
    "sentence": "Command line library for Arduino."
  },
  {
    "name": "Commander-API",
    "version": "2.1.1",
    "sentence": "This library can be used to create a simple command parser."
  },
  {
    "name": "Commanders",
    "version": "2.0.1",
    "sentence": "This is a library for Arduino to handle input devices like buttons, Dcc (railroad modeling), CAN or I2C bus, or serial interface to give orders."
  },
  {
    "name": "Comp6DOF_n0m1",
    "version": "0.1.1",
    "sentence": "An Arduino Library for compass tilt compensation and hard iron offset"
  },
  {
    "name": "CompileTime",
    "version": "1.6.0",
    "sentence": "Automatically set the hours, minutes seconds, year, month, and day in your project when uploading!"
  },
  {
    "name": "Complex",
    "version": "0.3.4",
    "sentence": "Arduino library for Complex math."
  },
  {
    "name": "Computherm RF Library",
    "version": "0.1.2",
    "sentence": "Arduino library for Computherm Q8RF thermostat."
  },
  {
    "name": "ConductivityLib",
    "version": "1.0.0",
    "sentence": "Library for resistance-measuring sensors prone to electrolysis."
  },
  {
    "name": "ConfigAssist",
    "version": "2.8.7",
    "sentence": "A lightweight library allowing managing configuration settings on ESP32 and ESP8266 devices devices using a web portal."
  },
  {
    "name": "ConfigManager",
    "version": "2.2.0",
    "sentence": "WiFi connection manager for ESP8266 and ESP32"
  },
  {
    "name": "ConfigPortal32",
    "version": "0.1.6",
    "sentence": "Configuration Web Portal for ESP32"
  },
  {
    "name": "ConfigPortal8266",
    "version": "2.0.2",
    "sentence": "Configuration Web Portal for ESP8266"
  },
  {
    "name": "ConfigStorage",
    "version": "0.0.1",
    "sentence": "Library to store configuration parameters in the file system using LittleFS or SPIFFS for ESP8266 and ESP32."
  },
  {
    "name": "ConfigTool",
    "version": "1.0.0",
    "sentence": "Save config variable and edit them online."
  },
  {
    "name": "ConfigurableFirmata",
    "version": "3.3.0",
    "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board."
  },
  {
    "name": "Connect Arduino-Supabase",
    "version": "1.0.3",
    "sentence": "Arduino Library to communicate with Supabase.io"
  },
  {
    "name": "ConnectThings_ESP8266",
    "version": "0.0.1",
    "sentence": "Allows communication with WiFi network for all Arduino boards."
  },
  {
    "name": "ConnectionHelper",
    "version": "3.0.8",
    "sentence": "Library for setting up WiFi and OTA (Over The Air)"
  },
  {
    "name": "ConsentiumNow",
    "version": "0.0.1",
    "sentence": "A versatile library enabling ESP-NOW communication for IoT devices."
  },
  {
    "name": "ConsentiumStarterKit",
    "version": "0.0.3",
    "sentence": "Consentium Starter kit."
  },
  {
    "name": "ConsentiumThings",
    "version": "2.1.9",
    "sentence": "Consentium Things IoT board."
  },
  {
    "name": "Console",
    "version": "1.4.0",
    "sentence": "Arduino based VT100 comparable serial console library."
  },
  {
    "name": "Constellation",
    "version": "2.4.18186",
    "sentence": "Arduino/ESP library for Constellation 1.8"
  },
  {
    "name": "ContinuousStepper",
    "version": "3.1.0",
    "sentence": "An Arduino library to spin stepper motors in continuous motions."
  },
  {
    "name": "ContinuousStepper_Generic",
    "version": "1.0.0",
    "sentence": "This library enables you to use Hardware-based PWM channels on Generic boards to use PWM to control continuous Stepper Motor"
  },
  {
    "name": "ControlAssist",
    "version": "1.1.6",
    "sentence": "Generate webserver pages on esp devices and control their html elements at runtime using web sockets."
  },
  {
    "name": "ControlLoop",
    "version": "1.0.2",
    "sentence": "An all in one, device controller with on/off, PID, and Cascade PID."
  },
  {
    "name": "ControlSystemsOS",
    "version": "0.2.2",
    "sentence": "A robotics library for interfacing with a dynamic set of plug-and-play low-level I2C modules through a high-level control systems API."
  },
  {
    "name": "ControleForno",
    "version": "2.0.7",
    "sentence": "Uma biblioteca para controle e automacao de forno tipo esteira."
  },
  {
    "name": "Controlino",
    "version": "1.2.2",
    "sentence": "A library for using direct or multiplexed input controls easily."
  },
  {
    "name": "ControlledServo",
    "version": "1.0.0",
    "sentence": "A library to have more control over the movement of a servo.<br />"
  },
  {
    "name": "Controller Utilities",
    "version": "1.1.1",
    "sentence": "Contains a number of useful tools for building custom game controllers."
  },
  {
    "name": "ControllerAsI2c_asukiaaa",
    "version": "1.0.4",
    "sentence": "It handles ESP32 as I2C device of receiver of wireless controller."
  },
  {
    "name": "CoogleIOT",
    "version": "1.3.1",
    "sentence": "An IOT library for ESP8266 to provide WiFi Configuration, MQTT Client, OTA updates and more."
  },
  {
    "name": "CoopTask",
    "version": "3.9.0",
    "sentence": "Portable C++ library for cooperative multitasking like Arduino Scheduler on ESP8266/ESP32, AVR, Linux, Windows"
  },
  {
    "name": "CoopThreads",
    "version": "0.3.1",
    "sentence": "Lightweight, platform agnostic, stackful cooperative threads library"
  },
  {
    "name": "Cooperative Multitasking",
    "version": "1.0.11",
    "sentence": "Cooperative Multitasking lets multiple functions run at (nearly) the same time or independently from each other."
  },
  {
    "name": "Coordinates",
    "version": "1.0.0",
    "sentence": "Allow easy and reliable conversion between cartesian and polar coordinate system."
  },
  {
    "name": "CopyThreads",
    "version": "0.2.0",
    "sentence": "A lightweight threading library"
  },
  {
    "name": "CoreX",
    "version": "1.2.6",
    "sentence": "Library for CoreX IoT Platform."
  },
  {
    "name": "Correlation",
    "version": "0.3.2",
    "sentence": "Arduino Library to determine correlation between X and Y dataset"
  },
  {
    "name": "Corsair Lighting Protocol",
    "version": "0.15.0",
    "sentence": "Control LED strips via USB from a PC."
  },
  {
    "name": "CosmosNV2",
    "version": "1.2.0",
    "sentence": "Biblioteca desenvolvida para Cosmos NV2 Shield"
  },
  {
    "name": "CountDown",
    "version": "0.3.3",
    "sentence": "Arduino library to implement a CountDown clock in SW."
  },
  {
    "name": "CountdownLib",
    "version": "1.0.0",
    "sentence": "Countdown Library"
  },
  {
    "name": "Countimer",
    "version": "1.0.0",
    "sentence": "A simple library for creating timers and counters."
  },
  {
    "name": "CowPi",
    "version": "0.8.2",
    "sentence": "A library for the Cow Pi educational hardware kit."
  },
  {
    "name": "CowPi_stdio",
    "version": "0.6.3",
    "sentence": "A library to interface with the serial monitor and with display modules using familiar stdio functions."
  },
  {
    "name": "Cozir",
    "version": "0.3.8",
    "sentence": "Arduino library for COZIR range of CO2 sensors. Polling mode only."
  },
  {
    "name": "CppComponentsLibrary",
    "version": "0.0.7",
    "sentence": "Components Library"
  },
  {
    "name": "CppLinq",
    "version": "1.0.0",
    "sentence": "ArduinoLinq Library"
  },
  {
    "name": "CppPotpourri",
    "version": "3.4.2",
    "sentence": "An architecture-agnostic package of discrete solutions to common problems in C++."
  },
  {
    "name": "Cpp_Standard_Library",
    "version": "3.2.1",
    "sentence": "将C++标准库移植到 Arduino。支持C++11~17。Porting the C++ standard library to Arduino. Support C++11~17."
  },
  {
    "name": "CraftConnect_ESP8266",
    "version": "0.2.7",
    "sentence": "Библиотека для приложения CraftConnect."
  },
  {
    "name": "Crazy-IoTik",
    "version": "0.1.1",
    "sentence": "library for IoTik"
  },
  {
    "name": "CrazyHC595",
    "version": "0.1.2",
    "sentence": "Library for HC595"
  },
  {
    "name": "CreativeRobotix",
    "version": "2.1.0",
    "sentence": "Creative Robotix library for Codee."
  },
  {
    "name": "CreatorKidsIO",
    "version": "1.0.0",
    "sentence": "Latihan membuat library Arduino"
  },
  {
    "name": "CredentialManager",
    "version": "1.0.0",
    "sentence": "Provides intuitive interface for storage and retrival for user credentials."
  },
  {
    "name": "CronAlarms",
    "version": "0.1.0",
    "sentence": "Schedule alarms to occur at specific times with crontab syntax."
  },
  {
    "name": "CrossMgrLapCounter",
    "version": "1.1.2",
    "sentence": "Library for communicating with CrossMgr's lap counter interface"
  },
  {
    "name": "Crypto",
    "version": "0.4.0",
    "sentence": "Rhys Weatherley's arduinolibs Crypto library."
  },
  {
    "name": "CryptoAES_CBC",
    "version": "1.0.0",
    "sentence": "A AES CBC lib from Rhys Weatherley's arduinolibs Crypto and CryptoLegacy libs. For Arduino and ESP8266."
  },
  {
    "name": "CryptoAuthLib",
    "version": "1.0.1",
    "sentence": "MicroChip CryptoAuthLib with Arduino support"
  },
  {
    "name": "Crystal C Interpreter",
    "version": "1.0.2",
    "sentence": "This is a C++ interpreter developed based on ArduinoSTL, which supports almost all C++ keywords (excluding for) and can be used as a basic operating system on the avr development board."
  },
  {
    "name": "Cubigel",
    "version": "1.0.3",
    "sentence": "Read information from the Cubigel compressor system"
  },
  {
    "name": "Cumulocity IoT Downstream",
    "version": "1.0.1",
    "sentence": "A client library to extract realtime measurement, alarm, event and operation from Cumulocity IoT Platform."
  },
  {
    "name": "Cumulocity IoT Upstreaming",
    "version": "1.0.3",
    "sentence": "A client library to connect your Arduino to Cumulocity IoT cloud over https."
  },
  {
    "name": "Cumulocity IoT client",
    "version": "0.2.0",
    "sentence": "A client library to connect your Arduino to Cumulocity IoT cloud over MQTT."
  },
  {
    "name": "CurrentSwitch",
    "version": "2.0.0",
    "sentence": "Use SCT-013-000 current sensor as a workproof"
  },
  {
    "name": "CurrentTransformer",
    "version": "2.3.0",
    "sentence": "Arduino Library for measuring current in 50/60Hz circuits using current transformers."
  },
  {
    "name": "CurrentTransformerWithCallbacks",
    "version": "2.0.0",
    "sentence": "Coil, Current Transformer (CT) based AC current measurements using fast ADC sampling of waveform"
  },
  {
    "name": "CursedDoubleLinkedListInterface",
    "version": "1.0.4",
    "sentence": "Cursed Double Linked List Interface with previous/next pointers for C++ and Arduino."
  },
  {
    "name": "CurveFitting",
    "version": "1.0.6",
    "sentence": "Fits polynomial curves to given datapoints"
  },
  {
    "name": "Custom PID",
    "version": "1.0.0",
    "sentence": "Library PID Control System."
  },
  {
    "name": "CustomJWT",
    "version": "2.1.2",
    "sentence": "A library to make it easy to encode and decode JWT tokens on the Arduino platform."
  },
  {
    "name": "CuteBuzzerSounds",
    "version": "1.0.0",
    "sentence": "Simple and Cute Robot Sounds"
  },
  {
    "name": "CynoIOT",
    "version": "1.0.0",
    "sentence": "Library for cynoIoT.com platform"
  },
  {
    "name": "Cytron 3A Motor Driver Shield",
    "version": "1.0.0",
    "sentence": "Library for controlling Cytron 3A Motor Driver Shield"
  },
  {
    "name": "Cytron ESPWiFi Shield",
    "version": "3.0.2",
    "sentence": "Library for Cytron ESPWiFi Shield"
  },
  {
    "name": "Cytron G15 Shield",
    "version": "2.0.0",
    "sentence": "Library for controlling G15 Cube Servo"
  },
  {
    "name": "Cytron Maker Sumo Library",
    "version": "1.2.3",
    "sentence": "Library for Cytron Maker Mini Sumo controller."
  },
  {
    "name": "Cytron Motor Drivers Library",
    "version": "1.0.1",
    "sentence": "Library for Cytron Motor Drivers."
  },
  {
    "name": "Cytron Servo Shield",
    "version": "2.0.0",
    "sentence": "Library for using Cytron Servo Shield"
  },
  {
    "name": "Cytron_PS2_Shield",
    "version": "1.1.0",
    "sentence": "This library is for the Cytron PS2 Shield."
  },
  {
    "name": "Cytron_PikaBot",
    "version": "1.0.0",
    "sentence": "Library for Cytron PikaBot."
  },
  {
    "name": "DA16200 Wi-Fi Library for Arduino",
    "version": "1.1.0",
    "sentence": "Wi-Fi enable your Arduino sketches using Dialog's DA16200 Module"
  },
  {
    "name": "DABDUINO",
    "version": "1.0.2",
    "sentence": "Library for controlling DABDUINO - DAB/DAB+ (digital radio) shield"
  },
  {
    "name": "DABShield",
    "version": "1.5.5",
    "sentence": "Library for controlling DABShield DAB/DAB+/FM digital radio shield"
  },
  {
    "name": "DAC121C08x",
    "version": "1.2.2",
    "sentence": "Arduino library for the following Texas Instruments 12 bit DAC ICs: DAC121C081 and DAC121C085."
  },
  {
    "name": "DAC53001",
    "version": "0.1.0",
    "sentence": "Arduino library for I2C DAC53001 10 bit DAC."
  },
  {
    "name": "DAC7574",
    "version": "1.0.0",
    "sentence": "DAC7574 is a 4-channel 12-bit Digital to Analog Converter (DAC) with an I2C interface."
  },
  {
    "name": "DAC7611",
    "version": "1.0.2",
    "sentence": "A library that makes interfacing the DAC7611p a breeze."
  },
  {
    "name": "DAC8550",
    "version": "0.3.1",
    "sentence": "Arduino library for DAC8550 SPI DAC Digital Analog Convertor"
  },
  {
    "name": "DAC8551",
    "version": "0.4.1",
    "sentence": "Arduino library for DAC8501, DAC8531, DAC8550 and DAC8551 SPI 16-bit Digital Analog Convertor."
  },
  {
    "name": "DAC8552",
    "version": "0.5.1",
    "sentence": "Arduino library for DAC8532 and DAC8552 SPI Digital Analog Convertor."
  },
  {
    "name": "DAC8554",
    "version": "0.4.1",
    "sentence": "Arduino library for DAC8534 and DAC8554 SPI Digital Analog Convertor."
  },
  {
    "name": "DAC8560",
    "version": "0.1.1",
    "sentence": "Arduino library for DAC8560 SPI 16-bit Digital Analog Convertor."
  },
  {
    "name": "DAC8571",
    "version": "0.1.2",
    "sentence": "Arduino library for DAC8571 16 bit DAC."
  },
  {
    "name": "DAC8574",
    "version": "0.1.1",
    "sentence": "Arduino library for DAC8574, I2C, 4 channel, 16 bit DAC."
  },
  {
    "name": "DBS-Lib",
    "version": "0.0.2",
    "sentence": "DBS-Lib is a library board that we created for practice such as C++, algorithms, mathetical, embedded system and robotics."
  },
  {
    "name": "DCCEXProtocol",
    "version": "1.0.2",
    "sentence": "DCC-EX Native Protocol implementation"
  },
  {
    "name": "DCCpp",
    "version": "1.4.2",
    "sentence": "This is a library to control DCC devices."
  },
  {
    "name": "DCD SDK for Arduino",
    "version": "0.0.3",
    "sentence": "A library that allows to connect to dcd hub and update value of thing property provided by property_id."
  },
  {
    "name": "DCF77",
    "version": "1.0.0",
    "sentence": "Read and decode the atomic time broadcasted by the DCF77 radiostation."
  },
  {
    "name": "DCF77Decode",
    "version": "1.2.0",
    "sentence": "Focusing on clean code, this library implements almost the entire public DCF77 standard in C."
  },
  {
    "name": "DCMotor",
    "version": "0.1.0",
    "sentence": "Arduino DCMotor library with the L293D motor driver."
  },
  {
    "name": "DCS-BIOS",
    "version": "0.3.10",
    "sentence": "Connect input and output devices to the DCS: World flight simulator using DCS-BIOS."
  },
  {
    "name": "DDBot",
    "version": "1.1.3",
    "sentence": "Provides simple functions to control a differential drive robot."
  },
  {
    "name": "DDC-CI VPC library",
    "version": "1.0.0",
    "sentence": "A simple library to control you monitor over DDC/CI"
  },
  {
    "name": "DDNS_Generic",
    "version": "1.7.0",
    "sentence": "DDNS Update Client Library for SAM DUE, nRF52, SAMD21/SAMD51, STM32F/L/H/G/WB/MP1, AVR Mega, megaAVR, Teensy, RP2040-based RASPBERRY_PI_PICO, WT32_ETH01, Portenta_H7, etc. besides ESP8266/ESP32, using ESP8266-AT/ESP32-AT WiFi, WiFiNINA, Ethernet W5x00, ENC28J60, LAN8742A or Teensy NativeEthernet"
  },
  {
    "name": "DDS",
    "version": "1.0.3",
    "sentence": "Generate sinusoids on AVR-based Arduinos at varying frequencies. Requires an analog low-pass filter."
  },
  {
    "name": "DDSM115",
    "version": "1.0.0",
    "sentence": "An Arduino library for control DDSM115 Wheels through RS485."
  },
  {
    "name": "DEMO-BOARD",
    "version": "0.0.2",
    "sentence": "Library for DEMO-BOARD"
  },
  {
    "name": "DEVFULL",
    "version": "0.1.3",
    "sentence": "Arduino library for a /dev/full stream"
  },
  {
    "name": "DEVNULL",
    "version": "0.1.5",
    "sentence": "Arduino library for a /dev/null stream"
  },
  {
    "name": "DEVRANDOM",
    "version": "0.2.2",
    "sentence": "Arduino library to wrap a random generator in a stream"
  },
  {
    "name": "DEVTAGLibIA",
    "version": "1.0.0",
    "sentence": "Artificial Intelligence Library for Arduino IDE."
  },
  {
    "name": "DF-Print",
    "version": "0.1.2",
    "sentence": "Use C# style syntax for formatting strings."
  },
  {
    "name": "DFL168A_Async",
    "version": "1.0.3",
    "sentence": "Arduino board accesses OBD2/J1939/J1708 Data by DFL168A Integrated Circuit Chip. Most methods are unblocked."
  },
  {
    "name": "DFL168A_Sync",
    "version": "1.0.3",
    "sentence": "Arduino board accesses OBD2/J1939/J1708 Data by DFL168A Integrated Circuit Chip. All methods are blocked."
  },
  {
    "name": "DFPlayer Mini Mp3 by Makuna",
    "version": "1.2.3",
    "sentence": "Library for the DFPlayer Mini Mp3 module"
  },
  {
    "name": "DFPlayerMini",
    "version": "1.0.0",
    "sentence": "A reliable, responsive and compact driver for DFPlayer Mini sound module for Arduino."
  },
  {
    "name": "DFPlayerMini_Fast",
    "version": "1.2.4",
    "sentence": "Arduino library to interface with the DFPlayerMini MP3 module"
  },
  {
    "name": "DFR0534",
    "version": "1.0.4",
    "sentence": "Class for controlling a DFR0534 audio module by SoftwareSerial or HardwareSerial"
  },
  {
    "name": "DFR0554",
    "version": "1.2.1",
    "sentence": "Device driver for DFR0554."
  },
  {
    "name": "DFR_Radar",
    "version": "1.2.0",
    "sentence": "Configure and communicate with the DFRobot 24GHz millimeter-wave Human Presence Detection sensor (SEN0395)."
  },
  {
    "name": "DFRobot SHT",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library."
  },
  {
    "name": "DFRobotDFPlayerMini",
    "version": "1.0.6",
    "sentence": "Driver for DFPlayer Mini from DFRobot"
  },
  {
    "name": "DFRobotIRPosition",
    "version": "1.0.2",
    "sentence": "Driver for Positioning ir camera from DFRobot"
  },
  {
    "name": "DFRobot_AD9837",
    "version": "1.0.0",
    "sentence": "This is a Library for AD9837, AD9837 is a Programmable Waveform Generator(SKU: DFR0973)."
  },
  {
    "name": "DFRobot_ADS1115",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library(SKU:DFR0553)."
  },
  {
    "name": "DFRobot_ADXL345",
    "version": "2.0.0",
    "sentence": "Six axis sensor library.(SKU:SEN0032)"
  },
  {
    "name": "DFRobot_AHT20",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library(SKU:SEN0527&SEN0528)."
  },
  {
    "name": "DFRobot_AS3935",
    "version": "1.0.2",
    "sentence": "DFRobot Lightning Sensor library.(SKU:SEN0290)"
  },
  {
    "name": "DFRobot_AS7341",
    "version": "1.0.0",
    "sentence": "AS7341 is a 11 channel visible light sensor, which can measure 8 wavelengths of visible light, suitable for color detection, light color temperature detection and other scenes(SKU:SEN0365)"
  },
  {
    "name": "DFRobot_ASR",
    "version": "1.0.0",
    "sentence": "The speech recognition module can identify the terms that have been pre-written into the sensor and return the corresponding numbers(SKU: DFR0715)."
  },
  {
    "name": "DFRobot_AirQualitySensor",
    "version": "1.0.0",
    "sentence": "A air quality sensor library.(SKU:SEN0560)"
  },
  {
    "name": "DFRobot_Alcohol",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library."
  },
  {
    "name": "DFRobot_BC20_Gravity",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library.(SKUTEL0130)"
  },
  {
    "name": "DFRobot_BME280",
    "version": "1.0.2",
    "sentence": "This is a Library for BME280, the function is to read temperature and humidity and pressure(SKU: SEN0236)."
  },
  {
    "name": "DFRobot_BME680",
    "version": "2.0.0",
    "sentence": "DFRobot Standard library(SKU:SEN0248)."
  },
  {
    "name": "DFRobot_BMI160",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library(SKU:SEN0250)."
  },
  {
    "name": "DFRobot_BMM150",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library(SKU：SEN0419)."
  },
  {
    "name": "DFRobot_BMP280",
    "version": "1.0.1",
    "sentence": "DFRobot Standard library(SKU:SEN0372)."
  },
  {
    "name": "DFRobot_BMP3XX",
    "version": "1.0.3",
    "sentence": "This is a Library for BMP3XX, the function is to read temperature and pressure(SKU: SEN0423/SEN0371/SEN0251)."
  },
  {
    "name": "DFRobot_BMX160",
    "version": "1.0.1",
    "sentence": "DFRobot_BMX160 is the Sensor library of DFRobot"
  },
  {
    "name": "DFRobot_BT401",
    "version": "1.0.0",
    "sentence": "This Bluetooth module features Bluetooth/U-disk/TF-card playback, and Bluetooth call function, supporting simple and clear serial port control function, BLE pass-through, and SPP pass-through functions(SKU:DFR0781)"
  },
  {
    "name": "DFRobot_B_LUX_V30B",
    "version": "1.0.1",
    "sentence": "DFRobot_B_LUX_V30B is the sensor library of DFRobot"
  },
  {
    "name": "DFRobot_BloodOxygen_S",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library.(SKU:SEN0344)"
  },
  {
    "name": "DFRobot_CCS811",
    "version": "1.0.1",
    "sentence": "DFRobot_CCS811 is the Sensor library of DFRobot"
  },
  {
    "name": "DFRobot_CH423",
    "version": "1.0.0",
    "sentence": "CH423 IO Expansion Module(SKU:DFR0979&DFR0980)."
  },
  {
    "name": "DFRobot_DF1101S",
    "version": "1.0.0",
    "sentence": "record audio and play audio(SKU:DFR0745)."
  },
  {
    "name": "DFRobot_DF1201S",
    "version": "1.0.2",
    "sentence": "This module is a conversion board, which can drive DF1201S DFPlayer PRO MP3 through I2C."
  },
  {
    "name": "DFRobot_DF2301Q",
    "version": "1.0.0",
    "sentence": "This is the library to drive the offline voice recognition module(SKU: SEN0539)."
  },
  {
    "name": "DFRobot_DHT11",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library(SKU:DFR0067)."
  },
  {
    "name": "DFRobot_DHT20",
    "version": "1.0.0",
    "sentence": "Provide an Arduino library to get Humidity and Temperature by reading data from dht20."
  },
  {
    "name": "DFRobot_DS1307",
    "version": "1.0.0",
    "sentence": "Define infrastructure of DFRobot_DS1307 class(SKU: DFR0151)."
  },
  {
    "name": "DFRobot_DS323X",
    "version": "1.0.1",
    "sentence": "DS323X driver library."
  },
  {
    "name": "DFRobot_EC10",
    "version": "1.0.0",
    "sentence": "for measuring the liquid with high electrical conductivity(SKU: DFR0300-H)."
  },
  {
    "name": "DFRobot_ENS160",
    "version": "1.0.1",
    "sentence": "This is a Library for ENS160, ENS160 is a Digital Metal-Oxide Multi-Gas Sensor(SKU: SEN0514/SEN0515)."
  },
  {
    "name": "DFRobot_EOxygenSensor",
    "version": "1.0.0",
    "sentence": "This is the library of Eoxygen, the new electrochemical Oxygen sensor (SKU: SEN0496)."
  },
  {
    "name": "DFRobot_ESP_EC_BY_GREENPONIK",
    "version": "1.1.4",
    "sentence": "Update from DFROBOT library for ESP32 compatibility"
  },
  {
    "name": "DFRobot_ESP_PH_WITH_ADC_BY_GREENPONIK",
    "version": "1.2.3",
    "sentence": "Update from DFROBOT library for ESP32+ADC compatibility"
  },
  {
    "name": "DFRobot_EnvironmentalSensor",
    "version": "1.0.1",
    "sentence": "A environmental sensor.(SKU:SEN0500\\SEN0501)"
  },
  {
    "name": "DFRobot_FreeTenIMU",
    "version": "1.0.0",
    "sentence": "Ten axis sensor library(SKU:SEN0140)."
  },
  {
    "name": "DFRobot_GDL",
    "version": "1.0.3",
    "sentence": "A display library based on SPI."
  },
  {
    "name": "DFRobot_GM60",
    "version": "1.0.0",
    "sentence": "GM60 is a highly integrated QR code scanner with excellent performance and a small size(SKU:SEN0486)"
  },
  {
    "name": "DFRobot_GNSS",
    "version": "1.0.0",
    "sentence": "Provide longitude and latitude and other satellite information (SKU:TEL0157)."
  },
  {
    "name": "DFRobot_GP8302",
    "version": "1.0.0",
    "sentence": "I2C to 0-25mA DAC module(SKU:DFR0972)."
  },
  {
    "name": "DFRobot_GP8403",
    "version": "1.0.0",
    "sentence": "0-10V DAC module(SKU:DFR0971)."
  },
  {
    "name": "DFRobot_GP8XXX",
    "version": "1.0.1",
    "sentence": "GP8XXX series driver library."
  },
  {
    "name": "DFRobot_Gesture_Touch",
    "version": "1.0.0",
    "sentence": "A gesture detection and touch detection sensor(SKU:SEN0285)."
  },
  {
    "name": "DFRobot_HX711",
    "version": "1.0.0",
    "sentence": "By a simple mechanical structure with the sensor, that can be read to the mass of the body(SKU:SEN0160)"
  },
  {
    "name": "DFRobot_HX711_I2C",
    "version": "1.0.0",
    "sentence": "By a simple mechanical structure with the sensor, that can be read to the mass of the body(SKU:KIT0176)"
  },
  {
    "name": "DFRobot_Heartrate",
    "version": "1.0.0",
    "sentence": "This is a Library for SON1303(SKU: SEN0203)."
  },
  {
    "name": "DFRobot_I2C_Multiplexer",
    "version": "1.0.2",
    "sentence": "I2C expansion module support library(SKU:DFR0576)."
  },
  {
    "name": "DFRobot_ICG20660L",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library(SKU:SEN0443)."
  },
  {
    "name": "DFRobot_ICP10111",
    "version": "1.0.0",
    "sentence": "This is an atmospheric pressure sensor.(SKU:SEN0516)"
  },
  {
    "name": "DFRobot_ID809_I2C",
    "version": "1.1.1",
    "sentence": "This is an library for capacitive fingerprint module(SKU:SEN0348)."
  },
  {
    "name": "DFRobot_IICSerial",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library(SKU:DFR0627)."
  },
  {
    "name": "DFRobot_IIS",
    "version": "1.0.1",
    "sentence": "This library provides the codes for driving FireBeetle camera and the camera, microphones, etc. of audio expansion board.(SKU:DFR0498)."
  },
  {
    "name": "DFRobot_INA219",
    "version": "1.0.0",
    "sentence": "measure the current and voltage (SKU: SEN0291)."
  },
  {
    "name": "DFRobot_ITG3200",
    "version": "2.0.0",
    "sentence": "A library of gyroscopic sensors(SKU:SEN0140)."
  },
  {
    "name": "DFRobot_LIDAR07",
    "version": "2.0.0",
    "sentence": "DFRobot_LIDAR07 is the sensor library of DFRobot(SKU:SEN0413)"
  },
  {
    "name": "DFRobot_LIS",
    "version": "1.0.1",
    "sentence": "a sensor library.(SKU:SEN0405/SKU:SEN0407/SKU:SEN0408/SKU:SEN0409/SKU:SEN0411/SKU:SEN0412/SKU:SEN0224)"
  },
  {
    "name": "DFRobot_LPUPS",
    "version": "1.0.1",
    "sentence": "A library designed for LPUPS.(SKU: DFR0682)."
  },
  {
    "name": "DFRobot_LSM303",
    "version": "1.0.0",
    "sentence": "The LSM303DLH is a triple axis accelerometer combined with a triple axis magnetic sensor(SKU: SEN0079)."
  },
  {
    "name": "DFRobot_LWLP",
    "version": "1.0.0",
    "sentence": "The differential pressure between two probes of the differential pressure sensor can be obtained by this drive(SKU: SEN0343)."
  },
  {
    "name": "DFRobot_LcdDisplay",
    "version": "2.0.0",
    "sentence": "It is a display screen that can be driven by both I2C and UART interfaces(SKU:DFR0997)."
  },
  {
    "name": "DFRobot_LedDisplayModule",
    "version": "1.0.1",
    "sentence": "This is a 4bits / 8bits digital tube(SKU: DFR0646\\DFR0645)."
  },
  {
    "name": "DFRobot_LoRa",
    "version": "1.0.3",
    "sentence": "DFRobot_LoRa is the Communication library of DFRobot"
  },
  {
    "name": "DFRobot_MAX17043",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library(SKU:DFR0563)."
  },
  {
    "name": "DFRobot_MAX31855",
    "version": "1.0.0",
    "sentence": "A library of temperature sensors(SKU:DFR0558)."
  },
  {
    "name": "DFRobot_MAX98357A",
    "version": "1.0.1",
    "sentence": "This is a Library for MAX98357A(SKU: DFR0954)."
  },
  {
    "name": "DFRobot_MCP23017",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library(SKU:DFR0626)."
  },
  {
    "name": "DFRobot_MCP2515",
    "version": "1.0.1",
    "sentence": "This is a Library for MCP2515(SKU: DFR0370)."
  },
  {
    "name": "DFRobot_MCP4725",
    "version": "1.0.1",
    "sentence": "12 bit digital-analog DA conversion module(SKU: DFR0552)."
  },
  {
    "name": "DFRobot_MCP9808",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library."
  },
  {
    "name": "DFRobot_MGC3130",
    "version": "1.0.0",
    "sentence": "DFRobot_MGC3130 is the Gesture library of DFRobot"
  },
  {
    "name": "DFRobot_MLX90614",
    "version": "1.0.3",
    "sentence": "This is a Library for MLX90614, the function is to read temperature(SKU: SEN0206/SEN0263)."
  },
  {
    "name": "DFRobot_MPX5700",
    "version": "1.0.0",
    "sentence": "A pressure sensor library.(SKU:SEN0456)"
  },
  {
    "name": "DFRobot_MaqueenPlus",
    "version": "1.0.1",
    "sentence": "educational robot library."
  },
  {
    "name": "DFRobot_MotorStepper",
    "version": "1.0.0",
    "sentence": "Stepper motor and DC motor driver control board(SKU:DFR0508)"
  },
  {
    "name": "DFRobot_OLED12864",
    "version": "1.0.0",
    "sentence": "OLED12864 multifunctional module(SKU: DFR0507)."
  },
  {
    "name": "DFRobot_OSD",
    "version": "1.0.0",
    "sentence": "This is a Library for OSD,the function is the superposition of characters(SKU: DFR0515)."
  },
  {
    "name": "DFRobot_OxygenSensor",
    "version": "1.0.1",
    "sentence": "Standard library for DFRobot oxygen sensor.(SKU:SEN0322)"
  },
  {
    "name": "DFRobot_PAJ7620U2",
    "version": "1.0.1",
    "sentence": "DFRobot_PAJ7620U2 is the Sensor library of DFRobot"
  },
  {
    "name": "DFRobot_PH",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library(SKU:SEN0161-V2)."
  },
  {
    "name": "DFRobot_PN532",
    "version": "1.0.1",
    "sentence": "this is a module that reads data from NFC tags."
  },
  {
    "name": "DFRobot_QMC5883",
    "version": "1.0.0",
    "sentence": "Electronic compass drive library(SKU:SEN0140)."
  },
  {
    "name": "DFRobot_RGBButton",
    "version": "1.0.0",
    "sentence": "This is a Library for RGBButton(SKU: DFR0991)."
  },
  {
    "name": "DFRobot_RGBLCD1602",
    "version": "2.0.1",
    "sentence": "DFRobot_RGBLCD1602 is the display library of DFRobot"
  },
  {
    "name": "DFRobot_RGBMatrix",
    "version": "1.0.1",
    "sentence": "RGB light board control(SKU: DFR0499)."
  },
  {
    "name": "DFRobot_RP2040_SCI",
    "version": "1.0.2",
    "sentence": "This is a library for a SCI Acquisition Module based on the Arduino platform(SKU:DFR0999)."
  },
  {
    "name": "DFRobot_RS01",
    "version": "1.0.0",
    "sentence": "RS01 driver library(SKU: SEN0489)."
  },
  {
    "name": "DFRobot_RTU",
    "version": "1.0.3",
    "sentence": "Modbus RTU library for Arduino."
  },
  {
    "name": "DFRobot_RainfallSensor",
    "version": "1.0.0",
    "sentence": "A rain sensor.(SKU:SEN0575)"
  },
  {
    "name": "DFRobot_SCD4X",
    "version": "1.0.1",
    "sentence": "This is a Library for SCD4X(SCD40/SCD41), SCD4X is a Digital Metal-Oxide Multi-Gas Sensor(SKU: SEN0536)."
  },
  {
    "name": "DFRobot_SGP40",
    "version": "1.0.3",
    "sentence": "DFRobot_SGP40 is the sensor library of DFRobot"
  },
  {
    "name": "DFRobot_SHT20",
    "version": "1.0.0",
    "sentence": "This is a Library for SHT20, SHT20, the new humidity and temperature sensor(SKU: SEN0227)."
  },
  {
    "name": "DFRobot_SIM",
    "version": "1.0.1",
    "sentence": "base class library."
  },
  {
    "name": "DFRobot_SIM7000",
    "version": "1.0.2",
    "sentence": "communication device library.(SKU:DFR0572/DFR0505-CN)"
  },
  {
    "name": "DFRobot_SIM808",
    "version": "1.0.1",
    "sentence": "This is a Library for SIM808 GPS/GPRS/GSM Arduino Shield V1.0(SKU: TEL0097)."
  },
  {
    "name": "DFRobot_ST7687S",
    "version": "1.0.0",
    "sentence": "This is a 2.2” TFT LCD Display Module with an input voltage(SKU: DFR0529)."
  },
  {
    "name": "DFRobot_STS3X",
    "version": "1.0.2",
    "sentence": "This is a Library for STS3X, the function is to read temperature(SKU: SEN0434)."
  },
  {
    "name": "DFRobot_SU03T",
    "version": "1.0.0",
    "sentence": "Speech input and output(SKU: DFR0987)"
  },
  {
    "name": "DFRobot_SerialScreen771",
    "version": "1.1.0",
    "sentence": "DFRobot Standard library(SKU:DFR0626)."
  },
  {
    "name": "DFRobot_SpeechSynthesis",
    "version": "1.0.1",
    "sentence": "Synthesize the sound you need, support Chinese, English."
  },
  {
    "name": "DFRobot_TCS3430",
    "version": "1.0.3",
    "sentence": "DFRobot_TCS3430 is the sensor library of DFRobot"
  },
  {
    "name": "DFRobot_TCS34725",
    "version": "1.0.0",
    "sentence": "A color sensor library"
  },
  {
    "name": "DFRobot_TMF8x01",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library(SKU:SEN0430/SEN0429)."
  },
  {
    "name": "DFRobot_URM07",
    "version": "1.0.0",
    "sentence": "A range sensor(SKU:SEN0153)"
  },
  {
    "name": "DFRobot_URM09",
    "version": "1.2.0",
    "sentence": "DFRobot Standard library."
  },
  {
    "name": "DFRobot_URM13",
    "version": "1.0.1",
    "sentence": "URM13 driver library(SKU: SEN0352)."
  },
  {
    "name": "DFRobot_VEML6075",
    "version": "1.0.1",
    "sentence": "DFRobot_VEML6075 is the Ultraviolet library of DFRobot"
  },
  {
    "name": "DFRobot_VEML7700",
    "version": "1.0.0",
    "sentence": "This is a Library for VEML7700, the function is to read High Accuracy Ambient Light data(SKU: SEN0228)."
  },
  {
    "name": "DFRobot_VL53L0X",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library(SKU:SEN0245)."
  },
  {
    "name": "DFRobot_VL6180X",
    "version": "1.0.1",
    "sentence": "DFRobot_VL6180X is a sensor library."
  },
  {
    "name": "DFRobot_VisualRotaryEncoder",
    "version": "1.0.1",
    "sentence": "Visual rotary encoder driver library(SKU: SEN0502)."
  },
  {
    "name": "DFRobot_VoiceRecorder",
    "version": "1.0.0",
    "sentence": "DFRobot Standard library."
  },
  {
    "name": "DFRobot_digitalPot",
    "version": "1.0.0",
    "sentence": "A digital potentiometer library(SKU:DFR0520)."
  },
  {
    "name": "DFW",
    "version": "0.5.3",
    "sentence": "Tele-op and autonomous change over for WPI RBE platform."
  },
  {
    "name": "DHT Sensors Non-Blocking",
    "version": "1.0.4",
    "sentence": "An Arduino library for the DHT sensor family (DHT11, DHT22,...). With Non-Blocking design to optimize CPU performance."
  },
  {
    "name": "DHT kxn",
    "version": "3.4.4",
    "sentence": "BACKUP Arduino library for DHT11, DHT22, etc Temp & Humidity Sensors"
  },
  {
    "name": "DHT sensor library",
    "version": "1.4.6",
    "sentence": "Arduino library for DHT11, DHT22, etc Temp & Humidity Sensors"
  },
  {
    "name": "DHT sensor library for ESPx",
    "version": "1.19.0",
    "sentence": "Arduino ESP library for DHT11, DHT22, etc Temp & Humidity Sensors"
  },
  {
    "name": "DHT11",
    "version": "2.1.0",
    "sentence": "An Arduino library for the DHT11 temperature and humidity sensor."
  },
  {
    "name": "DHT118266",
    "version": "1.0.16",
    "sentence": "Arduino library for DHT11, DHT22, etc Temp & Humidity Sensors"
  },
  {
    "name": "DHT12",
    "version": "0.5.0",
    "sentence": "Arduino library for I2C DHT12 temperature and humidity sensor."
  },
  {
    "name": "DHT12 sensor library",
    "version": "1.0.2",
    "sentence": "DHT12 Temp & Humidity Sensors, library for Arduino, ESP8266 and ESP32"
  },
  {
    "name": "DHT20",
    "version": "0.3.1",
    "sentence": "Arduino library for I2C DHT20 temperature and humidity sensor."
  },
  {
    "name": "DHT22",
    "version": "1.0.7",
    "sentence": "humidity and temperature, 1-wire only"
  },
  {
    "name": "DHT2pin",
    "version": "0.2.1",
    "sentence": "Experimental version of the DHT library, using 2 data pins instead of 1."
  },
  {
    "name": "DHTINT",
    "version": "0.1.4",
    "sentence": "Arduino library for DHT temperature and humidity sensor. Integer only to save footprint."
  },
  {
    "name": "DHTNEW",
    "version": "0.5.3",
    "sentence": "Arduino library for DHT temperature and humidity sensor, with automatic sensortype recognition."
  },
  {
    "name": "DHTStable",
    "version": "1.1.2",
    "sentence": "Stable version of library for DHT Temperature & Humidity Sensor"
  },
  {
    "name": "DHTlib",
    "version": "0.1.36",
    "sentence": "AVR Optimized Library for DHT Temperature & Humidity Sensor on AVR only."
  },
  {
    "name": "DIGI-DOT-BOOSTER Library",
    "version": "1.0.1",
    "sentence": "An easy to use library to control the DD-Booster."
  },
  {
    "name": "DINO PLC",
    "version": "1.0.6",
    "sentence": "This library providing the possibility to call a function at specific ESP32 module.This library support DINO PLC"
  },
  {
    "name": "DINO-PLC",
    "version": "1.0.0",
    "sentence": "This library providing the possibility to call a function at specific ESP32 module.This library support DINO PLC"
  },
  {
    "name": "DINO-PLC-V2",
    "version": "2.0.5",
    "sentence": "This library providing the possibility to call a function at specific ESP32 module.This library support DINO PLC V2"
  },
  {
    "name": "DINO_PLC_V1",
    "version": "1.0.0",
    "sentence": "This library providing the possibility to call a function at specific ESP32 module.This library support DINO PLC V1"
  },
  {
    "name": "DIO2",
    "version": "1.6.0",
    "sentence": "Fast digital input/output functions."
  },
  {
    "name": "DIYables_4Digit7Segment_74HC595",
    "version": "1.0.2",
    "sentence": "The Arduino library for 74HC595 4-dot 4-digit 7-segment display. It works with Arduino, ESP32, ESP8266."
  },
  {
    "name": "DIYables_IRcontroller",
    "version": "1.0.0",
    "sentence": "The Arduino library for IR remote controller. It works with Arduino, ESP32, ESP8266."
  },
  {
    "name": "DIYables_Keypad",
    "version": "1.0.0",
    "sentence": "The Arduino library for keypad. It works with any hardware platform such as Arduino, ESP32, ESP8266."
  },
  {
    "name": "DIYables_LED_Matrix",
    "version": "1.0.0",
    "sentence": "The Arduino library for LED Matrix. It works with any hardware platform such as Arduino, ESP32, ESP8266."
  },
  {
    "name": "DIYsplay",
    "version": "0.1.7",
    "sentence": "A beginner-friendly library for DIYsplay."
  },
  {
    "name": "DJIMotorAlgoESP",
    "version": "0.0.0",
    "sentence": "A library for controlling DJI M3508, M2006, and GM6020: A Summary of the Algorithm Using ESP32.."
  },
  {
    "name": "DJIMotorCtrlESP",
    "version": "2.0.2",
    "sentence": "A library for controlling DJI M3508, M2006, and GM6020 motors using ESP32."
  },
  {
    "name": "DLLN3X ZigBee Mesh Module Library",
    "version": "1.1.6",
    "sentence": "This library allows you to use DLLN3X ZigBee mesh module very easily."
  },
  {
    "name": "DLPacket",
    "version": "1.0.0",
    "sentence": "Structure a collection numerical data to be sent through a stream into a well-defined packet."
  },
  {
    "name": "DL_PAC_NK76",
    "version": "1.0.1",
    "sentence": "Arduino library for remote control DeLonghi PAC NK76"
  },
  {
    "name": "DLxx416_Arduino",
    "version": "1.0.0",
    "sentence": "Display library for four-character OSRAM/Siemens intelligent displays: DLR2416, DLO2416, DLG2416, DLR3416, DLO3416, DLG3416."
  },
  {
    "name": "DM8BA10",
    "version": "1.0.1",
    "sentence": "Library for Chinese DM8BA10 LCD modules."
  },
  {
    "name": "DMD2",
    "version": "0.0.3",
    "sentence": "Updated (beta) library for Freetronics DMD dot matrix displays."
  },
  {
    "name": "DMD2TUR",
    "version": "1.0.5",
    "sentence": "Use with DMD2 library and enjoy Turkish letters!"
  },
  {
    "name": "DMD32",
    "version": "1.0.0",
    "sentence": "An Arduino library for ESP32 to drive DMD LED matrix display"
  },
  {
    "name": "DMD_STM32",
    "version": "1.1.5",
    "sentence": "STM32 library for led matrix panels"
  },
  {
    "name": "DMM",
    "version": "0.1.3",
    "sentence": "DMM (digital multimeter) library for Arduino."
  },
  {
    "name": "DMOscillator",
    "version": "1.0.0",
    "sentence": "A library that makes easy on/off control on a pin at fixed or dynamic rate."
  },
  {
    "name": "DMStepper",
    "version": "1.0.1",
    "sentence": "A library to drive stepper motors."
  },
  {
    "name": "DMTimer",
    "version": "1.3.0",
    "sentence": "A library that simplifies non blocking recurrent calls."
  },
  {
    "name": "DMX Serial Transceiver",
    "version": "1.0.0",
    "sentence": "Transmit and receive Serial DMX (max485) and switch without a struggle."
  },
  {
    "name": "DMXSerial",
    "version": "1.5.3",
    "sentence": "Enables DMX communication using the built-in serial port for Arduino boards."
  },
  {
    "name": "DMXSerial2",
    "version": "1.4.2",
    "sentence": "Enables building DMX/RDM devices using the built-in serial port for Arduino boards UNO, Leonardo, Mega."
  },
  {
    "name": "DMXUSB",
    "version": "0.0.4",
    "sentence": "DMXUSB emulates an ENTTEC-compatible DMXKing USB to DMX serial device with one or two universes"
  },
  {
    "name": "DMXasLED",
    "version": "1.0.0",
    "sentence": "Una libreria per il controllo di luci DMX usando ESP32 e freeRTOS"
  },
  {
    "name": "DOC_CAT",
    "version": "1.2.0",
    "sentence": "Expanding the Arduino environment"
  },
  {
    "name": "DRA818",
    "version": "1.0.0",
    "sentence": "Configure and communicate with FM module DRA818."
  },
  {
    "name": "DRV2667",
    "version": "0.1.0",
    "sentence": "Arduino library for DRV2667 Piezo Haptic Driver with Boost, Digital Front End, and Internal Waveform Memory"
  },
  {
    "name": "DRV8251-Driver",
    "version": "1.0.0",
    "sentence": "A library that provides support for using brushed DC motors via the TI DRV8251 motor driver"
  },
  {
    "name": "DRV8434S",
    "version": "1.0.1",
    "sentence": "DRV8434S stepper motor driver library for Arduino"
  },
  {
    "name": "DRV8825",
    "version": "0.2.0",
    "sentence": "Arduino library for DRV8825 stepper motor driver."
  },
  {
    "name": "DRV8835MotorShield",
    "version": "2.1.0",
    "sentence": "Arduino library for the Pololu DRV8835 Dual Motor Driver Shield"
  },
  {
    "name": "DRV8870",
    "version": "1.0.1",
    "sentence": "DRV8870 Motor Driver Library for Arduino, ESP and STMboards"
  },
  {
    "name": "DS MCP4018 Library",
    "version": "0.1.9",
    "sentence": "Arduino library for the MCP4018T-103E I2C digital potentiometer."
  },
  {
    "name": "DS PCA9536 Library",
    "version": "0.1.1",
    "sentence": "Arduino library for the PCA9536 I2C I/O expander."
  },
  {
    "name": "DS1307",
    "version": "1.0.0",
    "sentence": "DS1307 Driver for Arduino boards including RP2040"
  },
  {
    "name": "DS1307 Emulator",
    "version": "1.0.0",
    "sentence": "An emulator of the DS1307, which transform the Arduino in an RTC chip without actually having a physical RTC."
  },
  {
    "name": "DS1307RTC",
    "version": "1.4.1",
    "sentence": "Use a DS1307 Real Time Clock chip with the Time library"
  },
  {
    "name": "DS1307newAlarms",
    "version": "0.6.0",
    "sentence": "Adding weekday alarms to the DS1307 RTC functionality"
  },
  {
    "name": "DS1624",
    "version": "2.0.1",
    "sentence": "A library to interface with Maxim DS1624 temperature sensor and memory."
  },
  {
    "name": "DS1624_Library",
    "version": "3.0.1",
    "sentence": "A library to interface with Maxim DS1624 temperature sensor and memory."
  },
  {
    "name": "DS1631",
    "version": "1.0.4",
    "sentence": "Use the Maxim Integrated DS1631 I2C Thermometer"
  },
  {
    "name": "DS1804",
    "version": "0.1.0",
    "sentence": "Arduino library for DS1804 Nonvolatile Trimmer Potentiometer."
  },
  {
    "name": "DS1804Ctrl",
    "version": "0.1.1",
    "sentence": "Arduino library for the DS1804 digital potentiometer, including helper functions for setting resistance, and using the EEPROM, and retrieving state."
  },
  {
    "name": "DS1821",
    "version": "0.3.6",
    "sentence": "Arduino library for DS1821 temperature sensor"
  },
  {
    "name": "DS1881",
    "version": "1.0.0",
    "sentence": "A driver for the Dallas/Maxim i2c logarithmic potentiometer."
  },
  {
    "name": "DS1881_2",
    "version": "1.0.2",
    "sentence": "Controller for Maxim DS1881 and DS1882 Digital Pots"
  },
  {
    "name": "DS18B20",
    "version": "1.0.0",
    "sentence": "Arduino library for the Maxim Integrated DS18B20 1-Wire temperature sensor."
  },
  {
    "name": "DS18B20Events",
    "version": "1.0.0",
    "sentence": "Arduino temperature changed events for DS18B20 and other DallasTemperature compatible sensors"
  },
  {
    "name": "DS18B20_RT",
    "version": "0.2.4",
    "sentence": "Arduino library for the DS18B20 temperature sensor."
  },
  {
    "name": "DS18B20_int",
    "version": "0.3.3",
    "sentence": "Library for DS18B20 restricted to a single sensor per pin."
  },
  {
    "name": "DS2",
    "version": "1.0.0",
    "sentence": "DS2 and KWP library to handle messages in those automotive protocols."
  },
  {
    "name": "DS2401",
    "version": "0.1.2",
    "sentence": "Library for 1-Wire DS2401 UID restricted to a single device per pin."
  },
  {
    "name": "DS2431",
    "version": "1.1.0",
    "sentence": "Arduino library for Maxim DS2431 1-Wire EEPROM"
  },
  {
    "name": "DS2438",
    "version": "0.1.1",
    "sentence": "Library for DS2438 1-Wire battery monitor. One device per pin."
  },
  {
    "name": "DS28CM00",
    "version": "0.4.0",
    "sentence": "Arduino library for I2C DS28CM00 unique identification chip."
  },
  {
    "name": "DS3231",
    "version": "1.1.2",
    "sentence": "Arduino library for the DS3231 real-time clock (RTC)"
  },
  {
    "name": "DS3231-RTC",
    "version": "1.1.0",
    "sentence": "C++ Library for the DS3231 real-time clock (RTC) module, ready to use on Arduino IDE and PlatformIO."
  },
  {
    "name": "DS3231M",
    "version": "1.0.11",
    "sentence": "Arduino library to use the Maxim Integrated DS3231 and DS3231M RTC (Real-Time-Clock)"
  },
  {
    "name": "DS3231_RTC",
    "version": "1.1.0",
    "sentence": "Arduino library for the DS3231 real-time clock (RTC)"
  },
  {
    "name": "DS3232",
    "version": "0.5.0",
    "sentence": "Arduino library for I2C DS3232 RTC (minimalistic)."
  },
  {
    "name": "DS3232RTC",
    "version": "2.0.1",
    "sentence": "Arduino Library for Maxim Integrated DS3232 and DS3231 Real-Time Clocks."
  },
  {
    "name": "DS323x",
    "version": "0.1.2",
    "sentence": "Arduino library for DS3231/DS3232 Extremely Accurate I2C-Integrated RTC/TCXO/Crystal"
  },
  {
    "name": "DS323x_Generic",
    "version": "1.3.1",
    "sentence": "Library for DS3231/DS3232 Extremely Accurate I2C-Integrated RTC/TCXO/Crystal"
  },
  {
    "name": "DS4",
    "version": "1.0.0",
    "sentence": "Dualshock 4 wired controller emulator."
  },
  {
    "name": "DSC Keybus Interface",
    "version": "3.0.0",
    "sentence": "Directly interface Arduino, esp8266, and esp32 to DSC PowerSeries and Classic security systems for integration with home automation, remote control apps, notifications on alarm events, and emulating DSC panels to connect DSC keypads."
  },
  {
    "name": "DSFamily",
    "version": "1.1.0",
    "sentence": "Read and calibrate of of the Maxim DS- Family of 1-wire thermometers"
  },
  {
    "name": "DSPFilters",
    "version": "0.2.2",
    "sentence": "A realtime digital signal processing (DSP) library for Arduino."
  },
  {
    "name": "DST RTC",
    "version": "1.1.1",
    "sentence": "Arduino library for automatically adjusting RTC time for Daylight Saving Time (DST)"
  },
  {
    "name": "DSpotterSDK_Maker_33BLE",
    "version": "1.0.5",
    "sentence": "DSpotterSDK_Maker_33BLE provides offline speech recognition function for developers on Arduino Nano 33 BLE Sense, which can recognize trigger words and command words."
  },
  {
    "name": "DSpotterSDK_Maker_NiclaVision",
    "version": "1.0.5",
    "sentence": "DSpotterSDK_Maker_NiclaVision provides offline speech recognition function for developers on Arduino Portenta H7, which can recognize trigger words and command words."
  },
  {
    "name": "DSpotterSDK_Maker_PortentaH7",
    "version": "1.0.5",
    "sentence": "DSpotterSDK_Maker_PortentaH7 provides offline speech recognition function for developers on Arduino Portenta H7, which can recognize trigger words and command words."
  },
  {
    "name": "DSpotterSDK_Maker_RP2040",
    "version": "1.1.0",
    "sentence": "DSpotterSDK_Maker_RP2040 provides offline speech recognition function for developers on Arduino Nano RP2040 Connect, which can recognize trigger words and command words."
  },
  {
    "name": "DTF_ESP32Update",
    "version": "1.0.7",
    "sentence": "Update ESP32 devices using Deploy the Fleet service."
  },
  {
    "name": "DTF_ESP8266Update",
    "version": "1.0.6",
    "sentence": "Update ESP8266 devices using Deploy the Fleet service."
  },
  {
    "name": "DTime",
    "version": "1.0.0",
    "sentence": "Date plus Time workaround service"
  },
  {
    "name": "DU-INO",
    "version": "1.2.0",
    "sentence": "DU-INO base Arduino library."
  },
  {
    "name": "DUE_ADC_Oversampler",
    "version": "1.0.0",
    "sentence": "16 Bits ADC oversampler with PDC on SAM3x DUE"
  },
  {
    "name": "DUE_schmitt",
    "version": "2.0.0",
    "sentence": "Enable SAM3x DUE IO Schmitt trigguer"
  },
  {
    "name": "DW1000",
    "version": "0.9.0",
    "sentence": "A library that offers functionality to use Decawave's DW1000 chips/modules."
  },
  {
    "name": "DWIN T5L API wrapper",
    "version": "1.0.1",
    "sentence": "A basic library to easily communicate with DWIN HMI displays."
  },
  {
    "name": "DWIN_DGUS_HMI",
    "version": "1.1.2",
    "sentence": "DWIN DGUS HMI Display"
  },
  {
    "name": "Dabble",
    "version": "1.5.2",
    "sentence": "Updated Dabble library with Internet module for Arduino."
  },
  {
    "name": "DabbleESP32",
    "version": "1.5.1",
    "sentence": "Dabble is a library to interface ESP32 with Dabble Smartphone app on Arduino IDE."
  },
  {
    "name": "DacESP32",
    "version": "2.0.0",
    "sentence": "Arduino library for using the ESP32 DAC output channels fast and easy."
  },
  {
    "name": "DailyService",
    "version": "1.0.1",
    "sentence": "A library that supports the daily service options for the Escalator Switch."
  },
  {
    "name": "DailyStruggleButton",
    "version": "0.5.1",
    "sentence": "DailyStruggleButton is yet another Arduino library to debounce button (push tactile switch) and manage its events."
  },
  {
    "name": "DaisyDuino",
    "version": "1.7.0",
    "sentence": "Arduino library for the Daisy audio platform."
  },
  {
    "name": "DallasTemperature",
    "version": "4.0.3",
    "sentence": "Arduino library for Dallas/Maxim temperature ICs"
  },
  {
    "name": "DalyBMSInterface",
    "version": "1.0.1",
    "sentence": "Daly BMS Serial Interface Library for Arduino"
  },
  {
    "name": "DarkSkySevenDay",
    "version": "1.0.0",
    "sentence": "Current and Seven Day Weather Forecast Library for Arduino."
  },
  {
    "name": "Dashboard IoT",
    "version": "2.0.3",
    "sentence": "Library for Dashboard IoT Platform by Nusabot."
  },
  {
    "name": "Dashio",
    "version": "1.2.2",
    "sentence": "Utility Classes to support libraries for the free Dash IoT app."
  },
  {
    "name": "DashioBluefruit",
    "version": "1.2.1",
    "sentence": "BlueFruit SPI library for communicating with the free Dash IoT dashboard app."
  },
  {
    "name": "DashioBluno",
    "version": "1.2.1",
    "sentence": "Bluno library for communicating with the free Dash IoT dashboard app."
  },
  {
    "name": "DashioESP",
    "version": "1.2.12",
    "sentence": "ESP32 & ESP8266 library for communicating with the free Dash IoT dashboard app."
  },
  {
    "name": "DashioMKR1500",
    "version": "1.2.1",
    "sentence": "MKR NB 1500 library for communicating with the free Dash IoT app."
  },
  {
    "name": "DashioNano33BLE",
    "version": "1.2.3",
    "sentence": "Arduino NANO 33 BLE library for communicating with the free Dash IoT dashboard app."
  },
  {
    "name": "DashioSAMD_NINA",
    "version": "1.2.3",
    "sentence": "Arduino SAMD NINA library for communicating with the free Dash IoT dashboard app."
  },
  {
    "name": "DataLogger",
    "version": "0.0.3",
    "sentence": "Arduino library for fast logging of complex sensor data in CSV or binary format to an SD card or serial stream"
  },
  {
    "name": "DataSeriesPod",
    "version": "1.0.0",
    "sentence": "A simple Arduino data logging library"
  },
  {
    "name": "DataServeriOS",
    "version": "2.0.0",
    "sentence": "Serves data to Arduino Control (iOS) for control over network."
  },
  {
    "name": "DataTome",
    "version": "1.9.0",
    "sentence": "Data analysis and filtering using time series for embedded devices (IoT). All in a single C++ library, Data Tome."
  },
  {
    "name": "DataVisualizer",
    "version": "1.0.1",
    "sentence": "This library is intended to simplify the use from Microchip Data Visualizer via the Atmel Data Protocol."
  },
  {
    "name": "DatabaseOnSD",
    "version": "1.0.4",
    "sentence": "A library to easily create and manage a database on an SD card"
  },
  {
    "name": "DatavisionLCD",
    "version": "1.0.3",
    "sentence": "This library allows communication with Phico Datavision LCD."
  },
  {
    "name": "DateTimeFunctions",
    "version": "1.0.0",
    "sentence": "Collection of date & time functions. Check, Convert, Get, Clock & Date."
  },
  {
    "name": "DcDccNanoController",
    "version": "1.2.1",
    "sentence": "This library is made to build a basic Dcc controller on small Arduino Nano or Uno."
  },
  {
    "name": "DeadReckoning-library",
    "version": "1.0.0",
    "sentence": "Uses wheel encoder data on a differential drive robot to estimate position."
  },
  {
    "name": "DebounceEvent",
    "version": "2.0.5",
    "sentence": "Simple push button and toggle switch debounce library that reports number of clicks and length"
  },
  {
    "name": "DebounceFilterLib",
    "version": "1.0.0",
    "sentence": "DebounceFilter Library"
  },
  {
    "name": "DebounceMe",
    "version": "3.0.8",
    "sentence": "Debounce button library."
  },
  {
    "name": "DebouncedButton",
    "version": "1.1.0",
    "sentence": "Library for debouncing a momentary button."
  },
  {
    "name": "DebouncedLDR",
    "version": "1.0.0",
    "sentence": "Library for debouncing a light-dependent resistor."
  },
  {
    "name": "Debouncer",
    "version": "0.3.2",
    "sentence": "Debounce library for Arduino"
  },
  {
    "name": "DebugLog",
    "version": "0.8.4",
    "sentence": "Logging library for Arduino that can output to both Serial and File with one line"
  },
  {
    "name": "Debugger",
    "version": "1.0.0",
    "sentence": "A terminal debugger with break points and data watches."
  },
  {
    "name": "DecodeIR",
    "version": "2.45.4",
    "sentence": "A library for decoding IR signals."
  },
  {
    "name": "DeepSleepScheduler",
    "version": "3.3.0",
    "sentence": "Lightweight, cooperative task scheduler with configurable sleep and task supervision."
  },
  {
    "name": "DelayExec",
    "version": "0.2.0",
    "sentence": "A library to defer executions"
  },
  {
    "name": "DelayFunctions",
    "version": "1.0.0",
    "sentence": "Simple delay functions."
  },
  {
    "name": "Deneyap 5x7 LED Matris",
    "version": "1.0.3",
    "sentence": "Arduino library for Deneyap 5x7 LED Matrix"
  },
  {
    "name": "Deneyap 6 Eksen Alaletsel Olcum Birimi",
    "version": "1.0.2",
    "sentence": "Arduino library for Deneyap 6 Dof IMU LSM6DSM"
  },
  {
    "name": "Deneyap 9-Eksen Ataletsel Olcum Birimi",
    "version": "1.0.2",
    "sentence": "Arduino library for Deneyap 9 Dof IMU MMC5603NJ, LSM6DSM"
  },
  {
    "name": "Deneyap Arduino Examples",
    "version": "1.0.2",
    "sentence": "Arduino examples for Deneyap Development Boards"
  },
  {
    "name": "Deneyap Arduino Projeleri",
    "version": "1.0.7",
    "sentence": "Arduino examples for Deneyap Devkits with Deneyap Modules"
  },
  {
    "name": "Deneyap Basinc Olcer",
    "version": "1.0.3",
    "sentence": "Arduino library for Deneyap Basınç Ölçer MS5637-02BA03"
  },
  {
    "name": "Deneyap Cift Kanalli Cizgi Algilayici",
    "version": "1.0.2",
    "sentence": "Arduino library for Deneyap Dual Channel Line Follower TCRT5000"
  },
  {
    "name": "Deneyap Cift Kanalli Motor Surucu",
    "version": "1.1.2",
    "sentence": "Deneyap Dual Channel Motor Driver TC78H660FTG"
  },
  {
    "name": "Deneyap Derinlik Olcer",
    "version": "1.0.4",
    "sentence": "Arduino library for Deneyap ToF Range Finder Sensor VL53L0X"
  },
  {
    "name": "Deneyap Dokunmatik Tus Takimi",
    "version": "1.0.4",
    "sentence": "Arduino library for Deneyap Keypad"
  },
  {
    "name": "Deneyap Duman Dedektoru",
    "version": "1.0.2",
    "sentence": "Arduino library for Deneyap Gas Sensor"
  },
  {
    "name": "Deneyap GPS ve GLONASS Konum Belirleyici",
    "version": "1.0.4",
    "sentence": "Arduino library for Deneyap GPS and GLONASS Locator"
  },
  {
    "name": "Deneyap Gercek Zamanli Saat",
    "version": "1.0.2",
    "sentence": "Arduino library for Deneyap Real Time Clock MCP7940"
  },
  {
    "name": "Deneyap Hareket Algilama",
    "version": "1.0.2",
    "sentence": "Arduino library for Deneyap Gesture Sensor NCS36000"
  },
  {
    "name": "Deneyap Hareket Isik Renk Algilayici Mesafe Olcer",
    "version": "1.0.2",
    "sentence": "Arduino library for Deneyap Gesture, Color, Proximity Sensor APDS9960"
  },
  {
    "name": "Deneyap Hoparlor",
    "version": "1.0.3",
    "sentence": "Arduino library for Deneyap Speaker"
  },
  {
    "name": "Deneyap Kart IDE Ornekler",
    "version": "1.0.4",
    "sentence": "Deneyap Kart Dahili Örnek Kodlarının Yer Aldığı Kütüphane"
  },
  {
    "name": "Deneyap Kart QRCodeReader",
    "version": "1.0.1",
    "sentence": "A library to read QR Codes using an Deneyap Kart  with a camera module."
  },
  {
    "name": "Deneyap Kizilotesi Alici Verici",
    "version": "1.0.4",
    "sentence": "Arduino library for Deneyap Infrarad Receiver Transmitter"
  },
  {
    "name": "Deneyap Kumanda Kolu",
    "version": "1.0.2",
    "sentence": "Arduino library for Deneyap Joystick"
  },
  {
    "name": "Deneyap Mesafe Olcer Isik Algilayici",
    "version": "1.0.2",
    "sentence": "Arduino library for Deneyap Proximity Light Sensor LTR553"
  },
  {
    "name": "Deneyap Mikrofon",
    "version": "1.0.4",
    "sentence": "Arduino library for Deneyap Microphone ICS-40619"
  },
  {
    "name": "Deneyap OLED Ekran",
    "version": "1.0.6",
    "sentence": "Library for Deneyap OLED Display Module SSD1306"
  },
  {
    "name": "Deneyap Renk Donusturme",
    "version": "1.0.1",
    "sentence": "Arduino library to change colors between different systems"
  },
  {
    "name": "Deneyap Role",
    "version": "1.0.3",
    "sentence": "Arduino library for Deneyap Relay"
  },
  {
    "name": "Deneyap Servo",
    "version": "1.0.6",
    "sentence": "Arduino library to drive servo motors"
  },
  {
    "name": "Deneyap Sicaklik Nem Basinc Olcer",
    "version": "1.0.3",
    "sentence": "Arduino library for Deneyap Temperature&Humidity, Barometer Sensor SHT4X"
  },
  {
    "name": "Deneyap Sicaklik Nem Olcer",
    "version": "1.0.3",
    "sentence": "Arduino library for Deneyap Temperature Humidity SHTC3"
  },
  {
    "name": "Deneyap Telegram",
    "version": "1.1.0",
    "sentence": "Telegram Library for ESP32 / Deneyap Cards"
  },
  {
    "name": "Deneyap Toprak Nemi Olcer",
    "version": "1.0.4",
    "sentence": "Arduino library for Deneyap Soil Moisture Sensor TL555Q"
  },
  {
    "name": "Deneyap Ultraviyole Isik Algilayici",
    "version": "1.0.3",
    "sentence": "Arduino library for Deneyap UV Light Sensor LTR390"
  },
  {
    "name": "Deneyap Yagmur Algilayici",
    "version": "1.0.4",
    "sentence": "Arduino library for Deneyap Rain sensor"
  },
  {
    "name": "Derivs_Limiter",
    "version": "3.1.5",
    "sentence": "This library can be used to limit the first and second derivative of a variable as it approaches a target value."
  },
  {
    "name": "Design Informatics Base",
    "version": "1.0.5",
    "sentence": "Library for making use of the Design Informatics PCB for getting started with Arduino coding"
  },
  {
    "name": "Dev Device Pins",
    "version": "0.0.2",
    "sentence": "Pin definition header files for Arduino Dev Devices"
  },
  {
    "name": "DeviceConfigJSON",
    "version": "0.3.0",
    "sentence": "Library enables device configuration using JSON."
  },
  {
    "name": "DeviceController",
    "version": "1.0.0",
    "sentence": "Control Board Pins states using Device Controller Web interface"
  },
  {
    "name": "Devuino",
    "version": "2.0.0",
    "sentence": "A device library for Arduino and other -inos"
  },
  {
    "name": "Diablo16-Serial-Arduino-Library",
    "version": "1.0.5",
    "sentence": "Provides library access to communicate with the 4D Systems Diablo16 processor, when configured in Serial/SPE mode"
  },
  {
    "name": "Dictionary",
    "version": "3.5.0",
    "sentence": "A dictionary data type with a fast b-tree based search"
  },
  {
    "name": "Didactic Robot",
    "version": "1.0.1",
    "sentence": "Simple Didactic Robot library"
  },
  {
    "name": "Differential Steering",
    "version": "1.0.0",
    "sentence": "A library to use differential steering with a single dual axis joystick"
  },
  {
    "name": "DigiCombo",
    "version": "1.0.0",
    "sentence": "Make for yourself a virtual digital pen and keyboard with Digispark Attiny85."
  },
  {
    "name": "DigiFont",
    "version": "1.1.1",
    "sentence": "Scalable 7-segment font"
  },
  {
    "name": "DigiKeyboardBe",
    "version": "1.0.0",
    "sentence": "A library that allow to use the belgian azerty keyboard with digispark"
  },
  {
    "name": "DigiKeyboardFr",
    "version": "1.0.0",
    "sentence": "A library that allow to use azerty keyboard with digispark"
  },
  {
    "name": "DigiPotX9Cxxx",
    "version": "0.1.1",
    "sentence": "A library for X9Cxxx family digital potentiometers (X9Cxxx, xxx=102,103,104,503)"
  },
  {
    "name": "DigiSpark_PWM",
    "version": "1.0.0",
    "sentence": "Hardware-based Pulse-Width-Modulation (PWM) for AVR ATtiny85-based boards using ATTinyCore up to 500 kHz."
  },
  {
    "name": "DigitLed72xx",
    "version": "0.0.7",
    "sentence": "A library for the MAX7219 and the MAX7221 Led display drivers."
  },
  {
    "name": "DigitLedDisplay",
    "version": "1.1.0",
    "sentence": "MAX7219/MAX7221 Digital Tube 7-Segment LED Display Library"
  },
  {
    "name": "DigitSeparator",
    "version": "0.1.2",
    "sentence": "Arduino library to separate digit value with marks and returns it as C string."
  },
  {
    "name": "Digital Infrared Temperature Sensor MLX90615",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - Digital Infrared Temperature Sensor."
  },
  {
    "name": "Digital Rain Animation",
    "version": "2.0.1",
    "sentence": "Easily display Matrix effects in the Arduino environment."
  },
  {
    "name": "DigitalIO",
    "version": "1.0.1",
    "sentence": "Fast digital IO."
  },
  {
    "name": "DigitalPressureSensor",
    "version": "1.0.8",
    "sentence": "This library provides an Interface for Infineon's DPS310 Pressure Sensor (DEPRECATED)."
  },
  {
    "name": "DigitalSignalsArduino",
    "version": "0.1.4",
    "sentence": "Digital Signal library for Arduino platform"
  },
  {
    "name": "DimSwitch",
    "version": "1.0.2",
    "sentence": "A library to control dimmable ballasts for fluorescent light tubes."
  },
  {
    "name": "Dimmable Light for Arduino",
    "version": "1.6.0",
    "sentence": "This library allows to easily control dimmers (also known as thyristors)."
  },
  {
    "name": "Dimmer class for ATmega32U4",
    "version": "1.0.1",
    "sentence": "Easy use of 10/12 bit PWM outputs on ATmega32U4 for dimmer applications."
  },
  {
    "name": "Dimmer class for SAMD21",
    "version": "1.0.0",
    "sentence": "Easy use of PWM outputs on SAMD21 for dimmer applications."
  },
  {
    "name": "DimmerControl",
    "version": "1.2.0",
    "sentence": "Dimmer control functions, like soft on/off, dimming up/down etc."
  },
  {
    "name": "DiodeIoT_SI-1104",
    "version": "1.0.0",
    "sentence": "SI-1104 library for Espressif MCUs"
  },
  {
    "name": "DiodeIoT_SI-1108",
    "version": "1.0.0",
    "sentence": "SI-1108 library for Espressif MCUs"
  },
  {
    "name": "DiodeIoT_SI-1116",
    "version": "1.0.0",
    "sentence": "SI-1116 library for Espressif MCUs"
  },
  {
    "name": "DirectCurrent_Motor_Module",
    "version": "0.5.1",
    "sentence": "Simple library to control various motors and engines"
  },
  {
    "name": "DirectNECTransmitter",
    "version": "1.0.0",
    "sentence": "Library to send NEC IR pulses without a carrier wave."
  },
  {
    "name": "DisCard",
    "version": "0.0.3",
    "sentence": "Discorda Mesaj Göndermeyi Sağlayan Arduino Kütüphanesi"
  },
  {
    "name": "Discord_WebHook",
    "version": "2.0.0",
    "sentence": "Send message on discord using webhook"
  },
  {
    "name": "DisplayMenu",
    "version": "1.0.0",
    "sentence": "This library helps with creating menu pages when using graphical displays supported by the TFT_eSPI library."
  },
  {
    "name": "DisplayUtils",
    "version": "0.0.2",
    "sentence": "Utility classes to help working with displays (eg large fast changing numbers)"
  },
  {
    "name": "Distance-Sensor",
    "version": "1.0.0",
    "sentence": "A non-blocking HC-SR04 library"
  },
  {
    "name": "DistanceSensor",
    "version": "1.0.2",
    "sentence": "HC-SR04 distance sensor library."
  },
  {
    "name": "DistanceTable",
    "version": "0.3.3",
    "sentence": "Library for a memory efficient DistanceTable for Arduino."
  },
  {
    "name": "DmtrPots",
    "version": "0.1.0",
    "sentence": "Potentiometer library for Arduino / Teensy."
  },
  {
    "name": "DmxSimple",
    "version": "3.1.0",
    "sentence": "Drive DMX controlled lights and visual effects available from DJ or theatrical suppliers."
  },
  {
    "name": "DoEEP",
    "version": "2.0.4",
    "sentence": "A simple EEPROM library for reading, writing, and managing key-value pairs."
  },
  {
    "name": "DonoLed",
    "version": "1.0.1",
    "sentence": "Library to easily control LED Strips."
  },
  {
    "name": "Dorpac-timer",
    "version": "1.0.0",
    "sentence": "A library for implementing very simple timers"
  },
  {
    "name": "DotMatrix5x7",
    "version": "1.5.2",
    "sentence": "Drives 5x7 dot matrix display directly connected to Arduino pins"
  },
  {
    "name": "DotMatrixDisplay",
    "version": "1.0.0",
    "sentence": "Dot-Matrix Display library for use with PD243X I2C Adapter Board"
  },
  {
    "name": "DoubleEMAFilterLib",
    "version": "1.0.0",
    "sentence": "DoubleEMAFilter Library"
  },
  {
    "name": "DoubleLinkedList",
    "version": "1.0.0",
    "sentence": "A templated class for creating dynamic Double Linked Lists. A Double Linked List is a Linked List where each node points to the next node and the previous node."
  },
  {
    "name": "DoubleResetDetect",
    "version": "1.0.0",
    "sentence": "Arduino library to check for double reset on ESP8266"
  },
  {
    "name": "DoubleResetDetector",
    "version": "1.0.3",
    "sentence": "Library to detect a double reset, using ESP8266 RTC Memory."
  },
  {
    "name": "DoubleResetDetector_Generic",
    "version": "1.8.1",
    "sentence": "Library to detect a double reset, using EEPROM, DueFlashStorage, FlashStorage_SAMD, FlashStorage_RTL8720, FlashStorage_STM32 or LittleFS/InternalFS. For AVR, Teensy, SAM DUE, SAMD, STM32F/L/H/G/WB/MP1, nRF52, RP2040-based Nano_RP2040_Connect, RASPBERRY_PI_PICO, RTL8720DN, MBED nRF52840-based Nano_33_BLE, Portenta_H7, etc. boards. Now using efficient FlashStorage_STM32 library and supporting new RP2040-based Nano_RP2040_Connect, Portenta_H7, RASPBERRY_PI_PICO and STM32 core v2.0.0"
  },
  {
    "name": "DoublyLinkedList",
    "version": "1.0.0",
    "sentence": "An advanced library for managing lists."
  },
  {
    "name": "DovesLapTimer",
    "version": "0.2.2",
    "sentence": "A simple lap-timing library centered around GPS data"
  },
  {
    "name": "DpsPowerSupply",
    "version": "1.0.0",
    "sentence": "Control of Ruideng DPS power supply series thought serial port (DPS3003, DPS3005, DPS5005, DPS5015, DPS5020)"
  },
  {
    "name": "Drive",
    "version": "1.0.0",
    "sentence": "Arduino library to use L298N motor bridge. (Works for all esp8266 boards also)"
  },
  {
    "name": "DriveCell",
    "version": "1.1.2",
    "sentence": "DriveCell Arduino Library"
  },
  {
    "name": "DriveMaster",
    "version": "0.0.2",
    "sentence": "RC protocol"
  },
  {
    "name": "DropboxManager",
    "version": "1.1.2",
    "sentence": "Manipulate your Dropbox files by ESP8266"
  },
  {
    "name": "Ds1302",
    "version": "1.1.0",
    "sentence": "A C/C++ library to use DS1302 RTC chip."
  },
  {
    "name": "DualG2HighPowerMotorShield",
    "version": "2.0.0",
    "sentence": "Arduino library for the Pololu Dual G2 High Power Motor Driver Shields"
  },
  {
    "name": "DualMAX14870MotorShield",
    "version": "2.0.0",
    "sentence": "Arduino library for the Pololu Dual MAX14870 Motor Driver Shield"
  },
  {
    "name": "DualMC33926MotorShield",
    "version": "4.0.0",
    "sentence": "Arduino library for the Pololu Dual MC33926 Motor Driver Shield"
  },
  {
    "name": "DualSenseController",
    "version": "2.0.1",
    "sentence": "Library to use DualSense Controller based on USB Host Shield Library 2.0."
  },
  {
    "name": "DualTB9051FTGMotorShield",
    "version": "2.0.0",
    "sentence": "Arduino library for the Pololu Dual TB9051FTG Motor Driver Shield"
  },
  {
    "name": "DualVNH5019MotorShield",
    "version": "3.0.0",
    "sentence": "Arduino library for the Pololu Dual VNH5019 Motor Driver Shield"
  },
  {
    "name": "DualVNH5019MotorShieldMod3",
    "version": "3.2.0-dualshilds",
    "sentence": "Arduino library for the running two Pololu Dual VNH5019 Motor Driver Shields on an Arduino Mega"
  },
  {
    "name": "DualWheelControl_JD",
    "version": "1.1.0",
    "sentence": "Libreria simple para control de motores DC"
  },
  {
    "name": "DueAdcFast",
    "version": "1.2.0",
    "sentence": "Arduino Due ADC analogRead Fast 1Mhz with measures collect and also differential."
  },
  {
    "name": "DueFlashStorage",
    "version": "1.0.0",
    "sentence": "DueFlashStorage saves non-volatile data for Arduino Due."
  },
  {
    "name": "DueTimer",
    "version": "1.4.7",
    "sentence": "Timer Library fully implemented for Arduino DUE"
  },
  {
    "name": "DumbDisplay",
    "version": "0.9.941",
    "sentence": "A library for connecting to Android DumbDisplay app (>= this version), for various virtual gadget realizations."
  },
  {
    "name": "Dump",
    "version": "1.0.2",
    "sentence": "AVR dump RAM and Flash"
  },
  {
    "name": "DunogeonENG",
    "version": "0.1.4",
    "sentence": "Arduino library for a mini D&D Game (it's a part of a bigger project)."
  },
  {
    "name": "DunogeonFR",
    "version": "0.1.7",
    "sentence": "Cette librairie est un simulateur de  donjon (une partie isolée d un projet plus grand)."
  },
  {
    "name": "Dusk2Dawn",
    "version": "1.0.1",
    "sentence": "Get estimate time of sunrise and sunset given a set of coordinates."
  },
  {
    "name": "DvG_StreamCommand",
    "version": "1.1.1",
    "sentence": "A lightweight Arduino library to listen for commands over a stream"
  },
  {
    "name": "Dx_PWM",
    "version": "1.1.1",
    "sentence": "This library enables you to use Hardware-based PWM channels on Arduino AVRDx-based boards (AVR128Dx, AVR64Dx, AVR32Dx, etc.), using DxCore, to create and output PWM."
  },
  {
    "name": "Dx_Slow_PWM",
    "version": "1.1.0",
    "sentence": "This library enables you to use ISR-based PWM channels on Arduino AVRDx-based boards (AVR128Dx, AVR64Dx, AVR32Dx, etc.), using DxCore, to create and output PWM any GPIO pin."
  },
  {
    "name": "Dx_TimerInterrupt",
    "version": "1.1.3",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on Arduino AVRDx-based boards (AVR128Dx, AVR64Dx, AVR32Dx, etc.) using DxCore"
  },
  {
    "name": "Dynamixel",
    "version": "0.3.1",
    "sentence": "Arduino library for Dynamixel"
  },
  {
    "name": "Dynamixel2Arduino",
    "version": "0.7.0",
    "sentence": "DYNAMIXEL protocol Library for Arduino"
  },
  {
    "name": "DynamixelShield",
    "version": "0.2.6",
    "sentence": "DynamixelShield Library for Arduino"
  },
  {
    "name": "Dynamixel_Servo",
    "version": "2.1.0",
    "sentence": "Dynamixel_Servo is an Arduino compatible library for controlling Dynamixel MX and RX series servos."
  },
  {
    "name": "E131",
    "version": "1.0.0",
    "sentence": "E1.31 sACN for AVR Ethernet and ESP8266."
  },
  {
    "name": "E220-900T22S LoRa library",
    "version": "1.0.0",
    "sentence": "A library for Spresense LoRa."
  },
  {
    "name": "E220-900T22S-JP",
    "version": "2.0.2",
    "sentence": "Arduino E220-900T22S(JP) libraries."
  },
  {
    "name": "E220Lib",
    "version": "1.3.4",
    "sentence": "A Library used to interface the EBYTE E220 module with an Arduino"
  },
  {
    "name": "E24",
    "version": "1.1.0",
    "sentence": "E24xxx EEPROM library."
  },
  {
    "name": "EAA_MLX90614",
    "version": "1.0.0",
    "sentence": "MLX90614 device driver"
  },
  {
    "name": "EASE_ArduinoCode",
    "version": "0.3.0",
    "sentence": "Arduino library to interface EASE board"
  },
  {
    "name": "EButton",
    "version": "1.3.0",
    "sentence": "A compact, simple-to-use, reliable and powerful event-driven button library, with proper debouncing and fine grained event structure."
  },
  {
    "name": "EByte LoRa E22 library",
    "version": "1.0.9",
    "sentence": "LoRa EBYTE E22 device library complete and tested with Arduino, Arduino SAMD (Nano 33 IoT and MKR), esp8266, esp32 and STM32. sx1262/sx1268"
  },
  {
    "name": "EByte LoRa E220 library",
    "version": "1.0.8",
    "sentence": "LoRa EBYTE E220 device library complete and tested with Arduino, esp8266, esp32, STM32 and Raspberry Pi Pico. LLCC68"
  },
  {
    "name": "EByte LoRa E32 library",
    "version": "1.5.13",
    "sentence": "LoRa EBYTE E32 device library complete and tested with Arduino, Arduino SAMD, esp8266, esp32 and STM32. sx1278/sx1276."
  },
  {
    "name": "EByte RF E70 library",
    "version": "0.0.11",
    "sentence": "RF EBYTE E70 device library complete and tested with Arduino, esp8266, esp32, STM32 and Raspberry Pi Pico. CC1310"
  },
  {
    "name": "EDB",
    "version": "1.0.4",
    "sentence": "Extended Database Library"
  },
  {
    "name": "EE895 Arduino Library",
    "version": "0.1.1",
    "sentence": "Library for the EE895 CO2 Sensor"
  },
  {
    "name": "EEBoom",
    "version": "1.1.0",
    "sentence": "Simple and powerful EEPROM emulation for ESP8266 and ESP32"
  },
  {
    "name": "EEManager",
    "version": "2.0.1",
    "sentence": "Simple library for reducing EEPROM wear"
  },
  {
    "name": "EEPROM-Storage",
    "version": "2.0.1",
    "sentence": "Generic class to wrap an EEPROM variable on the Particle and Arduino platforms."
  },
  {
    "name": "EEPROM32_Rotate",
    "version": "0.9.5",
    "sentence": "EEPROM wrapper for ESP32 that handles partition rotation"
  },
  {
    "name": "EEPROMAdapter",
    "version": "1.1.4",
    "sentence": "This adapter can read and write AT28C64 and AT28C256 EEPROM chips using Arudino Mega. Creating converter PCB for this task recommended"
  },
  {
    "name": "EEPROMEx",
    "version": "1.0.0",
    "sentence": "Extension of the standard Arduino EEPROM library."
  },
  {
    "name": "EEPROMHandler",
    "version": "1.0.0",
    "sentence": "Simplifies using AT24C256 EEPROM with Arduino"
  },
  {
    "name": "EEPROMReader",
    "version": "1.0.2",
    "sentence": "EEPROM reading / writing library with cpp type templating."
  },
  {
    "name": "EEPROMTyped",
    "version": "1.0.0",
    "sentence": "The EEPROM Typed Library is a lightweight static library for reading and writing standard Arduino data types to the EEPROM."
  },
  {
    "name": "EEPROMWearLevel",
    "version": "2.1.0",
    "sentence": "EEPROMWearLevel reduces EEPROM wear by writting a new value to an other EEPROM location."
  },
  {
    "name": "EEPROM_24LC64F",
    "version": "1.0.0",
    "sentence": "EEPROM_24LC64F EEPROM memory chip for Arduino"
  },
  {
    "name": "EEPROM_CAT25",
    "version": "1.0.2",
    "sentence": "Driver for On Semiconductor CAT25 SPI EEPROM chips for AVR, SAM3X (Due), and SAM M0+ (SAMD, SAML, SAMC) microcontrollers"
  },
  {
    "name": "EEPROM_Rotate",
    "version": "0.9.2",
    "sentence": "EEPROM wrapper for ESP8266 that handles sector rotation"
  },
  {
    "name": "EEPROM_SPI_WE",
    "version": "1.1.5",
    "sentence": "Library for external SPI based EEPROMs"
  },
  {
    "name": "EEPROM_STM_Arduino",
    "version": "0.9.0",
    "sentence": "Class library for NXP I2C multiplexer and switch"
  },
  {
    "name": "EEPROM_WL",
    "version": "1.0.0",
    "sentence": "Library for implementing EEPROM wear leveling on AVR Arduino boards"
  },
  {
    "name": "EEPROMextent",
    "version": "1.2.1",
    "sentence": "This is a library for Arduino to read/write complex data to EEPROM."
  },
  {
    "name": "EEPROMsimple",
    "version": "1.0.2",
    "sentence": "Communications with 25LC1024 EEPROM chip"
  },
  {
    "name": "EEPstore",
    "version": "1.0.4",
    "sentence": "EEPROM data storage with CRC16 checksum"
  },
  {
    "name": "EERAM_47XXX",
    "version": "1.0.0",
    "sentence": "A library to work with Microchip 47XXX EERAM ICs"
  },
  {
    "name": "EEWL",
    "version": "0.7.0",
    "sentence": "EEPROM wear leveling"
  },
  {
    "name": "EEWrap",
    "version": "1.0.0",
    "sentence": "A convenient library allowing one to use the EEPROM just like RAM."
  },
  {
    "name": "EEvar",
    "version": "0.2.3",
    "sentence": "Allows to save variables to the EEPROM memory. Works with any POD (bool, int, float, custom structs) and String. Lightweight. Simple to use."
  },
  {
    "name": "EIS",
    "version": "0.0.1",
    "sentence": "EIS is a library board that we created for practice such as C++, algorithms, mathetical, embedded system and robotics."
  },
  {
    "name": "EIS_INTERBOT",
    "version": "1.0.0",
    "sentence": "EIS_INTERBOT is a library board that we created for practice such as C++, algorithms, mathetical, embedded system and robotics."
  },
  {
    "name": "ELIO-ARDUINO-EXAMPLE",
    "version": "1.0.1",
    "sentence": "Library for ELIO Board"
  },
  {
    "name": "ELMDuino",
    "version": "3.3.0",
    "sentence": "Arduino library to easily interface with the common OBDII scanner: ELM327"
  },
  {
    "name": "ELMo",
    "version": "1.1.2",
    "sentence": "Low-level synchronous Arduino library to interface with ELM327 OBDII devices."
  },
  {
    "name": "ELT S300 Library",
    "version": "1.0.0",
    "sentence": "This is a library for the ELT CO2 sensor S300 via I2C."
  },
  {
    "name": "EL_dev_arduino",
    "version": "4.3.0",
    "sentence": "Library and Sample of ECHONET Lite for Arduino"
  },
  {
    "name": "ELi_McM_4_00",
    "version": "1.1.1",
    "sentence": "A library for using Microcontroller modules of E-LAGORi."
  },
  {
    "name": "ELi_MdM_4_00",
    "version": "1.1.0",
    "sentence": "A library for using motor driver modules of E-LAGORi."
  },
  {
    "name": "EMFButton",
    "version": "0.1.8",
    "sentence": "Easy MultiFunctional button"
  },
  {
    "name": "EMUSerial",
    "version": "1.0.2",
    "sentence": "ECUMaster EMU Serial Library"
  },
  {
    "name": "EMUcan",
    "version": "2.0.3",
    "sentence": "ECUMaster EMU CAN Stream Reader Arduino Library"
  },
  {
    "name": "EMailSender",
    "version": "3.0.14",
    "sentence": "Send EMail via SMTP, library for Raspberry Pi Pico W, Arduino, SAMD (WiFiNINA), STM32, esp8266 and esp32."
  },
  {
    "name": "EMoRo 2560",
    "version": "2.4.2",
    "sentence": "EMoRo 2560 library includes all specific libraries and examples for EMoRo 2560 controller."
  },
  {
    "name": "ENGR100-950",
    "version": "1.2.1",
    "sentence": "UMich ENGR 100-950 Library"
  },
  {
    "name": "ENGR100-980",
    "version": "1.0.10",
    "sentence": "UMich ENGR 100-980 Library"
  },
  {
    "name": "ENS160 - Adafruit Fork",
    "version": "3.0.1",
    "sentence": "Arduino library for the ENS160 digital four channel MOX gas sensor with I2C interface from ScioSense"
  },
  {
    "name": "ENS210",
    "version": "1.0.0",
    "sentence": "Arduino library for the ENS210 relative humidity and temperature sensor with I2C interface from ams"
  },
  {
    "name": "ENS22",
    "version": "1.0.1",
    "sentence": "Library for controlling the ENS22 NB-IoT modem, supporting MQTT communication."
  },
  {
    "name": "EPD",
    "version": "1.1.1",
    "sentence": "It controls waveshare 1.54 inch e-paper(e-ink) display."
  },
  {
    "name": "EQSP32",
    "version": "0.5.0",
    "sentence": "A library for controlling your EQSP32 - ESP32 Industrial IoT Controller."
  },
  {
    "name": "ERCFS",
    "version": "0.1.1",
    "sentence": "Arduino library for SPI based ERCFS rotary encoder."
  },
  {
    "name": "ERM19264_UC1609",
    "version": "1.8.2",
    "sentence": "Library to Support the ERM19264 LCD driven by the UC1609C controller"
  },
  {
    "name": "ERO",
    "version": "1.1.0",
    "sentence": "A library make learning basic robotic easier."
  },
  {
    "name": "ERPC",
    "version": "1.0.1",
    "sentence": "ESP32 RPC library."
  },
  {
    "name": "ER_OLEDM1_CH1115",
    "version": "1.4.2",
    "sentence": "Library to support the ER-OLEDM1.09-1 OLED Display Module driven by the CH1115 controller"
  },
  {
    "name": "ERa",
    "version": "1.5.6",
    "sentence": "E-Ra by EoH. An IoT Market Enabler!"
  },
  {
    "name": "ES32Lab",
    "version": "0.8.13",
    "sentence": "Library provided by ESDeveloperBR to facilitate the development of programs that utilize the ES32Lab board."
  },
  {
    "name": "ES920",
    "version": "0.3.1",
    "sentence": "Arduino library for ES920/ES920LR FSK/LoRa wireless module"
  },
  {
    "name": "ESC Thermal Printer BLE",
    "version": "0.0.5",
    "sentence": "Library for ESC/POS Printer BLE"
  },
  {
    "name": "ESP Async E1.31",
    "version": "1.0.5",
    "sentence": "Async E1.31 sACN for ESP8266."
  },
  {
    "name": "ESP Async TCP",
    "version": "2.0.0",
    "sentence": "Async TCP Library for ESP8266 and ESP31B"
  },
  {
    "name": "ESP Async Web Server",
    "version": "1.2.4-fork",
    "sentence": "Effortlessly build asynchronous web servers for ESP8266 and ESP32."
  },
  {
    "name": "ESP Async WebServer",
    "version": "3.7.0",
    "sentence": "Asynchronous HTTP and WebSocket Server Library for ESP32, ESP8266 and RP2040"
  },
  {
    "name": "ESP Battery",
    "version": "1.0.0",
    "sentence": "Arduino Library to calculate the ESP8266 (Feather Huzzah) battery level."
  },
  {
    "name": "ESP Line Notify",
    "version": "2.1.1",
    "sentence": "Line Notify Library for ESP8266 and ESP32."
  },
  {
    "name": "ESP Mail Client",
    "version": "3.4.24",
    "sentence": "Arduino E-Mail Client Library to send, read and get incoming email notification for ESP32, ESP8266 and SAMD21 devices."
  },
  {
    "name": "ESP OTA GitHub",
    "version": "0.0.3",
    "sentence": "ESP library for auto updating code from GitHub releases."
  },
  {
    "name": "ESP QRcode",
    "version": "4.0.1",
    "sentence": "ESP Generate QRCode for GDEH0213B72 eink display, SSD1306, SH1106 oled displays 128*64 pixel and others based on Adafruit ST77XX"
  },
  {
    "name": "ESP Rotary",
    "version": "2.1.1",
    "sentence": "ESP8266/Arduino Library for reading rotary encoder values."
  },
  {
    "name": "ESP Telnet",
    "version": "2.2.3",
    "sentence": "ESP8266/ESP32 library that allows you to setup a telnet server."
  },
  {
    "name": "ESP-DASH",
    "version": "4.0.8",
    "sentence": "A blazing fast library to create realtime dashboards for ESP8266's and ESP32's."
  },
  {
    "name": "ESP-FlexyStepper",
    "version": "1.5.0",
    "sentence": "This library is used to control one or more stepper motors from an ESP32 device"
  },
  {
    "name": "ESP-Google-Forms-Client",
    "version": "1.0.0",
    "sentence": "Arduino Google Forms REST client library for ESP8266, ESP32 and Raspberry Pi Pico (RP2040)."
  },
  {
    "name": "ESP-Google-Sheet-Client",
    "version": "1.4.8",
    "sentence": "Arduino Google Sheet REST client library for Arduino devices."
  },
  {
    "name": "ESP-NOW MIDI",
    "version": "0.1.1",
    "sentence": "Arduino library for sending MIDI messages via the ESP-NOW protocol."
  },
  {
    "name": "ESP-StepperMotor-Server",
    "version": "0.4.12",
    "sentence": "A stepper motor control server for ESP32 with Web UI, REST API and CLI"
  },
  {
    "name": "ESP-WiFiSettings",
    "version": "3.9.2",
    "sentence": "WiFi configuration manager for the ESP32 and ESP8266 platforms."
  },
  {
    "name": "ESP-Wifi-Config",
    "version": "2.2.5",
    "sentence": "A ready-made Web Admin panel for configuring WiFi settings for ESP8266 and ESP32"
  },
  {
    "name": "ESP2SOTA",
    "version": "1.0.2",
    "sentence": "Async OTA (AP & Client WiFi modes) for ESP32/ESP8266."
  },
  {
    "name": "ESP32 AnalogWrite",
    "version": "0.1.0",
    "sentence": "ESP32 Polyfill for analogWrite functions"
  },
  {
    "name": "ESP32 BLE ANCS Notifications",
    "version": "0.0.1",
    "sentence": "Arduino library for ESP32, for reading and interacting with Smartphone notifications from iOS."
  },
  {
    "name": "ESP32 BLE Arduino",
    "version": "1.0.1",
    "sentence": "BLE functions for ESP32"
  },
  {
    "name": "ESP32 Control",
    "version": "1.2.8",
    "sentence": "This library providing the possibility to call a function at specific ESP32 Control module.This library support all version of ESP32 Control module,ERS ,E1.0"
  },
  {
    "name": "ESP32 Control lite",
    "version": "1.0.0",
    "sentence": "This library providing the possibility to call a function at specific ESP32 Control module.This library support all version of ESP32 Control module,ERS ,E1.0"
  },
  {
    "name": "ESP32 Digital RGB LED Drivers",
    "version": "1.5.3",
    "sentence": "A library for driving self-timed digital RGB/RGBW LEDs (WS2812, SK6812, NeoPixel, WS2813, etc.) using the Espressif ESP32 microcontroller's RMT output peripheral."
  },
  {
    "name": "ESP32 ESP32S2 AnalogWrite",
    "version": "5.0.2",
    "sentence": "ESP32 PWM, Servo, Easing and Tone."
  },
  {
    "name": "ESP32 FX1N PLC",
    "version": "1.0.3",
    "sentence": "This library providing the possibility to call a function at specific ESP32 module.This library support all version of ESP32 module 2.0RXO,MiniPLC-32u"
  },
  {
    "name": "ESP32 File Manager for Generation Klick ESPFMfGK",
    "version": "2.0.13",
    "sentence": "Manage your ES32 file system content with a simple web based interface"
  },
  {
    "name": "ESP32 HUB75 LED MATRIX PANEL DMA Display",
    "version": "3.0.11",
    "sentence": "HUB75 LED Matrix Library for ESP32, ESP32-S2 and ESP32-S3"
  },
  {
    "name": "ESP32 I2C Slave",
    "version": "0.3.0",
    "sentence": "I2C Slave library for ESP32 (unofficial)"
  },
  {
    "name": "ESP32 Lite Pack Library",
    "version": "1.3.2",
    "sentence": "ESP32LitePack, M5Lite, A lightweight compatibility library. Support Devices:M5StickC, M5StickC Plus, M5Stack BASIC, M5Stack GRAY, M5Stack FIRE, M5Stack Core2, M5Stack ATOM Lite, M5Stack ATOM Matrix, M5Stack ATOM ECHO"
  },
  {
    "name": "ESP32 Mail Client",
    "version": "2.1.6",
    "sentence": "Mail Client Arduino Library for ESP32"
  },
  {
    "name": "ESP32 Microsoft Graph",
    "version": "0.0.1",
    "sentence": "This library provides an easy login process to AzureAD. I have also included a sample that displays Teams presence."
  },
  {
    "name": "ESP32 RMT Peripheral VAN bus reader library",
    "version": "2.0.2",
    "sentence": "ESP32 RMT Peripheral VAN bus reader library"
  },
  {
    "name": "ESP32 Rest Client",
    "version": "1.0.0",
    "sentence": "Arduino WIFI Rest Client for ESP32"
  },
  {
    "name": "ESP32 ULP Debugger",
    "version": "1.1.3",
    "sentence": "Arduino ESP32 ULP Debugger libraries."
  },
  {
    "name": "ESP32-BLE-Gamepad",
    "version": "0.7.3",
    "sentence": "Bluetooth LE Gamepad library for the ESP32."
  },
  {
    "name": "ESP32-BLE-MIDI",
    "version": "0.3.2",
    "sentence": "A library to use MIDI over Bluetooth Low Energy on ESP32 boards."
  },
  {
    "name": "ESP32-Chimera-Core",
    "version": "1.5.2",
    "sentence": "Alternate library for M5Stack/M5Core2/Odroid-Go/D-Duino and possiblly other ESP32/TFT/SD bundles"
  },
  {
    "name": "ESP32-ENC28J60",
    "version": "2.0.1",
    "sentence": "Enables network connection (local and Internet) with ENC28J60 using the ESP32 Ethernet."
  },
  {
    "name": "ESP32-OTA",
    "version": "0.1.6",
    "sentence": "Add an HTTP OTA interface to an existing project."
  },
  {
    "name": "ESP32-OTA-Pull",
    "version": "1.0.0",
    "sentence": "ESP32-OTA-Pull provides simple 'pull' based OTA updates for ESP32"
  },
  {
    "name": "ESP32-PSRamFS",
    "version": "1.0.6",
    "sentence": "\"ESP32 RamDisk for PSRAM and fs::FS\""
  },
  {
    "name": "ESP32-PTQS1005",
    "version": "1.0.0",
    "sentence": "PTQS1005 Sensor Data Acquisition Library for ESP32 and Arduino"
  },
  {
    "name": "ESP32-RTSPServer",
    "version": "1.3.2",
    "sentence": "An RTSP server library for streaming video, audio, and subtitles."
  },
  {
    "name": "ESP32-TWAI-CAN",
    "version": "1.0.1",
    "sentence": "ESP32 driver for TWAI / CAN for Adruino using ESP-IDF drivers."
  },
  {
    "name": "ESP32-USB-Soft-Host",
    "version": "0.1.4",
    "sentence": "\"An Arduino wrapper to @sdima1357's usb_soft_host esp-idf example\""
  },
  {
    "name": "ESP32-audioI2S-master",
    "version": "3.0.13",
    "sentence": "With this library You can easily build a WebRadio with a ESP32 board and a I2S-module."
  },
  {
    "name": "ESP32-imgur-uploader",
    "version": "1.0.3",
    "sentence": "imgur.com Image/Video uploader"
  },
  {
    "name": "ESP32-targz",
    "version": "1.2.6",
    "sentence": "A library to compress/decompress tar+gzip archives."
  },
  {
    "name": "ESP32AnalogRead",
    "version": "0.3.0",
    "sentence": "Load the ESP32 ADC calibration data and use it to read from the ADC Supports the original, S2 and S3."
  },
  {
    "name": "ESP32CAR",
    "version": "1.0.0",
    "sentence": "Allows ESP32 boards to control MakistCar using"
  },
  {
    "name": "ESP32Console",
    "version": "1.2.2",
    "sentence": "Extensible UART console for ESP32 with useful included commands."
  },
  {
    "name": "ESP32DMASPI",
    "version": "0.6.5",
    "sentence": "SPI library for ESP32 which use DMA buffer to send/receive transactions"
  },
  {
    "name": "ESP32Dispatcher",
    "version": "1.0.4",
    "sentence": "Simple time-slice based task dispatcher"
  },
  {
    "name": "ESP32Encoder",
    "version": "0.11.7",
    "sentence": "Encoder library for the ESP32 using interrupts."
  },
  {
    "name": "ESP32Logger",
    "version": "1.0.2",
    "sentence": "Logger for ESP32 for debugging C++-code"
  },
  {
    "name": "ESP32Logger2",
    "version": "1.0.3",
    "sentence": "Logger for ESP32 for debugging C++-code"
  },
  {
    "name": "ESP32MQTTClient",
    "version": "1.0.0",
    "sentence": "A thread-safe MQTT library based on the <mqtt_client.h> of ESP-IDF instead of PubSubClient."
  },
  {
    "name": "ESP32MX1508",
    "version": "1.0.5",
    "sentence": "An ESP32 library that makes using mx1508 dual DC motor driver easier."
  },
  {
    "name": "ESP32MotorControl",
    "version": "0.1.0",
    "sentence": "Motor control using ESP32 MCPWM"
  },
  {
    "name": "ESP32PsramLock",
    "version": "1.0.0",
    "sentence": "Library to control ESP32 PSRAM"
  },
  {
    "name": "ESP32RotaryEncoder",
    "version": "1.1.1",
    "sentence": "Use a rotary encoder with your ESP32 easily!"
  },
  {
    "name": "ESP32SPISlave",
    "version": "0.6.5",
    "sentence": "SPI Slave library for ESP32"
  },
  {
    "name": "ESP32Servo",
    "version": "3.0.6",
    "sentence": "Allows ESP32 boards to control servo, tone and analogWrite motors using Arduino semantics."
  },
  {
    "name": "ESP32Servo360",
    "version": "0.2.2",
    "sentence": "Initial development release"
  },
  {
    "name": "ESP32Time",
    "version": "2.0.6",
    "sentence": "Set and retrieve internal RTC time on ESP32 boards."
  },
  {
    "name": "ESP32TimerInterrupt",
    "version": "2.3.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on ESP32-based (including ESP32_S2, ESP32_S3 and ESP32_C3) boards"
  },
  {
    "name": "ESP32TinyUSB",
    "version": "2.0.2",
    "sentence": "USB functions for ESP32-S2"
  },
  {
    "name": "ESP32WebRemoteControl",
    "version": "1.0.0",
    "sentence": "Web Remote COntrol"
  },
  {
    "name": "ESP32_BleSerial",
    "version": "2.0.1",
    "sentence": "A BLE Serial library for Arduino ESP32"
  },
  {
    "name": "ESP32_Button",
    "version": "0.0.1",
    "sentence": "ESP32_Button is a specialized library created to facilitate the implementation of ADC/GPIO button functionality on ESP SoCs."
  },
  {
    "name": "ESP32_C3_ISR_Servo",
    "version": "1.2.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an ESP32_C3 board to control multiple servo motors."
  },
  {
    "name": "ESP32_C3_TimerInterrupt",
    "version": "1.8.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an ESP32-C3-based board"
  },
  {
    "name": "ESP32_Display_Panel",
    "version": "0.2.2",
    "sentence": "ESP32_Display_Panel is a library designed for ESP SoCs to drive display panels and facilitate rapid GUI development."
  },
  {
    "name": "ESP32_ENC_Manager",
    "version": "1.0.0",
    "sentence": "ESP32 + LwIP ENC28J60, including ESP32-S2, ESP32-S3 and ESP32-C3, Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESP32_Ethernet_Manager",
    "version": "1.0.0",
    "sentence": "(ESP32 + LwIP W5500 / ENC28J60), including ESP32-S2, ESP32-S3 and ESP32-C3, Connection and Credentials Manager, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESP32_FastPWM",
    "version": "1.1.0",
    "sentence": "This library enables you to use Hardware-based PWM channels on ESP32, ESP32_S2, ESP32_S3 or ESP32_C3-based boards to create and output PWM to pins."
  },
  {
    "name": "ESP32_HTTPS_Server",
    "version": "1.0.0",
    "sentence": "Alternative ESP32 Webserver implementation for the ESP32, supporting HTTPS and HTTP."
  },
  {
    "name": "ESP32_Host_MIDI",
    "version": "1.0.3",
    "sentence": "Arduino library to host MIDI messages on ESP32"
  },
  {
    "name": "ESP32_IDF5_HTTPS_Server",
    "version": "1.1.1",
    "sentence": "Alternative ESP32 Webserver implementation for the ESP32, supporting HTTPS and HTTP. Compatible with ESP-IDF 5.0 or later."
  },
  {
    "name": "ESP32_IO_Expander",
    "version": "1.1.0",
    "sentence": "ESP32_IO_Expander is a library designed for driving IO expander chips using ESP SoCs"
  },
  {
    "name": "ESP32_ISR_Servo",
    "version": "1.5.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an ESP32 board to control multiple servo motors."
  },
  {
    "name": "ESP32_Knob",
    "version": "0.0.1",
    "sentence": "ESP32_Knob is a library designed for driving encoders using ESP SoCs"
  },
  {
    "name": "ESP32_MQTTClient",
    "version": "1.0.0",
    "sentence": "MQTT library based on the <mqtt_client.h> of ESP-IDF."
  },
  {
    "name": "ESP32_MySQL",
    "version": "1.0.1",
    "sentence": "Directly connects to MySQL using ESP32."
  },
  {
    "name": "ESP32_New_ISR_Servo",
    "version": "1.4.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on ESP32, ESP32_S2, ESP32_S3, ESP32_C3 boards to control multiple servo motors."
  },
  {
    "name": "ESP32_New_TimerInterrupt",
    "version": "1.5.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an ESP32, ESP32_S2, ESP32_S3 or ESP32_C3-based board"
  },
  {
    "name": "ESP32_PWM",
    "version": "1.3.3",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an ESP32, ESP32_S2, ESP32_S3 or ESP32_C3-based board to create and output PWM to pins."
  },
  {
    "name": "ESP32_Pinoo",
    "version": "1.8.0",
    "sentence": "An Arduino library to use Pinoo ESP32 modules."
  },
  {
    "name": "ESP32_RTC_EEPROM",
    "version": "0.2.1",
    "sentence": "EEPROM emulation that stores in RTC RAM. Survives deep sleep, but not reset or power loss."
  },
  {
    "name": "ESP32_S2_ISR_Servo",
    "version": "1.2.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an ESP32_S2 board to control multiple servo motors."
  },
  {
    "name": "ESP32_S2_TimerInterrupt",
    "version": "1.8.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an ESP32-S2-based board"
  },
  {
    "name": "ESP32_SC_ENC_Manager",
    "version": "1.0.0",
    "sentence": "ESP32_S2/S3/C3 + LwIP ENC28J60 Connection and Credentials Manager, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESP32_SC_Ethernet_Manager",
    "version": "1.0.0",
    "sentence": "(ESP32_S2/S3/C3 + LwIP W5500 / ENC28J60) Connection and Credentials Manager, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESP32_SC_W5500_Manager",
    "version": "1.0.0",
    "sentence": "ESP32_S2/S3/C3 + LwIP W5500 Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESP32_SC_W6100_Manager",
    "version": "1.0.0",
    "sentence": "ESP32_S2/S3/C3 + LwIP W6100 Connection and Credentials Manager, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESP32_SemBeacon",
    "version": "1.1.0",
    "sentence": "SemBeacon BLE functions for ESP32"
  },
  {
    "name": "ESP32_SoftWire",
    "version": "1.0.2",
    "sentence": "ESP32 software I2C library"
  },
  {
    "name": "ESP32_USB_STREAM",
    "version": "0.1.0",
    "sentence": "ESP32_USB_STREAM is a specialized library created to facilitate the implementation of USB stream functionality on ESP SoCs."
  },
  {
    "name": "ESP32_VS1053_Stream",
    "version": "2.1.2",
    "sentence": "This is a Arduino IDE library for playing mp3, aac and flac/ogg local files and online streams with a vs1053 decoder."
  },
  {
    "name": "ESP32_W5500_Manager",
    "version": "1.0.0",
    "sentence": "ESP32 + LwIP W5500, including ESP32-S2, ESP32-S3 and ESP32-C3, Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESP32_W6100_Manager",
    "version": "1.0.0",
    "sentence": "ESP32 + LwIP W6100 Connection and Credentials Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESP32_WS2812_Lib",
    "version": "2.0.1",
    "sentence": "An Arduino library for WS2812 led on ESP32/ESP32S3.<br />"
  },
  {
    "name": "ESP32_easy_wifi_data",
    "version": "1.4.3",
    "sentence": "Simple library for sending and recieving booleans, bytes, integers, and float variables over UDP. The ESP32 or ESP8266 can be connected to a wifi network or create its own hotspot."
  },
  {
    "name": "ESP32epd",
    "version": "1.0.3",
    "sentence": "A library that makes coding a E-paper a breeze."
  },
  {
    "name": "ESP32epdx",
    "version": "1.0.7",
    "sentence": "A library that makes coding a E-paper a breeze."
  },
  {
    "name": "ESP32httpUpdate",
    "version": "2.1.145",
    "sentence": "Http Update for ESP32"
  },
  {
    "name": "ESP32softPWM",
    "version": "0.0.1",
    "sentence": "Easily implement software PWM"
  },
  {
    "name": "ESP8266 Influxdb",
    "version": "3.13.2",
    "sentence": "InfluxDB Client for Arduino."
  },
  {
    "name": "ESP8266 MQTT Mesh",
    "version": "1.0.4",
    "sentence": "Self-assembling Mesh network built around the MQTT protocol supporting OTA"
  },
  {
    "name": "ESP8266 Microgear",
    "version": "1.2.4",
    "sentence": "A client library for ESP8266 to connect to NETPIE IOT Platform."
  },
  {
    "name": "ESP8266 QRcode",
    "version": "2.0.0",
    "sentence": "ESP8266 Generate QRCode for SSD1306 oled displays 128*64 pixel"
  },
  {
    "name": "ESP8266 SMTPClient",
    "version": "1.0.0",
    "sentence": "The SMTPClient library allows you to send emails using an ESP8266 microcontroller. It supports sending plain text emails as well as emails with attachments."
  },
  {
    "name": "ESP8266 Weather Station",
    "version": "2.3.0",
    "sentence": "ESP8266 based internet connected Weather Station"
  },
  {
    "name": "ESP8266 and ESP32 OLED driver for SSD1306 displays",
    "version": "4.6.1",
    "sentence": "I2C display driver for SSD1306 OLED displays connected to ESP8266, ESP32, Mbed-OS"
  },
  {
    "name": "ESP8266-OLED Display Library",
    "version": "1.0.1",
    "sentence": "esp8266-Arduino library for I2C-OLED displays"
  },
  {
    "name": "ESP8266-ping",
    "version": "2.0.1",
    "sentence": "A library to enable esp8266 platform to send and receive ping messages."
  },
  {
    "name": "ESP8266Audio",
    "version": "2.0.0",
    "sentence": "Audio file and I2S sound playing routines for ESP8266, ESP32, and Raspberry Pi Pico RP2040"
  },
  {
    "name": "ESP8266AutoWifi",
    "version": "0.9.0",
    "sentence": "Auto Connect WiFi for ESP8266 Board."
  },
  {
    "name": "ESP8266IoTHelper",
    "version": "1.0.1",
    "sentence": "Helper for ESP8266 that orchestrates WiFi connection and OTA updates"
  },
  {
    "name": "ESP8266MQTTClient",
    "version": "1.0.5",
    "sentence": "MQTT Client for ESP8266"
  },
  {
    "name": "ESP8266RTTTLPlus",
    "version": "0.1.3",
    "sentence": "An RTTTL parsing and playing library."
  },
  {
    "name": "ESP8266RestClient",
    "version": "1.0.0",
    "sentence": "ESP8266 RESTful HTTP Request Library."
  },
  {
    "name": "ESP8266SAM_ES",
    "version": "1.0.7",
    "sentence": "Speech synthesis in spanish on the ESP8266, ESP32, and RP2040"
  },
  {
    "name": "ESP8266SDUpdater",
    "version": "0.0.2",
    "sentence": "SD Card Loader for ESP8266"
  },
  {
    "name": "ESP8266Scheduler",
    "version": "1.2.0",
    "sentence": "ESP8266 Co-operative Multitasking"
  },
  {
    "name": "ESP8266TimerInterrupt",
    "version": "1.6.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an ESP8266-based board."
  },
  {
    "name": "ESP8266_AT_WebServer",
    "version": "1.7.1",
    "sentence": "Simple WebServer library for AVR, Teensy, SAM DUE, SAMD21, SAMD51, STM32F/L/H/G/WB/MP1, nRF52, SIPEED_MAIX_DUINO and RP2040-based (RASPBERRY_PI_PICO) boards using ESP8266/ESP32 AT-command shields with functions similar to those of ESP8266/ESP32 WebServer libraries"
  },
  {
    "name": "ESP8266_ENC_Manager",
    "version": "1.0.0",
    "sentence": "(ESP8266 + LwIP ENC28J60) Connection and Credentials Manager, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESP8266_Ethernet_Manager",
    "version": "1.0.0",
    "sentence": "(ESP8266 + LwIP W5500 / W5100(S) / ENC28J60) Connection and Credentials Manager, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESP8266_ISR_Servo",
    "version": "1.3.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an ESP8266 to control servo motors."
  },
  {
    "name": "ESP8266_LED_64x16_Matrix",
    "version": "1.1.0",
    "sentence": "ESP8266 driver to run LED matrix."
  },
  {
    "name": "ESP8266_PWM",
    "version": "1.2.4",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an ESP8266-based board to create and output PWM to pins."
  },
  {
    "name": "ESP8266_W5100_Manager",
    "version": "1.0.0",
    "sentence": "(ESP8266 + LwIP W5100 / W5100S) Connection and Credentials Manager, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESP8266_W5500_Manager",
    "version": "1.0.0",
    "sentence": "(ESP8266 + LwIP W5500) Connection and Credentials Manager, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESP8266_multipart",
    "version": "1.1.0",
    "sentence": "A small multipart file sending library for the ESP8266."
  },
  {
    "name": "ESPAsyncButton",
    "version": "1.2.1",
    "sentence": "Event-driven asynchronous button toolkit for ESP32"
  },
  {
    "name": "ESPAsyncHTTPUpdateServer",
    "version": "2.0.0",
    "sentence": "Simple/Stylized  HTTP Update Server for ESPAsyncWebServer(by me-no-dev)"
  },
  {
    "name": "ESPAsyncTCP",
    "version": "1.2.4",
    "sentence": "Async TCP Library for ESP8266 and ESP31B . Forked from https://github.com/me-no-dev/ESPAsyncTCP"
  },
  {
    "name": "ESPAsyncWebServer",
    "version": "3.1.0",
    "sentence": "Async Web Server for ESP8266 and ESP32"
  },
  {
    "name": "ESPAsyncWebSrv",
    "version": "1.2.9",
    "sentence": "Asynchronous HTTP and WebSocket Server Library for ESP8266 and ESP32 . Forked from https://github.com/me-no-dev/ESPAsyncWebServer"
  },
  {
    "name": "ESPAsync_WiFiManager",
    "version": "1.15.1",
    "sentence": "ESP32 (including ESP32-S2, ESP32-S3 and ESP32-C3), ESP8266 WiFi Connection Manager using AsyncWebServer, with enhanced GUI and fallback Web ConfigPortal."
  },
  {
    "name": "ESPAsync_WiFiManager_Lite",
    "version": "1.10.5",
    "sentence": "Light-Weight MultiWiFi/Credentials Async WiFiManager for ESP32 (including ESP32-S2, ESP32-S3 and ESP32-C3) and ESP8266 boards. Powerful-yet-simple-to-use feature to enable adding dynamic custom parameters."
  },
  {
    "name": "ESPAutoWiFiConfig",
    "version": "2.2.1",
    "sentence": "Start serving a local webpage if cannot connect to WiFi, also include Buffer for to WiFi client to prevent small packets with partial messages being sent."
  },
  {
    "name": "ESPAutoWifi",
    "version": "0.9.2",
    "sentence": "Auto Connect WiFi for ESP32 Board."
  },
  {
    "name": "ESPCanary",
    "version": "2.1.1",
    "sentence": "Create an ESP32 or ESP8266 OpenCanary Honeypot"
  },
  {
    "name": "ESPConnect",
    "version": "1.0.6",
    "sentence": "Simple & Easy WiFi Manager with Captive Portal for ESP8266 / ESP32"
  },
  {
    "name": "ESPDateTime",
    "version": "1.0.4",
    "sentence": "Date Time Functions and Classes for ESP8266 and ESP32"
  },
  {
    "name": "ESPDisplay",
    "version": "0.0.1",
    "sentence": "Use the DAC function of ESP32 to output C_ESP_8_BIT_composite with LovyanGFX."
  },
  {
    "name": "ESPEssentials",
    "version": "2.1.5",
    "sentence": "Essentials to get you started with your ESP8266 and ESP32 projects"
  },
  {
    "name": "ESPFlash",
    "version": "1.0.1",
    "sentence": "Lightweight library that makes SPIFFs usage simple and easy to understand on the ESP8266 and ESP32."
  },
  {
    "name": "ESPHap",
    "version": "1.1.0",
    "sentence": "Native support Apple HomeKit protocol with Arduino projects"
  },
  {
    "name": "ESPLogger",
    "version": "2.0.0",
    "sentence": "This library provides a simple interface to collect data on local storage (embedded flash or micro SD)."
  },
  {
    "name": "ESPMail",
    "version": "1.0.1",
    "sentence": "EMail library."
  },
  {
    "name": "ESPManager",
    "version": "3.1.2",
    "sentence": "ESP manager"
  },
  {
    "name": "ESPNexUpload",
    "version": "0.5.7",
    "sentence": "Upload UI file to Nextion displays using ESP's"
  },
  {
    "name": "ESPPerfectTime",
    "version": "0.3.0",
    "sentence": "SNTP library that provides more accurate time for ESP8266/ESP32."
  },
  {
    "name": "ESPPubSubClientWrapper",
    "version": "1.0.2",
    "sentence": "A wrapper class for the MQTT PubSubClient library by Nick O'Leary for ESP8266/ESP32."
  },
  {
    "name": "ESPSerialFlasher",
    "version": "0.1.7",
    "sentence": "[EXPERIMENTAL] Flash the WiFiNiNa module on your arduino nano 33 iot"
  },
  {
    "name": "ESPShell",
    "version": "0.99.4",
    "sentence": "This library adds a command line interface (CLI) to your sketch. CLI can be used for development or debugging, with all commands built-in: provides access to I2C, UART, filesystem, GPIO's etc"
  },
  {
    "name": "ESPStringTemplate",
    "version": "1.2.0",
    "sentence": "Lightweight string templating library for building static web pages on the ESP8266"
  },
  {
    "name": "ESPSupabase",
    "version": "0.1.0",
    "sentence": "A Arduino Platform Library for interfacing ESP32/ESP8266 to Supabase, including user authentication."
  },
  {
    "name": "ESPUI",
    "version": "2.2.4",
    "sentence": "ESP32 and ESP8266 Web Interface Library"
  },
  {
    "name": "ESPVGAX",
    "version": "1.0.0",
    "sentence": "VGA signal generator for ESP8266"
  },
  {
    "name": "ESPVGAX2",
    "version": "1.0.0",
    "sentence": "VGA signal generator for ESP8266"
  },
  {
    "name": "ESPWebDAV",
    "version": "2.1.5",
    "sentence": "WebDav server compatible with linux, macOS, windows."
  },
  {
    "name": "ESPWiFiMqttWrapper",
    "version": "1.0.6",
    "sentence": "ESP8266 and ESP32 WiFi - MQTT Wrapper"
  },
  {
    "name": "ESP_8_BIT Color Composite Video Library",
    "version": "1.3.2",
    "sentence": "Generate color composite TV video out signals with an ESP32."
  },
  {
    "name": "ESP_AT_Lib",
    "version": "1.5.1",
    "sentence": "WizFi360/ESP8266/ESP32-AT library for Arduino providing an easy-to-use way to control WizFi360/ESP8266-AT/ESP32-AT WiFi shields using AT-commands. For AVR, Teensy, SAM DUE, SAMD21, SAMD51, STM32, nRF52, SIPEED_MAIX_DUINO and RP2040-based (Nano_RP2040_Connect, RASPBERRY_PI_PICO, etc.) boards using WizFi360/ESP8266/ESP32 AT-command shields."
  },
  {
    "name": "ESP_AT_WM_Lite",
    "version": "1.6.0",
    "sentence": "Light-Weight WiFi/Credentials Manager for AVR Mega, SAM DUE, SAMD, nRF52, STM32, RP2040-based Nano_RP2040_connect, RASPBERRY_PI_PICO boards, etc. using WizFi360/ESP8266/ESP32-AT-command shields. Powerful-yet-simple-to-use feature to enable adding dynamic custom parameters."
  },
  {
    "name": "ESP_AT_WiFiManager",
    "version": "1.4.0",
    "sentence": "WiFi/Credentials Manager for nRF52, SAM DUE, SAMD21, SAMD51, STM32F/L/H/G/WB/MP1, RP2040-based Nano_RP2040_Connect, RASPBERRY_PI_PICO, etc. boards using WizFi360/ESP8266/ESP32-AT-command shields with fallback web configuration portal. Credentials are saved in EEPROM, SAMD FlashStorage, DueFlashStorage or nRF52/RP2040 LittleFS."
  },
  {
    "name": "ESP_DoubleResetDetector",
    "version": "1.3.2",
    "sentence": "Library to detect a double reset within a predetermined time, using RTC Memory, EEPROM, LittleFS or SPIFFS for ESP8266 and ESP32"
  },
  {
    "name": "ESP_EEPROM",
    "version": "2.2.1",
    "sentence": "An improved EEPROM library for ESP8266"
  },
  {
    "name": "ESP_FC28",
    "version": "1.0.0",
    "sentence": "Simple library for the FC-28 sensor."
  },
  {
    "name": "ESP_LM35",
    "version": "1.0.0",
    "sentence": "A library for the ESP boards to make easier using the LM35 temperature sensor."
  },
  {
    "name": "ESP_MultiResetDetector",
    "version": "1.3.2",
    "sentence": "Library to detect a multi reset within a predetermined time, using RTC Memory, EEPROM, LittleFS or SPIFFS for ESP8266 and ESP32, ESP32_C3, ESP32_S2, ESP32_S3"
  },
  {
    "name": "ESP_MultiWiFi",
    "version": "1.0.1",
    "sentence": "Library for asynchronously managing multiple WiFi connections on ESP8266."
  },
  {
    "name": "ESP_NOW_Network",
    "version": "1.0.0",
    "sentence": "ESP-NOW network library for ESP32 for Arduino-esp32 >= 3.02"
  },
  {
    "name": "ESP_SSLClient",
    "version": "2.1.16",
    "sentence": "The upgradable SSL Client for Arduino devices."
  },
  {
    "name": "ESP_TF",
    "version": "2.0.1",
    "sentence": "Tensorflow micro for esp32 with esp nn support"
  },
  {
    "name": "ESP_WiFiManager",
    "version": "1.12.1",
    "sentence": "Library to configure MultiWiFi/Credentials at runtime for ESP32 (including ESP32-S2, ESP32-S3 and ESP32-C3) and ESP8266 boards. With enhanced GUI and fallback web ConfigPortal."
  },
  {
    "name": "ESP_WiFiManager_Lite",
    "version": "1.10.5",
    "sentence": "Light-Weight MultiWiFi/Credentials Manager for ESP32 (including ESP32-S2, ESP32-S3 and ESP32-C3) and ESP8266 boards. Powerful-yet-simple-to-use feature to enable adding dynamic custom parameters."
  },
  {
    "name": "ESPboy",
    "version": "1.2.1",
    "sentence": "ESPboy Handheld Driver."
  },
  {
    "name": "ESPectro",
    "version": "0.7.5",
    "sentence": "ESPectro development board library for Arduino IDE"
  },
  {
    "name": "ESPectro32",
    "version": "0.2.0",
    "sentence": "ESPectro32 development board library for Arduino IDE"
  },
  {
    "name": "ESPert",
    "version": "1.2.6",
    "sentence": "ESPert library for Arduino IDE"
  },
  {
    "name": "ESPiLight",
    "version": "0.17.0",
    "sentence": "pilight 433.92 MHz protocols library for Arduino"
  },
  {
    "name": "ESPpassthrough",
    "version": "1.0.0",
    "sentence": "Library that uses ESP AT serial commands to set it in Passthrough (transparent) Mode."
  },
  {
    "name": "ESPping",
    "version": "1.0.5",
    "sentence": "Let the ESP32/ESP8266 ping a remote machine."
  },
  {
    "name": "ESPxRGB",
    "version": "1.0.0",
    "sentence": "RGB manipulation functions in Xtensa assembler for ESP SoCs"
  },
  {
    "name": "ESensors",
    "version": "1.4.0",
    "sentence": "Manage recordings from multiple environmental sensors."
  },
  {
    "name": "EVN",
    "version": "1.3.3",
    "sentence": "Software libraries for EVN Alpha."
  },
  {
    "name": "EWMA",
    "version": "1.0.2",
    "sentence": "Exponentially Weighted Moving Average filter used for smoothing data series readings."
  },
  {
    "name": "EZButton",
    "version": "2.5.0",
    "sentence": "Transform raw button/touch inputs into events easily."
  },
  {
    "name": "EZPROM",
    "version": "1.2.0",
    "sentence": "A library to help organize EEPROM access."
  },
  {
    "name": "EZ_USB_MIDI_HOST",
    "version": "2.1.0",
    "sentence": "Arduino MIDI Library wrapper for usb_midi_host library"
  },
  {
    "name": "EasIno",
    "version": "1.0.0",
    "sentence": "A protocol that allows to easily communicate with Arduino boards, using different communication options."
  },
  {
    "name": "Easing",
    "version": "0.1.0",
    "sentence": "Easing function library for Arduino"
  },
  {
    "name": "Easy IoT with CC1101 - Sub-1GHz LORA-like",
    "version": "2.0.2",
    "sentence": "Easy to use Arduino Library for the TI CC1101 Low-Power Sub-1GHz RF Transceiver"
  },
  {
    "name": "Easy MFRC522",
    "version": "0.2.2",
    "sentence": "Simplified reading/writing data chunks from/to RFID tags with MFRC522 module."
  },
  {
    "name": "Easy NeoPixels",
    "version": "0.2.3",
    "sentence": "Use Adafruit NeoPixels with less setup and configuration."
  },
  {
    "name": "Easy Nextion Library",
    "version": "1.0.6",
    "sentence": "Arduino library for Nextion displays"
  },
  {
    "name": "Easy SevenSeg",
    "version": "1.0.0",
    "sentence": "Easily connect and play with a seven-segment display (single-digit type)."
  },
  {
    "name": "EasyAndee",
    "version": "1.0.0",
    "sentence": "Annikken EasyAndee Library for Annikken Andee U, Android and iOS boards."
  },
  {
    "name": "EasyAndee101",
    "version": "1.0.0",
    "sentence": "Annikken EasyAndee Library for Arduino 101"
  },
  {
    "name": "EasyBNO055 ESP",
    "version": "0.0.3",
    "sentence": "Library for the Adafruit BNO055 Absolute Orientation Sensor made easier with ESP32 threads"
  },
  {
    "name": "EasyButton",
    "version": "2.0.3",
    "sentence": "Arduino library for debouncing momentary contact switches, detect press, release, long press and sequences with event definitions and callbacks."
  },
  {
    "name": "EasyButtonAtInt01",
    "version": "3.4.0",
    "sentence": "Small and easy to use Arduino library for using push buttons at any PinChangeInterrupt pin. Automatic debouncing, no delay required. Functions for long and double press detection are included."
  },
  {
    "name": "EasyBuzzer",
    "version": "1.0.4",
    "sentence": "EasyBuzzer Library"
  },
  {
    "name": "EasyColor",
    "version": "1.1.7",
    "sentence": "Color converter to many formats"
  },
  {
    "name": "EasyCommaLib",
    "version": "1.0.0",
    "sentence": "EasyComma is a light library that implements funtions for easily parse comma separed arrays"
  },
  {
    "name": "EasyDDNS",
    "version": "1.8.0",
    "sentence": "ESP8266 & ESP32 DDNS Update Client Library."
  },
  {
    "name": "EasyEspNow",
    "version": "2.0.0",
    "sentence": "An easy-to-use ESP-NOW wrapper library for ESP platform that simplifies peer communication and data handling."
  },
  {
    "name": "EasyGNSS",
    "version": "1.0.0",
    "sentence": "An easy-to-use library to parse the NMEA protocol output by the GNSS receiver (Ublox) through serial port."
  },
  {
    "name": "EasyHTTP",
    "version": "0.1.1",
    "sentence": "An ESP32 library to facilitate the execution of HTTP requests."
  },
  {
    "name": "EasyLed",
    "version": "1.1.0",
    "sentence": "Arduino library for controlling standard LEDs in an easy way. EasyLed provides simple logical methods like led.on(), led.toggle(), led.flash(), led.isOff() and more."
  },
  {
    "name": "EasyLogger",
    "version": "1.1.4",
    "sentence": "A library to do serial logging the easy and lightweight way"
  },
  {
    "name": "EasyMorse",
    "version": "1.2.0",
    "sentence": "A simplified Morse code library to be used as a method of Communication."
  },
  {
    "name": "EasyNTPClient",
    "version": "1.1.0",
    "sentence": "Library to read time from Network Time Protocol (NTP) servers."
  },
  {
    "name": "EasyOledUI",
    "version": "0.9.5",
    "sentence": "Arduino ESP32 - Simple UI generator with manus and messages"
  },
  {
    "name": "EasyOpenTherm",
    "version": "1.2.0",
    "sentence": "OpenTherm Library to control Central Heating (CH), HVAC (Heating, Ventilation, Air Conditioning) or Solar systems by creating a thermostat using Arduino IDE and ESP32 / ESP8266 hardware."
  },
  {
    "name": "EasyPCF8574",
    "version": "1.1.0",
    "sentence": "Generic library for PCF8574 easy to use"
  },
  {
    "name": "EasyPCF8575",
    "version": "1.2.3",
    "sentence": "The easiest library for PCF8575"
  },
  {
    "name": "EasyPin",
    "version": "0.1.3",
    "sentence": "An easy and simple way for manage Arduino pins."
  },
  {
    "name": "EasyPreferences",
    "version": "0.1.3",
    "sentence": "ESP32 Preferences abstraction and manager. It includes a basic keys manifest and auto setters to streamline implementation."
  },
  {
    "name": "EasySSDP",
    "version": "0.0.0",
    "sentence": "Easy, single function SSDP setup."
  },
  {
    "name": "EasySTEAM",
    "version": "3.0.3",
    "sentence": "Biblioteca para o controlador EasySTEAM"
  },
  {
    "name": "EasyStringStream",
    "version": "1.0.1",
    "sentence": "A library for string creation without std:: overhead"
  },
  {
    "name": "EasyTask",
    "version": "0.0.1",
    "sentence": "A lightweight but powerful implementation of  tasking manager."
  },
  {
    "name": "EasyUltrasonic",
    "version": "1.1.1",
    "sentence": "An Arduino library used to work with ultrasonic sensors in an easy way for measuring distance."
  },
  {
    "name": "EasyVR",
    "version": "1.11.1",
    "sentence": "A library for the EasyVR line of products."
  },
  {
    "name": "EasyWebServer",
    "version": "1.0.0",
    "sentence": "An easy-to-use web server"
  },
  {
    "name": "EasyingLib",
    "version": "1.0.0",
    "sentence": "Arduino library that implements easing functions for smooth property value change transitions"
  },
  {
    "name": "Easyiot-Esp8266",
    "version": "1.0.0",
    "sentence": "An Arduino library for sending and receiving data to an online platform using Esp8266 ESP-12E Boards."
  },
  {
    "name": "Easyuino",
    "version": "1.2.0",
    "sentence": "It offers a set of APIs to easily make beginners use several different sensors and devices using only the Easyuino"
  },
  {
    "name": "Eccel-C1",
    "version": "1.0.4",
    "sentence": "Arduino library for UART access to the Eccel Pepper C1 RFID reader"
  },
  {
    "name": "Edge-fel",
    "version": "1.0.0",
    "sentence": "Feature extraction library for Arduino."
  },
  {
    "name": "EdgeML-Arduino",
    "version": "1.3.6",
    "sentence": "Library to use the Nicla Sense ME and BLE Nano 33 with edge-ml."
  },
  {
    "name": "EdgeNeuron",
    "version": "1.1.1",
    "sentence": "TensorFlow Lite Micro library in Arduino style for TinyML applications."
  },
  {
    "name": "EdgieD",
    "version": "1.0.1",
    "sentence": "Simple, generalised edge detection for variables as well as input signals"
  },
  {
    "name": "EduBox",
    "version": "1.0.0",
    "sentence": "A library for eduBox modules."
  },
  {
    "name": "EduIntro",
    "version": "0.0.16",
    "sentence": "Library used for super-fast introduction workshops"
  },
  {
    "name": "EduShield",
    "version": "1.0.7",
    "sentence": "Display library for Arduino101.cz EDUshield"
  },
  {
    "name": "EduShield-2 Library",
    "version": "1.0.6",
    "sentence": "Arduino Library for the Edu-Shield 2 by JustPlay Software (www.justplaysoftware.com)."
  },
  {
    "name": "EducationShield",
    "version": "1.4.7",
    "sentence": "Library used for the completion of all the projects related to CTC"
  },
  {
    "name": "EepromSecureData",
    "version": "0.1.1",
    "sentence": "CRC-controlled EEPROM memory storage"
  },
  {
    "name": "Effortless-SPIFFS",
    "version": "2.3.0",
    "sentence": "A class designed to make reading and storing data on the ESP8266 and ESP32 effortless."
  },
  {
    "name": "EgoSmartHeaterRS485",
    "version": "1.0.2",
    "sentence": "Controlling the EGO Smart Heater via RS485 using Modbus"
  },
  {
    "name": "EiMOS",
    "version": "0.2.1",
    "sentence": "Versatile Mahjong Scorer"
  },
  {
    "name": "EiMOS_U8X8",
    "version": "0.2.0",
    "sentence": "Versatile Mahjong Scorer with U8G2 Displays"
  },
  {
    "name": "Eigen",
    "version": "0.3.2",
    "sentence": "Eigen (a C++ template library for linear algebra) for Arduino"
  },
  {
    "name": "ElasticNetModel",
    "version": "1.0.1",
    "sentence": "A library for ElasticNet regression modeling with coefficient updates based on feedback."
  },
  {
    "name": "Electronic Cats PN7150",
    "version": "2.1.0",
    "sentence": "Arduino library for SPI and I2C access to the PN7150 RFID/Near Field Communication chip."
  },
  {
    "name": "ElectronicsEducation",
    "version": "1.1.3",
    "sentence": "Arduino libraries and educational materials for workshop"
  },
  {
    "name": "ElegantOTA",
    "version": "3.1.6",
    "sentence": "OTA updates made slick and simple for everyone!"
  },
  {
    "name": "Elegoo",
    "version": "1.3.1",
    "sentence": "This is a library to use the ELEGOO Smart Robot Car Kit."
  },
  {
    "name": "Elektor_AudioDSP",
    "version": "0.4.0",
    "sentence": "Driver for the Elektor Audio DSP FX Processor board with ESP32-PICO-KIT and ADAU1701."
  },
  {
    "name": "Elog",
    "version": "2.0.5",
    "sentence": "The ultimate logger for ESP32"
  },
  {
    "name": "EloquentArduino",
    "version": "2.1.3",
    "sentence": "An eloquent interface to common Arduino patterns, data structures and algorithms"
  },
  {
    "name": "EloquentEsp32cam",
    "version": "2.7.15",
    "sentence": "Use your Esp32-cam like an expert"
  },
  {
    "name": "EloquentRTLS",
    "version": "1.0.0",
    "sentence": "RTLS (Real Time Location System) for Arduino and ESP32"
  },
  {
    "name": "EloquentSurveillance",
    "version": "1.0.18",
    "sentence": "Esp32-cam surveillance system, batteries included"
  },
  {
    "name": "EloquentTensorFlow32",
    "version": "1.0.4",
    "sentence": "An eloquent interface to Tensorflow Lite for Microcontrollers for ESP32 chipset"
  },
  {
    "name": "EloquentTensorFlowCortexM",
    "version": "1.0.0",
    "sentence": "An eloquent interface to Tensorflow Lite for Microcontrollers for Cortex-M chipset"
  },
  {
    "name": "EloquentTinyML",
    "version": "3.0.1",
    "sentence": "An eloquent interface to Tensorflow Lite for Microcontrollers"
  },
  {
    "name": "EloquentVision",
    "version": "0.0.5",
    "sentence": "Image processing datatypes and algorithms for Arduino and Esp32"
  },
  {
    "name": "Eloquent_EdgeImpulse",
    "version": "1.0.0",
    "sentence": "Easy Edge Impulse integration"
  },
  {
    "name": "EmSevenSegment",
    "version": "1.0.3",
    "sentence": "Arduino library to drive multiple-digit 7-segment LED displays using HEF4094B, CD4094B,  CD4094BMS, MC74HCT4094A and other 4094 shift registers."
  },
  {
    "name": "EmbAJAX",
    "version": "0.2.0",
    "sentence": "Framework for displays and controls on a web page"
  },
  {
    "name": "EmbUI",
    "version": "2.7.0",
    "sentence": "Embedded Web UI framework for esp8266/esp32/esp32-c3/esp32-s2/esp32-s3 IoT prototyping"
  },
  {
    "name": "EmbedUI",
    "version": "1.1.2",
    "sentence": "EmbedUI  is an open source Project, for enthusiasts to speed-up & visualize UI development using Embedded Hardware."
  },
  {
    "name": "Embedded Template Library ETL",
    "version": "20.39.4",
    "sentence": "ETL. A C++ template library tailored for embedded systems."
  },
  {
    "name": "Embedded Type-C PID",
    "version": "1.1.3",
    "sentence": "PID controller (Type-C) with a flexible API and errors handling."
  },
  {
    "name": "EmbeddedMqttBroker",
    "version": "1.0.7-qos0",
    "sentence": "Mqtt Broker for embedded systems, tested on an Esp32 and esp8266."
  },
  {
    "name": "EmbeddedSparkplugNode",
    "version": "0.2.4",
    "sentence": "Sparkplug B / Sparkplug 3 Edge Node Library."
  },
  {
    "name": "EmbeddedUtils",
    "version": "0.1.1",
    "sentence": "collections of utility headers for embedded c++"
  },
  {
    "name": "EmbeddronicsBleOTA",
    "version": "1.0.0",
    "sentence": "Bluetooth low energy (BLE) library for updating firmware over ble."
  },
  {
    "name": "Embedis",
    "version": "1.2.0",
    "sentence": "An Embedded Dictionary Server."
  },
  {
    "name": "EmberGL",
    "version": "0.1.1",
    "sentence": "Low-Level 2D/3D Graphics Library"
  },
  {
    "name": "EmonLib",
    "version": "1.1.0",
    "sentence": "Energy Monitoring Library"
  },
  {
    "name": "EmotiBit ADS1X15",
    "version": "2.2.0+EmotiBit.0.0.1",
    "sentence": "Arduino library for ADS1015/1115 ADCs."
  },
  {
    "name": "EmotiBit ArduinoFilters",
    "version": "1.0.0",
    "sentence": "Filter library for Arduino."
  },
  {
    "name": "EmotiBit BMI160",
    "version": "0.3.3",
    "sentence": "A library written for EmotiBit that supports the BMI160 and BMM150 IMU"
  },
  {
    "name": "EmotiBit EmojiLib",
    "version": "0.0.1",
    "sentence": "Library to draw Emoji when using EmotiBit with appropriate Feather Wings"
  },
  {
    "name": "EmotiBit External EEPROM",
    "version": "1.0.5+EmotiBit.0.0.1",
    "sentence": "Library for I2C Communication with external EEPROMs"
  },
  {
    "name": "EmotiBit FeatherWing",
    "version": "1.12.1",
    "sentence": "A library written for EmotiBit FeatherWing that supports all sensors included on the wing."
  },
  {
    "name": "EmotiBit KTD2026",
    "version": "0.0.1",
    "sentence": "Library for controlling KTD2026 led driver and its variants"
  },
  {
    "name": "EmotiBit MAX30101",
    "version": "2.0.3",
    "sentence": "Library for the MAX30101 Pulse sensor on board the EmotiBit-Beta boards"
  },
  {
    "name": "EmotiBit MLX90632",
    "version": "1.0.8",
    "sentence": "Library for using MLX90632 FIR sensor"
  },
  {
    "name": "EmotiBit NCP5623",
    "version": "0.1.0",
    "sentence": "Library for the NCP5623 LED driver"
  },
  {
    "name": "EmotiBit SI7013",
    "version": "0.0.7",
    "sentence": "A library written for EmotiBit that supports the Si7013 temperature and humidity module"
  },
  {
    "name": "EmotiBit SimpleFTPServer",
    "version": "2.1.7+EmotiBit.0.0.1",
    "sentence": "Fork of SimpleFtpServer for EmotiBit"
  },
  {
    "name": "EmotiBit XPlat Utils",
    "version": "1.6.0",
    "sentence": "A Utilities Library required for the successfull operation of EmotiBit FeatherWing and EmotiBit Oscilloscope Library"
  },
  {
    "name": "EmuRTC",
    "version": "1.0.0",
    "sentence": "Emulated Real Time"
  },
  {
    "name": "Emulation",
    "version": "0.1.6",
    "sentence": "A comprehensive mocking framework for seamless unit testing in PlatformIO."
  },
  {
    "name": "EnableInterrupt",
    "version": "1.1.0",
    "sentence": "Assign an interrupt to any supported pin on all Arduinos, plus ATtiny 84/85 and ATmega 644/1284."
  },
  {
    "name": "EncButton",
    "version": "3.7.2",
    "sentence": "Light and powerful library for button and encoder operation for Arduino"
  },
  {
    "name": "Encoder",
    "version": "1.4.4",
    "sentence": "Counts quadrature pulses from rotary & linear position encoders."
  },
  {
    "name": "EncoderAdapter",
    "version": "0.5.2",
    "sentence": "A very thin adapter class to enable different encoder libraries to provide the same API."
  },
  {
    "name": "EncoderButton",
    "version": "1.0.6",
    "sentence": "Lossless event based rotary encoder & button library"
  },
  {
    "name": "EncoderStepCounter",
    "version": "1.1.0",
    "sentence": "Quadrature Encoder library for half-step and full-step encoders."
  },
  {
    "name": "EncoderTool",
    "version": "3.2.2",
    "sentence": "Library to read out mechanical rotary encoders"
  },
  {
    "name": "Endo-Continuum-Robot",
    "version": "1.0.0",
    "sentence": "The Endo Continuum Robot Library"
  },
  {
    "name": "Energesis LM35",
    "version": "0.1.2",
    "sentence": "Driver for LM35 series temperature sensor."
  },
  {
    "name": "Energesis_GenericSensor",
    "version": "0.3.1",
    "sentence": "Generic interface for standardized implementation of sensor drivers."
  },
  {
    "name": "Energia-EBP_MKII",
    "version": "1.0.1",
    "sentence": "Educational BoosterPack MKII examples from Energia application."
  },
  {
    "name": "Energia-MultiTas",
    "version": "1.0.1",
    "sentence": "MultiTasking examples from Energia application."
  },
  {
    "name": "Energize Lab Servo",
    "version": "1.0.0",
    "sentence": "Library for controlling Energize Lab Servo."
  },
  {
    "name": "EnergyBoard",
    "version": "3.0.3",
    "sentence": "Enables reading polyphase energy-monitor parameters of LVX EnergyBoard"
  },
  {
    "name": "EnergyMeter",
    "version": "1.0.0",
    "sentence": "Arduino library to get data from energy meters in order to monitor them."
  },
  {
    "name": "Engineer EasyEEPROM",
    "version": "1.0.2",
    "sentence": "Arduino library for easy work with EEPROM. (AVR and ESP)"
  },
  {
    "name": "Engineer Regulator",
    "version": "1.0.1",
    "sentence": "Arduino library for temperature controller. Stores settings in EEPROM. Hysteresis. (AVR and ESP)"
  },
  {
    "name": "EnviroDIY_DS3231",
    "version": "1.3.6",
    "sentence": "An Arduino library for the DS3231 RTC (Real Time Clock)."
  },
  {
    "name": "Environment",
    "version": "3.2.17",
    "sentence": "Read enviroment sensors"
  },
  {
    "name": "Ephemeris",
    "version": "1.0.1",
    "sentence": "Arduino library for the calculation of ephemeris of the solar system with an Arduino Mega."
  },
  {
    "name": "Epson_PNL_CE02",
    "version": "1.0.1",
    "sentence": "Library to repurposing the control panel (PNL CE02) of EPSON XP 520/530/540 printers from an Arduino."
  },
  {
    "name": "Epson_SU_SPI",
    "version": "1.3.0",
    "sentence": "Sensing Unit Library using SPI for Epson M-Gxxx & Accelerometer M-A352"
  },
  {
    "name": "Epson_SU_UART",
    "version": "1.4.0",
    "sentence": "Sensing Unit Library using UART for Epson IMU M-Gxxx & Accelerometer M-A352"
  },
  {
    "name": "Eridano-Septentrio",
    "version": "1.0.0",
    "sentence": "An Arduino library for Septentrio products"
  },
  {
    "name": "EscalatorSwitch",
    "version": "1.0.2",
    "sentence": "A library that supports the Escalator Switch."
  },
  {
    "name": "EscapeAutomate",
    "version": "0.0.29",
    "sentence": "EscapeAutomate Library"
  },
  {
    "name": "Escon",
    "version": "1.0.0",
    "sentence": "A library for IoT Device"
  },
  {
    "name": "Escornabot-Library",
    "version": "1.1.0",
    "sentence": "Librería para Escornabot"
  },
  {
    "name": "Escornabot-lib",
    "version": "1.2.0",
    "sentence": "Escornabot library for Arduino."
  },
  {
    "name": "EscornabotEXT",
    "version": "0.7.1",
    "sentence": "Library for Escornabot EXT."
  },
  {
    "name": "Esp32SimplePacketComs",
    "version": "3.0.2",
    "sentence": "This Arduino library supports Simple Packet Coms for Esp32."
  },
  {
    "name": "Esp32WifiManager",
    "version": "1.0.2",
    "sentence": "This Arduino library supports Wifi Management for Esp32."
  },
  {
    "name": "Esp8266-Mqtt-Canary",
    "version": "3.0.0",
    "sentence": "Create an ESP8266 OpenCanary Honeypot"
  },
  {
    "name": "EspATMQTT",
    "version": "1.0.0",
    "sentence": "Support library for the the MQTT functionality in the ESP-AT interpreter."
  },
  {
    "name": "EspBootstrap",
    "version": "2.3.2",
    "sentence": "Library helps bring new esp devices online and connected into ecosystem"
  },
  {
    "name": "EspEasyUtils",
    "version": "1.0.8",
    "sentence": "ESP32 Easy Utils"
  },
  {
    "name": "EspFileManager",
    "version": "1.0.1",
    "sentence": "Web-based file manager for ESP32 file operations."
  },
  {
    "name": "EspHtmlTemplateProcessor",
    "version": "1.2.1",
    "sentence": "A library that provide simple HTML template processing for ESP using SPIFFS"
  },
  {
    "name": "EspMQTTClient",
    "version": "1.13.3",
    "sentence": "A library that provides a wifi and MQTT connection to an ESP8266/ESP32"
  },
  {
    "name": "EspMQTTClientFork",
    "version": "1.13.4",
    "sentence": "A library that provides a wifi and MQTT connection to an ESP8266/ESP32"
  },
  {
    "name": "EspNow2Mqtt",
    "version": "1.3.1",
    "sentence": "Use Esp-now to connect to mqtt and send and recive data."
  },
  {
    "name": "EspNowCam",
    "version": "0.1.16",
    "sentence": "ESPNowCam, a straightforward video streamer for popular ESP32Cam models, leveraging the ESPNow protocol. No need for IPs, routers, or credentials—keeping it simple! :D"
  },
  {
    "name": "EspNowJoystick",
    "version": "0.1.5",
    "sentence": "Abstraction of ESP-Now and Protocol Buffers to have improved joystick for any kind of hardware"
  },
  {
    "name": "EspNowNetworkHost",
    "version": "0.7.4",
    "sentence": "Node code for the EspNowNetwork"
  },
  {
    "name": "EspNowNetworkHostDriver",
    "version": "0.7.3",
    "sentence": "Host driver code for the EspNowNetwork"
  },
  {
    "name": "EspNowNetworkNode",
    "version": "0.7.5",
    "sentence": "Node code for the EspNowNetwork"
  },
  {
    "name": "EspNowNetworkShared",
    "version": "1.0.0",
    "sentence": "Shared code for the EspNowNetwork"
  },
  {
    "name": "EspSaveCrash",
    "version": "1.3.0",
    "sentence": "Automatically saves exception details and stack trace to flash in case of ESP8266 crash."
  },
  {
    "name": "EspSimpleRemoteUpdate",
    "version": "0.1.0",
    "sentence": "Simple remote update handling for ESP8266/ESP32"
  },
  {
    "name": "EspSimpleWifiHandler",
    "version": "0.1.0",
    "sentence": "Simple and automatic WiFi handling for ESP8266/ESP32"
  },
  {
    "name": "EspSleep",
    "version": "1.0.3",
    "sentence": "Library for esp8266 unlimited deep sleep period"
  },
  {
    "name": "EspSoftwareSerial",
    "version": "8.1.0",
    "sentence": "Implementation of the Arduino software serial for ESP8266/ESP32."
  },
  {
    "name": "EspUsbHost",
    "version": "1.0.1",
    "sentence": "This is a library for using USB Host with ESP32."
  },
  {
    "name": "EspWebFileManager",
    "version": "2.1.0",
    "sentence": "A library to manage various file systems and provide file management over web interface for ESP32."
  },
  {
    "name": "EspWii",
    "version": "0.4.0",
    "sentence": "A library to send Wii extension controllers data over wifi."
  },
  {
    "name": "Espalexa",
    "version": "2.7.0",
    "sentence": "Library to control an ESP module with the Alexa voice assistant"
  },
  {
    "name": "Esparto",
    "version": "3.3.0",
    "sentence": "Rapid development framework, synchronous task queue and GPIO manager (plus more) for ESP8266 devices"
  },
  {
    "name": "Esplora",
    "version": "1.0.4",
    "sentence": "Grants easy access to the various sensors and actuators of the Esplora. For Arduino Esplora only."
  },
  {
    "name": "Espressif ESP32 Azure IoT Kit Sensors",
    "version": "1.0.0-beta.1",
    "sentence": "Unofficial Arduino library for interacting with sensors in the Espressif ESP32 Azure IoT Kit development board."
  },
  {
    "name": "EtherCard",
    "version": "1.1.0",
    "sentence": "EtherCard is an IPv4 driver for the ENC28J60 chip."
  },
  {
    "name": "EtherSia",
    "version": "2.4.0",
    "sentence": "IPv6 library for the ENC28J60, W5500 or W5100 Ethernet controllers"
  },
  {
    "name": "Etherkit JTEncode",
    "version": "1.3.1",
    "sentence": "Generate JT65, JT9, JT4, FT8, WSPR, and FSQ symbols on your Arduino."
  },
  {
    "name": "Etherkit Morse",
    "version": "1.1.2",
    "sentence": "Generate Morse Code for transmission on an digital I/O pin."
  },
  {
    "name": "Etherkit Si5351",
    "version": "2.2.0",
    "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs"
  },
  {
    "name": "Ethernet",
    "version": "2.0.2",
    "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet Board or Shield."
  },
  {
    "name": "Ethernet2",
    "version": "1.0.4",
    "sentence": "Enables network connection (local and Internet) using W5500 based Ethernet shields."
  },
  {
    "name": "Ethernet3",
    "version": "1.5.6",
    "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet board or shield. For all Arduino boards."
  },
  {
    "name": "EthernetBonjour",
    "version": "1.0.0",
    "sentence": "Bonjour (ZeroConf) Library for Arduino & Teensyduino"
  },
  {
    "name": "EthernetENC",
    "version": "2.0.5",
    "sentence": "Ethernet library for ENC28J60. Only include EthernetENC.h instead of Ethernet.h"
  },
  {
    "name": "EthernetESP32",
    "version": "1.0.2",
    "sentence": "Alternative Ethernet library for the ESP32 platform."
  },
  {
    "name": "EthernetEspAT",
    "version": "1.0.0",
    "sentence": "Enables wired (secure) network connection with esp8266 or esp32 as network adapter on Serial interface."
  },
  {
    "name": "EthernetIndustruino",
    "version": "1.0.0",
    "sentence": "Library for the Industruino Ethernet module"
  },
  {
    "name": "EthernetSP",
    "version": "1.0.2",
    "sentence": "Enables network connection using the W5500-Ether add-on for Spresense."
  },
  {
    "name": "EthernetWebServer",
    "version": "2.4.1",
    "sentence": "Simple Ethernet WebServer, HTTP Client and WebSocket Client library for AVR, AVR Dx, Portenta_H7, Teensy, SAM DUE, SAMD21, SAMD51, STM32F/L/H/G/WB/MP1, nRF52 and RASPBERRY_PI_PICO boards using Ethernet shields W5100, W5200, W5500, W6100, ENC28J60 or Teensy 4.1 NativeEthernet/QNEthernet"
  },
  {
    "name": "EthernetWebServer_SSL",
    "version": "1.10.0",
    "sentence": "Simple TLS/SSL Ethernet WebServer, HTTP Client and WebSocket Client library for for AVR, Portenta_H7, Teensy, SAM DUE, SAMD21, SAMD51, STM32F/L/H/G/WB/MP1, nRF52 and RASPBERRY_PI_PICO boards using Ethernet shields W5100, W5200, W5500, ENC28J60 or Teensy 4.1 NativeEthernet/QNEthernet. It now supports Ethernet TLS/SSL Client."
  },
  {
    "name": "EthernetWebServer_SSL_STM32",
    "version": "1.6.0",
    "sentence": "Simple TLS/SSL Ethernet WebServer, HTTP Client and WebSocket Client library for STM32F/L/H/G/WB/MP1 boards running WebServer using built-in Ethernet LAN8742A, Ethernet LAN8720, W5x00 or ENC28J60 shields. It now supports Ethernet TLS/SSL Client."
  },
  {
    "name": "EthernetWebServer_STM32",
    "version": "1.5.0",
    "sentence": "EthernetWebServer_STM32 is a simple Ethernet WebServer, HTTP Client and WebSocket Client library for STM32F/L/H/G/WB/MP1 boards using built-in Ethernet LAN8742A, LAN8720, Ethernet W5x00 or ENC28J60 shields"
  },
  {
    "name": "Ethernet_Generic",
    "version": "2.8.1",
    "sentence": "Simple Ethernet library for AVR, AVR Dx, Portenta_H7, Teensy, SAM DUE, SAMD21, SAMD51, STM32F/L/H/G/WB/MP1, nRF52 and RASPBERRY_PI_PICO boards using Ethernet shields W5100, W5200, W5500, W5100S, W6100"
  },
  {
    "name": "Ethernet_Manager",
    "version": "1.8.1",
    "sentence": "Simple Ethernet Manager for Teensy, SAM DUE, SAMD, nRF52, ESP32 (including ESP32-S2/C3), ESP8266, RP2040-based Nano_RP2040_Connect, RASPBERRY_PI_PICO, etc. boards. Config data saved in ESP LittleFS, SPIFFS or EEPROM, nRF52 LittleFS, EEPROM, DueFlashStorage or SAMD FlashStorage."
  },
  {
    "name": "Ethernet_Manager_Portenta_H7",
    "version": "1.6.1",
    "sentence": "Simple Ethernet Manager for Portenta_H7 board using Ethernet from Portenta Vision shield. Config data saved in LittleFS."
  },
  {
    "name": "Ethernet_Manager_STM32",
    "version": "1.3.2",
    "sentence": "Simple Ethernet Manager for STM32F/L/H/G/WB/MP1 boards with Ethernet LAN8720, W5x00, ENC28J60 or built-in LAN8742A shields, with or without SSL, configuration data saved in EEPROM. With DoubleResetDetect feature."
  },
  {
    "name": "Ethernet_Shield_W5200",
    "version": "1.0.0",
    "sentence": "Arduino library to control Ethernet Shield W5200."
  },
  {
    "name": "EventAnalog",
    "version": "1.0.4",
    "sentence": "Event based library for analog inputs."
  },
  {
    "name": "EventBasedFramework",
    "version": "0.1.6",
    "sentence": "EBF - Event Based Framework for Arduino"
  },
  {
    "name": "EventButton",
    "version": "1.0.3",
    "sentence": "Event based button library"
  },
  {
    "name": "EventEmitter",
    "version": "1.0.0",
    "sentence": "Lightweight Node.js-style EventEmitter for Arduino."
  },
  {
    "name": "EventEthernet",
    "version": "1.0.0",
    "sentence": "Enables network connection (local and Internet) for Arduino, running on W5100S-EVB-Pico board"
  },
  {
    "name": "EventJoystick",
    "version": "1.0.2",
    "sentence": "Event based library for analog joysticks."
  },
  {
    "name": "EventOS",
    "version": "1.1.2",
    "sentence": "Library for event-driven embedded devices programming (hardware interruputs for all pins)."
  },
  {
    "name": "EventSystem",
    "version": "1.2.2",
    "sentence": "Event based system that monitor variables and fire event when the variable change."
  },
  {
    "name": "Eventfun",
    "version": "0.1.3",
    "sentence": "Basic building blocks for event-driven Arduino sketches."
  },
  {
    "name": "Eventually",
    "version": "0.1.5",
    "sentence": "Event-based programming library for Arduino"
  },
  {
    "name": "Eventually2",
    "version": "2.1.0",
    "sentence": "Event-based programming library for Arduino"
  },
  {
    "name": "EventuallyCommand",
    "version": "0.4.0",
    "sentence": "Trigger Eventually event from a serial command"
  },
  {
    "name": "EventuallyStateMachine",
    "version": "0.3.0",
    "sentence": "Extends Eventually with a state machine"
  },
  {
    "name": "Eventuino",
    "version": "1.0.3",
    "sentence": "C++ Event Framework for Arduino"
  },
  {
    "name": "Every",
    "version": "3.1.0",
    "sentence": "Non-blocking replacements for delay()."
  },
  {
    "name": "EveryTimer",
    "version": "1.1.1",
    "sentence": "A library providing the possibility to call a function at specific time intervals."
  },
  {
    "name": "ExampleLibrary",
    "version": "0.0.2",
    "sentence": "An example of how to create a public Arduino Library, that is automatically uploaded into the Arduino Library Manager for public consumption."
  },
  {
    "name": "Excelsior",
    "version": "1.2.3",
    "sentence": "Functions as a beginners guide to programm the Excelsior-Brick."
  },
  {
    "name": "Excelsior_Ambassador",
    "version": "1.0.0",
    "sentence": "Functions as an extensions for the Excelsior Brick."
  },
  {
    "name": "Excelsior_Light",
    "version": "1.0.1",
    "sentence": "Used for easy use of the Excelsior Lightsensor"
  },
  {
    "name": "Executive",
    "version": "1.1.1",
    "sentence": "Execute routines to specified schedule"
  },
  {
    "name": "ExodeCore",
    "version": "1.0.0",
    "sentence": "Communication between Arduino microcontroller boards and a connected computers."
  },
  {
    "name": "Exosite",
    "version": "2.6.2",
    "sentence": "Easily interface with Exosite's device HTTP API."
  },
  {
    "name": "ExponentMap",
    "version": "1.0.0",
    "sentence": "Generates an exponentially growing array based on provided number of steps and maximum value."
  },
  {
    "name": "ExtFlashLoader",
    "version": "0.1.2",
    "sentence": "Downloads application binary to external flash memory connected to ATSAMD51 MCU and run it."
  },
  {
    "name": "ExtendedTouchEvent",
    "version": "2.0.1",
    "sentence": "An eventmanager for touchscreens with XPT2046 controlerchip"
  },
  {
    "name": "EzArduino",
    "version": "1.0.2",
    "sentence": "A library that makes coding wtih Arduino easier by providing simple OOP based components"
  },
  {
    "name": "EzDmaHelper",
    "version": "0.2.0-alpha",
    "sentence": "Buffer management helper for use with EasyDMA-enabled hardware.  MIT License."
  },
  {
    "name": "EzLoRaWAN",
    "version": "1.0.1",
    "sentence": "ESP 32 port of the Arduino TheThingsNetwork library."
  },
  {
    "name": "EzLoRaWAN_BLE",
    "version": "1.0.0",
    "sentence": "BLE OTAA provisioning for library EzLoRaWAN."
  },
  {
    "name": "FC0001614614",
    "version": "1.1.0",
    "sentence": "Quad, High-Voltage EL Lamp Driver with I²C Interface."
  },
  {
    "name": "FC0003390327",
    "version": "0.2.0",
    "sentence": "Library for the Quectel EG25-G LTE"
  },
  {
    "name": "FC0005748911",
    "version": "0.1.0",
    "sentence": "Firechip - Micro Crystal RV-8263 Arduino Library a Real-Time Clock Module with I2C-Bus"
  },
  {
    "name": "FCWRobot_Model2",
    "version": "1.0.1",
    "sentence": "The library array that is needed for the FCW Robot Model2."
  },
  {
    "name": "FDC2214",
    "version": "1.1.0",
    "sentence": "TI FDC2214 capacitative sensor library"
  },
  {
    "name": "FED3",
    "version": "1.16.3",
    "sentence": "This is a library for operating FED3"
  },
  {
    "name": "FFT",
    "version": "0.0.1",
    "sentence": "Library for FFT"
  },
  {
    "name": "FFT_C",
    "version": "1.0.0",
    "sentence": "FFT library in C"
  },
  {
    "name": "FHEM",
    "version": "0.0.4",
    "sentence": "This library allows communication with a FHEM Server."
  },
  {
    "name": "FIFOEE",
    "version": "0.3.3",
    "sentence": "EEPROM FIFO"
  },
  {
    "name": "FIFObuf",
    "version": "1.1.2",
    "sentence": "A library for buffering items into a FIFO/LIFO buffer"
  },
  {
    "name": "FIR filter",
    "version": "0.1.1",
    "sentence": "FIR filter library for the Arduino."
  },
  {
    "name": "FIR-Filter",
    "version": "1.0.0",
    "sentence": "Finite Impulse Response Filter for filtering signals/sensor data."
  },
  {
    "name": "FLE",
    "version": "0.1.4",
    "sentence": "Arduino library for FLE = FLoat with Error datatype"
  },
  {
    "name": "FLINT_E220-900T22S-JP",
    "version": "0.0.2",
    "sentence": "This library supports E220-900T22S(JP) of CLEALINK TECHNOLOGY Co., Ltd."
  },
  {
    "name": "FM25060",
    "version": "1.0.7",
    "sentence": "Library for controling FM25060 inverter circuit"
  },
  {
    "name": "FMDataClient",
    "version": "0.0.3",
    "sentence": "Filemaker 17 DATA API Client (ESP32)"
  },
  {
    "name": "FORCE2",
    "version": "0.0.1",
    "sentence": "This is a library for operating FORCE2"
  },
  {
    "name": "FOR_MACRO",
    "version": "1.0.0",
    "sentence": "For macro library"
  },
  {
    "name": "FPGAArcade Replay MKR Vidor 4000",
    "version": "1.701.0",
    "sentence": "Enables access to FPGAArcade Replay cores on the MKR Vidor 4000."
  },
  {
    "name": "FRAM_Cache",
    "version": "1.1.2",
    "sentence": "FRAM Cache"
  },
  {
    "name": "FRAM_I2C",
    "version": "0.8.2",
    "sentence": "Arduino library for I2C FRAM for persistent storage."
  },
  {
    "name": "FS_MX1508",
    "version": "1.1.0",
    "sentence": "Library that makes using mx1508 dual DC motor driver easier. It can be used also with a lot of simple H-Bridge DC Motor Drivers using two input pins (such as DRV8871, RZ7886, TC118SS, etc...)"
  },
  {
    "name": "FS_Nano33BLE",
    "version": "1.2.1",
    "sentence": "Wrapper of FS (FATFS or LittleFS) for Arduino MBED nRF52840-based boards, such as Nano_33_BLE boards"
  },
  {
    "name": "FSerial",
    "version": "1.0.0",
    "sentence": "A Delay Less Communication Protocol."
  },
  {
    "name": "FT6236G",
    "version": "1.0.0",
    "sentence": "capacitive touch sensor."
  },
  {
    "name": "FT81x Arduino Driver",
    "version": "0.14.0",
    "sentence": "Graphics library for the open source FT81x display driver board."
  },
  {
    "name": "FTDebouncer",
    "version": "1.3.3",
    "sentence": "An efficient, low footprint, fast pin debouncing library for Arduino"
  },
  {
    "name": "FTOLED",
    "version": "1.1.3",
    "sentence": "Library to drive Freetronics OLED128 128x128 display."
  },
  {
    "name": "FTPClient_Generic",
    "version": "1.6.0",
    "sentence": "FTP Client for Generic boards such as AVR Mega, megaAVR, Portenta_H7, Teensy, SAM DUE, SAMD21, SAMD51, STM32F/L/H/G/WB/MP1, nRF52, RP2040-based (Nano-RP2040-Connect, RASPBERRY_PI_PICO, RP2040W, etc.), ESP32/ESP8266 using Ethernet"
  },
  {
    "name": "FTP_Server_Teensy41",
    "version": "1.2.0",
    "sentence": "FTP Server for Teensy 4.1 using SD, FS, etc."
  },
  {
    "name": "FTPduino",
    "version": "1.0.2",
    "sentence": "An easy to use FTP client library for the Arduino ecosystem."
  },
  {
    "name": "FTRGBLED",
    "version": "1.0.0",
    "sentence": "Freetronics RGBLED module (WS2801-based) driver library."
  },
  {
    "name": "FTServo",
    "version": "2.0.0",
    "sentence": "FEETECH BUS Servo library for Arduino and ESP32"
  },
  {
    "name": "FTTech Aqualabo Sensors",
    "version": "1.0.2",
    "sentence": "Aqualabo Sensor Library for Arduino, using ArduinoModbus through RS485"
  },
  {
    "name": "FTTech LoRaWAN",
    "version": "0.2.0",
    "sentence": "Arduino IDE Library to make our SAMD51 interface with RAK811 20 pin click easier to use."
  },
  {
    "name": "FTTech SAMD51 Clicks",
    "version": "1.3.7",
    "sentence": "Arduino IDE Library to make our SAMD51 easier to use."
  },
  {
    "name": "FTTech SAMD51 XBee",
    "version": "1.5.0",
    "sentence": "Arduino library to make easier to use an XBee."
  },
  {
    "name": "FTTech Swarm",
    "version": "0.1.1",
    "sentence": "Arduino IDE Library to make our SmartNode Swarm easier to use."
  },
  {
    "name": "FUSB302 PD UFP sink",
    "version": "0.1.0",
    "sentence": "Arduino library for the FUSB302 USB power delivery controller IC."
  },
  {
    "name": "FVS",
    "version": "2.0.1",
    "sentence": "Beinhaltet die Funktionen portMode, portWrite, portRead."
  },
  {
    "name": "FXLS89xx_Arduino",
    "version": "2.0.1",
    "sentence": "An library for NXP FXLS89xx"
  },
  {
    "name": "FXPS7xxx_Arduino",
    "version": "1.0.0",
    "sentence": "A library for NXP FXPS7xxx"
  },
  {
    "name": "FaBo 201 3Axis ADXL345",
    "version": "1.0.2",
    "sentence": "A library for FaBo 3AXIS I2C Brick"
  },
  {
    "name": "FaBo 202 9Axis MPU9250",
    "version": "1.0.1",
    "sentence": "A library for FaBo 9Axis I2C Brick"
  },
  {
    "name": "FaBo 203 Color S11059",
    "version": "1.0.2",
    "sentence": "A library for FaBo Color I2C Brick"
  },
  {
    "name": "FaBo 204 Baromter MPL115A2",
    "version": "1.0.0",
    "sentence": "A library for FaBo Barometer I2C Brick"
  },
  {
    "name": "FaBo 205 Proximity VCNL4010",
    "version": "1.0.0",
    "sentence": "A library for FaBo Proximity I2C Brick"
  },
  {
    "name": "FaBo 206 UV Si1132",
    "version": "1.1.0",
    "sentence": "A library for FaBo UV I2C Brick"
  },
  {
    "name": "FaBo 207 Temperature ADT7410",
    "version": "1.0.1",
    "sentence": "A library for FaBo Temperature I2C Brick"
  },
  {
    "name": "FaBo 208 Humidity HTS221",
    "version": "1.0.0",
    "sentence": "A library for FaBo Humidity I2C Brick"
  },
  {
    "name": "FaBo 209 KTemp MCP3421",
    "version": "1.0.0",
    "sentence": "A library for FaBo KTemp I2C Brick"
  },
  {
    "name": "FaBo 210 GPIO PCAL6408A",
    "version": "1.0.0",
    "sentence": "A library for FaBo GPIO I2C Brick"
  },
  {
    "name": "FaBo 211 7Segment LED TLC59208F",
    "version": "1.0.2",
    "sentence": "A library for FaBo 7Segment LED I2C Brick"
  },
  {
    "name": "FaBo 212 LCD PCF8574",
    "version": "1.0.0",
    "sentence": "A library for FaBo LCD I2C Brick"
  },
  {
    "name": "FaBo 213 LCD mini AQM0802A",
    "version": "1.0.0",
    "sentence": "A library for FaBo LCD mini I2C Brick"
  },
  {
    "name": "FaBo 214 OLED EROLED096",
    "version": "1.0.0",
    "sentence": "A library for FaBo OLED I2C Brick"
  },
  {
    "name": "FaBo 215 RTC PCF2129",
    "version": "1.0.0",
    "sentence": "A library for FaBo RTC I2C Brick"
  },
  {
    "name": "FaBo 217 Ambient Light ISL29034",
    "version": "1.0.1",
    "sentence": "A library for FaBo Ambient Light I2C Brick"
  },
  {
    "name": "FaBo 222 Environment BME680",
    "version": "1.0.0",
    "sentence": "A library for FaBo Environment I2C Brick"
  },
  {
    "name": "FaBo 223 Gas CCS811",
    "version": "1.0.0",
    "sentence": "A library for CCS811 that getting values of CO2 and TVOC."
  },
  {
    "name": "FaBo 230 Color BH1749NUC",
    "version": "1.0.0",
    "sentence": "A library for FaBo Color I2C Brick"
  },
  {
    "name": "FaBo 301 BLE SiliconLabs",
    "version": "1.0.1",
    "sentence": "A library for SiliconLabs BLE113."
  },
  {
    "name": "FaBo 307 BLE Nordic",
    "version": "1.0.1",
    "sentence": "A library for nRF5x."
  },
  {
    "name": "FaBo GPIO40 PCA9698",
    "version": "1.0.0",
    "sentence": "A library for FaBo GPIO."
  },
  {
    "name": "FaBo Motor DRV8830",
    "version": "1.0.0",
    "sentence": "A library for FaBo Motor."
  },
  {
    "name": "FaBo PWM PCA9685",
    "version": "1.0.0",
    "sentence": "A library for FaBo PWM."
  },
  {
    "name": "FabGL",
    "version": "1.0.9",
    "sentence": "ESP32 VGA, PAL/NTSC Color Composite, SSD1306 ILI9341 ST7789 Controller, PS/2 Mouse and Keyboard Controller, Graphics Library, Graphical User Interface (GUI), Sound Engine, Game Engine and ANSI/VT Terminal"
  },
  {
    "name": "Fabrik2D",
    "version": "1.0.6",
    "sentence": "A library for fast solving of inverse kinematics using the FABRIK algorithm."
  },
  {
    "name": "FacebookApi",
    "version": "1.0.0",
    "sentence": "A wrapper for the Facebook Graph API for Arduino (supports ESP8266 & WiFi101 boards)"
  },
  {
    "name": "FadeLed",
    "version": "1.6.0",
    "sentence": "Makes fading LEDs easy"
  },
  {
    "name": "FanController",
    "version": "1.0.6",
    "sentence": "Arduino Library for controlling PC fans"
  },
  {
    "name": "FancyTerminal",
    "version": "1.0.4",
    "sentence": "FancyTerminal - A serial console beautifier"
  },
  {
    "name": "Fast4ier",
    "version": "1.0.1",
    "sentence": "An FFT and IFFT library."
  },
  {
    "name": "FastAccelStepper",
    "version": "0.31.4",
    "sentence": "A high speed stepper library for Atmega 168/168p/328/328p (nano), 32u4 (leonardo), 2560, ESP32, ESP32S2, ESP32S3, ESP32C3, ESP32C6 and Atmel SAM Due"
  },
  {
    "name": "FastBLE",
    "version": "0.2.0",
    "sentence": "BLE that leaves cycles for other tasks on Arduino MKR WiFi 1010"
  },
  {
    "name": "FastBot",
    "version": "2.27.3",
    "sentence": "Fast ESP8266/ESP32 library for Telegram bot (messages, menus, time sync, OTA update + SPIFFS, files upload and download)"
  },
  {
    "name": "FastBot2",
    "version": "1.0.12",
    "sentence": "Fast and universal Arduino/ESP8266/ESP32 library for Telegram bot"
  },
  {
    "name": "FastCRC",
    "version": "1.44.0",
    "sentence": "Fast CRC routines"
  },
  {
    "name": "FastCapacitiveSensor",
    "version": "1.0.6",
    "sentence": "A library to use capacitive sensors quickly"
  },
  {
    "name": "FastDisplayPrototyping",
    "version": "1.3.1",
    "sentence": "Fast Display Prototyping for Adafruit GFX and TFT eSPI"
  },
  {
    "name": "FastEPD",
    "version": "1.0.1",
    "sentence": "A frustration-free e-paper library for parallel eink panels."
  },
  {
    "name": "FastGPIO",
    "version": "2.2.0",
    "sentence": "Faster general-purpose I/O"
  },
  {
    "name": "FastIMU",
    "version": "1.2.8",
    "sentence": "Allows Arduino boards to control a variety of IMU's."
  },
  {
    "name": "FastInterruptEncoder",
    "version": "1.0.6",
    "sentence": "An Arduino library for Quadrature Encoder for ESP32 and STM32Duino."
  },
  {
    "name": "FastLED",
    "version": "3.9.13",
    "sentence": "Multi-platform library for controlling dozens of different types of LEDs along with optimized math, effect, and noise functions."
  },
  {
    "name": "FastLED NeoMatrix",
    "version": "1.1.0",
    "sentence": "Adafruit_GFX and FastLED compatible library for NeoPixel grids"
  },
  {
    "name": "FastLED NeoPixel",
    "version": "1.0.3",
    "sentence": "A library that allows you to reuse Adafruit NeoPixel animations with the FastLED library without having to rewrite them."
  },
  {
    "name": "FastLEDHub",
    "version": "2.2.0",
    "sentence": "Control multiple FastLED lightstrip animations on the ESP8266 and ESP32 without reuploading."
  },
  {
    "name": "FastLEDManager",
    "version": "0.2.1",
    "sentence": "FastLED Manager that can generate multiple sequences with layered (mixed) output"
  },
  {
    "name": "FastLED_RPIRGBPanel_GFX",
    "version": "1.0.0",
    "sentence": "Adafruit_GFX and FastLED compatible library for ArduinoOnPC Raspberry Pi RGBPanel Driver."
  },
  {
    "name": "FastLED_SPITFT_GFX",
    "version": "1.2.0",
    "sentence": "Adafruit_GFX and FastLED compatible library for SPI TFT screens like SSD1331, ST7735, and ILI9341"
  },
  {
    "name": "FastLED_TFTWrapper_GFX",
    "version": "1.0.0",
    "sentence": "Adafruit_GFX and FastLED compatible library for ArduinoOnPC X11 TFT Emulator"
  },
  {
    "name": "FastMap",
    "version": "0.4.2",
    "sentence": "Library with fast map function for Arduino."
  },
  {
    "name": "FastPID",
    "version": "1.3.1",
    "sentence": "A PID controlled implemented using fixed-point arithmetic."
  },
  {
    "name": "FastShiftIn",
    "version": "0.4.0",
    "sentence": "Arduino library for (AVR) optimized shiftIn - e.g. for 74HC165"
  },
  {
    "name": "FastShiftInOut",
    "version": "0.2.1",
    "sentence": "Arduino library for (AVR) optimized shiftInOut (simultaneously)"
  },
  {
    "name": "FastShiftOut",
    "version": "0.4.1",
    "sentence": "Arduino library for (AVR) optimized shiftOut - e.g. 74HC595"
  },
  {
    "name": "FastTimer",
    "version": "2.0.0",
    "sentence": "Arduino Library for managing time section, can be extended for requesting Unix/RFC3339 timestamp by NTP"
  },
  {
    "name": "FastTrig",
    "version": "0.3.3",
    "sentence": "Arduino library with interpolated lookup for sin(), cos(), tan(), atan2() and more."
  },
  {
    "name": "Fastcore",
    "version": "1.0.0",
    "sentence": "Improvement of Arduino Core Functions."
  },
  {
    "name": "FatFs",
    "version": "4.0.0",
    "sentence": "FAT file system based on open-source FatFS solution."
  },
  {
    "name": "FauxmoESP",
    "version": "3.4.1",
    "sentence": "Amazon Alexa support for ESP8266, ESP32 and Raspberry Pi Pico W"
  },
  {
    "name": "FeatherFault",
    "version": "1.1.7",
    "sentence": "FeatherFault tells you why your Arduino program is crashing"
  },
  {
    "name": "Feature-Variables",
    "version": "1.0.0",
    "sentence": "Persistent event driven variables aimed at making complex designs much simpler"
  },
  {
    "name": "Fetch",
    "version": "0.1.1",
    "sentence": "Gives you high level Javascript's fetch like API to make you any request with any server."
  },
  {
    "name": "FifteenStep",
    "version": "1.2.4",
    "sentence": "A general purpose Arduino MIDI sequencer library."
  },
  {
    "name": "FileConfig",
    "version": "1.0.0",
    "sentence": "A library for reading and writing settings from a configuration file on a SD card."
  },
  {
    "name": "FileData",
    "version": "1.0.3",
    "sentence": "Simple library for storing any data in file"
  },
  {
    "name": "FileFetcher",
    "version": "0.0.1",
    "sentence": "A library for fetching files or images from the web (supports ESP8266/ESP32 & probably others)"
  },
  {
    "name": "FilesystemAccessInterface",
    "version": "1.0.0",
    "sentence": "Abstraction for Filesystem Access."
  },
  {
    "name": "FilesystemUtility",
    "version": "1.0.0",
    "sentence": "Provides useful functionalities to simplify filesystem operations."
  },
  {
    "name": "Filter Easy",
    "version": "0.1.0",
    "sentence": "A collection of easy-to-use digital filters"
  },
  {
    "name": "Filters",
    "version": "0.1.2",
    "sentence": "Filter utilities for Arduino"
  },
  {
    "name": "Finder 6M for Finder Opta",
    "version": "1.1.4",
    "sentence": "Easily read from Finder 6M devices via ModBus."
  },
  {
    "name": "Finder 7M for Finder Opta",
    "version": "1.1.2",
    "sentence": "Easily read from Finder 7M devices via ModBus."
  },
  {
    "name": "FingerLib",
    "version": "2.1.0",
    "sentence": "Allows for servo-like functionality for finger control. For Atmega 2560 (Almond PCB) and Arduino Zero (Chestnut) only."
  },
  {
    "name": "Fingerprint Scanner TTL",
    "version": "1.1.0",
    "sentence": "Arduino examples for ADH-Tech's Fingerprint Scanners."
  },
  {
    "name": "Finite-State",
    "version": "1.6.0",
    "sentence": "Finite-State Machine (FSM) for Arduino."
  },
  {
    "name": "Finite-State-Machine-Arduino",
    "version": "1.0.4",
    "sentence": "With that we can create proper states for objects."
  },
  {
    "name": "FiniteStateMachine",
    "version": "0.1.0",
    "sentence": "A synchronous time-sliced state management library to build responsive \"embedded apps\" via callbacks and conditional signal chaining."
  },
  {
    "name": "FireBase32",
    "version": "1.0.0",
    "sentence": "Allows communication with Firebase."
  },
  {
    "name": "FireEsp",
    "version": "1.0.2",
    "sentence": "A library for connecting to Firebase using ESP boards"
  },
  {
    "name": "FireTimer",
    "version": "1.0.5",
    "sentence": "Simple and non-blocking library to time the execution of processes"
  },
  {
    "name": "Firebase",
    "version": "1.0.1",
    "sentence": "Enables Firebase Realtime Database connectivity on the ESP8266, ESP32, Arduino UNO R4 WiFi."
  },
  {
    "name": "Firebase Arduino Client Library for ESP8266 and ESP32",
    "version": "4.4.17",
    "sentence": "Google Firebase Arduino Client Library for Espressif ESP8266 and ESP32"
  },
  {
    "name": "Firebase Arduino based on WiFi101",
    "version": "1.2.5",
    "sentence": "Google Firebase Realtime Database Arduino Client Library for Arduino WiFi Shield 101 and Arduino MKR1000 WIFI."
  },
  {
    "name": "Firebase Arduino based on WiFiNINA",
    "version": "1.2.5",
    "sentence": "Google Firebase Realtime Database Arduino Client Library for Arduino MKR WiFi 1010, Arduino MKR VIDOR 4000 and Arduino UNO WiFi Rev.2."
  },
  {
    "name": "Firebase ESP32 Client",
    "version": "4.4.17",
    "sentence": "Google Firebase Realtime Database Arduino Client Library for Espressif ESP32"
  },
  {
    "name": "Firebase ESP8266 Client",
    "version": "4.4.17",
    "sentence": "Google Firebase Realtime Database Arduino Client Library for Espressif ESP8266"
  },
  {
    "name": "FirebaseClient",
    "version": "1.5.11",
    "sentence": "Async Firebase Client library for Arduino"
  },
  {
    "name": "FirebaseJson",
    "version": "3.0.9",
    "sentence": "The easiest Arduino library JSON parser, builder and editor for ESP8266, ESP32, Teensy 3.x, Teensy 4.x and others MCUs."
  },
  {
    "name": "FirebaseRealtime",
    "version": "1.0.1",
    "sentence": "A simple library to make Firebase Realtime Databse CRUD operations."
  },
  {
    "name": "FireplaceMLX",
    "version": "0.0.1",
    "sentence": "MobaLedLib Extension adds simulation of single fireplace"
  },
  {
    "name": "Firmata",
    "version": "2.5.9",
    "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino/Genuino boards."
  },
  {
    "name": "FirmataExpress",
    "version": "1.2.0",
    "sentence": "An enhanced version of StandardFirmata version 2.5.8"
  },
  {
    "name": "FirmataWithDeviceFeature",
    "version": "2.9.4",
    "sentence": "This library implements the Firmata protocol as a set of plugins that can be used to create applications to remotely interface with an Arduino board."
  },
  {
    "name": "Firmetix",
    "version": "7.1.2",
    "sentence": "The server for the Firmetix Project."
  },
  {
    "name": "FirstBuild - Relay",
    "version": "1.0.1",
    "sentence": "Control a relay by specifying a period and duty cycle."
  },
  {
    "name": "FixMath",
    "version": "1.0.6",
    "sentence": "Fixed Point Arithmetics for Arduino and others"
  },
  {
    "name": "FixedPoint_LUT",
    "version": "1.0.0",
    "sentence": "Use FixedPoint_LUT to replace highly runtime intensive calculation times"
  },
  {
    "name": "FixedPoints",
    "version": "1.1.2",
    "sentence": "A template library for defining fixed point types of varying sizes."
  },
  {
    "name": "FixedString",
    "version": "0.1.1",
    "sentence": "A stack based fixed string class"
  },
  {
    "name": "Flanco",
    "version": "1.0.1",
    "sentence": "Flanco Library (Spanish version)"
  },
  {
    "name": "Flash",
    "version": "1.0.1",
    "sentence": "A library to wrap accessing and writing to flash"
  },
  {
    "name": "FlashLightLED",
    "version": "2.0.0",
    "sentence": "An Arduino library that can programmatically manipulate the LED color changing light strips controlled by a 44 Key IR Remote."
  },
  {
    "name": "FlashStorage",
    "version": "1.0.0",
    "sentence": "The FlashStorage library aims to provide a convenient way to store and retrieve user's data using the non-volatile flash memory of microcontrollers."
  },
  {
    "name": "FlashStorage_RTL8720",
    "version": "1.1.0",
    "sentence": "The FlashStorage_RTL8720 library aims to provide a convenient way to store and retrieve user data using the non-volatile flash memory of Realtek RTL8720DN, RTL8722DM, RTM8722CSM, etc."
  },
  {
    "name": "FlashStorage_SAMD",
    "version": "1.3.2",
    "sentence": "The FlashStorage library aims to provide a convenient way to store and retrieve user's data using the non-volatile flash memory of SAMD21/SAMD51. It's using the buffered read and write to minimize the access to Flash. It now supports writing and reading the whole object, not just byte-and-byte."
  },
  {
    "name": "FlashStorage_STM32",
    "version": "1.2.0",
    "sentence": "The FlashStorage_STM32 library aims to provide a convenient way to store and retrieve user data using the non-volatile flash memory of STM32F/L/H/G/WB/MP1. It is using the buffered read and write to minimize the access to Flash. It now supports writing and reading the whole object, not just byte-and-byte. New STM32 core v2.0.0+ is also supported now."
  },
  {
    "name": "FlashStorage_STM32F1",
    "version": "1.1.0",
    "sentence": "The FlashStorage_STM32F1 library aims to provide a convenient way to store and retrieve user's data using the non-volatile flash memory of STM32F1/F3. It's using the buffered read and write to minimize the access to Flash. It now supports writing and reading the whole object, not just byte-and-byte. New STM32 core v2.0.0+ is supported now."
  },
  {
    "name": "FlashStringTable",
    "version": "0.7.0",
    "sentence": "Easy definition and use of Arduino flash-based (PROGMEM) global string."
  },
  {
    "name": "Fletcher",
    "version": "0.1.9",
    "sentence": "\"Arduino Library for calculating Fletcher's checksum."
  },
  {
    "name": "FlexLibrary",
    "version": "1.0.0",
    "sentence": "This Library is designed to make the integration of 'Flex Sensors' easier and simpler."
  },
  {
    "name": "FlexWire",
    "version": "1.2.1",
    "sentence": "This library implements the master side of the I2C protocol in a platform independent way."
  },
  {
    "name": "FlexiPlot Arduino Library",
    "version": "1.2.2",
    "sentence": "Arduino library for FlexiPlot."
  },
  {
    "name": "FlexyStepper",
    "version": "1.0.0",
    "sentence": "Stepper motor control library for Arduino supporting in-motion changes."
  },
  {
    "name": "Flicker",
    "version": "2.0.0",
    "sentence": "A library for making capacitive touch easy to use."
  },
  {
    "name": "FlightSimOutputs",
    "version": "0.2.6",
    "sentence": "Library for easy handling of digital outputs on Midwest737Simulations.com Multi Output card."
  },
  {
    "name": "FlightSimSwitches",
    "version": "1.1.15",
    "sentence": "Library for easy handling of Switches and Buttons in X-Plane with PJRC's Teensy"
  },
  {
    "name": "Flinders_ENGR2781",
    "version": "1.0.0",
    "sentence": "Examples for ENGR2781 - Mechanical Design Project (Warman)"
  },
  {
    "name": "Flinduino_Sensorkit",
    "version": "1.0.2",
    "sentence": "Flinduino Sensor Kit"
  },
  {
    "name": "FlipDisc",
    "version": "1.1.1",
    "sentence": "Arduino library for flip-disc displays"
  },
  {
    "name": "FlixPeriph",
    "version": "1.7.1",
    "sentence": "Arduino drivers for the Flix drone peripherals."
  },
  {
    "name": "FloatArrayManager",
    "version": "0.1.0",
    "sentence": "A library to simplify averaging a moving window of values."
  },
  {
    "name": "FloatToAscii",
    "version": "1.0.4",
    "sentence": "Fast and small single precision float to string conversion."
  },
  {
    "name": "FlowSensor",
    "version": "1.5.0",
    "sentence": "Flow Sensor library for Arduino."
  },
  {
    "name": "FontCollection",
    "version": "0.9.0",
    "sentence": "Font Collection manager"
  },
  {
    "name": "Force",
    "version": "1.4.2",
    "sentence": "This is a library for operating FORCE"
  },
  {
    "name": "Forced-BME280",
    "version": "3.0.0",
    "sentence": "A library that makes using a BME280 easy and lightweight."
  },
  {
    "name": "Forecaster",
    "version": "1.2.0",
    "sentence": "Weather forecasting with Zambretti algorithm"
  },
  {
    "name": "Formulinha",
    "version": "1.0.0",
    "sentence": "Formulinha Robot Library"
  },
  {
    "name": "FortniteAPI",
    "version": "1.0.1",
    "sentence": "Arduino library to access unofficial Fortnite API."
  },
  {
    "name": "FourBitLedDigitalTube",
    "version": "2.3.1",
    "sentence": "7 segment, 1 to 8 digits LED display easy to use and powerful library for modules based on two 74HC595 (or similar) shift registers chips."
  },
  {
    "name": "FourRegs",
    "version": "0.4.5",
    "sentence": "Prints the low-level configuration registers for Arduino-compatible boards which use an ARM SAMD51 processor."
  },
  {
    "name": "FourteenSegDisplay",
    "version": "2.3.0",
    "sentence": "Drives a fourteen 14 segment alphanumeric starburst LED display, Also supports 7, 9 & 16 segment displays."
  },
  {
    "name": "Fraction",
    "version": "0.2.0",
    "sentence": "Arduino library to implement a Fraction datatype."
  },
  {
    "name": "Fram",
    "version": "1.0.0",
    "sentence": "FRAM library for Industruino"
  },
  {
    "name": "Framebuffer GFX",
    "version": "1.0.0",
    "sentence": "Adafruit_GFX and FastLED compatible Framebuffer library"
  },
  {
    "name": "Franzininho_LiquidCrystal",
    "version": "1.0.0",
    "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs)."
  },
  {
    "name": "Free-ESPAtHome",
    "version": "0.0.12",
    "sentence": "Implements the Busch-Jeager / ABB Free@Home API for ESP8266 and ESP32."
  },
  {
    "name": "FreeRTOS",
    "version": "11.1.0-3",
    "sentence": "FreeRTOS Real Time Operating System implemented for Arduino Uno R3, Nano, Leonardo, Mega, and related Microchip ATmega devices."
  },
  {
    "name": "FreeRTOS_SAMD21",
    "version": "2.3.0",
    "sentence": "FreeRTOS ported for Arduino SAMD21 processors"
  },
  {
    "name": "FreeRTOS_SAMD51",
    "version": "1.2.0",
    "sentence": "FreeRTOS ported for Arduino SAMD51 processors"
  },
  {
    "name": "Freenove IR Lib for ESP32",
    "version": "1.0.1",
    "sentence": "An Arduino library for IR remote receive on ESP32.<br />"
  },
  {
    "name": "Freenove RFID Lib for Pico",
    "version": "1.0.1",
    "sentence": "An Arduino library for RFID on Pico.<br />"
  },
  {
    "name": "Freenove VK16K33 Lib",
    "version": "1.0.0",
    "sentence": "Arduino library for Freenove VK16K33 Lib.<br />"
  },
  {
    "name": "Freenove WS2812 Lib for ESP32",
    "version": "2.0.0",
    "sentence": "An Arduino library for WS2812 led on ESP32.<br />"
  },
  {
    "name": "Freenove WS2812B RGBLED Controller",
    "version": "1.0.3",
    "sentence": "Arduino library for Freenove WS2812B RGBLED Controller.<br />"
  },
  {
    "name": "FreqCount",
    "version": "1.3.0",
    "sentence": "FreqCount measures the frequency of a signal by counting the number of pulses during a fixed time."
  },
  {
    "name": "FreqMeasure",
    "version": "1.2.0",
    "sentence": "FreqMeasure measures the elapsed time during each cycle of an input frequency."
  },
  {
    "name": "FreqPeriodCounter",
    "version": "1.0.5",
    "sentence": "Smart library with comprehensive functions for counting (multiple) frequencies. For Arduino Uno and Zero."
  },
  {
    "name": "FrequencyDetector",
    "version": "2.0.1",
    "sentence": "Measure the main frequency of analog captured signal connected to an Arduino and check for noise and mute.<br/>"
  },
  {
    "name": "FrequencyTimer2",
    "version": "2.2.0",
    "sentence": "Generate a frequency using Timer2"
  },
  {
    "name": "FuGPS Library",
    "version": "1.1.0",
    "sentence": "Arduino library for parsing NMEA 0183 (GPS) messages."
  },
  {
    "name": "FunctionFsm",
    "version": "1.0.0",
    "sentence": "A library that simplifies the creation of finite state machines and streamlines the process of turning state diagrams into code.."
  },
  {
    "name": "FunctionGenerator",
    "version": "0.3.0",
    "sentence": "Arduino library to generate wave forms (nummeric) for a DAC"
  },
  {
    "name": "Functional-Vlpp",
    "version": "1.0.2",
    "sentence": "Provides function templates to better support C++ functional programming across platforms."
  },
  {
    "name": "Functor",
    "version": "1.0.1",
    "sentence": "Callbacks in C++ using template functors."
  },
  {
    "name": "FutabaVfdM202MD10C",
    "version": "2.2.2",
    "sentence": "Library for Arduino framework for convenient working with vacuum fluorescent displays (VFD) based on Futaba M202MD10C board."
  },
  {
    "name": "Fuzzy Spooder",
    "version": "1.1.0",
    "sentence": "An add-on filament estimator for existing 3D printers."
  },
  {
    "name": "G4Enc",
    "version": "1.1.0",
    "sentence": "Optimized CCITT G4 (ITU T.6) encoder."
  },
  {
    "name": "GAMMA",
    "version": "0.4.1",
    "sentence": "Arduino Library for the GAMMA function"
  },
  {
    "name": "GBALib Potentiometer",
    "version": "2.1.0",
    "sentence": "Potentiometer Management Library."
  },
  {
    "name": "GBALib_DCMotor",
    "version": "1.0.0",
    "sentence": "DC Motor Management Library using the L293D Motor Driver IC."
  },
  {
    "name": "GBALib_ShiftRegister",
    "version": "1.0.0",
    "sentence": "Shift Register 74HC595N Management Library."
  },
  {
    "name": "GBALib_UltrasonicSensor",
    "version": "1.0.0",
    "sentence": "HC-SR04 Ultrasonic Sensor library."
  },
  {
    "name": "GBALib_Wave",
    "version": "0.1.0",
    "sentence": "Wawes Management Library."
  },
  {
    "name": "GC9A01A AVR",
    "version": "1.2.1",
    "sentence": "Very fast SPI library for the GC9A01A IPS display"
  },
  {
    "name": "GCodeParser",
    "version": "1.3.0",
    "sentence": "The GCodeParser library is a lightweight G-Code parser for the Arduino using only a single character buffer to first collect a line of code (also called a 'block') from a serial or file input and then parse that line into a code block and comments."
  },
  {
    "name": "GDXLib",
    "version": "2.0.1",
    "sentence": "A library for educators to communicate with a Vernier Go Direct device via Bluetooth® Low Energy."
  },
  {
    "name": "GEENYmodem",
    "version": "1.0.3",
    "sentence": "Arduino library for the GEENYmodem GPRS modem"
  },
  {
    "name": "GEM",
    "version": "1.6.2",
    "sentence": "A library for creation of graphic multi-level menu."
  },
  {
    "name": "GFButton",
    "version": "1.0.0",
    "sentence": "Library to manage buttons"
  },
  {
    "name": "GFX Library for Arduino",
    "version": "1.5.3",
    "sentence": "Arduino_GFX is a GFX library for various color displays with various data bus interfaces"
  },
  {
    "name": "GFX4DIoD9",
    "version": "1.0.2",
    "sentence": "Graphics Library for the IoD-09TH and IoD-09SM by 4D Systems"
  },
  {
    "name": "GFX4d",
    "version": "1.0.10",
    "sentence": "Graphics Library for the gen4-IoD by 4D Systems"
  },
  {
    "name": "GFX4dESP32",
    "version": "1.1.2",
    "sentence": "Graphics Library for the gen4-ESP32 displays by 4D Systems"
  },
  {
    "name": "GFX_Extensions",
    "version": "1.8.3",
    "sentence": "Sub classes extracts of Adafruit GFX graphics core library"
  },
  {
    "name": "GFX_Root",
    "version": "2.0.0",
    "sentence": "Root class extract of Adafruit GFX graphics core library"
  },
  {
    "name": "GFX_Thaana",
    "version": "0.9.41",
    "sentence": "Add Dhivehi fonts to any Adafruit GFX based graphics library."
  },
  {
    "name": "GG",
    "version": "1.2.1",
    "sentence": "GG for Arduino is a serial console library."
  },
  {
    "name": "GGreg20_V3",
    "version": "1.0.0",
    "sentence": "IoT-devices GGreg20_V3 ionizing radiation detector pulse output driver library."
  },
  {
    "name": "GKScroll",
    "version": "1.0.1",
    "sentence": "Arduino library for scrolling long lines of text on an LCD screen."
  },
  {
    "name": "GLEE Beelan LoRaWAN",
    "version": "2.0.2",
    "sentence": "LoRaWAN Arduino Library for standalone LoRaWAN modules class A and C with a simple API. Modified for the GLEE Project."
  },
  {
    "name": "GLEE2023",
    "version": "1.1.3",
    "sentence": "This library is for the Great Lunar Expedition for Everyone mission, which will provide accessible opportunities for students to directly participate in Lunar exploration."
  },
  {
    "name": "GM1602lib",
    "version": "1.0.0",
    "sentence": "Arduino library for GM1602-CO sensors."
  },
  {
    "name": "GMSN Pure Digit",
    "version": "1.0.0",
    "sentence": "This library is used to control the GMSN! Pure Digit."
  },
  {
    "name": "GP20U7 GPS Library",
    "version": "1.0.0",
    "sentence": "A simple library for the GP20U7 GPS unit"
  },
  {
    "name": "GP2Y0A21YK_lib",
    "version": "1.0.1",
    "sentence": "A simple library for GP2Y0A21YK sensor."
  },
  {
    "name": "GPIOViewer",
    "version": "1.6.1",
    "sentence": "Web Application to view GPIO pins live!"
  },
  {
    "name": "GPIO_NXP_Arduino",
    "version": "1.1.0",
    "sentence": "Class library for NXP GPIO drivers"
  },
  {
    "name": "GPRSbee",
    "version": "1.9.2",
    "sentence": "An Arduino library for the SODAQ GPRSbee."
  },
  {
    "name": "GPS",
    "version": "1.0.1",
    "sentence": "GPS code class for Arduino"
  },
  {
    "name": "GPS-uBlox",
    "version": "1.0.0",
    "sentence": "Platform agnostic C++ uBlox GPS driver"
  },
  {
    "name": "GPSP",
    "version": "2.1.3",
    "sentence": "A simple, and easy to use Arduino protocol"
  },
  {
    "name": "GPStar Audio Serial Library",
    "version": "1.2.0",
    "sentence": "Control your GPStar Audio boards with serial communication commands."
  },
  {
    "name": "GPT_Stepper",
    "version": "0.4.0",
    "sentence": "Direct timer drive for A4988 stepper driver"
  },
  {
    "name": "GParser",
    "version": "1.5.2",
    "sentence": "Fast library for parsing cstring into substrings, urlencode, unicode encode for Arduino"
  },
  {
    "name": "GRC_AI",
    "version": "0.0.2",
    "sentence": "A library supporting communication with GRC AI module"
  },
  {
    "name": "GRGB",
    "version": "1.4.1",
    "sentence": "Library for smooth RGB LED control"
  },
  {
    "name": "GSL1680",
    "version": "1.0.0",
    "sentence": "Driver for GSL1680"
  },
  {
    "name": "GSM",
    "version": "1.0.6",
    "sentence": "Enables GSM/GRPS network connection using the Arduino GSM Shield."
  },
  {
    "name": "GSM-Playground",
    "version": "1.1.1",
    "sentence": "A library for GSM Playground device."
  },
  {
    "name": "GSMSim",
    "version": "2.0.2",
    "sentence": "GSM Library For SimCom Modules"
  },
  {
    "name": "GSM_Generic",
    "version": "1.6.1",
    "sentence": "Enables GSM/GRPS network connection using the Generic GSM shields/modules. Supporting ESP32 (including ESP32-S2, ESP32-C3), ESP8266, Teensy, SAM DUE, SAMD21, SAMD51, STM32F/L/H/G/WB/MP1, nRF52, RP2040-based boards, etc."
  },
  {
    "name": "GSON",
    "version": "1.6.1",
    "sentence": "Light JSON parsing and assembling library for Arduino"
  },
  {
    "name": "GST",
    "version": "0.1.4",
    "sentence": "Arduino library for Golden Standard Test, confusion matrix."
  },
  {
    "name": "GSheet32",
    "version": "2.0.0",
    "sentence": "Library for sending data from ESP32 to Google Sheets."
  },
  {
    "name": "GT5X",
    "version": "1.0.0",
    "sentence": "Arduino library for the GT5X fingerprint sensors"
  },
  {
    "name": "GT811 Library",
    "version": "1.0.1",
    "sentence": "Arduino library for GT811-based Capacitive touch screen"
  },
  {
    "name": "GTL",
    "version": "1.2.1",
    "sentence": "Library with template tools (buffers, pointers)"
  },
  {
    "name": "GTT",
    "version": "1.0.0",
    "sentence": "Enables use of matrix orbitals GTT line of products"
  },
  {
    "name": "GTimer",
    "version": "1.0.0",
    "sentence": "Light and multifunctional uptime timer"
  },
  {
    "name": "GU140X32F-7703A",
    "version": "1.0.0",
    "sentence": "Provides a graphic library for the Noritake Itron GU140X32F-7703A VFD display"
  },
  {
    "name": "GUIslice",
    "version": "0.17.0",
    "sentence": "GUIslice embedded touchscreen GUI library in C for Arduino & Raspberry Pi"
  },
  {
    "name": "GUVB-C31SM",
    "version": "0.1.0",
    "sentence": "A library that interfaces the UVB Sensor GUVB-C31SM."
  },
  {
    "name": "GU_Elements",
    "version": "0.9.0",
    "sentence": "Buttons, menus and more for Arduino Giga Display Shield."
  },
  {
    "name": "GY26Compass",
    "version": "0.5.0",
    "sentence": "Library for interfacing with GY-26 Compass Module"
  },
  {
    "name": "GY521",
    "version": "0.6.1",
    "sentence": "Arduino library for GY521 angle measurement"
  },
  {
    "name": "GadgetBox",
    "version": "1.0.6",
    "sentence": "Enclosure and Universal Hardware for IoT Gadgets."
  },
  {
    "name": "Gadget_Shield",
    "version": "2.0.0-0",
    "sentence": "Gadget Shield implemented for AVR (Uno, Nano, Leonardo, Mega)."
  },
  {
    "name": "Gadgetron Libraries",
    "version": "1.0.7",
    "sentence": "Collection of Libraries for the Gadgetron software."
  },
  {
    "name": "GalvoController",
    "version": "1.0.0",
    "sentence": "A library for controlling laser scanners that use the XY2-100 protocol with G-code sent over serial."
  },
  {
    "name": "GameBoyShield",
    "version": "0.1.2",
    "sentence": "AbenoGameBoyShield, GameBoy Shield"
  },
  {
    "name": "Gamebuino Classic",
    "version": "0.5.2",
    "sentence": "Create your own games on a fun and retro console."
  },
  {
    "name": "Gamebuino META",
    "version": "1.3.3",
    "sentence": "Make your first game within hours."
  },
  {
    "name": "Gamer",
    "version": "2.1.0",
    "sentence": "A library for the DIY Gamer Kit by Technology Will Save Us."
  },
  {
    "name": "GamerIR",
    "version": "2.0.0",
    "sentence": "Infrared communication library for the DIY Gamer Kit by Tech Will Save Us"
  },
  {
    "name": "GammaCorrectionLib",
    "version": "1.0.0",
    "sentence": "GammaCorrection Library"
  },
  {
    "name": "Gauge_asukiaaa",
    "version": "1.0.0",
    "sentence": "It calculates value from sample values."
  },
  {
    "name": "Gauss",
    "version": "0.2.1",
    "sentence": "Library for the Gauss probability math."
  },
  {
    "name": "Gaussian",
    "version": "1.0.7",
    "sentence": "Gaussian math, Kalman Filters and Moving Averages made easy"
  },
  {
    "name": "GaussianFilter1D",
    "version": "1.0.1",
    "sentence": "Arduino library for using a gaussian blur / smoothing filter"
  },
  {
    "name": "GeekFactory Shell Library",
    "version": "1.2.0",
    "sentence": "Library to create a simple Command Line Interface (CLI)."
  },
  {
    "name": "Geekble_LieDetector",
    "version": "1.1.2",
    "sentence": "Library for Geekble LieDetector"
  },
  {
    "name": "Geekble_MotorOrgel",
    "version": "1.4.0",
    "sentence": "Library for play music on Motors"
  },
  {
    "name": "Geekble_Note2Freq",
    "version": "1.1.3",
    "sentence": "Library for easy convertion of musical note to frequency."
  },
  {
    "name": "Geekble_Oscillator",
    "version": "1.0.3",
    "sentence": "Generate pulse from 31.25KHz to 8MHz"
  },
  {
    "name": "Gemelon Pushbutton",
    "version": "1.1.3",
    "sentence": "Arduino library to debounce a pushbutton."
  },
  {
    "name": "GeneralShield",
    "version": "1.0.0",
    "sentence": "GeneralShield Library"
  },
  {
    "name": "Generic-Queue",
    "version": "1.0.0",
    "sentence": "Generic Queue Library for Arduino."
  },
  {
    "name": "GenericMotorDriver",
    "version": "0.7.4",
    "sentence": "Generic library for controlling PWM, brushed DC motor drivers."
  },
  {
    "name": "GeoIP",
    "version": "1.3.2",
    "sentence": "Library to get local timezone and geographic location based on your network's IP address."
  },
  {
    "name": "GeoMagnetism",
    "version": "1.1.0",
    "sentence": "A conversion of the NOAA WMM wmm_point.c and GeoMagnetismLibrary.c source code"
  },
  {
    "name": "GeoluxCamera",
    "version": "0.1.2",
    "sentence": "Arduino library for communication with Geolux serial camera."
  },
  {
    "name": "Geometry",
    "version": "2.2.0",
    "sentence": "A library for representing where things are in relation to other things in 3D space"
  },
  {
    "name": "Gesture PAJ7620",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove Gesture（PAJ7620U2）."
  },
  {
    "name": "GestureDetector",
    "version": "0.9.0",
    "sentence": "Gesture recognition library for Arduino Giga Display."
  },
  {
    "name": "GetInTouch",
    "version": "1.1.0",
    "sentence": "Arduino library for GetInTouch Twitch Extension."
  },
  {
    "name": "GhostLab42Reboot",
    "version": "1.0.2",
    "sentence": "Arduino library for GhostLab42's Reboot Triple-Display Board Set"
  },
  {
    "name": "GifDecoder",
    "version": "1.1.0",
    "sentence": "Play Animated GIFs"
  },
  {
    "name": "GigaAudio",
    "version": "0.1.1",
    "sentence": "An Arduino library to play WAV files on an Arduino Giga R1."
  },
  {
    "name": "GigaDAQ",
    "version": "1.0.0",
    "sentence": "Make Data Acquisition System (DAQ) with Arduino GIGA R1 WiFi with Arduino GIGA Display Shield"
  },
  {
    "name": "GigaScope",
    "version": "0.0.2",
    "sentence": "A library allowing you to use your Arduino as a basic osciloscope."
  },
  {
    "name": "Gigabits",
    "version": "0.0.4",
    "sentence": "Gigabits interface for Arduino"
  },
  {
    "name": "Gizmo",
    "version": "0.0.5",
    "sentence": "Support library for interacting with the Gizmo Platform from Arduino/Wiring."
  },
  {
    "name": "GlobalCovfefe",
    "version": "0.2.0",
    "sentence": "An emulation of a GlobalCache device with one IR sender and (optionally) an IR learner (demodulating or non-demodulating)."
  },
  {
    "name": "Glue",
    "version": "2.0.0",
    "sentence": "A library for building mix type messages as strings."
  },
  {
    "name": "GoGoBoard Arduino Library",
    "version": "1.7.0",
    "sentence": "A library for built-in STM32 arduino core on GoGoBoard to enabled fully functional of hardware along with the used of students."
  },
  {
    "name": "GoPRO",
    "version": "1.0.0",
    "sentence": "GoPRO API library for Arduino"
  },
  {
    "name": "GoProControl",
    "version": "1.3.2",
    "sentence": "A library that makes using GoPro Cameras a breeze."
  },
  {
    "name": "GoWired-lib",
    "version": "1.1.0",
    "sentence": "Common libraries used by GoWired software."
  },
  {
    "name": "GobbitLineCommand",
    "version": "0.0.96",
    "sentence": "Basic to advanced line following, intersection detection, basic motor control, battery monitoring, gripper control, and basic collision detection with the Gobbit robot."
  },
  {
    "name": "Goertzel",
    "version": "1.0.2",
    "sentence": "Tone decoding library based on the Goertzel algorithm"
  },
  {
    "name": "Goldelox-Serial-Arduino-Library",
    "version": "1.0.4",
    "sentence": "Provides library access to communicate with the 4D Systems Goldelox processor, when configured in Serial/SPE mode"
  },
  {
    "name": "Goldfish4Tech",
    "version": "1.0.1",
    "sentence": "Arduino demo code for project"
  },
  {
    "name": "Goldfish4TechAirPump",
    "version": "1.0.1",
    "sentence": "Arduino Library for Goldfish4Tech air pump running code."
  },
  {
    "name": "Goldilocks Analogue DAC Library",
    "version": "1.0.3",
    "sentence": "DAC (MCP4822) functions for Goldilocks Analogue"
  },
  {
    "name": "Goldilocks Analogue SPI RAM Library",
    "version": "1.0.4",
    "sentence": "Firmware for SPI solid state memory (including SRAM, FRAM, EEPROM) devices for Goldilocks Analogue"
  },
  {
    "name": "Google Cloud IoT Core JWT",
    "version": "1.1.11",
    "sentence": "Demonstrates JWT generation for connecting Arduino clients to Google Cloud IoT Core."
  },
  {
    "name": "GoogleCalendarClient",
    "version": "1.0.0",
    "sentence": "Google Calendar API for Arduino"
  },
  {
    "name": "GoogleFormPost",
    "version": "0.1.0",
    "sentence": "A simple way to add data to Google Sheets, without API or authentication."
  },
  {
    "name": "GoogleMapsApi",
    "version": "1.0.0",
    "sentence": "A wrapper for the Google Maps API for Arduino (supports ESP8266 & WiFi101 boards)"
  },
  {
    "name": "GoogleSchedular",
    "version": "3.0.1",
    "sentence": "Arduino Library for reading events title from a Google Calendar"
  },
  {
    "name": "GovoroxSSLClient",
    "version": "1.3.2",
    "sentence": "Provides secure network connection over a generic Client transport object."
  },
  {
    "name": "GrafanaLoki",
    "version": "0.2.2",
    "sentence": "Send logs/events to Grafana Loki"
  },
  {
    "name": "Grafici-GFX",
    "version": "4.0.0",
    "sentence": "Data visualization library for Arduino driven displays"
  },
  {
    "name": "GrafikLogger",
    "version": "2.0.0",
    "sentence": "A library for logging and plotting data using Arduino."
  },
  {
    "name": "Grandeur",
    "version": "1.0.6",
    "sentence": "Let your arduinos and ESPs communicate with Grandeur in realtime."
  },
  {
    "name": "Gravitone",
    "version": "1.3.1",
    "sentence": "Drivers for the Gravitone: a spatial synthesizer."
  },
  {
    "name": "Gravity Soil Moisture Sensor",
    "version": "1.0.0",
    "sentence": "Arduino Library for DfRobot Gravity Analog Capacitive Soil Moisture Sensor."
  },
  {
    "name": "GrayCode",
    "version": "1.1.0",
    "sentence": "Arduino library for decoding Gray Code encoders."
  },
  {
    "name": "Green Beacon",
    "version": "0.2.0",
    "sentence": "BLE beacon library compatible with LINE Simple Beacon"
  },
  {
    "name": "GroPointModbus",
    "version": "0.1.1",
    "sentence": "Arduino library for communication with GroPoint soil moisture sensors via Modbus."
  },
  {
    "name": "Grove - 125KHz RFID Reader",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - 125KHz RFID Reader."
  },
  {
    "name": "Grove - 2-Channel Inductive Sensor LDC1612",
    "version": "1.0.0",
    "sentence": "Arduino library to control Seeed Inductive Sensor LDC1612."
  },
  {
    "name": "Grove - 6Axis Accelerometer And Compass v2",
    "version": "1.0.1",
    "sentence": "Arduino library to control LSM303DLH."
  },
  {
    "name": "Grove - Air quality sensor",
    "version": "1.0.2",
    "sentence": "Arduino library to control Grove Air Quality Sensor."
  },
  {
    "name": "Grove - Barometer Sensor BME280",
    "version": "1.0.2",
    "sentence": "Arduino library to control Grove - Temp&Humi&Barometer Sensor(BME280)."
  },
  {
    "name": "Grove - Barometer Sensor BMP280",
    "version": "1.0.1",
    "sentence": "Arduino library to control Grove - Barometer Sensor (BMP280)."
  },
  {
    "name": "Grove - Capacitive Touch Slide Sensor CY8C40XX",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove_touch_sensor_CY8C40XX."
  },
  {
    "name": "Grove - Chainable RGB LED",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - Chainable RGB LED."
  },
  {
    "name": "Grove - Coulomb Counter for 3.3V to 5V LTC2941",
    "version": "1.0.0",
    "sentence": "Library for Grove - Coulomb Counter for 3.3V to 5V(LTC2941)"
  },
  {
    "name": "Grove - Digital Light Sensor",
    "version": "2.0.0",
    "sentence": "Arduino library to control Grove - Digital Light Sensor(TSL2561/ISL29035)."
  },
  {
    "name": "Grove - Haptic Motor",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - Haptic Motor."
  },
  {
    "name": "Grove - High Precision RTC",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - High Precision RTC_PCF85063TP."
  },
  {
    "name": "Grove - High Temperature Sensor",
    "version": "1.0.1",
    "sentence": "Arduino library to control Grove - High Temperature Sensor."
  },
  {
    "name": "Grove - I2C Color Sensor",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - I2C Color Sensor."
  },
  {
    "name": "Grove - I2C High Accuracy Temp_Humi Sensor SHT35",
    "version": "1.0.2",
    "sentence": "Arduino library to control Grove Temperature sensor SHT35."
  },
  {
    "name": "Grove - I2C Thermocouple Amplifier MCP9600",
    "version": "1.0.2",
    "sentence": "Arduino library to control Grove Temperature sensor MCP9600."
  },
  {
    "name": "Grove - I2C UV Sensor VEML6070",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove UV sensor VEML6070."
  },
  {
    "name": "Grove - Infrared Receiver And Emitter",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - Infrared Emitter and Grove - Infrared Receiver."
  },
  {
    "name": "Grove - LCD RGB Backlight",
    "version": "1.0.2",
    "sentence": "Arduino library to control Grove - LCD RGB Backlight."
  },
  {
    "name": "Grove - LED Matrix Driver",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - LED Matrix Driver."
  },
  {
    "name": "Grove - Laser PM2.5 Sensor HM3301",
    "version": "1.0.2",
    "sentence": "Arduino library to control PM2.5 sensor(HM3300)."
  },
  {
    "name": "Grove - LoRa Radio 433MHz 868MHz",
    "version": "2.0.0",
    "sentence": "Arduino library to control Grove - LoRa Radio 868MHz and Grove - LoRa Radio 433MHz."
  },
  {
    "name": "Grove - Motor Driver TB6612FNG",
    "version": "0.0.1",
    "sentence": "Arduino library of Grove - Motor Driver(TB6612FNG)"
  },
  {
    "name": "Grove - Multichannel Gas Sensor",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - Multichannel Gas Sensor ."
  },
  {
    "name": "Grove - OLED Display 0.96",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - OLED Display 0.96."
  },
  {
    "name": "Grove - Q Touch Sensor",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - Q Touch Sensor."
  },
  {
    "name": "Grove - RTC DS1307",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - RTC DS1307."
  },
  {
    "name": "Grove - Sunlight Sensor",
    "version": "1.1.0",
    "sentence": "Arduino library to control Grove - Sunlight Sensor."
  },
  {
    "name": "Grove - Temperature And Humidity Sensor HDC1000",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - Temperature&Humidity Sensor HDC1000"
  },
  {
    "name": "Grove 3-Axis Digital Compass HMC5883L",
    "version": "1.0.1",
    "sentence": "This is an Arduino library for Grove 3-Axis Digital Compass HMC5883L."
  },
  {
    "name": "Grove 3-Axis Digital Gyro",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove 3-Axis Digital Gyro base on ITG 3200."
  },
  {
    "name": "Grove 3Axis Compass V2.0 BMM150",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove 3-Axis Digitial Compass v2.0."
  },
  {
    "name": "Grove 4-Digit Display",
    "version": "2.0.0",
    "sentence": "Arduino library to control Grove_4Digital_Display TM1637."
  },
  {
    "name": "Grove 6Axis_Digital_Accelerometer_Gyroscope4_ADIS16470",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove 6-Axis Digital Accelerometer&Gyroscope(ADIS16470)."
  },
  {
    "name": "Grove Barometer Sensor",
    "version": "2.1.0",
    "sentence": "Arduino library to control Grove Barometer Sensor BMP085/BMP180."
  },
  {
    "name": "Grove I2C Motor Driver v1.3",
    "version": "1.0.4",
    "sentence": "Arduino library to control Grove I2C Motor Driver."
  },
  {
    "name": "Grove IMU 9DOF",
    "version": "1.0.0",
    "sentence": "Arduino library for controlling Grove IMU 9DOF, using I2C communication."
  },
  {
    "name": "Grove LED Bar",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove LED Bar."
  },
  {
    "name": "Grove Mini Track Ball",
    "version": "1.0.1",
    "sentence": "Arduino library to control Grove Mini Track Ball."
  },
  {
    "name": "Grove Ranging sensor - VL53L0X",
    "version": "1.1.1",
    "sentence": "Sensor driver for VL53L0X Ranging sensor"
  },
  {
    "name": "Grove SHT31 Temp Humi Sensor",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove SHT31 Temp Humi Sensor."
  },
  {
    "name": "Grove Temper Humidity TH02",
    "version": "1.0.1",
    "sentence": "Arduino library to control Grove Temper Humidity TH02"
  },
  {
    "name": "Grove Temperature And Humidity Sensor",
    "version": "2.0.2",
    "sentence": "Arduino library to control Grove Temperature And Humidity Sensor, it contains chip DHT11 AM2302."
  },
  {
    "name": "Grove Ultrasonic Ranger",
    "version": "1.0.1",
    "sentence": "Arduino library for controlling Grove Ultrasonic Ranger, using gennal I/O communication."
  },
  {
    "name": "Grove barometer HP20x",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove barometer HP20x."
  },
  {
    "name": "Grove-3-Axis-Digital-Accelerometer-2g-to-16g-LIS3DHTR",
    "version": "1.2.4",
    "sentence": "Library for Grove - 3-Axis Digital Accelerometer ±2g to 16g Power(LIS3DHTR)."
  },
  {
    "name": "GroveDriverPack",
    "version": "1.12.0",
    "sentence": "GroveDriverPack"
  },
  {
    "name": "GroveEncoder",
    "version": "1.0.0",
    "sentence": "Grove Encoder Library"
  },
  {
    "name": "Grove_AS3935Lightning_sensor",
    "version": "1.0.0",
    "sentence": "Lightning sensor, early warning alert, weather monitoring, automation systems, portable devices."
  },
  {
    "name": "GuL_NovaFitness",
    "version": "1.1.2",
    "sentence": "This is an Arduino-Framework library to work with nova fitness particulate matter sensors."
  },
  {
    "name": "GuL_Plantower",
    "version": "1.2.0",
    "sentence": "This is an Arduino-Framework library to work with plantower particulate matter sensors."
  },
  {
    "name": "GuL_TI_Humidity_HDC10XX",
    "version": "1.1.1",
    "sentence": "An Arduino-Framework library to work with humidity sensors series HDC10XX of Texas Instruments."
  },
  {
    "name": "GuaraTeca_Hardware",
    "version": "2.0.0",
    "sentence": "Bibliotecas de controle de diversas plataformas roboticas em baixo nivel."
  },
  {
    "name": "GuaraTeca_Menu",
    "version": "1.5.0",
    "sentence": "Biblioteca de controle de diversas plataformas roboticas."
  },
  {
    "name": "GuaraTeca_OBR",
    "version": "1.5.1",
    "sentence": "Biblioteca de controle de diversas plataformas roboticas."
  },
  {
    "name": "Guarateca_Demo",
    "version": "1.0.0",
    "sentence": "Biblioteca para amostra do funcionamento da Super-Biblioteca Guarateca, para o controle das mais diversas plataformas roboticas."
  },
  {
    "name": "GuiN-E Bot",
    "version": "1.0.1",
    "sentence": "Arduino Library for building GuiN-E Bot Projects using ROS"
  },
  {
    "name": "Guppy",
    "version": "1.0.4",
    "sentence": "Simplifies the control of the Guppy robot."
  },
  {
    "name": "Gwiot 7941E",
    "version": "1.0.0",
    "sentence": "A simple library to interface with Gwiot 7941E 125kHz RFID reader"
  },
  {
    "name": "GxEPD",
    "version": "3.1.3",
    "sentence": "Display Library for SPI e-paper panels from Dalian Good Display and boards from Waveshare."
  },
  {
    "name": "GxEPD2",
    "version": "1.6.2",
    "sentence": "Arduino Display Library for SPI E-Paper displays from Dalian Good Display and Waveshare."
  },
  {
    "name": "Gyro_Tomer",
    "version": "1.0.1",
    "sentence": "simple gyro interface"
  },
  {
    "name": "Gyver433",
    "version": "2.1.1",
    "sentence": "Simple library for 433 MHz radio"
  },
  {
    "name": "GyverBME280",
    "version": "1.5.3",
    "sentence": "Light library for BME280 sensor"
  },
  {
    "name": "GyverBeeper",
    "version": "1.1.0",
    "sentence": "Async tone generator with amount and time settings"
  },
  {
    "name": "GyverBlinker",
    "version": "1.1.1",
    "sentence": "Async LED blinker and task count timer"
  },
  {
    "name": "GyverBus",
    "version": "2.6.1",
    "sentence": "Communicating by GBUS interface"
  },
  {
    "name": "GyverButton",
    "version": "3.8.0",
    "sentence": "Advanced button control library"
  },
  {
    "name": "GyverDB",
    "version": "1.2.3",
    "sentence": "Fast Arduino database for any type of data"
  },
  {
    "name": "GyverDS18",
    "version": "1.1.2",
    "sentence": "Light library for Dallas DS18b20 temperature sensor"
  },
  {
    "name": "GyverDS3231",
    "version": "1.1.0",
    "sentence": "Library for DS3231 with millis() sync and 1-second timer"
  },
  {
    "name": "GyverDimmer",
    "version": "1.2.1",
    "sentence": "Phase and Bresenham algorithm for AC triac dimmer"
  },
  {
    "name": "GyverEncoder",
    "version": "4.10.0",
    "sentence": "Advanced encoder operation library"
  },
  {
    "name": "GyverFIFO",
    "version": "1.2.0",
    "sentence": "Simple ring (circular, FIFO) buffer for Arduino"
  },
  {
    "name": "GyverFilters",
    "version": "3.2.0",
    "sentence": "Library with few filters for data processing"
  },
  {
    "name": "GyverGFX",
    "version": "1.7.3",
    "sentence": "Fast GFX library for displays and matrixes"
  },
  {
    "name": "GyverHC595",
    "version": "1.2.0",
    "sentence": "Fast SPI/BitBang library for 74HC595 shift register"
  },
  {
    "name": "GyverHTTP",
    "version": "1.0.23",
    "sentence": "Simple Arduino Client based HTTP server and client with stream tools"
  },
  {
    "name": "GyverHTU21D",
    "version": "1.1.0",
    "sentence": "Light Arduino library for HTU21D sensor"
  },
  {
    "name": "GyverHX711",
    "version": "1.2.0",
    "sentence": "Library for HX711 ADC/weight module"
  },
  {
    "name": "GyverINA",
    "version": "1.2.3",
    "sentence": "Light library for INA219/INA226 sensor module"
  },
  {
    "name": "GyverIO",
    "version": "1.3.9",
    "sentence": "Fast GPIO operation functions for AVR, ESP8266, ESP32"
  },
  {
    "name": "GyverJoy",
    "version": "1.1.0",
    "sentence": "Library for analog joystic Arduino"
  },
  {
    "name": "GyverLBUF",
    "version": "1.1.0",
    "sentence": "Simple linear buffer for Arduino"
  },
  {
    "name": "GyverMAX6675",
    "version": "1.0.0",
    "sentence": "Fast and light MAX6675 thermocouple library"
  },
  {
    "name": "GyverMAX7219",
    "version": "1.5.0",
    "sentence": "Fast and light MAX7219 matrix library"
  },
  {
    "name": "GyverMIDI",
    "version": "1.0.1",
    "sentence": "MIDI player"
  },
  {
    "name": "GyverMotor",
    "version": "4.1.1",
    "sentence": "Library for motor driver control"
  },
  {
    "name": "GyverNTC",
    "version": "1.5.4",
    "sentence": "Simple library for NTC thermistors"
  },
  {
    "name": "GyverNTP",
    "version": "2.2.2",
    "sentence": "Library for async receiving precise time from NTP server"
  },
  {
    "name": "GyverOLED",
    "version": "1.6.4",
    "sentence": "Fast and light library for SSD1306/SSH1106 OLED display"
  },
  {
    "name": "GyverOLEDMenu",
    "version": "0.3.1",
    "sentence": "Creating a menu in your project for SSD1306/SSH1106 OLED display"
  },
  {
    "name": "GyverOS",
    "version": "1.2.2",
    "sentence": "Simple task manager for Arduino"
  },
  {
    "name": "GyverPID",
    "version": "3.3.2",
    "sentence": "Fast library for PID regulating algorithm"
  },
  {
    "name": "GyverPWM",
    "version": "1.6.0",
    "sentence": "Library for advanced PWM settings of AVR"
  },
  {
    "name": "GyverPortal",
    "version": "3.6.6",
    "sentence": "Simple web interface builder for esp8266 and ESP32"
  },
  {
    "name": "GyverPower",
    "version": "2.2.0",
    "sentence": "Library for power management of AVR"
  },
  {
    "name": "GyverRelay",
    "version": "2.2.0",
    "sentence": "Library for relay regulation algorithm"
  },
  {
    "name": "GyverSegment",
    "version": "1.4.7",
    "sentence": "Powerful library for controlling 7-segment indicators"
  },
  {
    "name": "GyverShift",
    "version": "1.1.4",
    "sentence": "Library for input and output shift registers (HC595 and HC165)"
  },
  {
    "name": "GyverStepper",
    "version": "2.7.0",
    "sentence": "Fast library for stepmotor control and multi-axis planning"
  },
  {
    "name": "GyverTM1637",
    "version": "1.4.2",
    "sentence": "Library for advanced control of TM1637 7-segment display"
  },
  {
    "name": "GyverTimer",
    "version": "3.2.0",
    "sentence": "Simple timer with period/timeout modes on millis"
  },
  {
    "name": "GyverTimers",
    "version": "1.10.0",
    "sentence": "Library for control hardware timers on ATmega328p and ATmega2560"
  },
  {
    "name": "GyverTransfer",
    "version": "1.3.1",
    "sentence": "Library for 1-wire communication by GT interface"
  },
  {
    "name": "GyverUART",
    "version": "1.10.1",
    "sentence": "Light and fast Serial library"
  },
  {
    "name": "GyverWDT",
    "version": "2.3.1",
    "sentence": "Advanced WDT control library for ATmega328p/32U4/2560 & ATtiny85/84/167"
  },
  {
    "name": "HAMqttDevice",
    "version": "1.4.1",
    "sentence": "A library that provides tools to simplify MQTT discovery implementation for Home Assistant"
  },
  {
    "name": "HAMqttDiscoveryHandler",
    "version": "0.2.0",
    "sentence": "A library that generates MQTT topics and configuration message for Home Assistant MQTT Discovery."
  },
  {
    "name": "HC-SR04",
    "version": "1.1.3",
    "sentence": "Library for HC-SR04 ultrasonic distance sensor."
  },
  {
    "name": "HC0x_AT_Config",
    "version": "2.0.1",
    "sentence": "Simple HC05/HC06 Bluetooth module AT configuration program."
  },
  {
    "name": "HC4051",
    "version": "0.3.0",
    "sentence": "Arduino library for a HC4051 1x8 channel multiplexer"
  },
  {
    "name": "HC4052",
    "version": "0.2.1",
    "sentence": "Arduino library for a HC4052 2 x 4 channel multiplexer"
  },
  {
    "name": "HC4053",
    "version": "0.2.1",
    "sentence": "Arduino library for a HC4053 3 x 2 channel multiplexer"
  },
  {
    "name": "HC4067",
    "version": "0.3.0",
    "sentence": "Arduino library for a HC4067 1 x 16 channel multiplexer"
  },
  {
    "name": "HCSR04",
    "version": "2.0.0",
    "sentence": "Library for HC-SR04 ultrasonic distance sensor."
  },
  {
    "name": "HCSR04 ultrasonic MKL",
    "version": "3.0.3",
    "sentence": "Allows an Arduino board to use HCSR04 module."
  },
  {
    "name": "HCSR04 ultrasonic distance sensor",
    "version": "1.2.0",
    "sentence": "Allows an Arduino board to use HCSR04 modules."
  },
  {
    "name": "HCSR04 ultrasonic sensor",
    "version": "2.0.3",
    "sentence": "Allows an Arduino board to use HCSR04 module."
  },
  {
    "name": "HC_SR04",
    "version": "1.0.1",
    "sentence": "Allows an Arduino board to use multiple HCSR04 module."
  },
  {
    "name": "HD44780_LCD_PCF8574",
    "version": "1.3.0",
    "sentence": "Library to Support the HD44780 LCD I2C driven by the PCF8574 controller"
  },
  {
    "name": "HDC1000",
    "version": "1.0.0",
    "sentence": "A temperature and humidity sensor library for HDC1000"
  },
  {
    "name": "HDC2010",
    "version": "1.0.1",
    "sentence": "Arduino library for Texas instrument HDC2010"
  },
  {
    "name": "HDC302x",
    "version": "1.0.1",
    "sentence": "TI HDC3020, HDC3021 and HDC3022 Temperature / Humidity sensors"
  },
  {
    "name": "HID Buttons",
    "version": "1.0.1",
    "sentence": "Easily handle state changes for HID button inputs."
  },
  {
    "name": "HID-Project",
    "version": "2.8.4",
    "sentence": "Extended HID Functions for Arduino"
  },
  {
    "name": "HIH61xx",
    "version": "3.0.0",
    "sentence": "Library to access Honeywell HIH61xx humidity and temperature sensors."
  },
  {
    "name": "HITIComm",
    "version": "1.6.1",
    "sentence": "Control and monitoring"
  },
  {
    "name": "HITICommSupport",
    "version": "1.6.1",
    "sentence": "Support for HITIComm library"
  },
  {
    "name": "HL1606 LED Strip",
    "version": "1.1.2",
    "sentence": "Code to control HL1606-based LED strips"
  },
  {
    "name": "HL1606 LED Strip PWM",
    "version": "1.0.0",
    "sentence": "All the joy of HL1606 LED strips but with 9 or 12 bit color control!"
  },
  {
    "name": "HLK-LD2450",
    "version": "1.0.8",
    "sentence": "A library for the HLK-LD2450 LD2450 24Ghz Human body Motion Inductive Radar Sensor"
  },
  {
    "name": "HLW8012",
    "version": "1.1.2",
    "sentence": "HLW8012 for Arduino / ESP8216"
  },
  {
    "name": "HM330X by Tomoto",
    "version": "1.0.1",
    "sentence": "Arduino library for HM3301/HM3302 dust sensor."
  },
  {
    "name": "HMC6352",
    "version": "0.4.0",
    "sentence": "Experimental Arduino library for HMC6352 digital compass sensor"
  },
  {
    "name": "HONEYLemon",
    "version": "0.1.3",
    "sentence": "A library HONEYLemon Platform."
  },
  {
    "name": "HP03S",
    "version": "1.1.0",
    "sentence": "A library that makes it easy to use the HP03S-sensor."
  },
  {
    "name": "HPDL1414",
    "version": "3.2.1",
    "sentence": "HPDL1414 Display Driver"
  },
  {
    "name": "HPDL1414-74HC595",
    "version": "1.0.0",
    "sentence": "An Arduino library for driving HPDL-1414 displays using shift registers"
  },
  {
    "name": "HSCDTD008A",
    "version": "1.1.0",
    "sentence": "A library for the HSCDTD008A geomagnetic sensor."
  },
  {
    "name": "HS_CAN_485_ESP32",
    "version": "0.0.2",
    "sentence": "A library for HS_CAN_485_ESP32"
  },
  {
    "name": "HS_JOY_ESP32",
    "version": "0.1.4",
    "sentence": "A library for HS_JOY_ESP32"
  },
  {
    "name": "HT1621",
    "version": "2.1.2",
    "sentence": "A library for HT1621 based 7-seg LCDs."
  },
  {
    "name": "HT1632",
    "version": "1.1.2",
    "sentence": "Arduino library code for HT1632(C) matrix panel driver chips, and the panels we have in the Adafruit shop"
  },
  {
    "name": "HT16K33",
    "version": "0.4.1",
    "sentence": "Arduino Library for HT16K33 I2C 4x7segment display"
  },
  {
    "name": "HTL_onboard",
    "version": "1.1.6",
    "sentence": "Library to control HTL Uno onboard components."
  },
  {
    "name": "HTTP",
    "version": "1.0.0",
    "sentence": "A full HTTP/1.1 implementation library for Arduino."
  },
  {
    "name": "HTTPS_Server_Generic",
    "version": "1.5.0",
    "sentence": "This is HTTPS/HTTP Server Library for ESP32, WT32_ETH01, ESP32 + LwIP W5500, ESP32 + LwIP W6100, ESP32 + LwIP ENC28J60"
  },
  {
    "name": "HTTPed",
    "version": "0.1.0",
    "sentence": "Simple HTTP Request client library (with redirects) for WiFiNINA."
  },
  {
    "name": "HTU21D Sensor Library",
    "version": "1.0.2",
    "sentence": "An Arduino library for the HTU21D sensor."
  },
  {
    "name": "HUB75Enano",
    "version": "2.0.0",
    "sentence": "This Library makes the Arduino Nano drive a HUB75E Panel with 128x64 pixels"
  },
  {
    "name": "HUB75nano",
    "version": "2.4.1",
    "sentence": "This Library allows the Arduino Nano/Uno/Uno R4 Minima/Nano Every/Mega/Pro Mini to drive a HUB75 panel from 8x16 up to 32x64"
  },
  {
    "name": "HUSB238",
    "version": "1.0.0",
    "sentence": "Driver library for the HUSB238 USB-PD IC"
  },
  {
    "name": "HUSB238Driver",
    "version": "1.0.3",
    "sentence": "HUSB238Driver for ESP32"
  },
  {
    "name": "HV518",
    "version": "1.0.4",
    "sentence": "Arduino library to control Microchip HV518"
  },
  {
    "name": "HX710",
    "version": "1.0.1",
    "sentence": "Arduino library for HX710."
  },
  {
    "name": "HX710AB",
    "version": "0.2.0",
    "sentence": "Arduino library for the HX710A and HX710B 24-Bit ADC."
  },
  {
    "name": "HX711",
    "version": "0.5.2",
    "sentence": "Arduino library for HX711 load cell amplifier."
  },
  {
    "name": "HX711 Arduino Library",
    "version": "0.7.5",
    "sentence": "Library to interface the Avia Semiconductor HX711 ADC."
  },
  {
    "name": "HX711_ADC",
    "version": "1.2.12",
    "sentence": "Library for the HX711 24-bit ADC for weight scales."
  },
  {
    "name": "HX711_MP",
    "version": "0.3.1",
    "sentence": "Arduino library for HX711 load cell amplifier."
  },
  {
    "name": "HX711_asukiaaa",
    "version": "1.0.6",
    "sentence": "It read values from HX711"
  },
  {
    "name": "HX711_light",
    "version": "1.0.2",
    "sentence": "A lightweight interface to the HX711 load cell amplifier."
  },
  {
    "name": "HaCEspSockets",
    "version": "0.1.2",
    "sentence": "An Event driven MCU socket similar to windows socket experience ."
  },
  {
    "name": "HaCTimers",
    "version": "0.1.4",
    "sentence": "An event driven arduino Timer."
  },
  {
    "name": "HaCWifiManager",
    "version": "0.1.3",
    "sentence": "An event driven wifimanager library with Json input."
  },
  {
    "name": "HaLake-M5Stack-Library",
    "version": "1.0.0",
    "sentence": "A library to create web server on M5Stack"
  },
  {
    "name": "HaLakeKit",
    "version": "1.0.6",
    "sentence": "A library to control hakale kit."
  },
  {
    "name": "HaLakeKitFirst",
    "version": "1.0.1",
    "sentence": "A library to define communication between HaLakeKitFirst blocks."
  },
  {
    "name": "HaMqttEntities",
    "version": "1.0.9",
    "sentence": "Easy Home Assistant MQTT Integration Library"
  },
  {
    "name": "HalfStepper",
    "version": "1.0.0",
    "sentence": "<br/>An Arduino library to enable half-stepping and single/dual phasing for step motors."
  },
  {
    "name": "Hall-Switch",
    "version": "2.1.0",
    "sentence": "This library provides an interface to interact with the Hall effect sensor switch family"
  },
  {
    "name": "HamShield",
    "version": "1.1.4",
    "sentence": "A library for use with HamShield by Enhanced Radio Devices."
  },
  {
    "name": "HamShield_KISS",
    "version": "1.0.6",
    "sentence": "A library for use with HamShield by Enhanced Radio Devices."
  },
  {
    "name": "Hamming",
    "version": "1.3.2",
    "sentence": "Library for pack and unpack data by Hamming algorithm"
  },
  {
    "name": "Hanuman",
    "version": "1.2.2",
    "sentence": "Library for Hanuman"
  },
  {
    "name": "Haptic_DA7280",
    "version": "1.1.0",
    "sentence": "Arduino library for Dialog DA7280 Haptic Controller"
  },
  {
    "name": "Haptic_DRV2605",
    "version": "1.1.0",
    "sentence": "Arduino library for TI DRV2605L Haptic Controller"
  },
  {
    "name": "HardWire",
    "version": "2.0.0",
    "sentence": "A spinoff of the Wire. This library allows you to communicate with I2C and Two Wire Interface devices, and control each step of any I2C transaction."
  },
  {
    "name": "Hardware Buttons",
    "version": "1.0.0",
    "sentence": "Custom button actions handler"
  },
  {
    "name": "HardwareBLESerial",
    "version": "1.0.0",
    "sentence": "An Arduino library for Nordic Semiconductors proprietary UART/Serial Port Emulation over BLE protocol, using ArduinoBLE."
  },
  {
    "name": "HardwareSerial_RS485",
    "version": "2.2.0",
    "sentence": "Concurrent multi-drop (i.e. multi-master, multi-slave) RS485 communication library"
  },
  {
    "name": "Harvard_TinyMLx",
    "version": "1.2.3-Alpha",
    "sentence": "Supports the TinyML edX Course and TinyML Shield."
  },
  {
    "name": "Hashtable",
    "version": "1.0.1",
    "sentence": "This library provides an easy and efficient way to create dynamic Hash Tables in Arduino projects. It supports various operations such as insert, remove, among others."
  },
  {
    "name": "HeartBeat",
    "version": "0.3.5",
    "sentence": "Arduino library for HeartBeat with frequency and duty cycle."
  },
  {
    "name": "HeatpumpIR",
    "version": "1.0.31",
    "sentence": "Heatpump / Air Conditioner infrared control"
  },
  {
    "name": "HeidelbergInterface",
    "version": "1.0.0",
    "sentence": "Arduino Library to communicate with Heidelberg Wallbox Energy Control via Modbus RTU."
  },
  {
    "name": "HeliOS",
    "version": "0.4.1",
    "sentence": "An open source, community delivered, embedded operating system project."
  },
  {
    "name": "Helium",
    "version": "1.6.5",
    "sentence": "Arduino library for the Helium Atom module"
  },
  {
    "name": "Hello Drum",
    "version": "0.7.7",
    "sentence": "Arduino Library for piezo sensing"
  },
  {
    "name": "Heltec ESP32 Dev-Boards",
    "version": "2.1.2",
    "sentence": "Library for Heltec ESP32 (or ESP32+LoRa) based boards"
  },
  {
    "name": "Heltec ESP8266 Dev-Boards",
    "version": "1.0.3",
    "sentence": "Library for Heltec ESP8266 based boards"
  },
  {
    "name": "Heltec_ESP32_LoRa_v3",
    "version": "0.9.2",
    "sentence": "Proper working library for \"Heltec ESP32 LoRa v3\" and \"Heltec Wireless Stick v3\" boards."
  },
  {
    "name": "Heltec_LoRa_OLED_Examples",
    "version": "0.8.1",
    "sentence": "Examples for Heltec boards using main ESP32 libraries"
  },
  {
    "name": "Hercules Dual 15A 6-20V Motor Controller",
    "version": "1.0.0",
    "sentence": "Arduino library to control Hercules Dual 15A 6-20V Motor Controller."
  },
  {
    "name": "HerkulexServo",
    "version": "0.1.0",
    "sentence": "A library for communicating with Herkulex smart servos."
  },
  {
    "name": "HexFabQuadroMotorShield",
    "version": "1.0.0",
    "sentence": "Control up to four DC Motors and read their currents with this shield."
  },
  {
    "name": "HiTechnic-Arduino",
    "version": "1.0.0",
    "sentence": "Use the HiTechnic motor/servo controllers with your Arduino!"
  },
  {
    "name": "High Performance IMU BMI085",
    "version": "1.0.0",
    "sentence": "Library for communicating with the Bosch BMI085 6 axis IMU."
  },
  {
    "name": "High-Side-Switch",
    "version": "0.1.4",
    "sentence": "DEPRECATED. C++ library for the PROFET+2 12V"
  },
  {
    "name": "HighPowerStepperDriver",
    "version": "1.1.2",
    "sentence": "High-Power Stepper Motor Driver library for Arduino"
  },
  {
    "name": "Histogram",
    "version": "0.3.7",
    "sentence": "Arduino library for creating histograms math."
  },
  {
    "name": "Hlw8032",
    "version": "1.2.0",
    "sentence": "The hlw8032 library is designed for power, current, and voltage monitoring across diverse hardware, supporting both software and hardware serial interfaces."
  },
  {
    "name": "Hmi4DinBox",
    "version": "1.0.0",
    "sentence": "I2C Human to Machine Interface for Din Box"
  },
  {
    "name": "HoldButton",
    "version": "1.0.0",
    "sentence": "Reads the buttons connected to Arduino pins."
  },
  {
    "name": "HomeAssistantEntities",
    "version": "8.0.2",
    "sentence": "Library for providing sensors and actuators to Home Assistant using MQTT."
  },
  {
    "name": "HomeAssistantMQTT",
    "version": "1.0.1",
    "sentence": "Arduino Library to create IoT devices connected to Home Assistant via MQTT."
  },
  {
    "name": "HomeDing",
    "version": "0.9.7",
    "sentence": "Building Internet Things made easy."
  },
  {
    "name": "HomeKit-ESP8266",
    "version": "1.2.0",
    "sentence": "Native Apple HomeKit accessory implementation for the ESP8266 Arduino core."
  },
  {
    "name": "HomeSpan",
    "version": "2.1.1",
    "sentence": "A robust and extremely easy-to-use HomeKit implementation for the Espressif ESP32 running on the Arduino IDE."
  },
  {
    "name": "Homeyduino",
    "version": "1.0.2",
    "sentence": "Homeyduino allows you to connect your Arduino projects with Homey."
  },
  {
    "name": "HoneyWellFMA_SPI",
    "version": "1.0.0",
    "sentence": "A library for easy use of Honeywell FMAMSDXX025WCSC3 sensor"
  },
  {
    "name": "Honeywell TruStability SPI",
    "version": "1.0.0",
    "sentence": "Arduino library for communicating with Honeywell TruStability HSC or SSC pressure sensors over SPI."
  },
  {
    "name": "Honeywell Zephyr I2C",
    "version": "1.1.0",
    "sentence": "Arduino library for Honeywell Zephyr HAF flow rate sensors using I2C."
  },
  {
    "name": "HotButton",
    "version": "0.1.1",
    "sentence": "Button library for Arduino. The usual, plus \"if (button.event(LONG, SHORT, LONG))\" and more."
  },
  {
    "name": "HoverboardAPI",
    "version": "0.1.1",
    "sentence": "Hoverboard API controller"
  },
  {
    "name": "HttpClient",
    "version": "2.2.0",
    "sentence": "Library to easily make HTTP GET, POST and PUT requests to a web server."
  },
  {
    "name": "Hublink BEAM",
    "version": "2.0.6",
    "sentence": "Library for the Hublink BEAM ESP32-S3 data logging device."
  },
  {
    "name": "Hublink-Node",
    "version": "1.0.5",
    "sentence": "A library for handling BLE and SD card communication for ESP32 nodes."
  },
  {
    "name": "HuemonelabKit",
    "version": "4.1.4",
    "sentence": "Library for educational arduino kit made by HuemoneLab"
  },
  {
    "name": "Huma Buttons",
    "version": "0.0.3",
    "sentence": "Push Buttons for ESP32, ESP88266"
  },
  {
    "name": "Husarnet ESP32",
    "version": "2.0.0-beta4",
    "sentence": "Connect your devices using secure P2P network layer for robots and IoT."
  },
  {
    "name": "HydroinoJobMgr",
    "version": "1.0.0",
    "sentence": "A library for managing jobs/tasks associated with an arduino based controlled environment agricultural system."
  },
  {
    "name": "HyperDeck",
    "version": "0.2.0",
    "sentence": "BlackMagic Design HyperDeck controller for Arduino via TCP"
  },
  {
    "name": "Hyperduino Library",
    "version": "1.2.0",
    "sentence": "Allows anyone to control H-Bridge for Hyperduino"
  },
  {
    "name": "Hysteresis",
    "version": "1.0.1",
    "sentence": "Hysteresis library"
  },
  {
    "name": "HzMeter_asukiaaa",
    "version": "1.1.6",
    "sentence": "It measures Hz from pulse input."
  },
  {
    "name": "I0Servo",
    "version": "1.0.8",
    "sentence": "Servo control."
  },
  {
    "name": "I2C",
    "version": "1.0.3",
    "sentence": "A ligthweight communication library over the Arduino framework"
  },
  {
    "name": "I2C AXP192 Power management",
    "version": "1.0.4",
    "sentence": "This is a library of AXP192, the Power Management for I2C connectivity."
  },
  {
    "name": "I2C BM8563 RTC",
    "version": "1.0.4",
    "sentence": "Library to control I2C RTC"
  },
  {
    "name": "I2C MPU6886 IMU",
    "version": "1.0.0",
    "sentence": "Library to control I2C MPU6886"
  },
  {
    "name": "I2C SLG",
    "version": "1.0.3",
    "sentence": "Library to control I2C GreenPAK SLG46826"
  },
  {
    "name": "I2C Temperature Sensors derived from the LM75",
    "version": "1.0.3",
    "sentence": "Support for I²C digital temperature sensors derived from the LM75."
  },
  {
    "name": "I2C-IRSENSE Library",
    "version": "1.0.2",
    "sentence": "An Arduino library to control the Iowa Scaled Engineering I2C-IRSENSE ( https://www.iascaled.com/store/I2C-IRSENSE ) reflective infrared proximity sensor."
  },
  {
    "name": "I2C-Sensor-Lib iLib",
    "version": "0.8.2",
    "sentence": "Library for i2c-sensors and some other specific functions (fast eFn, HDLC, SpektrumSerial)."
  },
  {
    "name": "I2CDisplayController",
    "version": "2.0.0",
    "sentence": "Arduino library for Seven Segment Display with I2C Communication Interface."
  },
  {
    "name": "I2CExtension",
    "version": "0.1.0",
    "sentence": "I2C extension/wrapper for Arduino"
  },
  {
    "name": "I2CHelper",
    "version": "1.0.8",
    "sentence": "This is a wrapper for Wire that simplifies I2C communication when creating libraries for new I2C devices."
  },
  {
    "name": "I2CIP",
    "version": "1.0.0",
    "sentence": "A library of protocols for interfacing with I2C devices on a modular switched network."
  },
  {
    "name": "I2CKeyPad",
    "version": "0.5.0",
    "sentence": "Arduino library for 4x4 (or smaller) keypad connected to an I2C PCF8574."
  },
  {
    "name": "I2CKeyPad8x8",
    "version": "0.3.1",
    "sentence": "Arduino library for a 8x8 (or smaller) keypad connected to an I2C PCF8575."
  },
  {
    "name": "I2CScanner",
    "version": "1.0.0",
    "sentence": "I2C Scanner"
  },
  {
    "name": "I2CSoilMoistureSensor",
    "version": "1.1.4",
    "sentence": "Provide access to all functions of the I2C Soil Moisture Sensor from Catnip Electronics."
  },
  {
    "name": "I2C_24LC1025",
    "version": "0.3.0",
    "sentence": "Library for 24FC1025 I2C EEPROM"
  },
  {
    "name": "I2C_ASDX",
    "version": "0.4.0",
    "sentence": "Arduino library for I2C ASDX pressure sensor (Honeywell)."
  },
  {
    "name": "I2C_DMAC",
    "version": "1.2.0",
    "sentence": "Arduino Zero (SAMD21/SAMD51) based non-blocking I2C library using the Direct Memory Access Controller (DMAC)."
  },
  {
    "name": "I2C_EEPROM",
    "version": "1.9.2",
    "sentence": "Library for I2C EEPROMS"
  },
  {
    "name": "I2C_Functions",
    "version": "1.8.3",
    "sentence": "This is a helper library to abstract away I2C transactions and registers also this tool scans the master I2C bus and reports connected devices."
  },
  {
    "name": "I2C_Insarianne",
    "version": "1.0.2",
    "sentence": "Personal library for INSARIANNE project"
  },
  {
    "name": "I2C_LCD",
    "version": "0.2.3",
    "sentence": "Arduino library for I2C_LCD."
  },
  {
    "name": "I2C_LCD12864",
    "version": "1.0.2",
    "sentence": "Arduino library for LCD12864 I2C module."
  },
  {
    "name": "I2C_SCANNER",
    "version": "0.3.0",
    "sentence": "Arduino class to implement an I2C scanner."
  },
  {
    "name": "I2C_SOFTRESET",
    "version": "0.1.0",
    "sentence": "Arduino library for the I2C_SOFTRESET, to reset stuck devices."
  },
  {
    "name": "I2C_Scanner",
    "version": "1.0.4",
    "sentence": "Master I2C Bus Device Scanner."
  },
  {
    "name": "I2C_Slave",
    "version": "0.3.3",
    "sentence": "Arduino Library to create a basic I2C slave device"
  },
  {
    "name": "I2C_device_Arduino",
    "version": "1.1.0",
    "sentence": "I2C_device class library"
  },
  {
    "name": "I2Commands",
    "version": "0.1.0",
    "sentence": "A library that enables you to easily send and receive data with easy-to-use commands."
  },
  {
    "name": "I2Cwrapper",
    "version": "0.5.0",
    "sentence": "I2Cwrapper is a generic modular framework which helps you implement Arduino based I2C target (slave) devices for control of non-I2C hardware."
  },
  {
    "name": "I2cControlPanel_asukiaaa",
    "version": "1.4.2",
    "sentence": "It communicate with a control panel via i2c."
  },
  {
    "name": "I2cDiscreteIoExpander",
    "version": "4.0.1",
    "sentence": "Arduino library for the Texas Instruments PCF8575C 16-bit I2C I/O expander."
  },
  {
    "name": "I2cMotors_asukiaaa",
    "version": "1.0.4",
    "sentence": "It controls i2c motor driver."
  },
  {
    "name": "I2cMultipleMotors_asukiaaa",
    "version": "1.2.0",
    "sentence": "Multiple motors driver"
  },
  {
    "name": "IBM LMIC framework",
    "version": "1.5.1",
    "sentence": "Deprecated arduino port of the LMIC (LoraWAN-in-C, formerly LoraMAC-in-C) framework provided by IBM."
  },
  {
    "name": "IBot",
    "version": "1.3.0",
    "sentence": "Arduino library for I-Bot camp."
  },
  {
    "name": "IBusBM",
    "version": "1.1.4",
    "sentence": "Arduino library for the Flysky/Turnigy RC iBUS protocol - servo (receive) and sensors/telemetry (send) using hardware UART (AVR, ESP32 and STM32 architectures)"
  },
  {
    "name": "IC Hack Badge",
    "version": "1.1.0",
    "sentence": "Driver code and examples for IC Hack 2025 badges."
  },
  {
    "name": "ICM20689",
    "version": "1.1.3",
    "sentence": "Library for communicating with the ICM20689 six-axis Inertial Measurement Units (IMU)."
  },
  {
    "name": "ICM20948_WE",
    "version": "1.2.3",
    "sentence": "A library for the 9-axis accelerometer, gyrometer and magnetometer ICM20948"
  },
  {
    "name": "ICM42605",
    "version": "1.1.0",
    "sentence": "Library for communicating with the ICM42605 six-axis Inertial Measurement Units (IMU)."
  },
  {
    "name": "ICM42670P",
    "version": "1.0.7",
    "sentence": "Allows to read accelerometer, gyroscope and temperature sensors from an ICM42670P Invensence IMU device."
  },
  {
    "name": "ICM42670S",
    "version": "1.0.7",
    "sentence": "Allows to read accelerometer, gyroscope and temperature sensors from an ICM42670S Invensence IMU device."
  },
  {
    "name": "ICM42688",
    "version": "1.1.0",
    "sentence": "Library for communicating with the ICM42688 six-axis Inertial Measurement Units (IMU)."
  },
  {
    "name": "ICM45605",
    "version": "1.0.0",
    "sentence": "Allows to read accelerometer, gyroscope and temperature sensors from an ICM45605 Invensence IMU device."
  },
  {
    "name": "ICM45686",
    "version": "1.0.0",
    "sentence": "Allows to read accelerometer, gyroscope and temperature sensors from an ICM45686 Invensence IMU device."
  },
  {
    "name": "ICM7218",
    "version": "1.3.2",
    "sentence": "Intersil-Renesas and Maxim ICM7218 and Intersil-Renesas ICM7228 LED driver library."
  },
  {
    "name": "ICM7218C",
    "version": "1.2.3",
    "sentence": "Maxim ICM7218C LED driver library."
  },
  {
    "name": "ICOM 746 CAT Control",
    "version": "1.0.3",
    "sentence": "Simulate an ICOM 746 radio from the CAT point of view."
  },
  {
    "name": "ICP-101xx Pressure Sensor Library",
    "version": "1.1.0",
    "sentence": "Arduino library for the TDK Invensense ICP-101xx family of high-resolution pressure sensors."
  },
  {
    "name": "ICP101xx",
    "version": "1.0.1",
    "sentence": "Allows to read pressure and temperature data from an ICP101xx Invensense pressure sensor (ICP10100, ICP10125,...) and estimates altitude or depth."
  },
  {
    "name": "ICP201xx",
    "version": "1.0.3",
    "sentence": "Allows to read pressure and temperature data from an ICP201xx Invensense pressure sensor (ICP20100,...) and estimates altitude or depth."
  },
  {
    "name": "ICRS 101",
    "version": "2.1.6",
    "sentence": "Example code for Robotics 101"
  },
  {
    "name": "ICUX0201",
    "version": "1.0.6",
    "sentence": "Allow to read ultrasound data from Invensense ICU10201, ICU20201 or ICU30201 devices, detects targets and computes range."
  },
  {
    "name": "IDToolsPico",
    "version": "1.0.0",
    "sentence": "UUID/MAC generator"
  },
  {
    "name": "IEEE754tools",
    "version": "0.2.6",
    "sentence": "Fast helper functions for IEEE754 floats."
  },
  {
    "name": "IFTTTMaker",
    "version": "1.0.0",
    "sentence": "A helper library for triggering IFTTT maker events (ESP8266 & Wifi-101)"
  },
  {
    "name": "IFTTTWebhook",
    "version": "1.1.2",
    "sentence": "Library for triggering IFTTT web hooks"
  },
  {
    "name": "IFX007T-Motor-Control",
    "version": "1.1.0",
    "sentence": "This library provides an Interface for Infineons IFX007T Motor Control Arduino Shield"
  },
  {
    "name": "IFX9201_XMC1300_StepperMotor",
    "version": "1.0.0",
    "sentence": "This library provides an interface to control a stepper motor through Infineon’s Stepper Motor Control Shield \"KIT_XMC1300_IFX9201\" with h-bridge IFX9201 and XMC1300 microcontroller."
  },
  {
    "name": "IGB-FlashSst26",
    "version": "1.4.0",
    "sentence": "Spi Flash Memory Library for Microchip SST26 1,8V"
  },
  {
    "name": "IHCSoapClient",
    "version": "1.0.2",
    "sentence": "A Library for connecting to the IHC Controller using soap"
  },
  {
    "name": "IISc_EdgeAI",
    "version": "1.0.0-Alpha",
    "sentence": "This library is for the Edge AI course at the Indian Institute of Science."
  },
  {
    "name": "ILI9341-Layout-Manager",
    "version": "1.0.5",
    "sentence": "An autolayout engine with callback support for designing and organizing buttons, text fields, and modal windows for ILI9341 chipsets"
  },
  {
    "name": "ILI9341_T4",
    "version": "1.6.2",
    "sentence": "Optimized ILI9341 SPI driver for Teensy 4/4.1/micromod."
  },
  {
    "name": "ILI9341_t3",
    "version": "1.0.0",
    "sentence": "Optimized ILI9341 (320x240 Color TFT) Display"
  },
  {
    "name": "ILI9341_t3n",
    "version": "1.1.1",
    "sentence": "Optimized ILI9341 (320x240 Color TFT) Display Support different SPI buses"
  },
  {
    "name": "ILI9342_T4",
    "version": "1.0.2",
    "sentence": "Optimized ILI9342(C) SPI driver for Teensy 4/4.1/micromod."
  },
  {
    "name": "ILI9486_SPI",
    "version": "1.0.5",
    "sentence": "Display Library for ILI9486 SPI TFT display."
  },
  {
    "name": "ILIB",
    "version": "1.2.1",
    "sentence": "Arduino library for ILOGICS DEVICE"
  },
  {
    "name": "IMU_Fusion_SYC",
    "version": "1.1.11",
    "sentence": "The data of MPU6050 and QMC5883L can be read, and the data fusion of both can be realized."
  },
  {
    "name": "INA219",
    "version": "0.4.0",
    "sentence": "Arduino library for INA219 voltage, current and power sensor."
  },
  {
    "name": "INA219B",
    "version": "1.0.0",
    "sentence": "INA219B TI i2c output current/voltage/power monitor Library"
  },
  {
    "name": "INA219_WE",
    "version": "1.3.8",
    "sentence": "A library for the INA219 current sensor module"
  },
  {
    "name": "INA226",
    "version": "0.6.3",
    "sentence": "Arduino library for INA226 power sensor"
  },
  {
    "name": "INA226Lib",
    "version": "1.1.2",
    "sentence": "Enables reading from INA226 current sensors to measure current and power."
  },
  {
    "name": "INA226_WE",
    "version": "1.2.12",
    "sentence": "A library for the INA226 current and power sensor module"
  },
  {
    "name": "INA226_asukiaaa",
    "version": "1.2.1",
    "sentence": "It manages INA226"
  },
  {
    "name": "INA228",
    "version": "0.1.5",
    "sentence": "Arduino library for the INA228, I2C, 20 bit, voltage, current and power sensor."
  },
  {
    "name": "INA229",
    "version": "0.2.0",
    "sentence": "Arduino library for the INA229, SPI, 20 bit, voltage, current and power sensor."
  },
  {
    "name": "INA236",
    "version": "0.1.1",
    "sentence": "Arduino library for the INA236, I2C, 16 bit, voltage, current and power sensor."
  },
  {
    "name": "INA239",
    "version": "0.2.0",
    "sentence": "Arduino library for the INA239, SPI, 16 bit, voltage, current and power sensor."
  },
  {
    "name": "INA2xx",
    "version": "1.1.0",
    "sentence": "Read current, voltage and power data from one or more INA2xx device(s)"
  },
  {
    "name": "INA3221",
    "version": "0.0.1",
    "sentence": "INA3221 Triple-Channel Sensor Driver."
  },
  {
    "name": "INA3221_RT",
    "version": "0.4.0",
    "sentence": "Arduino library for the I2C INA3221 3 channel voltage and current sensor."
  },
  {
    "name": "INA780x",
    "version": "1.0.1",
    "sentence": "Library for communicating with the INA780X family of power monitor ics over I2C."
  },
  {
    "name": "INFICON Spot Library",
    "version": "1.4.0",
    "sentence": "Library for the INFICON Spot sensor"
  },
  {
    "name": "IO22_IO_Board",
    "version": "1.0.0",
    "sentence": "Drive the Eletechsup IO22 family of I/O boards: IO22D08 and IO22C04"
  },
  {
    "name": "IO7F32",
    "version": "0.0.5",
    "sentence": "io7 IOT Framework for ESP32"
  },
  {
    "name": "IO7F8266",
    "version": "0.1.1",
    "sentence": "io7 IOT Framework for ESP8266"
  },
  {
    "name": "IOSignal",
    "version": "3.2.2",
    "sentence": "IOSignal Arduino Client."
  },
  {
    "name": "IOTAppStory-ESP",
    "version": "2.1.0-RC5.1",
    "sentence": "Update your ESP8266, ESP32 & Nextion displays over the air(OTA)"
  },
  {
    "name": "IOTClient",
    "version": "1.0.1",
    "sentence": "IOT Client Library."
  },
  {
    "name": "IOTKME",
    "version": "3.0.1",
    "sentence": "Currency Conversion and Stepper motor control and loadcell reader library for more informtion visit https://kmetechnology.com."
  },
  {
    "name": "IOXESP32Audio",
    "version": "1.0.0",
    "sentence": "With this library You can easily build a WebRadio with a ESP32 board with IOXESP32 Audio shield."
  },
  {
    "name": "IOXESP32Motor",
    "version": "1.0.0",
    "sentence": "With this library You can control motor with IOXESP32 Motor shield"
  },
  {
    "name": "IOXESP32_4-20mA_Receiver",
    "version": "1.0.0",
    "sentence": "Arduino library of IOXESP32 4-20mA Receiver shield"
  },
  {
    "name": "IP236x",
    "version": "1.2.2",
    "sentence": "A library for controlling and monitoring the IP2366/IP2368 charging IC via I2C."
  },
  {
    "name": "IP5306_I2C",
    "version": "1.0.2",
    "sentence": "Library for IP5306 I2C based battery-management SOC for Arduino platform supported boards"
  },
  {
    "name": "IPGeolocation",
    "version": "2.1.3",
    "sentence": "Library to get current timezone using your IP - uses IPGeolocation.io"
  },
  {
    "name": "IPS-7100-I2C-Arduino",
    "version": "1.0.1",
    "sentence": "An Arduino library and setup instructions for integrating the versatile IPS-7100 Particle Sensor with Arduino compatible boards (Arduino, ESP etc.) using I2C communication."
  },
  {
    "name": "IQ Module Communication",
    "version": "1.6.0",
    "sentence": "A library for communicating with and controlling IQ motor modules."
  },
  {
    "name": "IR-infrared Remote Control Decoder-Simulator",
    "version": "1.1.1",
    "sentence": "Driver for BC7215, an 8-pin universal IR remote control signal decoder/generator chip."
  },
  {
    "name": "IRLremote",
    "version": "2.0.2",
    "sentence": "Lightweight Infrared library for Arduino"
  },
  {
    "name": "IRM Mini",
    "version": "1.0.0",
    "sentence": "Adafruit_GFX-compatible library for IRM-Mini"
  },
  {
    "name": "IRMP",
    "version": "3.6.4",
    "sentence": "Receive and send infrared signals.<br/>"
  },
  {
    "name": "IRProxSensor",
    "version": "1.1.0",
    "sentence": "IRProxSensor provides a class to control an Infrared Proximity sensor."
  },
  {
    "name": "IRRemoteControl",
    "version": "1.0.0",
    "sentence": "A lightweight library for send/receive infra-red signal."
  },
  {
    "name": "IRRemoteESP32",
    "version": "1.0.0",
    "sentence": "Library for receiving and decoding IR signals."
  },
  {
    "name": "IRremote",
    "version": "4.4.1",
    "sentence": "Send and receive infrared signals with multiple protocols"
  },
  {
    "name": "IRremoteESP8266",
    "version": "2.8.6",
    "sentence": "Send and receive infrared signals with multiple protocols (ESP8266/ESP32)"
  },
  {
    "name": "IRsmallDecoder",
    "version": "1.2.1",
    "sentence": "Allows the reception and decoding of infrared signals from remote controls."
  },
  {
    "name": "IS31FL3729_LED_Matrix",
    "version": "1.0.0",
    "sentence": "A library for IS31FL3729 LED Matrix chip."
  },
  {
    "name": "ISE I2C-MCP3427 Library",
    "version": "1.0.0",
    "sentence": "A library to control the Iowa Scaled Engineering I2C-MCP3427 ( https://www.iascaled.com/store/I2C-MCP3427 ) 16-bit analog to digital converter"
  },
  {
    "name": "ISFET board library",
    "version": "0.1.2",
    "sentence": "Arduino library for ISFET board to read pH and Temperature"
  },
  {
    "name": "ISL1208-RTC-Library",
    "version": "1.4.6",
    "sentence": "Arduino library for Intersil ISl1208 RTC chip."
  },
  {
    "name": "ISRHandler",
    "version": "1.0.0",
    "sentence": "A flexible, reusable interrupt handler class for Arduino, allowing template-based interrupt management."
  },
  {
    "name": "IbusTrx",
    "version": "2.4.0",
    "sentence": "Arduino library for sending and receiving messages over the BMW infotainment bus (IBUS)."
  },
  {
    "name": "IgcLogger",
    "version": "0.0.3",
    "sentence": "Simple library to log igc track records"
  },
  {
    "name": "Improv WiFi Library",
    "version": "0.0.1",
    "sentence": "The library implements the Improv WiFi protocol allowing users to use this feature in their projects without effort."
  },
  {
    "name": "IncRotaryEncoder",
    "version": "1.0.0",
    "sentence": "Library for incremental rotary encoders"
  },
  {
    "name": "Indio",
    "version": "1.2.0",
    "sentence": "Library for the Industruino IND.I/O product"
  },
  {
    "name": "InfinitePCA9685",
    "version": "1.1.1",
    "sentence": "Manage and control multiple PCA9685 devices using a single object in Arduino."
  },
  {
    "name": "Infrared",
    "version": "1.2.3",
    "sentence": "An object oriented library for sending, receiving, generating, and decoding IR signals on the Arduino."
  },
  {
    "name": "InfraredMLX",
    "version": "0.0.2",
    "sentence": "Extension adds infrared features to control MobaLedLib using an infrared remote control"
  },
  {
    "name": "Ingenia Serial Servo Drive Library",
    "version": "1.1.1",
    "sentence": "Arduino library for control Ingenia Servo Drives using serial communication."
  },
  {
    "name": "IniFile",
    "version": "1.3.0",
    "sentence": "Library to read and parse .ini files."
  },
  {
    "name": "Inkplate Motion Library",
    "version": "1.0.0",
    "sentence": "Arduino Library for Inkplate Motion e-paper based board family."
  },
  {
    "name": "InkplateLibrary",
    "version": "10.0.0",
    "sentence": "Inkplate boards driver library"
  },
  {
    "name": "InkyBoard",
    "version": "1.4.2",
    "sentence": "Bibliotheek om gebruik te maken van het InkyBoard van InkyCode"
  },
  {
    "name": "InputDebounce",
    "version": "1.6.0",
    "sentence": "Simple polling input debounce Arduino library."
  },
  {
    "name": "InputEvents",
    "version": "1.2.1",
    "sentence": "An easy but comprehensive Arduino style Event Library for Buttons, Encoders, Encoder Buttons, Analog Inputs, Joysticks and Switches."
  },
  {
    "name": "InqPortal",
    "version": "5.4.0",
    "sentence": "ESP8266 Full featured IoT Application Server."
  },
  {
    "name": "InstagramFollowers",
    "version": "1.0.0",
    "sentence": "Get Instagram Followers on your Arduino (supports ESP8266, ESP32)"
  },
  {
    "name": "InstructableApi",
    "version": "1.1.0",
    "sentence": "A wrapper for the Instructables API for Arduino (supports ESP8266, ESP32 & WiFi101 boards)"
  },
  {
    "name": "Int64String",
    "version": "1.1.1",
    "sentence": "Convert 64bit integers to strings"
  },
  {
    "name": "Internal eeprom",
    "version": "1.0.0",
    "sentence": "Essa biblioteca permite ler ou gravar dados na eeprom"
  },
  {
    "name": "InternalTemperature",
    "version": "2.1.1",
    "sentence": "Teensy internal CPU temperatures"
  },
  {
    "name": "InterpolationLib",
    "version": "1.0.2",
    "sentence": "Arduino library that provides interpolation methods step, linear, smooth, catmull spline and constrained spline."
  },
  {
    "name": "InterruptStepper",
    "version": "2.0.0",
    "sentence": "A stepper library for the Arduino Due board that can run stepper motors using timer interrupts."
  },
  {
    "name": "Interstitial Quadrant",
    "version": "0.7.1",
    "sentence": "Arduino library and example code for the Quadrant hand-tracking interface board."
  },
  {
    "name": "Interval",
    "version": "0.1.4",
    "sentence": "Arduino library for Interval data type."
  },
  {
    "name": "IntervalCallback",
    "version": "1.1.2",
    "sentence": "Library to call a callback repetively after a certain time."
  },
  {
    "name": "IntervalTimerEx",
    "version": "0.1.0",
    "sentence": "IntervalTimerEx subclasses the Teensy IntervalTimer to allow for a variety of callable objects as timer callbacks."
  },
  {
    "name": "IoAbstraction",
    "version": "4.4.0",
    "sentence": "Treat PCF8574, MCP23017 and Shift registers like pins, matrix keypad, touch screen handler,  button press and rotary encoder management (switches) on any supported IO (including DfRobot & Joysticks) with event handling, interchangable AVR/I2C(AT24) EEPROMs."
  },
  {
    "name": "IoT Pipe",
    "version": "0.2.1",
    "sentence": "A library to use with the IoT Pipe web service."
  },
  {
    "name": "IoT Suite",
    "version": "0.0.6",
    "sentence": "IoT Suite is a simple, easy to use platform for building IoT solutions."
  },
  {
    "name": "IoTController",
    "version": "1.0.0",
    "sentence": "IoT Network Controller for ESP8266 and ESP32"
  },
  {
    "name": "IoTGuru",
    "version": "1.3.1",
    "sentence": "Cloud based backend services to your devices."
  },
  {
    "name": "IoTWay",
    "version": "0.0.3",
    "sentence": "Arduino library for connecting to IoTWay servers through Proxy"
  },
  {
    "name": "IoTWebConf_for_Visuino_modified_by_IoT_Jedi",
    "version": "3.1.1",
    "sentence": "ESP8266/ESP32 non-blocking WiFi/AP web configuration."
  },
  {
    "name": "IoT_Modules-Buttons",
    "version": "1.0.1",
    "sentence": "Button library for easier use of buttons in projects."
  },
  {
    "name": "IoTeX-blockchain-client",
    "version": "0.3.1",
    "sentence": "A simple API client implementation in C++ for the IoTeX blockchain."
  },
  {
    "name": "IoTesla-client",
    "version": "0.9.0",
    "sentence": "Arduino IoTesla client Library"
  },
  {
    "name": "IoTivity-Lite",
    "version": "0.0.3",
    "sentence": "OCF(Open Connectivity Founcation) core framework"
  },
  {
    "name": "IoTivity-Lite_Arduino-porting",
    "version": "0.0.3",
    "sentence": "OCF(Open Connectivity Founcation) core framework porting to Arduino"
  },
  {
    "name": "IoTtweet",
    "version": "1.0.0",
    "sentence": "A library that makes Internet of Things send data and control on IoTtweet.com."
  },
  {
    "name": "IoTtweetESP32",
    "version": "1.0.0",
    "sentence": "A library that makes Internet of Things send data and control on IoTtweet.com."
  },
  {
    "name": "IoTtweetNBIoT",
    "version": "2.3.0",
    "sentence": "A library that makes Internet of Things (NB-IoT device) send data and control on IoTtweet.com dashboard."
  },
  {
    "name": "IoTtweetSIEMENS_SIMATIC",
    "version": "1.1.0",
    "sentence": "A library that makes SIEMENS SIMATIC IOT2020, IOT2040 send data to IoTtweet.com dashboard."
  },
  {
    "name": "Iobeam",
    "version": "0.1.0",
    "sentence": "Client library for using the iobeam cloud."
  },
  {
    "name": "IoliteCoding SerialCommands",
    "version": "1.0.0",
    "sentence": "IoliteCoding library for receiving serial commands."
  },
  {
    "name": "IonDB",
    "version": "2.2.0",
    "sentence": "A powerful key-value store for all data storage needs."
  },
  {
    "name": "IotKernel",
    "version": "0.2.1",
    "sentence": "A library for basic functions of IoT devices"
  },
  {
    "name": "IotWebConf",
    "version": "3.2.1",
    "sentence": "ESP8266/ESP32 non-blocking WiFi/AP web configuration."
  },
  {
    "name": "Iotkaran",
    "version": "0.2.0",
    "sentence": "Iotkaran library for Arduino."
  },
  {
    "name": "Iridium SBD",
    "version": "2.0.0",
    "sentence": "This library supports satellite data transmissions from anywhere on earth using the RockBLOCK family of Iridium 9602 and 9603 modems."
  },
  {
    "name": "Iridium9704LaunchPad",
    "version": "1.0.0",
    "sentence": "IoT from anywhere on Earth! Pair with an Iridium 9704 Launch Pad for seamless global connectivity and real-time data access, no matter how remote your location."
  },
  {
    "name": "IridiumGPP",
    "version": "0.1.0",
    "sentence": "Enables usage of microcontrollers with Iridium Edge"
  },
  {
    "name": "IridiumSBDi2c",
    "version": "3.0.6",
    "sentence": "This library supports satellite data transmissions from anywhere on earth using the RockBLOCK family of Iridium 9602 and 9603 modems."
  },
  {
    "name": "Irms_calc",
    "version": "1.0.0",
    "sentence": "Irms calculation library for ESP8266/ESP32/Arduino."
  },
  {
    "name": "Isolated EC Probe Interface",
    "version": "1.2.2",
    "sentence": "Measure Electrical Conductivity, Total Dissolved Solids, and Salinity"
  },
  {
    "name": "Isolated ISE Probe Interface",
    "version": "1.2.0",
    "sentence": "An isolated Ion Specific Electrode Probe Interface"
  },
  {
    "name": "Itty Bitty",
    "version": "1.5.0",
    "sentence": "<br/>With the fastest possible Arduino-compatible GPIO and register manipulation...<br/>It's the biggest of hits when you need to bang bits!"
  },
  {
    "name": "IwitVolumeKnob",
    "version": "1.0.0",
    "sentence": "Library to support the hardware built into many chinese volume knobs (iWit)"
  },
  {
    "name": "J1850 Arduino Transceiver Library",
    "version": "1.3.1",
    "sentence": "Arduino library for J1850-Arduino-Transceiver"
  },
  {
    "name": "J1850 VPW Arduino Transceiver Library",
    "version": "1.0.1",
    "sentence": "Arduino library for J1850-VPW-Arduino-Transceiver"
  },
  {
    "name": "JAREL",
    "version": "1.0.0",
    "sentence": "Just Another Rotary Encoder Library"
  },
  {
    "name": "JBLogger",
    "version": "1.0.5",
    "sentence": "A simple to use logger library for Arduino."
  },
  {
    "name": "JBWopr",
    "version": "1.0.6",
    "sentence": "Support library for the Unexpected Maker W.O.P.R. boards"
  },
  {
    "name": "JC_Button",
    "version": "2.1.5",
    "sentence": "Arduino library to debounce button switches, detect presses, releases, and long presses."
  },
  {
    "name": "JC_EEPROM",
    "version": "1.0.9",
    "sentence": "Arduino library to support external I2C EEPROMs."
  },
  {
    "name": "JC_Sunrise",
    "version": "1.0.3",
    "sentence": "Arduino library to calculate sunrise and sunset times."
  },
  {
    "name": "JDI_MIP_Display",
    "version": "1.0.0",
    "sentence": "Arduino library to drive the JDI and Sharp Memory In Pixel LCD Displays"
  },
  {
    "name": "JJYReceiver",
    "version": "0.8.7",
    "sentence": "JJY standard radio signal wave receiver library."
  },
  {
    "name": "JLed",
    "version": "4.15.0",
    "sentence": "An Arduino library to control LEDs"
  },
  {
    "name": "JLedPCA9685-HAL",
    "version": "1.1.0",
    "sentence": "A HAL to drive PCA9685 LEDs with JLed"
  },
  {
    "name": "JMAFoundation",
    "version": "1.0.0",
    "sentence": "A library that provide event response for Arduino."
  },
  {
    "name": "JMA_SPComm",
    "version": "1.0.0",
    "sentence": "A library that makes simple communication protocol for Arduino."
  },
  {
    "name": "JMotor",
    "version": "0.28.6",
    "sentence": "This library uses polymorphism and defines common interfaces for reading encoders and controlling motors allowing for easy open or closed loop motor control."
  },
  {
    "name": "JOAAT",
    "version": "1.0.0",
    "sentence": "Implementation of the Jenkin's HASH for Arduino."
  },
  {
    "name": "JPEGDEC",
    "version": "1.7.0",
    "sentence": "Optimized JPEG decoder for MCUs with 32K+ RAM."
  },
  {
    "name": "JPEGDecoder",
    "version": "2.0.0",
    "sentence": "Jpeg decoder tested with Arduino Mega, Arduino Due and ESP8266 based NodeMCU 1.0"
  },
  {
    "name": "JPEGENC",
    "version": "1.1.0",
    "sentence": "Universal JPEG encoder for MCUs with at least 4K of free RAM."
  },
  {
    "name": "JRCCARLIB",
    "version": "1.0.0",
    "sentence": "JRC CAR"
  },
  {
    "name": "JSON Encoder",
    "version": "1.0.0",
    "sentence": "Encode/Decode json/URL format strings for web transmission."
  },
  {
    "name": "JTAG",
    "version": "1.0.18",
    "sentence": "A library to perform JTAG operations and play XSVF."
  },
  {
    "name": "JTAG_Interface",
    "version": "1.0.0",
    "sentence": "Library for establishing a live JTAG communication between the MCU and FPGA of the Arduino Mkr Vidor 4000."
  },
  {
    "name": "JVC-Stereo",
    "version": "1.0.1",
    "sentence": "An arduino library for controlling a JVC Stereo"
  },
  {
    "name": "JWA BME280",
    "version": "1.0.4",
    "sentence": "Arduino library for BME280"
  },
  {
    "name": "JWT_RS256",
    "version": "1.0.2",
    "sentence": "A library to check if a JWT RS256 token is valid"
  },
  {
    "name": "JavaScript",
    "version": "0.0.1",
    "sentence": "JavaScript interpreter for Arduino"
  },
  {
    "name": "JeVe_EasyOTA",
    "version": "2.2.0",
    "sentence": "Easy include OTA Updates"
  },
  {
    "name": "Joba Tsl2561 Library",
    "version": "2.0.10",
    "sentence": "IoT library for using the Tsl2561 luminosity sensor"
  },
  {
    "name": "Jobber",
    "version": "1.0.3",
    "sentence": "simulated Threading for Arduino & Co."
  },
  {
    "name": "Joystick",
    "version": "1.0.0",
    "sentence": "Allows Arduino/Genuino boards to simplify the use of the Joystick."
  },
  {
    "name": "Joystick 5-Pin",
    "version": "1.1.0",
    "sentence": "A joystick library for Arduino."
  },
  {
    "name": "JoystickController",
    "version": "0.1.7",
    "sentence": "This is a library to simplify joystick control."
  },
  {
    "name": "Joystick_ESP32S2",
    "version": "0.9.5",
    "sentence": "Allows an ESP32S2/S3 board with USB capabilities  to appear as a Joystick or Gamepad."
  },
  {
    "name": "JrkG2",
    "version": "1.0.1",
    "sentence": "Jrk G2 library for Arduino"
  },
  {
    "name": "JsmnStream",
    "version": "1.0.1",
    "sentence": "Reformatting of the Serge Zaitsev jsmn library to parse a JSON string one char at a time."
  },
  {
    "name": "Json Streaming Parser",
    "version": "1.0.5",
    "sentence": "A very memory efficient library to parse (large) JSON objects on small devices"
  },
  {
    "name": "Json Streaming Parser 2",
    "version": "2.1.0",
    "sentence": "A character-by-character JSON parser to parse large JSON objects from HTTP or HTTPS on embedded devices."
  },
  {
    "name": "JsonLogger",
    "version": "1.1.9",
    "sentence": "An easy-to-use, small, fast and portable JSON builder and logger for IoT logging, data acquisition and analytics."
  },
  {
    "name": "JustWifi",
    "version": "2.0.2",
    "sentence": "Wifi Manager for ESP8266"
  },
  {
    "name": "Justina interpreter",
    "version": "1.3.3",
    "sentence": "Justina interpreter for Arduino 32 bit boards."
  },
  {
    "name": "K1200",
    "version": "1.0.2",
    "sentence": "Library for the Velleman K1200 watch."
  },
  {
    "name": "K24C16 EEPROM Library",
    "version": "1.0.1",
    "sentence": "This is a library for interfacing with K24C16 EEPROM"
  },
  {
    "name": "KAI Pro Library",
    "version": "1.0.3",
    "sentence": "Grants easy access to the various species of the Kai Pro."
  },
  {
    "name": "KAIST_IoTDataScience",
    "version": "1.0.0",
    "sentence": "This library was repackage for KAIST_IoTDataScience Class."
  },
  {
    "name": "KCN_Utility",
    "version": "2.1.0",
    "sentence": "a simplified motor and sensor driver.\\n"
  },
  {
    "name": "KIM",
    "version": "3.0.4",
    "sentence": "Library with examples for KIM1 shield v2 (no longer distributed) on Arduino platforms"
  },
  {
    "name": "KIM Arduino Library",
    "version": "0.0.1",
    "sentence": "Handles the interface between KIM shield and Arduino."
  },
  {
    "name": "KIMlib",
    "version": "0.9.2",
    "sentence": "Library for TAPKO KIMaip EIB/KNX Interface Module"
  },
  {
    "name": "KLEncoder",
    "version": "1.0.1",
    "sentence": "Library for get data from Encoder Module."
  },
  {
    "name": "KMESerial",
    "version": "4.8.8",
    "sentence": "KME Iot Cloud  https://kmetechnology.com."
  },
  {
    "name": "KMP_MCP23S08",
    "version": "1.0.1",
    "sentence": "Unified driver for the the MCP23S08 SPI expander"
  },
  {
    "name": "KMP_RS485",
    "version": "1.0.0",
    "sentence": "Library allows you send and receieve data using RS485 protocol"
  },
  {
    "name": "KOCOAFAB",
    "version": "1.0.6",
    "sentence": "Kocoafab's arduino D.I.Y. kit library."
  },
  {
    "name": "KONNEKTING Device Library",
    "version": "1.0.0-RC1",
    "sentence": "A library that enables creating KNX devices powered by Arduino."
  },
  {
    "name": "KS0108_GLCD",
    "version": "1.0.0",
    "sentence": "Arduino driver library for KS0108 GLCD monochrome display"
  },
  {
    "name": "KT0803",
    "version": "0.3.0",
    "sentence": "Arduino library for the KT0803 and KT0803K FM transmitter."
  },
  {
    "name": "KTMS1201",
    "version": "1.0.1",
    "sentence": "High level library for use with the KTM-S1201 LCD"
  },
  {
    "name": "KWP2000",
    "version": "1.3.0",
    "sentence": "A library that makes interfacing with motorbikes a breeze."
  },
  {
    "name": "KX0231025IMU",
    "version": "1.0.1",
    "sentence": "Arduino library for Semtech KX023-1025 IMU"
  },
  {
    "name": "KXTJ3-1057",
    "version": "0.1.1",
    "sentence": "Motion detection without bells and whistles, simply works, low power."
  },
  {
    "name": "Kaa IoT Platform",
    "version": "0.1.6",
    "sentence": "All in one library to communicate with Kaa IoT Platform"
  },
  {
    "name": "Kadita",
    "version": "1.17.1",
    "sentence": "[BETA] Library for beginner."
  },
  {
    "name": "Kalman",
    "version": "1.1.0",
    "sentence": "Include Kalman filter to your Arduino projects"
  },
  {
    "name": "Kalman Filter Library",
    "version": "1.0.2",
    "sentence": "Kalman Filter Library."
  },
  {
    "name": "Kangaroo Motion Controller",
    "version": "1.0.6",
    "sentence": "Use reliable Packet Serial to communicate with your Kangaroo."
  },
  {
    "name": "Kasia",
    "version": "1.0.0",
    "sentence": "IoT Library and Framework that will take care of all your communication needs."
  },
  {
    "name": "KellerModbus",
    "version": "0.2.3",
    "sentence": "Arduino library for communication with Keller pressure and water level sensors via Modbus."
  },
  {
    "name": "Kelvin2RGB",
    "version": "0.3.0",
    "sentence": "Arduino library for converting Kelvin temperature to RGB values"
  },
  {
    "name": "KerbalSimpit",
    "version": "2.4.0",
    "sentence": "A library for interfacing with the Kerbal Space Program video game."
  },
  {
    "name": "KermiteCore_Arduino",
    "version": "0.1.9",
    "sentence": "Kermite firmware library for Arduino and PlatformIO."
  },
  {
    "name": "KeyDetector",
    "version": "1.2.1",
    "sentence": "A library for detecting state change on analog and digital pins."
  },
  {
    "name": "KeyMatrix",
    "version": "1.0.0",
    "sentence": "KeyMatrix is poll event library for matrix keypads."
  },
  {
    "name": "KeySequence",
    "version": "1.3.0",
    "sentence": "A library for sending complex keyboard sequences."
  },
  {
    "name": "Keyboard",
    "version": "1.0.6",
    "sentence": "Allows an Arduino board with USB capabilities to act as a Keyboard."
  },
  {
    "name": "KeyboardAzertyFr",
    "version": "1.0.2",
    "sentence": "Keyboard library adaptation that allows an Arduino/Genuino board with USB capabilites to act as a french AZERTY Keyboard."
  },
  {
    "name": "Keyhole",
    "version": "1.9.0",
    "sentence": "A lightweight library for serial-port interaction: send commands and get/set sketch variables via a JSON- and Python-compatible text interface."
  },
  {
    "name": "Keypad",
    "version": "3.1.1",
    "sentence": "Keypad is a library for using matrix style keypads with the Arduino."
  },
  {
    "name": "KickFFT",
    "version": "3.0.0",
    "sentence": "A library for implementing a discrete Fourier transform on an input data array."
  },
  {
    "name": "KickFilters",
    "version": "3.0.0",
    "sentence": "A library for implementing a few basic filters including: high-pass, low-pass, notch, moving average filters, and median filters."
  },
  {
    "name": "KickFiltersRT",
    "version": "2.0.0",
    "sentence": "A library for implementing a few basic real-time filters including: high-pass, low-pass, notch, etc."
  },
  {
    "name": "KickMath",
    "version": "4.0.0",
    "sentence": "A library for performing a few simple mathematical calculations for use with arrays."
  },
  {
    "name": "KickSort",
    "version": "1.1.0",
    "sentence": "Arduino library for different sorting algorithms including quicksort, bubble sort, insertion sort, shell sort, and comb sort."
  },
  {
    "name": "KickstarterStats",
    "version": "1.0.0",
    "sentence": "A library to fetch Kickstarter stats (supports ESP8266/ESP32 & others)"
  },
  {
    "name": "KidMotorV4-Arduino",
    "version": "1.0.0",
    "sentence": "Drive DC motor / Servo motor, I/O expander with KidMotor V4"
  },
  {
    "name": "KiddeeExpress",
    "version": "1.4.1",
    "sentence": "An enhanced version of the already enhanced FirmataExpress version 1.2"
  },
  {
    "name": "Kinematics",
    "version": "1.0.0",
    "sentence": "Kinematics library for robotics"
  },
  {
    "name": "Kinematrix",
    "version": "0.0.21",
    "sentence": "[BETA] Simplify Your Arduino Projects."
  },
  {
    "name": "Kionix_KX023",
    "version": "2.0.1",
    "sentence": "3-axis accelerometer KX023-1025 library"
  },
  {
    "name": "Klang Electronics 8 Digit VFD",
    "version": "1.0.0",
    "sentence": "This is a library for the 8 digit VFD display using Russian IV-4 tubes."
  },
  {
    "name": "KmeStepper",
    "version": "3.0.0",
    "sentence": "Stepper motor control and loadcell reader library for more informtion visit https://kmetechnology.com."
  },
  {
    "name": "Kniwwelino",
    "version": "1.3.3",
    "sentence": "KniwwelinoLib Base Library for the Kniwwelino Board"
  },
  {
    "name": "Knock Detector",
    "version": "1.0.0",
    "sentence": "A non-blocking knock detection library to use with piezo elements"
  },
  {
    "name": "KnockPatternDetector",
    "version": "1.0.1",
    "sentence": "Can record, save and detect knock patterns in an asynchronous way with many settings."
  },
  {
    "name": "KolabseCarsCan",
    "version": "0.51.45",
    "sentence": "Storing data about the state of the car and decoding this data from CAN bus messages"
  },
  {
    "name": "KomootBLEConnect",
    "version": "0.0.1",
    "sentence": "A library to receive Komoot BLE Connect Packages"
  },
  {
    "name": "Komotion",
    "version": "0.2.5",
    "sentence": "For use with Komotion, the motion sensing platform designed for ES20r."
  },
  {
    "name": "KonnektingFlashStorage",
    "version": "1.0.1",
    "sentence": "The FlashStorage library aims to provide a convenient way to store and retrieve user's data using the non-volatile flash memory of microcontrollers. NOTE: This is a fork of cmaglie's \"FlashStorage\" with some extra modifications to fit KONNEKTING needs."
  },
  {
    "name": "Koyn",
    "version": "0.2.0",
    "sentence": "A trustless and decentralized Bitcoin library for Arduino compatible boards"
  },
  {
    "name": "KrokoTS",
    "version": "1.2.0",
    "sentence": "Light and fast library for resistive touchscreens"
  },
  {
    "name": "Krypton",
    "version": "0.0.1",
    "sentence": "A library that makes use of Krypton ion thruster controller."
  },
  {
    "name": "Kurtosis",
    "version": "0.1.2",
    "sentence": "Arduino library for calculating skewness and kurtosis of a dataset."
  },
  {
    "name": "L293",
    "version": "4.0.2",
    "sentence": "A library to control motors with the L293x motor driver and L298x compatible modules"
  },
  {
    "name": "L293D",
    "version": "1.0.3",
    "sentence": "Allows an Arduino board to use control a motor using a L293D."
  },
  {
    "name": "L298 Motor Driver",
    "version": "1.0.0",
    "sentence": "L298 Motor Driver is a library for Arduino to handle motor control using an H-bridge."
  },
  {
    "name": "L298N",
    "version": "2.0.3",
    "sentence": "L298N library for Arduino"
  },
  {
    "name": "L298NDriver",
    "version": "1.0.0",
    "sentence": "A library that makes using L298N motor driver much easier."
  },
  {
    "name": "L298N_MotorDriver",
    "version": "1.0.1",
    "sentence": "Arduino driver library for DC-Motors"
  },
  {
    "name": "L3G",
    "version": "3.0.0",
    "sentence": "Arduino library for Pololu L3G4200D, L3GD20, and L3G4200D boards"
  },
  {
    "name": "LC709204F",
    "version": "1.0.0",
    "sentence": "Arduino library for the LC709204F battery monitor."
  },
  {
    "name": "LCBUrl",
    "version": "1.1.9",
    "sentence": "A library to manipulate URL strings"
  },
  {
    "name": "LCD-HD44780",
    "version": "2.0.1",
    "sentence": "LCD library for HD44780 compatible display controllers."
  },
  {
    "name": "LCD-I2C",
    "version": "1.0.1",
    "sentence": "C++ Library for Liquid Crystal Displays (LCD) with the Hitachi HD44780 display driver."
  },
  {
    "name": "LCD-I2C-HD44780",
    "version": "2.0.1",
    "sentence": "LCD library for HD44780 compatible display controllers using an i2c expander."
  },
  {
    "name": "LCD03",
    "version": "1.1.2",
    "sentence": "A library for I2C control of the LCD03 20x4 and 16x2 serial LCD modules from Robot Electronics."
  },
  {
    "name": "LCD595",
    "version": "1.0.2",
    "sentence": "Library for LCD1602 or LCD2004"
  },
  {
    "name": "LCDBigNumbers",
    "version": "1.2.2",
    "sentence": "Arduino library to write big numbers on a 1602 or 2004 LCD."
  },
  {
    "name": "LCDDisplay10",
    "version": "1.0.2",
    "sentence": "A library to display numbers on an BL55xx display."
  },
  {
    "name": "LCDDrivers_NXP_Arduino",
    "version": "1.0.1",
    "sentence": "Class library for NXP LCD driver"
  },
  {
    "name": "LCDGraph",
    "version": "1.2.0",
    "sentence": "An Arduino library for drawing line graphs on alphanumeric displays using custom characters."
  },
  {
    "name": "LCDI2C_Multilingual_MCD",
    "version": "2.1.0",
    "sentence": "Displays multilingual text on LCD text displays via I2C."
  },
  {
    "name": "LCDIC2",
    "version": "2.3.3",
    "sentence": "Class interface for Liquid Crystal (LCD)"
  },
  {
    "name": "LCDMenuLib",
    "version": "2.3.5",
    "sentence": "A library with you can generate a menu`s based on the nested set model with multi layers"
  },
  {
    "name": "LCDMenuLib2",
    "version": "2.2.7",
    "sentence": "Easy creation of a multi layer tree menu with screensaver and other stuff."
  },
  {
    "name": "LCD_BacklightRGB",
    "version": "1.1.9",
    "sentence": "An Arduino library for an 18-pin RGB LCD Display backlight"
  },
  {
    "name": "LCD_HD44780",
    "version": "1.0.0",
    "sentence": "A library for HD44780 based LCDs."
  },
  {
    "name": "LCD_I2C",
    "version": "2.4.0",
    "sentence": "A library to control a 16x2 LCD via an I2C adapter based on PCF8574."
  },
  {
    "name": "LCD_ST7032",
    "version": "1.0.2",
    "sentence": "Arduino library for ST7032 LCD controller with i2c interface"
  },
  {
    "name": "LCD_SharpBP_SPI",
    "version": "2.0.1",
    "sentence": "This library supports the Sharp ® Memory LCD BoosterPacks 430BOOST-SHARP96 and BOOSTXL-SHARP128."
  },
  {
    "name": "LCLV",
    "version": "1.0.0",
    "sentence": "Arduino driver library for LCLV like Adafruit 3627 and 3330"
  },
  {
    "name": "LCT200",
    "version": "0.5.0",
    "sentence": "Library for LCT200 and LCT200 ESPWiFi Shield"
  },
  {
    "name": "LC_EEPROM",
    "version": "1.0.0",
    "sentence": "Library for working with internal and external EEPROM memory via I2C."
  },
  {
    "name": "LC_baseTools",
    "version": "1.8.1",
    "sentence": "A set of tools to make coding Arduinos easier."
  },
  {
    "name": "LC_cardIndex",
    "version": "1.0.0",
    "sentence": "A indexed list you can pull items out of randomly. Think dealing cards."
  },
  {
    "name": "LC_lilParser",
    "version": "2.0.1",
    "sentence": "A library for setting up a simple command parser. (Do the command line thing.)"
  },
  {
    "name": "LC_neoPixel",
    "version": "1.2.0",
    "sentence": "Allows the LC colorObj to work with Adafruit NeoPixels. Also allows them to be grouped and run in the background."
  },
  {
    "name": "LC_slowServo",
    "version": "1.0.0",
    "sentence": "Control the speed of your RC servos. NON BLOCKING"
  },
  {
    "name": "LDC1312-1314 I2C Library",
    "version": "1.0.0",
    "sentence": "This library allows for easy communication between Arduino and the LDC1314 or LDC1314."
  },
  {
    "name": "LDS",
    "version": "0.6.2",
    "sentence": "Laser distance scan sensors (LDS/LIDAR) wrapper/controller for kaia.ai robotics platform"
  },
  {
    "name": "LEADS",
    "version": "1.2.1",
    "sentence": "Lightweight Embedded Assisted Driving System Arduino Library"
  },
  {
    "name": "LED",
    "version": "1.3.0",
    "sentence": "Allows Arduino/Genuino boards to simplify the use of the LED."
  },
  {
    "name": "LED Dithering",
    "version": "1.0.0",
    "sentence": "Adjustable LED brightness on every IO pin with software-controlled blinking"
  },
  {
    "name": "LED744511",
    "version": "1.1.4",
    "sentence": "74'4511 LED Driver Library"
  },
  {
    "name": "LEDDriver",
    "version": "1.0.0",
    "sentence": "PWM LED Driver with ability to brighten and dimm fluently"
  },
  {
    "name": "LEDDrivers_NXP_Arduino",
    "version": "1.0.2",
    "sentence": "Class library for NXP LED drivers"
  },
  {
    "name": "LEDMatrixDriver",
    "version": "0.2.2",
    "sentence": "A replacement for Arduino's LedControl library for MAX7219"
  },
  {
    "name": "LED_Controls",
    "version": "1.1.0",
    "sentence": "LED_Controls"
  },
  {
    "name": "LEDuino",
    "version": "0.2.2",
    "sentence": "Framework for defining patterns and mapping them to a configuration of addressable LEDs using FastLED."
  },
  {
    "name": "LGFXMeter",
    "version": "0.2.0",
    "sentence": "LGFX based Gauge Decoration and Animation library"
  },
  {
    "name": "LG_Matrix_Print",
    "version": "1.0.0",
    "sentence": "A library to print text on one or more segments with 8x8 LED-Matrix using MAX"
  },
  {
    "name": "LIDAR-Lite",
    "version": "3.0.6",
    "sentence": "Arduino library for Garmin LIDAR-Lite."
  },
  {
    "name": "LILCMU GoGoBoard Library",
    "version": "1.0.0",
    "sentence": "Library for GoGoBoard"
  },
  {
    "name": "LILCMU GoGoBright Library",
    "version": "1.0.0",
    "sentence": "An extension board for KidBright aim to enabled fully functional of hardware along with the used of students."
  },
  {
    "name": "LIN master emulation with background operation",
    "version": "1.6.0",
    "sentence": "LIN master node emulation with preemptive background operation"
  },
  {
    "name": "LIN master portable",
    "version": "1.4.0",
    "sentence": "LIN master node emulation for different boards"
  },
  {
    "name": "LIN slave portable",
    "version": "1.0.0",
    "sentence": "LIN slave node emulation for different boards"
  },
  {
    "name": "LINBus_stack",
    "version": "3.1.3",
    "sentence": "Provides Local Interconnect Network (LIN) support on SAM3X or AVR based boards with a TJA1021 transceiver."
  },
  {
    "name": "LIS331",
    "version": "2.2.3",
    "sentence": "LIS331 triple axis acceleromenter Arduino library"
  },
  {
    "name": "LIS3DH motion detection",
    "version": "0.0.6",
    "sentence": "Motion detection without bells and whistles, simply works, low power."
  },
  {
    "name": "LIS3MDL",
    "version": "2.0.0",
    "sentence": "LIS3MDL magnetometer library"
  },
  {
    "name": "LM35",
    "version": "1.0.1",
    "sentence": "Gets the raw value of LM35 and tranform to Celsius, Fahrenheit or Kelvin."
  },
  {
    "name": "LM35 Sensor",
    "version": "1.0.1",
    "sentence": "This library for Arduino allows you to use the LM35 temperature sensor."
  },
  {
    "name": "LM35IC",
    "version": "1.0.0",
    "sentence": "A library to interface with the LM35 family of temperature sensors."
  },
  {
    "name": "LM73",
    "version": "2.1.0",
    "sentence": "LM73 Temperature Sensor Library"
  },
  {
    "name": "LM75",
    "version": "1.1.0",
    "sentence": "Library to get temperature from LM75"
  },
  {
    "name": "LM75A Arduino library",
    "version": "1.0.1",
    "sentence": "M2M Solutions LM75A Arduino library."
  },
  {
    "name": "LM96163",
    "version": "1.0.1",
    "sentence": "Driver for LM96163 Fan Controller"
  },
  {
    "name": "LMI",
    "version": "1.2.1",
    "sentence": "Linear Matrix Inequality (LMI) solver for Arduino."
  },
  {
    "name": "LMP91000",
    "version": "1.0.0",
    "sentence": "Arduino library for the LMP91000 Configurable Potentiostat for Low-Power Chemical Sensing Applications."
  },
  {
    "name": "LMT87",
    "version": "0.0.1",
    "sentence": "A simple library for utilizing analog temperature sensor"
  },
  {
    "name": "LP50XX",
    "version": "1.0.0",
    "sentence": "Library for interaction with the LP5009 and LP5012 LED driver"
  },
  {
    "name": "LPD6803 RGB Pixels",
    "version": "1.1.2",
    "sentence": "Controlling library for strands of LPD6803 LED pixel dots."
  },
  {
    "name": "LPD8806",
    "version": "1.0.7",
    "sentence": "Arduino library for LED strips and pixels using LPD8806 (and probably LPD8803/LPD8809)"
  },
  {
    "name": "LPS",
    "version": "3.1.0",
    "sentence": "Arduino library for Pololu LPS boards"
  },
  {
    "name": "LPS35HW",
    "version": "1.0.2",
    "sentence": "LPS35HW pressure sensor library"
  },
  {
    "name": "LSA08",
    "version": "1.1.0",
    "sentence": "This library is for the Cytron Line Sensing Array: LSA08."
  },
  {
    "name": "LSA08_Simplified",
    "version": "1.0.0",
    "sentence": "An easy to use library to interface LSA08 line sensor with MCU."
  },
  {
    "name": "LSM303",
    "version": "3.0.1",
    "sentence": "Arduino library for Pololu LSM303 boards"
  },
  {
    "name": "LSM6",
    "version": "2.0.1",
    "sentence": "LSM6 accelerometer and gyro library"
  },
  {
    "name": "LTC1392 library",
    "version": "1.0.1",
    "sentence": "Arduino library for the LTC1392 Micropower Temperature, Power Supply and Differential Voltage Monitor"
  },
  {
    "name": "LTC230x",
    "version": "0.1.2",
    "sentence": "Arduino library for LTC230x (LTC2301, LTC2305, and LTC2309) 12-Bit ADCs with I2C Interface"
  },
  {
    "name": "LTC2942",
    "version": "1.2.2",
    "sentence": "Library for Analog Devices LTC2941 and LTC2942 battery gas gauges."
  },
  {
    "name": "LTC2991",
    "version": "0.2.1",
    "sentence": "Arduino library for LTC2991 temperature and voltage control IC"
  },
  {
    "name": "LTR-329ALS-01",
    "version": "1.0.0",
    "sentence": "LTR-329ALS-01 is a low voltage, I2C digital light sensor."
  },
  {
    "name": "LTR308 library",
    "version": "1.0.0",
    "sentence": "An Arduino library for the digital light sensor breakout boards containing the Lite-On LTR-308ALS-01 IC"
  },
  {
    "name": "LTR390",
    "version": "1.0.9",
    "sentence": "Arduino library for the LTR390 UV sensors."
  },
  {
    "name": "LTR390_DFR",
    "version": "0.1.1",
    "sentence": "Arduino library for the I2C LTR390 UV sensor (DF Robotics edition)."
  },
  {
    "name": "LTR390_RT",
    "version": "0.1.2",
    "sentence": "Arduino library for the I2C LTR390 UV sensor."
  },
  {
    "name": "LTS01A_MAX31725",
    "version": "1.0.1",
    "sentence": "Library for LTS01A MAX31725."
  },
  {
    "name": "LUHN",
    "version": "0.2.1",
    "sentence": "Arduino Library for calculating LUHN checksum."
  },
  {
    "name": "LVGL_CYD",
    "version": "1.2.2",
    "sentence": "Running LVGL on CYD, all the boilerplate stuff."
  },
  {
    "name": "LW09-Dali",
    "version": "1.0.3",
    "sentence": "This library provides an interface for managing DALI-compatible lighting systems through an I²C bus. LED-Warrior 09"
  },
  {
    "name": "Labvee Library",
    "version": "1.0.1",
    "sentence": "Labvee Arduino Board Library."
  },
  {
    "name": "LapI2CTop",
    "version": "1.0.0",
    "sentence": "LapI2CTop supports a branched topology I2C network, using the ubiquitous TCA9748 multiplexers"
  },
  {
    "name": "LapINA219",
    "version": "1.0.0",
    "sentence": "This is a simple current and voltage sensing library for the INA219 high-side Current Sensor"
  },
  {
    "name": "LapX9C10X",
    "version": "1.0.2",
    "sentence": "A library to drive the X9C102/103/104/503 Digitally Controlled Potentiometers"
  },
  {
    "name": "Layad Circuits Saleng GSM Shield",
    "version": "1.2.0",
    "sentence": "Library for SIM800L based GSM shield from Layad Circuits."
  },
  {
    "name": "LcdBarGraph",
    "version": "2.0.1",
    "sentence": "This library is to display analog values in an LCD display."
  },
  {
    "name": "LcdBarGraphX",
    "version": "2.0.1",
    "sentence": "Visualizing alanalog values on an LCD with the LiquidCrystal_I2C library."
  },
  {
    "name": "LcdEffects",
    "version": "1.0.0",
    "sentence": "A library that lets you apply special effects to LCD text."
  },
  {
    "name": "LcdMenu",
    "version": "5.8.0",
    "sentence": "Display navigable menu items on your LCD display with Arduino."
  },
  {
    "name": "LcdProgressBar",
    "version": "1.0.1",
    "sentence": "A library to draw some customized progress bar on any LCD display."
  },
  {
    "name": "LcdProgressBarDouble",
    "version": "1.1.0",
    "sentence": "A library to draw some customized progress bar on any LCD display."
  },
  {
    "name": "LcdUi",
    "version": "1.0.3",
    "sentence": "This library is made to build sophisticated User Interface on Arduino for text Lcds."
  },
  {
    "name": "LeafonySTM32",
    "version": "0.0.2",
    "sentence": "Library for Leafony STM32 basic kit"
  },
  {
    "name": "Leaphy Extensions",
    "version": "1.0.1",
    "sentence": "Provides functionality to program all Leaphy robots"
  },
  {
    "name": "Leaphy Extra Extension",
    "version": "0.0.23",
    "sentence": "Provides Extra functionality to Leaphy robots"
  },
  {
    "name": "Leaphy Original Extension",
    "version": "0.0.3",
    "sentence": "Provides functionality to program Leaphy Original robots"
  },
  {
    "name": "LectroboxKeypadShield",
    "version": "1.3.0",
    "sentence": "Driver for the Lectrobox Keypad Shield."
  },
  {
    "name": "LectroboxPCJoyShield",
    "version": "1.2.0",
    "sentence": "Driver for the Lectrobox DB-15 PC Joystick Shield."
  },
  {
    "name": "Led",
    "version": "1.0.0",
    "sentence": "Library to easy handle a led connected to arduino."
  },
  {
    "name": "Led 7 Segment",
    "version": "0.0.2",
    "sentence": "A powerful but easy to use versatile 7 Segment Library"
  },
  {
    "name": "LedBlinky",
    "version": "1.3.1",
    "sentence": "Allows an Arduino/Genuino board to control the builtin led and external leds."
  },
  {
    "name": "LedControl",
    "version": "1.0.6",
    "sentence": "A library for the MAX7219 and the MAX7221 Led display drivers."
  },
  {
    "name": "LedController",
    "version": "2.0.2",
    "sentence": "The better LedControl library for the MAX7219 and the MAX7221 Led display drivers."
  },
  {
    "name": "LedDisplay",
    "version": "0.4.1",
    "sentence": "Print text to an Avago HCMS-29xx LED display."
  },
  {
    "name": "LedLib",
    "version": "0.1.0",
    "sentence": "Controla LEDs de forma sencilla."
  },
  {
    "name": "LedMatrix8X8",
    "version": "0.2.0",
    "sentence": "A library that controls max7219 led matrix."
  },
  {
    "name": "LedRGB565",
    "version": "1.0.1",
    "sentence": "A Led RGB 565 library"
  },
  {
    "name": "LedRGBlib",
    "version": "1.0.2",
    "sentence": "RGB LED library for Arduino (ENG+ESP)"
  },
  {
    "name": "LedSync",
    "version": "1.0.2",
    "sentence": "Arduino library to perform synchronous blinking operations with LEDs and NeoPixels."
  },
  {
    "name": "LedTask",
    "version": "0.5.0",
    "sentence": "The Arduino library shows the power of non-preemptive multitasking."
  },
  {
    "name": "LedUtil",
    "version": "1.0.0",
    "sentence": "Controls leds to on/off/blink"
  },
  {
    "name": "Leeman Geophysical Learning Shield",
    "version": "1.0.0",
    "sentence": "Tools for the Leeman Geophysical LLC Learning Shield."
  },
  {
    "name": "LegoSensorAdapter",
    "version": "1.0.0",
    "sentence": "Library for robot Cing with Atmega328."
  },
  {
    "name": "Legoino",
    "version": "1.1.0",
    "sentence": "Library for controlling PoweredUp, Boost, Corntrol+ controllers/hubs"
  },
  {
    "name": "Lepton FLiR Thermal Camera Module Library",
    "version": "0.9.91",
    "sentence": "Library to control a Lepton FLiR (forward looking infrared) thermal camera module from an Arduino-like board (Teensy 3+/ESP32+ minimum)."
  },
  {
    "name": "Letters and Numbers Seven Segment Display Library",
    "version": "1.0.0",
    "sentence": "Arduino library for displaying letters and numbers on 7-segment display."
  },
  {
    "name": "LettersKeypad",
    "version": "1.0.0",
    "sentence": "A simple 4x3 phonetic alphabet keypad library."
  },
  {
    "name": "LevelShifter_NXP_Arduino",
    "version": "0.9.3",
    "sentence": "Demo code for NTS0304EUK-ARD"
  },
  {
    "name": "Lewis",
    "version": "0.1.4",
    "sentence": "A morse code stream/print interpreter"
  },
  {
    "name": "LibAPRS_Tracker",
    "version": "0.5.0",
    "sentence": "A library that turns the aruino into a APRS Packet Sender"
  },
  {
    "name": "LibEdificio",
    "version": "1.1.1",
    "sentence": "Allows to control the Building Lights educative system."
  },
  {
    "name": "LibEstacionamiento",
    "version": "1.1.0",
    "sentence": "Allows to control the Estacionamiento educative system."
  },
  {
    "name": "LibLCC",
    "version": "0.7.0",
    "sentence": "A library for interfacing with LCC(Layout Command Control)"
  },
  {
    "name": "LibLanc",
    "version": "3.0.2",
    "sentence": "Allow camera control via the Sony lanc protocol"
  },
  {
    "name": "LibLucesCiudad",
    "version": "1.1.0",
    "sentence": "Allows to control the City Lights educative system."
  },
  {
    "name": "LibMiniSys",
    "version": "1.1.0",
    "sentence": "Allows to control the MiniSys educative system."
  },
  {
    "name": "LibPrintf",
    "version": "1.2.13",
    "sentence": "Library adding support for the printf family of functions to the Arduino SDK."
  },
  {
    "name": "LibSSH-ESP32",
    "version": "5.3.1",
    "sentence": "SSH client and SSH server library for ESP32 based on libssh."
  },
  {
    "name": "LibSemaforo",
    "version": "1.1.0",
    "sentence": "Allows to control the Semaforo educative system."
  },
  {
    "name": "LibSemaforosCiudad",
    "version": "1.1.0",
    "sentence": "Allows to control the Traffic Lights educative system."
  },
  {
    "name": "LibYxml",
    "version": "1.0.2",
    "sentence": "Yoran Heling's yxml library."
  },
  {
    "name": "Libdevlpr",
    "version": "0.2.1",
    "sentence": "A library that makes using the FANTM DEVLPR shield easier."
  },
  {
    "name": "LidarArray",
    "version": "1.0.1",
    "sentence": "Library for managing multiple VL53L0X LIDAR sensors using PCF8574 I/O expanders."
  },
  {
    "name": "Lifely Agrumino Lemon",
    "version": "1.5.4",
    "sentence": "Library for Agrumino Lemon Device"
  },
  {
    "name": "LightDimmer",
    "version": "1.3.3",
    "sentence": "This library allows to drive LEDs to simulate railroad signals."
  },
  {
    "name": "LightEffect",
    "version": "1.0.0",
    "sentence": "This library allows you to easily create light animations from an Arduino board or an ATtiny microcontroller (traffic lights, chaser, shopkeeper sign, etc.)"
  },
  {
    "name": "LightMDNS",
    "version": "1.0.5",
    "sentence": "Light Multicast DNS Library for Arduino"
  },
  {
    "name": "LightningStepper",
    "version": "1.1.1",
    "sentence": "Control a stepper motor with position tracking, interrupts, and calibration."
  },
  {
    "name": "LilyGO T-Wristband and T-Glass",
    "version": "1.0.0",
    "sentence": "Library for LilyGO T-Wristband and T-Glass"
  },
  {
    "name": "LilyGo-AMOLED-Series",
    "version": "1.2.0",
    "sentence": "Library for LilyGo T-Display AMOLED Series"
  },
  {
    "name": "LilyGo-EPD47",
    "version": "1.0.1",
    "sentence": "LilyGo 4.7 inch ink screen driver library"
  },
  {
    "name": "LilyGo-T-RGB",
    "version": "1.0.5",
    "sentence": "Library for LilyGo T-RGB"
  },
  {
    "name": "Lime Labs HDC2080",
    "version": "1.1.2",
    "sentence": "An Arduino library to configure and communicate with the Texas Instruments HDC2080 temperature & humidity sensor"
  },
  {
    "name": "LineFollowerPID",
    "version": "1.0.0",
    "sentence": "Line follower robot library."
  },
  {
    "name": "LineFormatter",
    "version": "0.3.0",
    "sentence": "Wrapper class for Stream e.g. Serial to enhance layout of tabular data."
  },
  {
    "name": "LineMessgingAPI",
    "version": "1.2.0",
    "sentence": "Line Messaging API Library for ESP32 ESP8266"
  },
  {
    "name": "LineTracker5 Library",
    "version": "1.0.5",
    "sentence": "The library for the LineTracker5 board"
  },
  {
    "name": "Linear Position Control",
    "version": "1.1.1",
    "sentence": "Position controllers for linear actuators with low-cost components."
  },
  {
    "name": "LinearRegressionModel",
    "version": "1.0.1",
    "sentence": "A simple library for linear regression modeling with coefficient updates based on feedback."
  },
  {
    "name": "LinkedList",
    "version": "1.3.3",
    "sentence": "A fully implemented LinkedList made to work with Arduino projects"
  },
  {
    "name": "LinkedListLib",
    "version": "1.0.0",
    "sentence": "LinkedList Library"
  },
  {
    "name": "LinkedPointerList",
    "version": "1.0.0",
    "sentence": "Light-weight implementation of LinkedList library, that is now stripped down to bare minimum, making it appropriate for use in memory-critical environments."
  },
  {
    "name": "LinxESP32",
    "version": "0.1.1",
    "sentence": "LINX - Digilent/LabVIEW MakerHub for ESP32"
  },
  {
    "name": "LionBit-STEM-library",
    "version": "2.0.0",
    "sentence": "This is a library for LionBit"
  },
  {
    "name": "Liquid Handling Robotics",
    "version": "1.2.0",
    "sentence": "Liquid handling robotics kit: low-level control software."
  },
  {
    "name": "LiquidCrystal",
    "version": "1.0.7",
    "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs)."
  },
  {
    "name": "LiquidCrystal I2C",
    "version": "1.1.2",
    "sentence": "A library for I2C LCD displays."
  },
  {
    "name": "LiquidCrystal I2C Multilingual",
    "version": "2.0.2",
    "sentence": "For printing multilingual UTF8 strings (French, Russian, Vietnamese, Katakana, etc.) to LCD1602, LCD2004, etc. via I2C."
  },
  {
    "name": "LiquidCrystal NKC",
    "version": "0.21.302",
    "sentence": "Control library for an advanced RS232\\I2C\\SPI LCD display by Longtech & NKC Electronics"
  },
  {
    "name": "LiquidCrystalIO",
    "version": "1.4.3",
    "sentence": "LiquidCrystal fork for displays based on HD44780. Uses the IOAbstraction library to work with i2c, PCF8574, MCP23017, Shift registers, Arduino pins and ports interchangably."
  },
  {
    "name": "LiquidCrystalSerial",
    "version": "1.0.0",
    "sentence": "A simple 74hC595 shift register LCD driver."
  },
  {
    "name": "LiquidCrystalWired",
    "version": "1.2.0",
    "sentence": "Device driver for AiP31068 based controllers."
  },
  {
    "name": "LiquidCrystal_74HC595",
    "version": "1.0.0",
    "sentence": "This library allows an Arduino board to control most LCDs (Hitachi HD44780 based or compatible) through a 74HC595 shift register."
  },
  {
    "name": "LiquidCrystal_AIP31068",
    "version": "1.0.5",
    "sentence": "A library for AIP31068 I2C/SPI LCD displays."
  },
  {
    "name": "LiquidCrystal_I2C_Hangul",
    "version": "2.0.0",
    "sentence": "A library for printing Hangul on I2C LCD displays."
  },
  {
    "name": "LiquidCrystal_I2C_STEM",
    "version": "0.0.1",
    "sentence": "A library for I2C LCD displays."
  },
  {
    "name": "LiquidCrystal_I2C_UTF8",
    "version": "1.2.2",
    "sentence": "For printing Russian, Viet UTF-8 to LCD I2C. Replaced by LCDI2C_Multilingual."
  },
  {
    "name": "LiquidCrystal_PCF8574",
    "version": "2.2.0",
    "sentence": "A library for driving LiquidCrystal displays (LCD) by using the I2C bus and an PCF8574 I2C adapter."
  },
  {
    "name": "LiquidMenu",
    "version": "1.6.0",
    "sentence": "Menu creation Arduino library for LCDs, wraps LiquidCrystal."
  },
  {
    "name": "LircPlayer101",
    "version": "1.0.0",
    "sentence": "Infrared bitbanger for Arduino 101"
  },
  {
    "name": "LispIO",
    "version": "0.0.1",
    "sentence": "new lightweight IO function"
  },
  {
    "name": "LispMotor",
    "version": "0.0.1",
    "sentence": "L298x driver"
  },
  {
    "name": "List",
    "version": "3.0.1",
    "sentence": "The Ultimate Collection of Lists"
  },
  {
    "name": "ListLib",
    "version": "1.0.0",
    "sentence": "List Library"
  },
  {
    "name": "LitSwitch",
    "version": "1.0.0",
    "sentence": "A special library for an LED/momentary switch hardware combination.<br />"
  },
  {
    "name": "LiteLED",
    "version": "1.2.0",
    "sentence": "Light weight library for driving one or more WS2812B, SK6812, APA106, SM16703 RGB LED strips."
  },
  {
    "name": "LiteOSCParser",
    "version": "1.4.0",
    "sentence": "A lightweight OSC processing library."
  },
  {
    "name": "Lithium-Powered",
    "version": "0.0.2",
    "sentence": "All-In-One Code Solution for Lithium Battery Management using the LTC4150 Coulomb Counter circuit."
  },
  {
    "name": "LittleFS_Mbed_RP2040",
    "version": "1.1.0",
    "sentence": "Wrapper of LittleFS for Arduino MBED RP2040 boards"
  },
  {
    "name": "LittleFS_Portenta_H7",
    "version": "1.2.0",
    "sentence": "Wrapper of LittleFS for Arduino MBED Portenta_H7 boards"
  },
  {
    "name": "LittleFS_esp32",
    "version": "1.0.6",
    "sentence": "LittleFS for esp32 based on esp_littlefs IDF component. Use esp32 core-provided LITTLEFS library instead of this one when available in future core releases."
  },
  {
    "name": "LittleVector",
    "version": "1.1.0",
    "sentence": "std::vector like container."
  },
  {
    "name": "LiveObjectsSDK",
    "version": "2.1.1",
    "sentence": "A library that makes connection with Orange LiveObjects platform a breeze."
  },
  {
    "name": "Lixie",
    "version": "1.4.0",
    "sentence": "Allows for easy writing to Lixie Digit displays!"
  },
  {
    "name": "Lixie II",
    "version": "1.3.1",
    "sentence": "Library for controlling Lixie II displays!"
  },
  {
    "name": "LoR",
    "version": "0.0.10",
    "sentence": "Handles LoR related background functions"
  },
  {
    "name": "LoRa",
    "version": "0.8.0",
    "sentence": "An Arduino library for sending and receiving data using LoRa radios."
  },
  {
    "name": "LoRa Node",
    "version": "1.0.1",
    "sentence": "LoRa Node library for Arduino LoRa Node Shield."
  },
  {
    "name": "LoRa Serialization",
    "version": "3.3.1",
    "sentence": "Library for serialization of data on the Arduino side and deserialization in the TTN"
  },
  {
    "name": "LoRa-payload-BKU",
    "version": "0.0.6",
    "sentence": "Library for easy Data transmission using MKR WAN 1300/ 1310 to LoRaWAN server TheThingNetwork.org"
  },
  {
    "name": "LoRaFi",
    "version": "1.3.0",
    "sentence": "An Arduino library for sending and receiving data using LoRaFi board and LoRa module."
  },
  {
    "name": "LoRaLayer2",
    "version": "1.0.1",
    "sentence": "Layer 2 routing protocol for LoRa connected devices."
  },
  {
    "name": "LoRaNow",
    "version": "1.0.5",
    "sentence": "LoRaNow Library is a simple LoRa Node <> Gateway communication protocol."
  },
  {
    "name": "LoRaRF",
    "version": "2.1.1",
    "sentence": "Arduino LoRa-RF library used for transmitting and receiving data using LoRa module with Semtech SX126x series, SX127x series, or LLCC68."
  },
  {
    "name": "LoRaWAN-Seeed-Grove-Wio-E5",
    "version": "3.0.0",
    "sentence": "Sending LoRaWAN frame with a Grove Wio E5 module."
  },
  {
    "name": "LoRaWAN_ESP32",
    "version": "1.2.0",
    "sentence": "ESP32 'persist' object for using deep sleep in combination with RadioLib LoRaWAN."
  },
  {
    "name": "LoRa_AT",
    "version": "0.4.0",
    "sentence": "A small Arduino library for AT command based LoRa Modules."
  },
  {
    "name": "LoRa_Library",
    "version": "0.0.7",
    "sentence": "Library implementation of Semtechs sx126x_driver for Arduino microcontrollers"
  },
  {
    "name": "LoRandom",
    "version": "1.0.0",
    "sentence": "A library using Semtech's sx1276/7/8/9's `RegRssiWideband` register properly to generate random numbers."
  },
  {
    "name": "LocoNet",
    "version": "1.1.13",
    "sentence": "Enables Digitrax LocoNet Communication"
  },
  {
    "name": "Log",
    "version": "1.0.1",
    "sentence": "Simple but useful macroses for logging. Allow use printf() with Serial for logging."
  },
  {
    "name": "LogToQueue",
    "version": "1.0.2",
    "sentence": "Envio de log a un Queue para manejarlo como quieras."
  },
  {
    "name": "LogansGreatButton",
    "version": "1.3.0",
    "sentence": "An all in one, easy to use, powerful, self contained button library so you can focus on your other code! Includes Debouncing, Avoids Delays, multiclicks and allows you to decide what happens at the beginning and end of Short, Long, Hold and Shifts so you can create a intuative and responsive experience."
  },
  {
    "name": "Logger",
    "version": "1.0.3",
    "sentence": "An Arduino library for serial logging."
  },
  {
    "name": "LogicAnalyzer",
    "version": "0.17.0",
    "sentence": "A SUMP protocol compatible logic analyzer firmware"
  },
  {
    "name": "Logistic",
    "version": "0.1.0",
    "sentence": "Arduino library to explore the logistic formula. (chaos, bifurcation)"
  },
  {
    "name": "LongFi",
    "version": "0.2.0",
    "sentence": "Enables LongFi Communication with Semtech Compatible Radios."
  },
  {
    "name": "Looper",
    "version": "1.1.6",
    "sentence": "Simple task, thread and event manager for Arduino"
  },
  {
    "name": "LoraID",
    "version": "1.0.0",
    "sentence": "Lora.id Arduino Library for Dragino/RFM and standalone LoRaWAN modules."
  },
  {
    "name": "LoraSx1262",
    "version": "1.0.0",
    "sentence": "Send and receive data over radio using LoRa 915mhz"
  },
  {
    "name": "LoveButton",
    "version": "1.2.0",
    "sentence": "Touch Sensitive Love Button"
  },
  {
    "name": "LovyanGFX",
    "version": "1.2.0",
    "sentence": "TFT LCD Graphics driver with touch for ESP32/ESP8266, SAMD21/SAMD51, RP2040/RP2350"
  },
  {
    "name": "Low level quick digital IO",
    "version": "2.0.0",
    "sentence": "高性能引脚读写。More efficient digital IO than builtin functions"
  },
  {
    "name": "Low-Power",
    "version": "1.81.0",
    "sentence": "Lightweight power management library"
  },
  {
    "name": "LowPower_LowPowerLab",
    "version": "2.2.0",
    "sentence": "AVR & SAMD power management library"
  },
  {
    "name": "LualtekCubecell",
    "version": "0.2.1",
    "sentence": "This is a library for the Lualtek Cubecell board."
  },
  {
    "name": "LualtekRAKRUI",
    "version": "0.3.13",
    "sentence": "Library for the Lualtek RAK RUI3 based board."
  },
  {
    "name": "LualtekTTN",
    "version": "0.3.2",
    "sentence": "This is a library for the Lualtek RN-TTN based board."
  },
  {
    "name": "Luni",
    "version": "0.9.1",
    "sentence": "Implements a framework for device drivers for use on the Arduino."
  },
  {
    "name": "Lynxmotion Smart Servo -LSS-",
    "version": "1.4.4",
    "sentence": "A library that makes using the LSS simple."
  },
  {
    "name": "M10ADC",
    "version": "1.0.4",
    "sentence": "ADC library for PulseRain M10 board."
  },
  {
    "name": "M10CODEC",
    "version": "1.1.3",
    "sentence": "CODEC library for the Si3000 CODEC on PulseRain M10 board."
  },
  {
    "name": "M10DTMF",
    "version": "1.0.2",
    "sentence": "DTMF library for PulseRain M10 board."
  },
  {
    "name": "M10ESP8266",
    "version": "1.0.0",
    "sentence": "library for ESP8266 shield."
  },
  {
    "name": "M10Examples",
    "version": "1.1.0",
    "sentence": "Examples for PulseRain M10 board."
  },
  {
    "name": "M10I2C",
    "version": "1.0.1",
    "sentence": "I2C library for PulseRain M10 board."
  },
  {
    "name": "M10JTAG",
    "version": "1.0.1",
    "sentence": "JTAG UART library for PulseRain M10 board."
  },
  {
    "name": "M10LCD",
    "version": "1.0.1",
    "sentence": "Library for LCD Interface"
  },
  {
    "name": "M10PS2",
    "version": "1.0.0",
    "sentence": "Library for PS2 Interface"
  },
  {
    "name": "M10PWM",
    "version": "1.0.2",
    "sentence": "PWM library for PulseRain M10 board."
  },
  {
    "name": "M10SD",
    "version": "1.0.2",
    "sentence": "microSD library for PulseRain M10 board."
  },
  {
    "name": "M10SRAM",
    "version": "1.0.1",
    "sentence": "SRAM (Microchip 23LC1024) library for PulseRain M10 board."
  },
  {
    "name": "M10SerialAUX",
    "version": "1.0.1",
    "sentence": "Auxiliary Serial port library for PulseRain M10 board."
  },
  {
    "name": "M10SevenSeg",
    "version": "1.0.2",
    "sentence": "Library for Seven Segment Display"
  },
  {
    "name": "M2M Solutions Logger Library",
    "version": "1.0.7",
    "sentence": "Arduino library for logging."
  },
  {
    "name": "M2M Solutions MiraOne Library",
    "version": "1.0.4",
    "sentence": "Arduino library for the MiraOne radio module by Lumenradio AB."
  },
  {
    "name": "M2M Solutions Purplepoint Boards Library",
    "version": "1.0.7",
    "sentence": "Arduino library for Purplepoint IoT boards."
  },
  {
    "name": "M2M Solutions Quectel Library",
    "version": "1.2.6",
    "sentence": "Arduino library for Quectel cellular modules."
  },
  {
    "name": "M2M Solutions TLV Library",
    "version": "1.0.1",
    "sentence": "Arduino library for the TLV format."
  },
  {
    "name": "M304 Library",
    "version": "1.3.15",
    "sentence": "Library useful when programming control nodes using the M304 board for UECS control nodes"
  },
  {
    "name": "M5 Stack 4Relay Library",
    "version": "1.0.0",
    "sentence": "M5Stack 4RELAY library for multiple different architectures."
  },
  {
    "name": "M5-ADS1100",
    "version": "0.0.1",
    "sentence": "Library for Unit & Hat ADC"
  },
  {
    "name": "M5-ADS1115",
    "version": "1.0.0",
    "sentence": "Library for Unit Ameter & Vmeter"
  },
  {
    "name": "M5-DLight",
    "version": "0.0.3",
    "sentence": "Library for M5Stack Unit & HAT DLight"
  },
  {
    "name": "M5-Depends",
    "version": "0.0.3",
    "sentence": "Library for M5"
  },
  {
    "name": "M5-Ethernet",
    "version": "4.0.0",
    "sentence": "Enables network connection (local and Internet) using the M5 PoE Camera."
  },
  {
    "name": "M5-FPC1020A",
    "version": "0.0.2",
    "sentence": "Library for Finger Unit"
  },
  {
    "name": "M5-LoRa-E220-JP",
    "version": "1.0.1",
    "sentence": "Library for M5-LoRa-E220-JP"
  },
  {
    "name": "M5-LoRaWAN",
    "version": "0.0.1",
    "sentence": "Library for UNIT LoRaWAN"
  },
  {
    "name": "M5-Outdepends",
    "version": "0.0.1",
    "sentence": "Library for M5"
  },
  {
    "name": "M5-RoverC",
    "version": "0.0.1",
    "sentence": "Library for M5Stack RoverC & RoverC-Pro"
  },
  {
    "name": "M5-STHS34PF80",
    "version": "0.0.1",
    "sentence": "Library for M5Stack Unit TMOS."
  },
  {
    "name": "M5-SX127x",
    "version": "1.0.0",
    "sentence": "Library for M5Stack SX127x LoRa"
  },
  {
    "name": "M5ANGLE8",
    "version": "0.3.0",
    "sentence": "Arduino library for M5 8ANGLE 8x12 bit potentiometers."
  },
  {
    "name": "M5Atom",
    "version": "0.1.3",
    "sentence": "Library for M5Atom Core development kit"
  },
  {
    "name": "M5AtomS3",
    "version": "1.0.0",
    "sentence": "Library for M5AtomS3 Core development kit"
  },
  {
    "name": "M5Atomic-EchoBase",
    "version": "1.0.0",
    "sentence": "Library for M5Stack Atomic EchoBase"
  },
  {
    "name": "M5Atomic-Motion",
    "version": "1.0.0",
    "sentence": "Library for M5Atomic-Motion"
  },
  {
    "name": "M5BurnerNVS",
    "version": "0.0.1",
    "sentence": "Library for M5BurnerNVS"
  },
  {
    "name": "M5Capsule",
    "version": "1.0.0",
    "sentence": "Library for M5Stack M5Capsule Board"
  },
  {
    "name": "M5Cardputer",
    "version": "1.0.2",
    "sentence": "Library for M5Stack M5Cardputer Board"
  },
  {
    "name": "M5Core-Ink",
    "version": "1.0.0",
    "sentence": "Library for M5CoreInk development kit"
  },
  {
    "name": "M5Core2",
    "version": "0.2.0",
    "sentence": "Library for M5Stack Core2 development kit"
  },
  {
    "name": "M5CoreS3",
    "version": "1.0.0",
    "sentence": "Library for M5CoreS3 Core development kit"
  },
  {
    "name": "M5Dial",
    "version": "1.0.2",
    "sentence": "Library for M5Stack M5Dial Board"
  },
  {
    "name": "M5DinMeter",
    "version": "1.0.0",
    "sentence": "Library for M5Stack M5DinMeter Board"
  },
  {
    "name": "M5EPD",
    "version": "0.1.5",
    "sentence": "Library for M5Paper development kit"
  },
  {
    "name": "M5EasyUI",
    "version": "0.0.1",
    "sentence": "Library for drawing UI on M5 devices with a single code."
  },
  {
    "name": "M5FacesEncoder",
    "version": "1.1.1",
    "sentence": "Arduino Library for reading encoder values from the M5Stack Faces Encoder Module"
  },
  {
    "name": "M5Family",
    "version": "0.1.3",
    "sentence": "Convergence of the relevant dependencies used in M5 products."
  },
  {
    "name": "M5GFX",
    "version": "0.2.5",
    "sentence": "Library for M5Stack All Display"
  },
  {
    "name": "M5HAL",
    "version": "0.0.1",
    "sentence": "Hardware Abstraction Layer(HAL) for M5 Products"
  },
  {
    "name": "M5Hat-8Servos",
    "version": "0.0.2",
    "sentence": "Library for M5 HAT 8SERVO"
  },
  {
    "name": "M5Hat-JoyC",
    "version": "0.0.1",
    "sentence": "Library for M5Hat JoyC"
  },
  {
    "name": "M5Module-4Relay",
    "version": "0.0.3",
    "sentence": "Library for M5Stack MODULE 4RELAY"
  },
  {
    "name": "M5Module-GNSS",
    "version": "1.0.1",
    "sentence": "Library for M5Stack GNSS Module"
  },
  {
    "name": "M5Module-LAN-13.2",
    "version": "1.0.0",
    "sentence": "Library for M5Module-LAN-13.2"
  },
  {
    "name": "M5ModuleLLM",
    "version": "1.3.0",
    "sentence": "M5ModuleLLM is a library for M5ModuleLLM"
  },
  {
    "name": "M5NanoC6",
    "version": "1.0.0",
    "sentence": "Library for M5NanoC6 Board"
  },
  {
    "name": "M5PoECAM",
    "version": "1.0.0",
    "sentence": "Library for M5Stack PoE-CAM development kit"
  },
  {
    "name": "M5ROTATE8",
    "version": "0.4.1",
    "sentence": "Arduino library for M5 8ROTATE 8x rotary encoders"
  },
  {
    "name": "M5Stack",
    "version": "0.4.6",
    "sentence": "Library for M5Stack Core development kit"
  },
  {
    "name": "M5Stack-SD-Updater",
    "version": "1.2.8",
    "sentence": "SD Card Loader for M5 Stack"
  },
  {
    "name": "M5StackMenuSystem",
    "version": "1.4.3",
    "sentence": "A quick way to create nice menus for M5 Stack devices with just a few lines of code"
  },
  {
    "name": "M5StackToio",
    "version": "1.0.4",
    "sentence": "This library allows your M5Stack micro-controller to control your SONY toio core."
  },
  {
    "name": "M5Stack_Avatar",
    "version": "0.10.0",
    "sentence": "Yet another avatar module for M5Stack"
  },
  {
    "name": "M5Stack_OnScreenKeyboard",
    "version": "0.3.4",
    "sentence": "OnScreenKeyboard for M5Stack"
  },
  {
    "name": "M5Stack_SimpleBeep",
    "version": "1.2.0",
    "sentence": "Simple Beep for M5Stack."
  },
  {
    "name": "M5Stack_TreeView",
    "version": "0.2.14",
    "sentence": "TreeView Menu UI for M5Stack"
  },
  {
    "name": "M5StampC3LED",
    "version": "0.0.1",
    "sentence": "M5Stamp C3 Mate LED library."
  },
  {
    "name": "M5Station",
    "version": "0.0.1",
    "sentence": "Library for industrial level controller with M5Station(SKU:K123,K124)"
  },
  {
    "name": "M5StickC",
    "version": "0.3.0",
    "sentence": "Library for M5StickC Core development kit"
  },
  {
    "name": "M5StickCPlus",
    "version": "0.1.1",
    "sentence": "Library for M5StickC Plus development kit"
  },
  {
    "name": "M5StickCPlus2",
    "version": "1.0.1",
    "sentence": "Library for M5Stack M5StickCPlus2 Board"
  },
  {
    "name": "M5UNIT_8Encoder",
    "version": "0.0.1",
    "sentence": "Library for M5UNIT_8Encoder"
  },
  {
    "name": "M5Unified",
    "version": "0.2.3",
    "sentence": "Library for M5Stack/Core2/Tough/CoreS3/CoreS3SE, M5StickC/C-Plus/C-Plus2, M5CoreInk, M5Paper, M5ATOM, M5STAMP, M5Station, M5Dial, M5DinMeter, M5Capsule, M5Cardputer, M5VAMeter"
  },
  {
    "name": "M5Unit-4RELAY",
    "version": "0.0.1",
    "sentence": "Library for M5Stack 4RELAY UNIT"
  },
  {
    "name": "M5Unit-ACSSR",
    "version": "0.0.3",
    "sentence": "Library for M5Stack UNIT ACSSR"
  },
  {
    "name": "M5Unit-ANADIG",
    "version": "0.0.1",
    "sentence": "Library for M5Stack UNIT ADC,DAC using M5UnitUnified"
  },
  {
    "name": "M5Unit-BLDC",
    "version": "1.0.0",
    "sentence": "Library for M5Stack Unit BLDC"
  },
  {
    "name": "M5Unit-CAN",
    "version": "1.0.0",
    "sentence": "Library for M5Stack M5Unit-CAN"
  },
  {
    "name": "M5Unit-COLOR",
    "version": "0.0.1",
    "sentence": "Library for M5Stack UNIT COLOR using M5UnitUnified"
  },
  {
    "name": "M5Unit-CatM",
    "version": "0.0.1",
    "sentence": "Library for M5Stack Unit CatM SIM7080"
  },
  {
    "name": "M5Unit-DDS",
    "version": "0.0.1",
    "sentence": "Library for M5Stack Unit DDS"
  },
  {
    "name": "M5Unit-DigiClock",
    "version": "0.0.1",
    "sentence": "Library for M5Unit-DigiClock"
  },
  {
    "name": "M5Unit-ENV",
    "version": "1.2.0",
    "sentence": "Library for M5Stack UNIT ENV"
  },
  {
    "name": "M5Unit-EXTIO2",
    "version": "1.0.3",
    "sentence": "Library for Unit EXTIO2"
  },
  {
    "name": "M5Unit-Encoder",
    "version": "0.0.2",
    "sentence": "Library for M5Stack Unit Encoder"
  },
  {
    "name": "M5Unit-GESTURE",
    "version": "0.0.2",
    "sentence": "Library for M5Stack UNIT GESTURE using M5UnitUnified"
  },
  {
    "name": "M5Unit-HEART",
    "version": "0.1.0",
    "sentence": "Library for M5Stack UNIT HEART using M5UnitUnified"
  },
  {
    "name": "M5Unit-HUB",
    "version": "0.0.2",
    "sentence": "Library for M5Stack UNIT HUB using M5UnitUnified"
  },
  {
    "name": "M5Unit-IMU-Pro-Mini",
    "version": "1.0.2",
    "sentence": "Library for M5Stack M5Unit-IMU-Pro-Mini"
  },
  {
    "name": "M5Unit-KMeter",
    "version": "0.1.1",
    "sentence": "Library for M5Stack UNIT KMeter"
  },
  {
    "name": "M5Unit-METER",
    "version": "0.0.3",
    "sentence": "Library for M5Stack UNIT METER using M5UnitUnified"
  },
  {
    "name": "M5Unit-MQTT",
    "version": "0.0.1",
    "sentence": "Library for M5Stack UNIT MQTT"
  },
  {
    "name": "M5Unit-PbHub",
    "version": "1.0.0",
    "sentence": "Library for M5Stack UNIT PbHub"
  },
  {
    "name": "M5Unit-PoESP32",
    "version": "0.0.1",
    "sentence": "Library for M5STACK UNIT PoESP32"
  },
  {
    "name": "M5Unit-RELAY",
    "version": "0.0.2",
    "sentence": "Library for M5Stack RELAY UNIT"
  },
  {
    "name": "M5Unit-RTC",
    "version": "0.0.2",
    "sentence": "Library for BM8563 RTC"
  },
  {
    "name": "M5Unit-Sonic",
    "version": "0.0.2",
    "sentence": "Library for M5Stack Unit Sonic series"
  },
  {
    "name": "M5Unit-THERMO",
    "version": "0.0.1",
    "sentence": "Library for M5Stack UNIT THERMO using M5UnitUnified"
  },
  {
    "name": "M5Unit-TOF",
    "version": "0.0.1",
    "sentence": "Library for M5Stack UNIT TOF using M5UnitUnified"
  },
  {
    "name": "M5Unit-Thermal2",
    "version": "0.0.1",
    "sentence": "Library for M5Stack UNIT Thermal2"
  },
  {
    "name": "M5Unit-ToF4M",
    "version": "1.0.0",
    "sentence": "Library for M5Stack M5Unit-ToF4M"
  },
  {
    "name": "M5Unit-UHF-RFID",
    "version": "0.0.3",
    "sentence": "Library for M5Stack Unit UHF-RFID"
  },
  {
    "name": "M5Unit-WEIGHT",
    "version": "0.0.2",
    "sentence": "Library for M5Stack UNIT METER using M5UnitUnified"
  },
  {
    "name": "M5UnitASR",
    "version": "0.0.1",
    "sentence": "Library for M5Stack M5Unit ASR"
  },
  {
    "name": "M5UnitQRCode",
    "version": "1.0.0",
    "sentence": "Library for M5Stack UNIT QRCode"
  },
  {
    "name": "M5UnitSynth",
    "version": "1.0.1",
    "sentence": "Library for M5Stack M5Unit Synth"
  },
  {
    "name": "M5UnitUnified",
    "version": "0.0.5",
    "sentence": "M5UnitUnified is a library for unified handling of various M5 units products. (Alpha version)"
  },
  {
    "name": "M5UnitWeightI2C",
    "version": "1.0.0",
    "sentence": "Library for M5Stack M5Unit WeightI2C"
  },
  {
    "name": "M5Utility",
    "version": "0.0.2",
    "sentence": "Library for other M5 libraries and products"
  },
  {
    "name": "M5_BMM150",
    "version": "0.0.2",
    "sentence": "Library for M5_BMM150"
  },
  {
    "name": "M5_EzData",
    "version": "0.0.2",
    "sentence": "An IoT cloud data storage service"
  },
  {
    "name": "M5_PbHub",
    "version": "0.1.4",
    "sentence": "Simple library for the M5Stack PbHUB Unit."
  },
  {
    "name": "M5_RTC_Module",
    "version": "1.0.2",
    "sentence": "A library for using the RTC-Module from iotec for the M5-Stack."
  },
  {
    "name": "M5ez",
    "version": "2.3.0",
    "sentence": "Complete interface builder for the M5Stack, an ESP32 based mini tinker-computer"
  },
  {
    "name": "M62429",
    "version": "0.3.7",
    "sentence": "Arduino library for M62429 volume control IC"
  },
  {
    "name": "M62429 Volume Control Library",
    "version": "1.0.1",
    "sentence": "M62429/FM62429 Serial data control dual electronics volume library for Arduino."
  },
  {
    "name": "M8058",
    "version": "1.0.0",
    "sentence": "Arduino library for M8058E, M8058S and M8026S melody IC control."
  },
  {
    "name": "M95_EEPROM",
    "version": "0.4.1",
    "sentence": "A library for talking with the M95 series of EEPROM chips from ST.  May work with chips from other vendors as well."
  },
  {
    "name": "MAGELLAN",
    "version": "1.1.0",
    "sentence": "AIS Magellan Library; Provide Function MAGELLAN API v.2 MQTT Connect for ESP32 and ESP8266 Board and Device Support Client internet interface"
  },
  {
    "name": "MAKERLABVN",
    "version": "1.0.12",
    "sentence": "Library Collection of Makerlab.vn."
  },
  {
    "name": "MATRIX7219",
    "version": "0.1.2",
    "sentence": "Arduino Library for 8x8 LED MATRIX MAX7219, MAX7221."
  },
  {
    "name": "MAVLink",
    "version": "2.0.14",
    "sentence": "MAVLink v2 for Arduino."
  },
  {
    "name": "MAX11643",
    "version": "0.1.0",
    "sentence": "Arduino library for MAX11643 ADCs"
  },
  {
    "name": "MAX1464 Arduino library",
    "version": "1.0.1",
    "sentence": "A complete interface for the the Maxim MAX1464 Multichannel Sensor Signal Processor for Arduino."
  },
  {
    "name": "MAX14661",
    "version": "0.2.0",
    "sentence": "Arduino library for MAX14661 16 channel I2C multiplexer"
  },
  {
    "name": "MAX17048",
    "version": "0.1.0",
    "sentence": "Arduino library for MAX17048/MAX17049 1-Cell/2-Cell Fuel Gauge with ModelGauge"
  },
  {
    "name": "MAX1704X",
    "version": "1.2.8",
    "sentence": "Arduino library for MAX17043/MAX17044 lithium ion battery fuel gauge."
  },
  {
    "name": "MAX17055",
    "version": "2.1.7",
    "sentence": "Lithium based battery fuel gauge and measurement IC library."
  },
  {
    "name": "MAX30100",
    "version": "1.0.0",
    "sentence": "This Library supports the MAX30100 Pulse Oximetry IC"
  },
  {
    "name": "MAX30100_milan",
    "version": "1.3.0",
    "sentence": "Based on MAX30100lib, it's a library for Maxim-IC MAX30100 heart-rate sensor driver and pulse-oximetry components with slightly modifications."
  },
  {
    "name": "MAX30100lib",
    "version": "1.2.1",
    "sentence": "Maxim-IC MAX30100 heart-rate sensor driver and pulse-oximetry components"
  },
  {
    "name": "MAX3010x Sensor Library",
    "version": "1.0.5",
    "sentence": "An Arduino library for the MAX3010x sensor family."
  },
  {
    "name": "MAX3100 Serial",
    "version": "1.1.0",
    "sentence": "Serial communication using MAX3100 USART chip."
  },
  {
    "name": "MAX31850",
    "version": "0.1.4",
    "sentence": "Arduino library for the MAX31850 thermocouple temperature sensor."
  },
  {
    "name": "MAX31850 DallasTemp",
    "version": "1.1.6",
    "sentence": "A version of the DallasTemp Arduino library with MAX31850 support (Requires OneWire with MAX31850 support!)"
  },
  {
    "name": "MAX31850 OneWire",
    "version": "1.1.3",
    "sentence": "A version of the OneWire Arduino library with MAX31850 support"
  },
  {
    "name": "MAX31855",
    "version": "1.0.7",
    "sentence": "Arduino Library to read temperatures from a thermocouple using the MAX31855 chip"
  },
  {
    "name": "MAX31855-Library",
    "version": "1.1.0",
    "sentence": "Library for the MAX31855K module"
  },
  {
    "name": "MAX31855_RT",
    "version": "0.6.1",
    "sentence": "Arduino library for MAX31855 chip for K type thermocouple."
  },
  {
    "name": "MAX44009 library",
    "version": "1.2.3",
    "sentence": "Library for the <a href=\"https://datasheets.maximintegrated.com/en/ds/MAX44009.pdf\">MAX44009 Ambient Light Sensor</a>."
  },
  {
    "name": "MAX471",
    "version": "1.0.0",
    "sentence": "Arduino Library to support the MAX471  sensor module"
  },
  {
    "name": "MAX471_RT",
    "version": "0.1.1",
    "sentence": "Arduino library for MAX471 current sensor."
  },
  {
    "name": "MAX520",
    "version": "0.1.1",
    "sentence": "Arduino library for MAX520 and MAX521 4/8 channel 8 bit DAC."
  },
  {
    "name": "MAX541X",
    "version": "1.0.2",
    "sentence": "Arduino library for the MAX5417/18/19 I2C Digital Potentiometers."
  },
  {
    "name": "MAX6626",
    "version": "1.0.1",
    "sentence": "Arduino Library for MAX6626."
  },
  {
    "name": "MAX6675",
    "version": "0.3.2",
    "sentence": "Arduino library for MAX6675 chip for K type thermocouple."
  },
  {
    "name": "MAX6675 library",
    "version": "1.1.2",
    "sentence": "Arduino library for interfacing with MAX6675 thermocouple amplifier"
  },
  {
    "name": "MAX6675 with hardware SPI",
    "version": "1.0.0",
    "sentence": "A library for MAX6675 thermocouple interface."
  },
  {
    "name": "MAX6675_Thermocouple",
    "version": "2.0.2",
    "sentence": "The Library implements a set of methods for working with a thermocouple based on the MAX6675 driver."
  },
  {
    "name": "MAX6816",
    "version": "1.0.2",
    "sentence": "Single Switch Debouncer Library for Arduino."
  },
  {
    "name": "MAX7219Segment",
    "version": "1.0.0",
    "sentence": "MAX7219/MAX7221 Digital Tube 7-Segment LED Display Library"
  },
  {
    "name": "MAX77650-Arduino-Library",
    "version": "1.0.1",
    "sentence": "An Arduino library for the Maxim Power Management Controller MAX77650"
  },
  {
    "name": "MAX78630",
    "version": "4.2.4",
    "sentence": "Enables reading polyphase energy-monitor parameters of LVX EnergyBoard."
  },
  {
    "name": "MAX7XX-7-Segment",
    "version": "1.1.0",
    "sentence": "MAX72XX 7-segment display library."
  },
  {
    "name": "MAX_RS485",
    "version": "1.1.0",
    "sentence": "A library to easily use MAX485 half-duplex RS485 to Serial module"
  },
  {
    "name": "MB85_FRAM",
    "version": "1.0.8",
    "sentence": "Read and Write to the Fujitsu FRAM devices in the MB85 Family of memories"
  },
  {
    "name": "MBEDSpeech",
    "version": "1.0.9",
    "sentence": "Arduino library for running speech recognition machine learning models"
  },
  {
    "name": "MBED_RP2040_PWM",
    "version": "1.0.1",
    "sentence": "This library enables you to use Hardware-based PWM to create and output PWM to pins on RP2040 board to create and output PWM to pins."
  },
  {
    "name": "MBED_RP2040_Slow_PWM",
    "version": "1.3.0",
    "sentence": "This library enables you to use ISR-based PWM channels on RP2040-based boards, such as Nano_RP2040_Connect, RASPBERRY_PI_PICO, with Arduino-mbed (mbed_nano or mbed_rp2040) core to create and output PWM any GPIO pin."
  },
  {
    "name": "MBED_RPI_PICO_TimerInterrupt",
    "version": "1.2.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on RP2040-based boards such as Nano_RP2040_Connect, RASPBERRY_PI_PICO"
  },
  {
    "name": "MBUSPayload",
    "version": "1.0.1",
    "sentence": "MBUS application layer payload encoder and decoder"
  },
  {
    "name": "MBusinoLib",
    "version": "0.9.11",
    "sentence": "an Arduino M-Bus decoder Library"
  },
  {
    "name": "MCCI Arduino Development Kit ADK",
    "version": "0.2.2",
    "sentence": "The MCCI XDK ported to Arduino (\"Arduino Development Kit\")."
  },
  {
    "name": "MCCI Arduino LoRaWAN Library",
    "version": "0.10.0",
    "sentence": "High-level library for LoRaWAN-based Arduino end-devices."
  },
  {
    "name": "MCCI Catena Arduino Platform",
    "version": "0.23.0",
    "sentence": "Arduino library for MCCI Catena 44xx, 45xx, 46xx and 48xx systems."
  },
  {
    "name": "MCCI Catena SCD30",
    "version": "0.2.0",
    "sentence": "Arduino library for Sensirion SCD30 carbon dioxide sensors."
  },
  {
    "name": "MCCI Catena SDP",
    "version": "1.0.1",
    "sentence": "Arduino library for Sensirion SDP (SDP31, SDP32, SDP800-series) Differential Pressure sensors."
  },
  {
    "name": "MCCI FRAM I2C",
    "version": "2.0.2",
    "sentence": "Driver for MCCI Catena's I2C-Based FRAM."
  },
  {
    "name": "MCCI LTR-329ALS",
    "version": "1.1.0",
    "sentence": "Arduino library for Lite-On LTR-329ALS ambient light sensor."
  },
  {
    "name": "MCCI LoRaWAN LMIC library",
    "version": "5.0.1",
    "sentence": "Arduino port of the LMIC (LoraWAN-MAC-in-C) framework provided by IBM."
  },
  {
    "name": "MCCI SofwareSerial",
    "version": "3.0.0",
    "sentence": "Software UART for Arduino"
  },
  {
    "name": "MCCI-Catena-PMS7003",
    "version": "0.1.2",
    "sentence": "Arduino library for Plantower PMS7003 particulate matter sensors."
  },
  {
    "name": "MCCI-Catena-SHT3x",
    "version": "0.2.1",
    "sentence": "Arduino library for Sensirion SHT3x (SHT31, SHT32, SHT35) Temperature/Humidity sensors."
  },
  {
    "name": "MCMVoltSense",
    "version": "0.0.1",
    "sentence": "Voltage Measurement Library"
  },
  {
    "name": "MCM_BL0940",
    "version": "0.0.2",
    "sentence": "UART Library Control for BL0940 Energy Meter IC"
  },
  {
    "name": "MCP23008",
    "version": "0.3.4",
    "sentence": "Arduino library for I2C MCP23008 8 channel port expander  8 IO-lines"
  },
  {
    "name": "MCP23008-I2C",
    "version": "1.0.0",
    "sentence": "Arduino Library for MCP23008, a 8-port GPIO expander"
  },
  {
    "name": "MCP23008_I2C",
    "version": "1.0.2",
    "sentence": "Library for MCP23008 I2C based GPIO expanders for Arduino platform supported boards"
  },
  {
    "name": "MCP23017",
    "version": "2.0.0",
    "sentence": "MCP23017 I2C Port expander library."
  },
  {
    "name": "MCP23017 Port Expander",
    "version": "1.0.3",
    "sentence": "Arduino library for MCP23017 I2C I/O port expander."
  },
  {
    "name": "MCP23017_Attiny85",
    "version": "0.1.2",
    "sentence": "\"Library which lets you to control mcp23017 I/O expander simply\""
  },
  {
    "name": "MCP23017_I2C",
    "version": "1.0.4",
    "sentence": "Library for MCP23017 I2C based GPIO expanders for Arduino platform supported boards"
  },
  {
    "name": "MCP23017_MR",
    "version": "1.0.2",
    "sentence": "A sleek, efficient Arduino library for seamless control of the MCP23017 I/O expander. Simplify your GPIO!"
  },
  {
    "name": "MCP23017_RT",
    "version": "0.8.1",
    "sentence": "Arduino library for I2C MCP23017 16 channel port expander  16 IO-lines"
  },
  {
    "name": "MCP23017_WE",
    "version": "1.6.8",
    "sentence": "A library for the MCP23017, MCP23S17, MCP23018 and MCP23S18 port expanders."
  },
  {
    "name": "MCP23S08",
    "version": "0.5.3",
    "sentence": "Arduino library for SPI MCP23S08 8 channel port expander  8 IO-lines"
  },
  {
    "name": "MCP23S17",
    "version": "0.6.1",
    "sentence": "Arduino library for SPI MCP23S17 16 channel port expander 16 IO-lines"
  },
  {
    "name": "MCP2515-nb",
    "version": "0.1.0",
    "sentence": "Arduino library for MCP2515 with non-blocking support."
  },
  {
    "name": "MCP3201",
    "version": "1.0.0",
    "sentence": "A lighweight library for MCP3201 ADC chip."
  },
  {
    "name": "MCP3202",
    "version": "1.0.2",
    "sentence": "Used to interface the 12 bit ADC MCP3202 by Microchip."
  },
  {
    "name": "MCP3208",
    "version": "1.0.0",
    "sentence": "MCP3208 8-Channel 12-Bit ADC communication."
  },
  {
    "name": "MCP3221",
    "version": "1.0.0",
    "sentence": "MCP3221 Driver (12-bit ADC with hardware I2C Interface)"
  },
  {
    "name": "MCP3304",
    "version": "0.0.3",
    "sentence": "A simple library for working with the MCP3304 in a bit bang version. Useful for Raspberry Pico"
  },
  {
    "name": "MCP3421",
    "version": "1.0.4",
    "sentence": "A library for MCP3421 analog digital converter chip"
  },
  {
    "name": "MCP3424",
    "version": "0.1.3",
    "sentence": "Arduino library for 18 bit ADC I2C MCP3424 et al."
  },
  {
    "name": "MCP342x",
    "version": "1.0.4",
    "sentence": "Library to support Microchip ADC342x analogue to digital converters."
  },
  {
    "name": "MCP3X21",
    "version": "1.0.1",
    "sentence": "MCP3021 & MCP3221 Arduino library"
  },
  {
    "name": "MCP3XXX",
    "version": "1.0.0",
    "sentence": "An Arduino Library supporting the MCP3XXX series of ADC SPI chips, including MCP3002, MCP3004, MCP3008 and others."
  },
  {
    "name": "MCP4131 library",
    "version": "1.0.0",
    "sentence": "A library to control an MCP4131 digital potentiometer"
  },
  {
    "name": "MCP4132",
    "version": "1.0.0",
    "sentence": "MCP4132 library for interfacing the MCP4132 digital potentiometer with Arduino and compatible MCU."
  },
  {
    "name": "MCP4151",
    "version": "1.0.0",
    "sentence": "SPI library to interface with the MCP4151 digital potentiometer."
  },
  {
    "name": "MCP4251",
    "version": "1.0.0",
    "sentence": "MCP4251 Digital Pot Control"
  },
  {
    "name": "MCP4261",
    "version": "0.2.0",
    "sentence": "Arduino library for MCP4261 SPI based digital potentiometers."
  },
  {
    "name": "MCP4461",
    "version": "1.0.5",
    "sentence": "Control MCP4461 i2c quad potentiometer/rheostat devices"
  },
  {
    "name": "MCP45HVX1",
    "version": "1.1.0",
    "sentence": "Library for MCP45HVX1 digital potentiomters,"
  },
  {
    "name": "MCP4661_asukiaaa",
    "version": "1.0.0",
    "sentence": "It controls potentiometer MCP4661."
  },
  {
    "name": "MCP4725",
    "version": "0.4.0",
    "sentence": "Arduino library for 12 bit I2C DAC - MCP4725"
  },
  {
    "name": "MCP4728",
    "version": "0.1.2",
    "sentence": "Arduino library for MCP4728 quad channel, 12-bit voltage output Digital-to-Analog Convertor with non-volatile memory and I2C compatible Serial Interface"
  },
  {
    "name": "MCP48xx DAC Library",
    "version": "0.1.2",
    "sentence": "A library to control the MCP48xx family of SPI digital to analog converters (DACs)."
  },
  {
    "name": "MCP7940",
    "version": "1.2.0",
    "sentence": "Arduino library to use the Microchip MCP7940 RTC (Real-Time-Clock)"
  },
  {
    "name": "MCP79412RTC",
    "version": "1.0.2",
    "sentence": "Arduino library for the Microchip MCP79411/12 Real-Time Clock/Calendar."
  },
  {
    "name": "MCP9800",
    "version": "1.1.0",
    "sentence": "Arduino Library for Microchip MCP9800/1/2/3 2-Wire High-Accuracy Temperature Sensors."
  },
  {
    "name": "MCP9802",
    "version": "1.5.0",
    "sentence": "MCP9802 Driver (12-BIT Temperature Sensor with I2C Interface)"
  },
  {
    "name": "MCP9808",
    "version": "1.2.0",
    "sentence": "Arduino Library for Microchip MCP9808 Maximum Accuracy Digital Temperature Sensor."
  },
  {
    "name": "MCP9808_RT",
    "version": "0.4.0",
    "sentence": "Arduino Library for I2C MCP9808 temperature sensor"
  },
  {
    "name": "MCP_23017",
    "version": "1.0.0",
    "sentence": "IO expander library for MCP23017"
  },
  {
    "name": "MCP_3208",
    "version": "1.0.1",
    "sentence": "ADC library for MCP3208"
  },
  {
    "name": "MCP_ADC",
    "version": "0.5.1",
    "sentence": "Arduino library for MCP_ADC, e.g. MCP3008 SPI 10 bit, 8 channel ADC"
  },
  {
    "name": "MCP_DAC",
    "version": "0.5.2",
    "sentence": "Arduino library for Microchip SPI DAC, 8, 10, 12 bit; 1 or 2 channel."
  },
  {
    "name": "MCP_POT",
    "version": "0.2.2",
    "sentence": "Arduino library for MCP41xxx and MCP42xxx SPI based digital potentiometers."
  },
  {
    "name": "MCUFRIEND_kbv",
    "version": "3.0.0-Release",
    "sentence": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend UNO Shields"
  },
  {
    "name": "MCUOS",
    "version": "2.0.0",
    "sentence": "An OS simulator for Arduino boards."
  },
  {
    "name": "MCUVoltage",
    "version": "0.4.4",
    "sentence": "MCUVoltage measures the voltage supply (Vcc) of Arduino without extra components."
  },
  {
    "name": "MCreator Link",
    "version": "1.3.0",
    "sentence": "Adds support for the MCreator Link system."
  },
  {
    "name": "MDNS_Generic",
    "version": "1.4.2",
    "sentence": "mDNS Library for ESP32, ESP8266, nRF52, SAMD21, SAMD51, SAM DUE, STM32F/L/H/G/WB/MP1, Portenta_H7, AVR Mega, RP2040-based boards, etc. using Ethernet W5x00, ESP WiFi, WiFiNINA or ESP8266-AT shields"
  },
  {
    "name": "MD_AButton",
    "version": "1.1.0",
    "sentence": "Library for multiple switches on one analog input."
  },
  {
    "name": "MD_AD9833",
    "version": "1.3.0",
    "sentence": "Library for using a AD9833 Programmable Waveform Generator."
  },
  {
    "name": "MD_CirQueue",
    "version": "1.0.3",
    "sentence": "Library for FIFO queue implemented as a Ring Buffer."
  },
  {
    "name": "MD_Cubo",
    "version": "2.1.1",
    "sentence": "Library for device independent LED Cubes."
  },
  {
    "name": "MD_DS1307",
    "version": "1.3.4",
    "sentence": "Library for using a DS1307 Real Time Clock."
  },
  {
    "name": "MD_DS3231",
    "version": "1.4.1",
    "sentence": "Library for using a DS3231 Real Time Clock."
  },
  {
    "name": "MD_HX711",
    "version": "1.0.0",
    "sentence": "Library to read load cells using HX711 weight scale ADC"
  },
  {
    "name": "MD_KeySwitch",
    "version": "1.4.2",
    "sentence": "Library for digital switches."
  },
  {
    "name": "MD_LM335A",
    "version": "1.0.0",
    "sentence": "Library for using a LM335A temperature sensor."
  },
  {
    "name": "MD_MAX72XX",
    "version": "3.5.1",
    "sentence": "Implements functions that allow the MAX72xx (eg, MAX7219) to be used for LED matrices (64 individual LEDs)"
  },
  {
    "name": "MD_MAXPanel",
    "version": "1.4.0",
    "sentence": "Implements functions to manage a panel of MAX72xx based LED modules"
  },
  {
    "name": "MD_MIDIFile",
    "version": "2.6.0",
    "sentence": "Arduino Standard MIDI File (SMF) Player"
  },
  {
    "name": "MD_MSGEQ7",
    "version": "1.2.0",
    "sentence": "Implements functions for the MSGEQ7 7 band equalizer IC"
  },
  {
    "name": "MD_Menu",
    "version": "2.1.3",
    "sentence": "Library for displaying and managing menus on displays with with up to 2 lines."
  },
  {
    "name": "MD_OnePin",
    "version": "1.0.0",
    "sentence": "One pin serial comms link"
  },
  {
    "name": "MD_PWM",
    "version": "1.1.1",
    "sentence": "PWM on arbitrary pins"
  },
  {
    "name": "MD_Parola",
    "version": "3.7.3",
    "sentence": "LED matrix text display special effects"
  },
  {
    "name": "MD_REncoder",
    "version": "1.0.2",
    "sentence": "Library for Rotary Encoder"
  },
  {
    "name": "MD_SN76489",
    "version": "1.1.1",
    "sentence": "Library for SN76489 sound generator."
  },
  {
    "name": "MD_SmartCar",
    "version": "1.1.0",
    "sentence": "Core functions for movement control of a 2 wheeled SmartCar Robot using DC motors."
  },
  {
    "name": "MD_SmartCar2",
    "version": "1.0.0",
    "sentence": "Core functions for movement control of a 2 wheeled SmartCar Robot using Stepper motors."
  },
  {
    "name": "MD_Stepper",
    "version": "1.1.1",
    "sentence": "Stepper Motor control"
  },
  {
    "name": "MD_TCS230",
    "version": "1.2.3",
    "sentence": "Library for TCS230 TCS3200 Colour Sensor"
  },
  {
    "name": "MD_TTT",
    "version": "1.0.1",
    "sentence": "Tic-Tac-Toe game logic library"
  },
  {
    "name": "MD_UISwitch",
    "version": "2.2.2",
    "sentence": "Library for Universal User Interface Switches."
  },
  {
    "name": "MD_YM2413",
    "version": "1.1.0",
    "sentence": "Library for Yamaha YM2413 sound synthesizer."
  },
  {
    "name": "MD_YX5300",
    "version": "1.3.1",
    "sentence": "Library for Serial MP3 Player (Catalex YX5300 module)"
  },
  {
    "name": "ME310G1",
    "version": "0.1.0",
    "sentence": "Allows communication with ME310G1 Telit module."
  },
  {
    "name": "MFRC522",
    "version": "1.4.11",
    "sentence": "Arduino RFID Library for MFRC522 (SPI)"
  },
  {
    "name": "MFRC522-spi-i2c-uart-async",
    "version": "1.5.1",
    "sentence": "Arduino RFID Library for MFRC522 (SPI, I2C and UART) with asynchroneous callbacks"
  },
  {
    "name": "MFRC522_I2C",
    "version": "1.0.0",
    "sentence": "MFR522 i2c Library to read NFC Tags with Arduino or ESP2866/ESP32 (NodeMCU)"
  },
  {
    "name": "MFRC522_NTAG424DNA",
    "version": "1.0.1",
    "sentence": "Arduino RFID/NFC Library for NXP NTAG 424 DNA tags using MFRC522."
  },
  {
    "name": "MFRC522_PN512",
    "version": "1.4.12",
    "sentence": "Arduino RFID Library for PN512 (SPI)"
  },
  {
    "name": "MFRC522_fix",
    "version": "1.4.12",
    "sentence": "Arduino RFID Library for MFRC522 (SPI)"
  },
  {
    "name": "MFUthings",
    "version": "1.0.1",
    "sentence": "This is the library that be used in www.mfuthings.com which belongs to Mae Fah Luang University"
  },
  {
    "name": "MH-Z CO2 Sensors",
    "version": "1.5.1",
    "sentence": "Ready-to-use implementation for CO2 sensors of the MHZ series (Intelligent Infrared CO2 Module), supporting MH-Z14A, MH-Z14B, MH-Z19A, MH-Z19B, and MH-Z19C."
  },
  {
    "name": "MH-Z14A Library",
    "version": "1.0.3-beta.1",
    "sentence": "A Library for using the MH-Z14A CO2-Sensor with Arduino."
  },
  {
    "name": "MH-Z19",
    "version": "1.5.4",
    "sentence": "New Commands & Examples for the MHZ19 with Arduino, supporting hardware & software serial."
  },
  {
    "name": "MHGroveBLE",
    "version": "1.0.0",
    "sentence": "Interface with Grove BLE v1 modules."
  },
  {
    "name": "MHZCO2",
    "version": "0.2.1",
    "sentence": "Arduino Library for MHZ series CO2 sensors."
  },
  {
    "name": "MIDI Device Controller",
    "version": "1.0.0",
    "sentence": "Musical control of devices via the MIDI interface"
  },
  {
    "name": "MIDI Library",
    "version": "5.0.2",
    "sentence": "MIDI I/Os for Arduino"
  },
  {
    "name": "MIDIUSB",
    "version": "1.0.5",
    "sentence": "Allows an Arduino board with USB capabilites to act as a MIDI instrument over USB."
  },
  {
    "name": "MIDIcontroller",
    "version": "3.1.3",
    "sentence": "A library for creating Teensy MIDI controllers."
  },
  {
    "name": "MIKROE_4_20mA_RT_Click",
    "version": "1.1.0",
    "sentence": "A library for the 4-20 mA R & T Click Boards of MIKROE (MIKROE-1387 & MIKROE-1296)."
  },
  {
    "name": "MINDS-i-Common",
    "version": "1.0.1",
    "sentence": "Common code to assist with running MINDS-i platforms"
  },
  {
    "name": "MINDS-i-Drone",
    "version": "1.7.3",
    "sentence": "Code to assist with running MINDS-i Drones"
  },
  {
    "name": "MINDS-i-Farming",
    "version": "1.0.1",
    "sentence": "Code for MINDS-i Farming applications"
  },
  {
    "name": "MINDS-i-Foundations",
    "version": "4.0.2",
    "sentence": "Code to assist with running MINDSi robots"
  },
  {
    "name": "MINMAX",
    "version": "0.3.0",
    "sentence": "MINMAX library for Arduino."
  },
  {
    "name": "MJScore",
    "version": "1.0.1",
    "sentence": "Mahjong score calculation library"
  },
  {
    "name": "MKHC595",
    "version": "1.0.1",
    "sentence": "A powerful but easy to use 74HC595 Library"
  },
  {
    "name": "MKL_DHT sensor library",
    "version": "2.4.6",
    "sentence": "Library for DHT11, DHT22, etc Temp & Humidity Sensors"
  },
  {
    "name": "MKL_DS18B20",
    "version": "1.2.3",
    "sentence": "Library for the DS18B20 temperature sensor."
  },
  {
    "name": "MKL_RTClib",
    "version": "1.0.1",
    "sentence": "A fork of Jeelab, fantastic RTC library."
  },
  {
    "name": "MKPin",
    "version": "1.0.0",
    "sentence": "Better control over pin position Speed ​​up using manually defined register addresses"
  },
  {
    "name": "MKRGSM",
    "version": "1.5.0",
    "sentence": "Enables GSM/GRPS network connection using the Arduino MKR GSM 1400 board."
  },
  {
    "name": "MKRIMU",
    "version": "1.0.0",
    "sentence": "Allows you to read the acceleration, gyroscope, magnetic field and euler angles from the IMU on your MKR IMU shield."
  },
  {
    "name": "MKRMotorCarrier",
    "version": "1.0.5",
    "sentence": "Allows to use the MKR Motor Carrier"
  },
  {
    "name": "MKRNB",
    "version": "1.6.0",
    "sentence": "Enables NB/GRPS network connection using the Arduino MKR NB 1500 board."
  },
  {
    "name": "MKRWAN",
    "version": "1.1.1",
    "sentence": "Support library for MKR WAN 1300/1310"
  },
  {
    "name": "MKRWAN_v2",
    "version": "1.3.2",
    "sentence": "Support library for MKR WAN 1300/1310 - firmware 1.3.1"
  },
  {
    "name": "MKRWiFiLed",
    "version": "1.0.0",
    "sentence": "Control the RGB led on the MKR WiFi board."
  },
  {
    "name": "MKS_SERVO42",
    "version": "1.0.0",
    "sentence": "This library is used to control one or more Nema17 with MKSSERVO42 driver from an Arduino device"
  },
  {
    "name": "MKS_SERVO57",
    "version": "1.0.0",
    "sentence": "This library is used to control one or more Nema23 with MKSSERVO57 driver from an Arduino device"
  },
  {
    "name": "ML8511",
    "version": "0.2.0",
    "sentence": "ML8511 - UV sensor - library for Arduino"
  },
  {
    "name": "MLX90393_raw",
    "version": "1.0.1",
    "sentence": "MLX90393 magnetometer library."
  },
  {
    "name": "MLX90614",
    "version": "0.1.5",
    "sentence": "Library to support Melexis MLX90614 infrared thermometer"
  },
  {
    "name": "MM-S50MV",
    "version": "1.0.0",
    "sentence": "MMS50MV(ToF sensor) Driver"
  },
  {
    "name": "MMA7455 sensor Library",
    "version": "0.0.2",
    "sentence": "Freescale MMA7455 accelerometer sensor library"
  },
  {
    "name": "MMA8453_n0m1",
    "version": "1.0.1",
    "sentence": "an Arduino Library for the Freescale MMA8453Q & MMA8452Q accelerometer."
  },
  {
    "name": "MMA8652",
    "version": "1.0.1",
    "sentence": "Library for the Freescale MMA8652 3-axis accelerometer"
  },
  {
    "name": "MMA8653",
    "version": "2.0.0",
    "sentence": "Allows reading the MMA8653 accelerometer."
  },
  {
    "name": "MMC34160PJ",
    "version": "1.0.1",
    "sentence": "A library for the Memsic's MMC34160PJ magnetometer"
  },
  {
    "name": "MODI",
    "version": "0.0.2",
    "sentence": "A driver for control MODI on Arduino"
  },
  {
    "name": "MODSPI",
    "version": "1.0.0",
    "sentence": "Library for interfacing with MODSPI modules and controllers."
  },
  {
    "name": "MODULE_2RELAY",
    "version": "0.0.1",
    "sentence": "Library for M5Stack MODULE 2RELAY"
  },
  {
    "name": "MODULE_4IN8OUT",
    "version": "0.0.1",
    "sentence": "Library for M5Stack MODULE 4IN8OUT"
  },
  {
    "name": "MOREbot Games Library",
    "version": "0.10.1",
    "sentence": "MOREbot Games Kit Utilities Library"
  },
  {
    "name": "MOREbot Library",
    "version": "1.5.5",
    "sentence": "MOREbot Controller Library"
  },
  {
    "name": "MOS Electronics AY-3-8910 Library",
    "version": "1.0.0",
    "sentence": "This is a library for the GI AY-3-8910."
  },
  {
    "name": "MOTY-Mini Temperature Sensor",
    "version": "1.0.0",
    "sentence": "A library for interfacing with the MOTY-mini temperature sensor."
  },
  {
    "name": "MOVI Voice Dialog Shield",
    "version": "1.1.13",
    "sentence": "This is the Arduino library for the MOVI(tm) Voice Dialog Shield."
  },
  {
    "name": "MP3Player",
    "version": "1.1.0",
    "sentence": "Library for playing MP3 files"
  },
  {
    "name": "MPC_ruih",
    "version": "1.1.4",
    "sentence": "Linear MPC controller"
  },
  {
    "name": "MPG",
    "version": "0.4.0",
    "sentence": "C++ library for processing and converting gamepad inputs, with support for XInput, DirectInput and Nintendo Switch."
  },
  {
    "name": "MPL3115A2_Arduino",
    "version": "1.0.1",
    "sentence": "An library for NXP MPL3115A2"
  },
  {
    "name": "MPR121",
    "version": "1.3.0",
    "sentence": "Proximity capacitive touch sensor controller Arduino library."
  },
  {
    "name": "MPU6050",
    "version": "1.4.1",
    "sentence": "MPU6050 Arduino Library."
  },
  {
    "name": "MPU6050_IND",
    "version": "1.1.1",
    "sentence": "Read fall and motion detection of MPU6050"
  },
  {
    "name": "MPU6050_light",
    "version": "1.2.1",
    "sentence": "Arduino library for light and fast communication with the MPU6050."
  },
  {
    "name": "MPU6050_tockn",
    "version": "1.5.2",
    "sentence": "Arduino library for easy communicating with the MPU6050."
  },
  {
    "name": "MPU9250",
    "version": "0.4.8",
    "sentence": "Arduino library for MPU9250 Nine-Axis (Gyro + Accelerometer + Compass) MEMS MotionTracking™ Device"
  },
  {
    "name": "MPU9250_WE",
    "version": "1.2.12",
    "sentence": "A library for the 9-axis accelerometer, gyrometer and magnetometer MPU9250 and the MPU6500"
  },
  {
    "name": "MPU9250_asukiaaa",
    "version": "1.5.13",
    "sentence": "It manages MPU9250"
  },
  {
    "name": "MPXA6115A",
    "version": "1.0.0",
    "sentence": "Arduino library for the Freescale MPXA6115A absolute pressure sensor."
  },
  {
    "name": "MPXHZ6116A",
    "version": "1.0.0",
    "sentence": "Arduino library for the Freescale MPXHZ6116A absolute pressure sensor."
  },
  {
    "name": "MQ131 gas sensor",
    "version": "1.5.2",
    "sentence": "Library for measuring ozone (O3) concentration with sensor MQ131"
  },
  {
    "name": "MQ135",
    "version": "1.1.1",
    "sentence": "This library allows you to easily read the MQ135 air quality sensor."
  },
  {
    "name": "MQ137",
    "version": "0.5.0",
    "sentence": "A simple library for an sensor mq137 and ESP8266."
  },
  {
    "name": "MQ2_LPG",
    "version": "1.0.0",
    "sentence": "Simple library to detect LPG leaks."
  },
  {
    "name": "MQ7Sensor",
    "version": "1.0.0",
    "sentence": "MQ7 carbon monoxide detector library."
  },
  {
    "name": "MQSensor",
    "version": "3.1.0",
    "sentence": "Arduino Library for any MQ sensor such as MQ135 or MQ8"
  },
  {
    "name": "MQSpaceData",
    "version": "3.1.0",
    "sentence": "The first and only Arduino library where Geiger Counter and MQ Sensors combine with Data Science"
  },
  {
    "name": "MQTT",
    "version": "2.5.2",
    "sentence": "MQTT library for Arduino"
  },
  {
    "name": "MQTT Client",
    "version": "1.0.2",
    "sentence": "MQTT Client lets you connect to a MQTT broker and publish strings to a topic."
  },
  {
    "name": "MQTT and Serial Printer",
    "version": "1.1.1",
    "sentence": "Print/log over both serial and MQTT at the same time for debugging over both USB and wifi."
  },
  {
    "name": "MQTTPubSubClient",
    "version": "0.3.2",
    "sentence": "MQTT and MQTT over WebSoket Client for Arduino"
  },
  {
    "name": "MQTTPubSubClient_Generic",
    "version": "1.2.1",
    "sentence": "MQTT, MQTT_over_WebSockets and Secured MQTT_over_WebSockets Client for Arduino"
  },
  {
    "name": "MQTTRemote",
    "version": "5.0.2",
    "sentence": "MQTT wrapper for setting up an MQTT connection"
  },
  {
    "name": "MQTT_Looped",
    "version": "1.0.0",
    "sentence": "MQTT library that runs WiFi and MQTT in a loop, enabling async-like behavior."
  },
  {
    "name": "MQUnifiedsensor",
    "version": "3.0.0",
    "sentence": "This library allows you to read the MQ sensors very easily."
  },
  {
    "name": "MS5611",
    "version": "0.4.1",
    "sentence": "Arduino library for MS5611 temperature and pressure sensor"
  },
  {
    "name": "MS5611_SPI",
    "version": "0.3.1",
    "sentence": "Arduino library (SPI) for MS5611 temperature and pressure sensor"
  },
  {
    "name": "MS5837",
    "version": "0.1.0",
    "sentence": "Arduino library for MS5837 temperature and pressure sensor."
  },
  {
    "name": "MS5837_30BA_Library",
    "version": "1.0.0",
    "sentence": "A simple and easy library for the MS5837 pressure/depth sensor"
  },
  {
    "name": "MS5x",
    "version": "1.0.0",
    "sentence": "Library for digital pressure sensors MS5xxx by Measurement Specialties (MEAS)"
  },
  {
    "name": "MS5xxx",
    "version": "1.1.1",
    "sentence": "Library for digital pressure sensors MS5xxx by Measurement Specialties (MEAS)."
  },
  {
    "name": "MSGEQ7",
    "version": "1.2.2",
    "sentence": "Library for Musicvisualization with MSGEQ7"
  },
  {
    "name": "MSMPLOTTER",
    "version": "1.0.0",
    "sentence": "A library that can plot on Serial Monitor."
  },
  {
    "name": "MSP300",
    "version": "0.3.0",
    "sentence": "Arduino Library for MSP300 pressure transducer (I2C)."
  },
  {
    "name": "MT-arduino-momentary-button",
    "version": "3.0.1",
    "sentence": "Momentary button to detect button state change (press/release), short/long presses and multiple presses."
  },
  {
    "name": "MT-arduino-pin-debouncer",
    "version": "3.0.1",
    "sentence": "Pin debouncer to filter out noise on input pins."
  },
  {
    "name": "MT-arduino-rotary-encoder",
    "version": "1.1.0",
    "sentence": "Rotary encoder library for the Arduino platform, to detect encoder detent/rotation direction and angular position."
  },
  {
    "name": "MT-arduino-stepper-driver",
    "version": "3.1.1",
    "sentence": "Stepper motor driver library for the Arduino platform, to control stepper motors via stepper motor drivers that have a \"step-direction-enable\" interface."
  },
  {
    "name": "MT6701",
    "version": "1.0.2",
    "sentence": "Use the MT6701 magnet rotary encoder with ESP."
  },
  {
    "name": "MT6701-arduino",
    "version": "1.0.3",
    "sentence": "MT6701 driver"
  },
  {
    "name": "MT8870",
    "version": "0.1.6",
    "sentence": "Arduino library for MT8870 DTMF decoder"
  },
  {
    "name": "MTCParser",
    "version": "0.1.0",
    "sentence": "Midi Time Code (MTC) parser"
  },
  {
    "name": "MTP40C",
    "version": "0.3.1",
    "sentence": "Arduino library for MTP40, MTP40C and MTP40D CO2 sensor"
  },
  {
    "name": "MTP40F",
    "version": "0.2.0",
    "sentence": "Arduino library for MTP40F CO2 sensor"
  },
  {
    "name": "MTR_ADS7830",
    "version": "1.0.3",
    "sentence": "Arduino driver library for ADS7830"
  },
  {
    "name": "MTR_STUSB4500",
    "version": "1.0.9",
    "sentence": "Arduino driver library for STUSB4500"
  },
  {
    "name": "MUX_SW_NXP_Arduino",
    "version": "1.1.0",
    "sentence": "Class library for NXP I2C multiplexer and switch"
  },
  {
    "name": "MVP3000esp",
    "version": "0.2.2",
    "sentence": "The MVP3000 framework is built to streamline the implementation of sensor and actuator hardware."
  },
  {
    "name": "MWings",
    "version": "1.2.2",
    "sentence": "A library that communicate with TWELITE wireless modules. Supports ESP32 modules and Arduino UNO R4 series."
  },
  {
    "name": "MX1508",
    "version": "1.0.0",
    "sentence": "A library that makes using mx1508 dual DC motor driver easier."
  },
  {
    "name": "MX8650 Mouse sensor library",
    "version": "1.0.1",
    "sentence": "Library to facilitate communication with the MX8650 mouse sensor, read/write from/to its internal registers."
  },
  {
    "name": "MacroDebugger",
    "version": "0.0.1",
    "sentence": "Debug-printing done elegantly, and cleanly!"
  },
  {
    "name": "MacroLogger",
    "version": "1.0.0",
    "sentence": "Arduino logger with support for preprocessor directives and standard C/C++ string formatting."
  },
  {
    "name": "MacroPad",
    "version": "0.2.3",
    "sentence": "Controls a keyboard composed of a key matrix."
  },
  {
    "name": "Madgwick",
    "version": "1.2.0",
    "sentence": "Helpers for MadgwickAHRS algorithm"
  },
  {
    "name": "MaerklinMotorola",
    "version": "0.2.3",
    "sentence": "Decoding the signals from the Märklin-Motorola-protocol."
  },
  {
    "name": "MagAlpha Angle Sensor Library",
    "version": "2.0.0",
    "sentence": "Arduino library for the MPS MagAlpha magnetic angle sensor."
  },
  {
    "name": "MagStripe",
    "version": "1.8.2",
    "sentence": "Decode data from TTL (raw) magnetic card readers."
  },
  {
    "name": "MagStripe_ESP32",
    "version": "1.0.0",
    "sentence": "Decode data from TTL (raw) magnetic card readers on ESP32."
  },
  {
    "name": "MagVector 3D Magnetic Sensor",
    "version": "1.0.1",
    "sentence": "Library for the MPS MagVector 3D magnetic sensors."
  },
  {
    "name": "Magellan_BC95",
    "version": "2.1.1",
    "sentence": "AIS Magellan Library; easy way to integrate IoT Device to Magellan using Arduino Platform."
  },
  {
    "name": "Magellan_BC95_lite",
    "version": "2.0.0",
    "sentence": "AIS Magellan Library; easy way to integrate IoT Device to Magellan using Arduino Platform."
  },
  {
    "name": "Magellan_SIM7020E",
    "version": "1.5.1",
    "sentence": "AIS Magellan Library; easy way to integrate IoT Device to Magellan using Arduino Platform."
  },
  {
    "name": "MagicHome",
    "version": "1.0.0",
    "sentence": "A library For discovering and controlling MagicHome Leds."
  },
  {
    "name": "MagicPot",
    "version": "1.0.2",
    "sentence": "Arduino library for reading values easily from potentiometers."
  },
  {
    "name": "Mahony",
    "version": "1.2.0",
    "sentence": "Helpers for MahonyAHRS algorithm"
  },
  {
    "name": "Maidenhead",
    "version": "1.0.1",
    "sentence": "Library for converting between latitude/longitude and Maidenhead locators."
  },
  {
    "name": "MakeBlock Drive Updated",
    "version": "3.27.1",
    "sentence": "Use to drive all devices provided by Makeblock company."
  },
  {
    "name": "MakeBlockDrive",
    "version": "3.24.0",
    "sentence": "Use to drive all devices provided by Makeblock company."
  },
  {
    "name": "MakerBoard",
    "version": "1.0.2",
    "sentence": "Library for MakerBoard(メイカーボード)"
  },
  {
    "name": "MakerVision",
    "version": "0.0.3",
    "sentence": "Arduino library used by Scratch generated code on http://makervision.io"
  },
  {
    "name": "Makerlabvn_I2C_Motor_Driver",
    "version": "1.0.5",
    "sentence": "Driver for 2-DC motor and 2-RC motor"
  },
  {
    "name": "Makerlabvn_SimpleMotor",
    "version": "1.0.1",
    "sentence": "Driver for 2-DC motor."
  },
  {
    "name": "Makerlabvn_kit_CIA0_BOT",
    "version": "1.0.0",
    "sentence": "CIA0 Bot Example code."
  },
  {
    "name": "MakestroCloudClient",
    "version": "1.0.3",
    "sentence": "Library for connecting with Makestro Cloud"
  },
  {
    "name": "ManuvrDrivers",
    "version": "1.9.0",
    "sentence": "A collection of non-blocking flexible hardware drivers written around CppPotpourri."
  },
  {
    "name": "Mapf",
    "version": "1.0.2",
    "sentence": "extended arduino map() function"
  },
  {
    "name": "MaquinitasParams",
    "version": "0.0.4",
    "sentence": "Library of parameters for art devices."
  },
  {
    "name": "MaquinitasRitmos",
    "version": "0.0.2",
    "sentence": "Library of rhythmic data for art devices."
  },
  {
    "name": "Marceau",
    "version": "0.0.2",
    "sentence": "This is a library that allows devices to be easily controlled over serial and websockets."
  },
  {
    "name": "Marisa ESP32 Wrapper",
    "version": "0.2.6",
    "sentence": "Fast lookups in large static dictionaries"
  },
  {
    "name": "Masaylo",
    "version": "1.0.1",
    "sentence": "Arduino library for control of the Masaylo robot"
  },
  {
    "name": "MaterialBoard",
    "version": "1.0.0",
    "sentence": "This library implements the Firmata protocol for use with the VirtualBoard project to remotely interface with an Arduino board."
  },
  {
    "name": "MatesController",
    "version": "1.0.7",
    "sentence": "Breadboard Mates' Mates Controller Arduino library"
  },
  {
    "name": "Matrix Color Sensor",
    "version": "1.0.3",
    "sentence": "An RGBW color sensor."
  },
  {
    "name": "Matrix Controller",
    "version": "1.0.0",
    "sentence": "A combined DC Motor controller and servo controller."
  },
  {
    "name": "Matrix Laser Sensor",
    "version": "1.0.1",
    "sentence": "a laser rangefinder."
  },
  {
    "name": "Matrix Mini Library",
    "version": "2.4.5",
    "sentence": "An Arduino Uno(R3) based robot controller."
  },
  {
    "name": "Matrix Motion Sensor",
    "version": "1.0.3",
    "sentence": "An inertial measurement unit 6-degree of freedom sensor."
  },
  {
    "name": "Matrix Motor Extension",
    "version": "1.0.3",
    "sentence": "A 4 channel DC motor controller."
  },
  {
    "name": "Matrix Servo Extension",
    "version": "1.0.2",
    "sentence": "A 8 channel RC Servo controller."
  },
  {
    "name": "Matrix Ultrasonic Sensor",
    "version": "1.0.0",
    "sentence": "An automatic ultrasonic sensor."
  },
  {
    "name": "MatrixCharlieplex",
    "version": "0.1.4",
    "sentence": "A library for Arduino to control Charlieplexed LED matrices."
  },
  {
    "name": "MatrixKeypad",
    "version": "1.1.0",
    "sentence": "Simple to use library to interface matrix keypads."
  },
  {
    "name": "MatrixMath",
    "version": "1.0.0",
    "sentence": "Minimal linear algebra library"
  },
  {
    "name": "MatrixMiniR4",
    "version": "1.1.5",
    "sentence": "An Arduino R4 based Robotics controller made by MATRIX Robotics."
  },
  {
    "name": "MatrizLed",
    "version": "2.0.5",
    "sentence": "Librería para matrices de leds de 8x8 con controladores MAX7219 o MAX7221."
  },
  {
    "name": "Max11615Lib",
    "version": "1.0.2",
    "sentence": "A library for interfacing with the MAX11612-MAX11617 ADC."
  },
  {
    "name": "Max31328RTC",
    "version": "1.0.1",
    "sentence": "Library for Max31328 Real Time Clock."
  },
  {
    "name": "Max44007",
    "version": "0.2.1",
    "sentence": "Library for MAX44007 I2C LUX sensor Arduino."
  },
  {
    "name": "Max44009",
    "version": "0.6.1",
    "sentence": "Library for MAX44009 I2C LUX sensor Arduino."
  },
  {
    "name": "Max86141",
    "version": "1.0.4",
    "sentence": "Enables using Max86140 and Max86141 sensor on NRF52840 board."
  },
  {
    "name": "MaxEssentialToolkit",
    "version": "1.0.1",
    "sentence": "Library for MAXIM RTC, temperature and current-sense amplifier sensors."
  },
  {
    "name": "MaxLedControl",
    "version": "1.0.3",
    "sentence": "A library for the MAX7219 and the MAX7221 Led display drivers."
  },
  {
    "name": "MaxMtrParser",
    "version": "0.2.2",
    "sentence": "Max/MSP MTR (Multi-Track Recorder) Protocol Parser for Arduino"
  },
  {
    "name": "MaximWire",
    "version": "1.0.3",
    "sentence": "A library for DS18B20 temperature sensor and Arduino NANO 33 BLE controller"
  },
  {
    "name": "Mbed BLE HID",
    "version": "1.3.0",
    "sentence": "A Library to implement Human Interface Device with Bluetooth on a Mbed stack (Arduino Nano 33 BLE)."
  },
  {
    "name": "Mbed BLE Mouse",
    "version": "1.3.0",
    "sentence": "Bluetooth LE Mouse library for the Arduino Boards with BLE support and running mbed OS."
  },
  {
    "name": "MbedNanoTLS",
    "version": "1.0.0",
    "sentence": "Standalone Mbed TLS for Arduino Mbed OS Nano Boards"
  },
  {
    "name": "Mcp3208",
    "version": "1.4.0",
    "sentence": "Arduino library for the MCP320x 12 bit ADC family."
  },
  {
    "name": "MeArm-Robot-Arm",
    "version": "1.0.0",
    "sentence": "Provides inverse kinematics control for all MeArm versions."
  },
  {
    "name": "MeanAndVarOnTheFly",
    "version": "1.1.0",
    "sentence": "Calculate mean and variance not storing individual values in memory."
  },
  {
    "name": "MeanFilterLib",
    "version": "1.0.0",
    "sentence": "Mean Filter Library"
  },
  {
    "name": "Mechasolution R finder10D",
    "version": "1.1.0",
    "sentence": "Arduino library form the TIONE R finder10D"
  },
  {
    "name": "Mechasolution Voice Recognition Module",
    "version": "1.0.2",
    "sentence": "Geeetech voice recognition module suite 2 Library for Arduino"
  },
  {
    "name": "Mechatro",
    "version": "1.0.0",
    "sentence": "<br/>A library to control motors with the L293x motor driver <br/> 메카트로 보드 모터 컨트롤 라이브러리 (L298x드라이버 사용하는 모든 프로젝트 사용 가능)"
  },
  {
    "name": "MedianFilterLib",
    "version": "1.0.1",
    "sentence": "Median Filter Library"
  },
  {
    "name": "MedianFilterLib2",
    "version": "1.0.0",
    "sentence": "Median Filter Library 2"
  },
  {
    "name": "Meeo",
    "version": "2.0.0",
    "sentence": "This library is used for connecting your Arduino device to Meeo."
  },
  {
    "name": "MegunoLink",
    "version": "1.43.0",
    "sentence": "Library for storing data in the eeprom, processing serial messages and plotting data with MegunoLink."
  },
  {
    "name": "MegunoLink File Manager",
    "version": "1.2.0",
    "sentence": "Library to provide access to files on embedded SD/LittleFS filesystem from MegunoLink."
  },
  {
    "name": "Meiro",
    "version": "0.0.13",
    "sentence": "Arduino Meiro library."
  },
  {
    "name": "Melody",
    "version": "1.2.0",
    "sentence": "Melody offers a simple an powerful music text notation called MELO."
  },
  {
    "name": "Melody Player",
    "version": "2.4.0",
    "sentence": "This library provides an intuitive interface to play melodies on buzzers"
  },
  {
    "name": "Melopero AMG8833",
    "version": "1.1.0",
    "sentence": "A driver library for the AMG8833 sensor."
  },
  {
    "name": "Melopero APDS9960",
    "version": "1.2.1",
    "sentence": "A driver library for the APDS9960 sensor."
  },
  {
    "name": "Melopero BME280",
    "version": "1.1.0",
    "sentence": "A driver library for the BME280 sensor."
  },
  {
    "name": "Melopero Cookie RP2040",
    "version": "1.0.1",
    "sentence": "Melopero Cookie RP2040 helper library"
  },
  {
    "name": "Melopero LSM9DS1",
    "version": "1.1.0",
    "sentence": "A driver library for the LSM9DS1 9-DOF IMU."
  },
  {
    "name": "Melopero RV3028",
    "version": "1.1.0",
    "sentence": "A driver library for the RV3028 rtc."
  },
  {
    "name": "Melopero SAM-M8Q",
    "version": "1.1.2",
    "sentence": "A driver library for the SAM-M8Q GNSS Antenna Module."
  },
  {
    "name": "Melopero UBX Protocol",
    "version": "1.0.1",
    "sentence": "A library to easily create Ubx messages."
  },
  {
    "name": "Melopero VL53L1X",
    "version": "1.1.0",
    "sentence": "A driver library for the VL53L1X sensor."
  },
  {
    "name": "Melt7SegLcd",
    "version": "1.0.4",
    "sentence": "Melt 7-segment LCD Arduino library."
  },
  {
    "name": "Mem24CSM01",
    "version": "0.9.0",
    "sentence": "A library to interface the 24CSM01 I2C EEPROM Memory"
  },
  {
    "name": "MemoryDumper",
    "version": "0.0.1",
    "sentence": "Dump Arduino memory"
  },
  {
    "name": "MemoryHexDump",
    "version": "1.0.1",
    "sentence": "Arduino Dump memory"
  },
  {
    "name": "MemoryLib",
    "version": "1.0.2",
    "sentence": "Library to manage the storage of INT and LONG variables in EEPROM"
  },
  {
    "name": "MemoryUsage",
    "version": "2.21.1",
    "sentence": "Use this library to check your SRAM / Stack memory usage."
  },
  {
    "name": "MentorBit-1Rele",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit Relé de un Canal"
  },
  {
    "name": "MentorBit-2Rele",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit Relé de dos Canales"
  },
  {
    "name": "MentorBit-3LED",
    "version": "1.0.1",
    "sentence": "Librería para Módulo MentorBit de tres Diodos LEDs"
  },
  {
    "name": "MentorBit-BMP280",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Sensor BMP280"
  },
  {
    "name": "MentorBit-DHT11",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Sensor DHT11"
  },
  {
    "name": "MentorBit-DHT22",
    "version": "1.0.1",
    "sentence": "Librería para Módulo MentorBit de Sensor DHT22"
  },
  {
    "name": "MentorBit-DetectorIR",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Emisor/Receptor Infrarrojo"
  },
  {
    "name": "MentorBit-DetectorLluvia",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Detector de lluvia"
  },
  {
    "name": "MentorBit-Encoder",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Encoder con LEDs"
  },
  {
    "name": "MentorBit-Expander",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Expansor de Entradas y Salidas"
  },
  {
    "name": "MentorBit-LDR",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de LDR"
  },
  {
    "name": "MentorBit-Library",
    "version": "1.0.8",
    "sentence": "Librería para MentorBit"
  },
  {
    "name": "MentorBit-MQ",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Sensor MQ"
  },
  {
    "name": "MentorBit-PIR",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Sensor PIR"
  },
  {
    "name": "MentorBit-PoteLineal",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Potenciómetro lineal"
  },
  {
    "name": "MentorBit-PoteRueda",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Potenciómetro de Rueda"
  },
  {
    "name": "MentorBit-Potenciometro",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Potenciómetro Simple"
  },
  {
    "name": "MentorBit-Pulsadores",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Pulsadores"
  },
  {
    "name": "MentorBit-RGB",
    "version": "1.0.1",
    "sentence": "Librería para Módulo MentorBit de LED RGB"
  },
  {
    "name": "MentorBit-Ultrasonidos",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Sensor Ultrasónico"
  },
  {
    "name": "MentorBit-Zumbador",
    "version": "1.0.0",
    "sentence": "Librería para Módulo MentorBit de Zumbador Pasivo"
  },
  {
    "name": "MentorBitMatrizPulsadores",
    "version": "1.0.0",
    "sentence": "Librería para uso de MentorBit matriz de pulsadores I2C"
  },
  {
    "name": "Menu-UI",
    "version": "1.0.0",
    "sentence": "Arduino Menu user interface using keybaord arrows and escape, built using object Oriented Programing Inheritance."
  },
  {
    "name": "MenuX",
    "version": "1.0.2",
    "sentence": "Simple menu library for TFT_eSPI-based projects."
  },
  {
    "name": "MergedStreams",
    "version": "0.0.1",
    "sentence": "Make an Arduino stream which writes reads and writes from two streams."
  },
  {
    "name": "Meridian",
    "version": "0.1.0",
    "sentence": "This is a library to drive a communication system for humanoid robots, \"Meridian\"."
  },
  {
    "name": "MeshGnome",
    "version": "1.1.1",
    "sentence": "Mesh Synchronization and OTA for ESP-Now on the ESP8266."
  },
  {
    "name": "Meshtastic",
    "version": "0.0.7",
    "sentence": "Driver for interfacing with Meshtastic nodes over WiFi and Serial connections"
  },
  {
    "name": "MessageBus",
    "version": "0.0.1",
    "sentence": "A lightweight message bus for Arduino."
  },
  {
    "name": "MessagingLib",
    "version": "1.0.0",
    "sentence": "Complex Arduino serial communication made manageable."
  },
  {
    "name": "MeteoFunctions",
    "version": "1.1.0",
    "sentence": "Collection of meteo functions"
  },
  {
    "name": "MeteoLabBeacon",
    "version": "0.1.3",
    "sentence": "Arduino library for environmental sensor communication."
  },
  {
    "name": "Mhz19",
    "version": "2.0.2",
    "sentence": "Library for Winsen MH-Z19 – infrared carbon dioxide sensor."
  },
  {
    "name": "MiCS6814-I2C",
    "version": "1.0.0",
    "sentence": "MiCS-6814 Gas Sensor I2C Interface Library"
  },
  {
    "name": "MiDispositivoMIDI_V3",
    "version": "1.0.0",
    "sentence": "Provides functions to control de MiDispositivoMIDI V3 hardware"
  },
  {
    "name": "MicroAnimation",
    "version": "0.0.7",
    "sentence": "Play Animated Icons from icons8.com even on devices with only small amounts of memory available like the Arduino Micro."
  },
  {
    "name": "MicroBeaut",
    "version": "2.0.0",
    "sentence": "MicroBeaut Standard Library for Arduino."
  },
  {
    "name": "MicroConfig",
    "version": "0.3.0",
    "sentence": "Configuration menus for microcontrollers."
  },
  {
    "name": "MicroDebug",
    "version": "1.2.0",
    "sentence": "Arduino debugging support library"
  },
  {
    "name": "MicroFlow",
    "version": "1.1.3",
    "sentence": "Export and run tensorflow models on arduino microcontrollers!"
  },
  {
    "name": "MicroGamer",
    "version": "0.1.0",
    "sentence": "A library for content creation on the Micro:Gamer gaming platform"
  },
  {
    "name": "MicroMidiDevices",
    "version": "0.1.0",
    "sentence": "Arduino (very) Simple Library to manage various input devices as MIDI controllers"
  },
  {
    "name": "MicroMidiEnc",
    "version": "0.1.3",
    "sentence": "Arduino (very) Simple Library to manage Rotary Encoders as MIDI messages over USB"
  },
  {
    "name": "MicroMidiPot",
    "version": "0.1.5",
    "sentence": "Arduino (very) Simple Library to manage potentiometer (smoothed) as MIDI messages over USB"
  },
  {
    "name": "MicroNMEA",
    "version": "2.0.6",
    "sentence": "Compact Arduino library to parse NMEA sentences."
  },
  {
    "name": "MicroOsc",
    "version": "0.1.7",
    "sentence": "Simple and lightweight Open Sound Control (OSC) library"
  },
  {
    "name": "MicroPOP32",
    "version": "1.1.2",
    "sentence": "Fast, efficient and minimal POP32 library for Line Follower robot"
  },
  {
    "name": "MicroQt",
    "version": "1.0.1",
    "sentence": "A library that enables event-driven applications on the Arduino platform."
  },
  {
    "name": "MicroShell",
    "version": "0.1.0",
    "sentence": "Shell implementation, compatible with VT100 terminal"
  },
  {
    "name": "MicroTFLite",
    "version": "1.0.4",
    "sentence": "Allows you to run machine learning models locally on your microcontroller devices."
  },
  {
    "name": "MicroTone",
    "version": "2.0.2",
    "sentence": "low-flash high-performance pulse train library with attiny13"
  },
  {
    "name": "MicroTuple",
    "version": "1.0.0",
    "sentence": "A library tuple like variadic datastructure for arduino."
  },
  {
    "name": "MicroUART",
    "version": "1.0.1",
    "sentence": "Simple implementation of UART (ATmega328)"
  },
  {
    "name": "MicroWakeupper Wemos D1 Mini Battery Shield",
    "version": "6.3.1",
    "sentence": "Library for the MicroWakeupper Wemos D1 Mini Battery Shield (with deepsleep)"
  },
  {
    "name": "MicrobitV2-HHS",
    "version": "0.1.6",
    "sentence": "Library for Microbit Version 2 with Radio (NRF52) and PWM support (Tone and Servo)."
  },
  {
    "name": "Microbot_Motor_Shield",
    "version": "1.0.0",
    "sentence": "Dual DC Motor Shield V2 library for Arduino"
  },
  {
    "name": "MicrochipSRAM",
    "version": "1.0.6",
    "sentence": "Access all Microchip SRAM chips"
  },
  {
    "name": "Microchip_RN487x",
    "version": "1.0.3",
    "sentence": "An Arduino library for the Microchip RN487x"
  },
  {
    "name": "Microchip_RNBD451",
    "version": "1.0.0",
    "sentence": "Arduino library for the Microchip RNBD451 Developement Board"
  },
  {
    "name": "Microcontroller-id",
    "version": "1.1.0",
    "sentence": "Retrieve manufacturer serial number stored inside the microcontroller"
  },
  {
    "name": "Microfire Mod-NTC",
    "version": "2.0.0",
    "sentence": "Add the ability to measure any 10k NTC temperature to your hardware application with a fully digital interface."
  },
  {
    "name": "Microfire_HABridge",
    "version": "1.0.0",
    "sentence": "Create a Home Assistant sensor from any hardware and send measurements with ESPNow or LoRa."
  },
  {
    "name": "Microfire_Mod-EC",
    "version": "2.0.1",
    "sentence": "Add the ability to measure EC to your hardware application with a fully digital interface."
  },
  {
    "name": "Microfire_Mod-ORP",
    "version": "2.0.0",
    "sentence": "Add the ability to measure ORP to your hardware application with a fully digital interface."
  },
  {
    "name": "Microfire_Mod-pH",
    "version": "2.0.1",
    "sentence": "Add the ability to measure pH to your hardware application with a fully digital interface."
  },
  {
    "name": "Microfire_SHT3x",
    "version": "1.0.0",
    "sentence": "Measure air temperature, humdity, VPD, and dew point. It also calculates heat index and wet bulb estimates."
  },
  {
    "name": "MicromationDevboardV3",
    "version": "1.0.7",
    "sentence": "Library for Micromation Dev Board V3 with ESP32"
  },
  {
    "name": "Microsoft_HidForWindows",
    "version": "1.3.0",
    "sentence": "Reference implementations of various Windows-compatible Human-Interface-Devices (HIDs)."
  },
  {
    "name": "MicrostepToLinear",
    "version": "1.0.0",
    "sentence": "Convert stepper motor microsteps to linear distance."
  },
  {
    "name": "Midea AC infrared remote controller with ESP32 RMT Peripheral",
    "version": "1.0.0",
    "sentence": "ESP32 RMT Peripheral IR remote control library for Midea Air conditioner."
  },
  {
    "name": "MideaIRWrapper",
    "version": "1.0.0",
    "sentence": "A library that makes, easier work with Midea Air Conditioners."
  },
  {
    "name": "MidiDmxBridge",
    "version": "1.0.0",
    "sentence": "Enables Arduino boards to convert MIDI continuous controller commands into DMX signals."
  },
  {
    "name": "Midier",
    "version": "1.0.1",
    "sentence": "A library for playing, recording, looping and programming MIDI notes, arpeggios and sequences."
  },
  {
    "name": "MightyOhmGeigerCounter",
    "version": "1.0.0",
    "sentence": "Arduino library for the Mighty Ohm Geiger Counter."
  },
  {
    "name": "MillaMilla DS7505 Library",
    "version": "1.0.0",
    "sentence": "Arduino library for the DS7505 temperature sensor."
  },
  {
    "name": "MilliStopper",
    "version": "1.0.0",
    "sentence": "Easy to use and lightweight stopper"
  },
  {
    "name": "MillisCounter",
    "version": "1.1.0",
    "sentence": "Arduino library to count up and down time using the millis() function."
  },
  {
    "name": "MillisTimer",
    "version": "1.0.0",
    "sentence": "A timer library for working with millis().<br />"
  },
  {
    "name": "MillisTimerLib",
    "version": "1.3.0",
    "sentence": "Library to use the Millis function as a task scheduler."
  },
  {
    "name": "Mini Grafx",
    "version": "1.2.6",
    "sentence": "Graphics Library for embedded devices with a framebuffer"
  },
  {
    "name": "Mini QOI",
    "version": "1.0.1",
    "sentence": "A streaming QOI decoder, designed for embedded systems with very little RAM."
  },
  {
    "name": "MiniMP3",
    "version": "0.1.3",
    "sentence": "Minimal MP3 DFURobotics library for Arduino."
  },
  {
    "name": "MiniPLC_FX2N",
    "version": "1.0.1",
    "sentence": "This library providing a function at specific ESP32 module.This library support all version of MiniPLC-32u"
  },
  {
    "name": "MinimalLinkedList",
    "version": "1.0.0",
    "sentence": "Minimal Linked List implementation for Arduino."
  },
  {
    "name": "Ministache",
    "version": "1.0.1",
    "sentence": "Mustache template engine for Arduino and ESP32 - render HTML templates dynamically"
  },
  {
    "name": "Mintrix",
    "version": "1.0.2",
    "sentence": "Library for the Mintrix project."
  },
  {
    "name": "Mirobot",
    "version": "3.1.1",
    "sentence": "This is the library that makes Mirobot (http://mirobot.io) work."
  },
  {
    "name": "MissionList",
    "version": "0.1.0",
    "sentence": "An arduino queue library for storing commands to be executed"
  },
  {
    "name": "MjGrove",
    "version": "1.4.0",
    "sentence": "MjGrove"
  },
  {
    "name": "MkrGsm1400IoT",
    "version": "1.1.0",
    "sentence": "A set of useful functions for the Arduino MKR GSM 1400 to use it for IoT. As example: Store integer into Telephonebook and read them after a reset."
  },
  {
    "name": "MobaLedLib",
    "version": "3.3.2",
    "sentence": "<h3>Arduino library for driving up to 768 (49152 ESP32) LEDs, signals, sound modules or other actuators via one signal line on a model railway</h3>"
  },
  {
    "name": "MobaTools",
    "version": "2.6.2",
    "sentence": "Functions (steppers, servos, leds) for model railroaders( and for others too )"
  },
  {
    "name": "Mock",
    "version": "0.2.0",
    "sentence": "Replace Arduino methods with mocked versions and let you develop code without the hardware. Run parallel hardware and system development for greater efficiency."
  },
  {
    "name": "MockEEPROM",
    "version": "0.1.0",
    "sentence": "The Arduino library replaces EEPROM library methods with mock methods."
  },
  {
    "name": "ModBusSlave",
    "version": "1.0.2",
    "sentence": "ModBus Slave RTU over RS485"
  },
  {
    "name": "Modbus",
    "version": "1.0.1",
    "sentence": "Modbus RTU"
  },
  {
    "name": "Modbus-Arduino",
    "version": "1.3.0",
    "sentence": "A library that allows your Arduino to communicate via Modbus protocol, acting as a slave."
  },
  {
    "name": "Modbus-Esp8266AT",
    "version": "1.0.3",
    "sentence": "A library that allows your Arduino to communicate via Modbus protocol, acting as a slave."
  },
  {
    "name": "Modbus-EtherCard",
    "version": "1.0.3",
    "sentence": "A library that allows your Arduino to communicate via Modbus protocol, acting as a slave."
  },
  {
    "name": "Modbus-Ethernet",
    "version": "1.0.3",
    "sentence": "A library that allows your Arduino to communicate via Modbus protocol, acting as a slave."
  },
  {
    "name": "Modbus-Radio",
    "version": "1.0.3",
    "sentence": "A library that allows your Arduino to communicate via Modbus protocol, acting as a slave."
  },
  {
    "name": "Modbus-Serial",
    "version": "2.0.6",
    "sentence": "A library that allows your Arduino to communicate via Modbus protocol, acting as a slave."
  },
  {
    "name": "ModbusADU",
    "version": "1.0.2",
    "sentence": "This is a library for managing Modbus RTU and TCP appication data units (ADUs)."
  },
  {
    "name": "ModbusConfig",
    "version": "1.2.0",
    "sentence": "ModbusConfig library for ESP8266/ESP32/Arduino. The library process a modbus configuration file in JSON format."
  },
  {
    "name": "ModbusMaster",
    "version": "2.0.1",
    "sentence": "Enlighten your Arduino to be a Modbus master."
  },
  {
    "name": "ModbusPowerMeter",
    "version": "1.0.0",
    "sentence": "ModbusPowerMeter is a user-friendly library that uses the ModbusMaster library to read data from power meters."
  },
  {
    "name": "ModbusRTUComm",
    "version": "1.3.1",
    "sentence": "This library provides some core functions for implementing Modbus RTU communication."
  },
  {
    "name": "ModbusRTUMaster",
    "version": "2.0.1",
    "sentence": "This is an Arduino library that implements the master/client logic of the Modbus RTU protocol."
  },
  {
    "name": "ModbusRTUSlave",
    "version": "3.1.1",
    "sentence": "This is an Arduino library that implements the slave/server logic of the Modbus RTU protocol."
  },
  {
    "name": "ModbusRTU_Slave",
    "version": "1.0.1",
    "sentence": "A library package commonly used by the other libraries being published by Geabong"
  },
  {
    "name": "ModbusRTU_Slave_RS485",
    "version": "1.0.2",
    "sentence": "A library package for ARDUINO acting as ModBus slave communicating through UART-to-RS485 converter. Originally written by Geabong github user. Improved by Łukasz Ślusarczyk."
  },
  {
    "name": "ModbusSlaveLogic",
    "version": "1.0.1",
    "sentence": "This is an Arduino library for processing Modbus requests."
  },
  {
    "name": "ModbusTCPComm",
    "version": "0.0.1",
    "sentence": "This library provides some core functions for implementing Modbus TCP communication."
  },
  {
    "name": "ModbusTCPSlave",
    "version": "0.0.1",
    "sentence": "This is an Arduino library that implements the slave/server logic of the Modbus TCP protocol."
  },
  {
    "name": "Modelisme",
    "version": "1.0.0",
    "sentence": "Arduino for R/C models"
  },
  {
    "name": "ModernPIDControlSS",
    "version": "1.1.2",
    "sentence": "Modern PID Control Architecture and CPLMFC Tuning"
  },
  {
    "name": "Modmata",
    "version": "0.1.0",
    "sentence": "Control an Arduino over Modbus"
  },
  {
    "name": "Modular",
    "version": "1.0.1",
    "sentence": "Minimalist library for Modular"
  },
  {
    "name": "ModuleInterface",
    "version": "4.0.0",
    "sentence": "ModuleInterface is an open-source system for configuration of and data logging from Arduinos and similar devices."
  },
  {
    "name": "ModuleMore Sumo V2",
    "version": "1.4.0",
    "sentence": "Library for ModuleMore Sumo robot controller."
  },
  {
    "name": "Module_GRBL_13.2",
    "version": "0.0.3",
    "sentence": "Library for M5Stack GRBL13.2 MODULE"
  },
  {
    "name": "Module_Stepmotor",
    "version": "0.0.2",
    "sentence": "Library for M5Stack MODULE DIRECT STEPMOTOR"
  },
  {
    "name": "Modulino",
    "version": "0.4.2",
    "sentence": "Arduino Library for Modulinos"
  },
  {
    "name": "Modulo",
    "version": "1.0.0",
    "sentence": "A library that provides support for Modulo hardware."
  },
  {
    "name": "MonteCarloPi",
    "version": "0.8.3",
    "sentence": "MonteCarloPi is a library to benchmark Arduinos by estimating the value of pi."
  },
  {
    "name": "MoonPhase",
    "version": "1.0.3",
    "sentence": "Get lunar phase information on a esp32."
  },
  {
    "name": "MoonRise",
    "version": "2.0.4",
    "sentence": "Calculate moon rise/set times."
  },
  {
    "name": "MoonStruck",
    "version": "1.0.0",
    "sentence": "Lunar Information Library for ESP32."
  },
  {
    "name": "MorePins",
    "version": "1.0.0",
    "sentence": "Makes use of shift registers to create more pins, as many as needed, using only 3 Arduino Pins"
  },
  {
    "name": "Morse",
    "version": "1.0.0",
    "sentence": "Morse code class for Arduino"
  },
  {
    "name": "MorseCodeMachine",
    "version": "1.11.1",
    "sentence": "Get started with Arduino by learning Morse code."
  },
  {
    "name": "MorseDuino",
    "version": "2.0.0-beta2",
    "sentence": "Arduino library for generation morse code and displaying it on LEDs"
  },
  {
    "name": "MorseEncoder",
    "version": "2.0.3",
    "sentence": "Enables Converting Data to Morse Code (Audio and Light)."
  },
  {
    "name": "Mosiwi_Basic_Learning_Kit",
    "version": "3.0.0",
    "sentence": "Library for Mosiwi basic learning kit."
  },
  {
    "name": "Moteus",
    "version": "1.0.2",
    "sentence": "Driver for mjbots moteus brushless servo controller"
  },
  {
    "name": "MotoMama Library",
    "version": "1.0.1",
    "sentence": "Simple library for H-Bridge MotoMama."
  },
  {
    "name": "Motor Driver Library",
    "version": "1.0.0",
    "sentence": "Motor Driver Library for Arduino Shields with L293D and 74HC595"
  },
  {
    "name": "Motor Shield V2.0",
    "version": "1.0.0",
    "sentence": "Arduino library to control Motor Shield V2.0."
  },
  {
    "name": "MotorCVD_asukiaaa",
    "version": "1.0.5",
    "sentence": "It communicate with a motor driver CVD."
  },
  {
    "name": "MotorCell",
    "version": "1.1.2",
    "sentence": "MotorCell Arduino Library"
  },
  {
    "name": "MotorController",
    "version": "1.2.1",
    "sentence": "Easy to use Arduino library to control virtually any DC motor controller"
  },
  {
    "name": "MotorDMKB4_asukiaaa",
    "version": "1.0.0",
    "sentence": "It controls DMKB4 or DMKB5"
  },
  {
    "name": "MotorGo_Mini_Driver",
    "version": "1.1.0",
    "sentence": "The MotorGo Mini driver provides an API to interface with the motor controllers on the MotorGo Mini board."
  },
  {
    "name": "MotorVID28",
    "version": "1.1.0",
    "sentence": "A library for controlling VID28 or equivalent stepper motors (BKA30D-R5, X25)."
  },
  {
    "name": "Motor_PID",
    "version": "2.1.3",
    "sentence": "HG7881 module double H bridge  L9110S  and L298N drivers library (PID)"
  },
  {
    "name": "Motor_RS",
    "version": "1.0.0",
    "sentence": "Library for L293D."
  },
  {
    "name": "Motoron",
    "version": "1.4.0",
    "sentence": "Motoron Motor Controller library for Arduino"
  },
  {
    "name": "Mouse",
    "version": "1.0.1",
    "sentence": "Allows an Arduino/Genuino board with USB capabilites to act as a Mouse."
  },
  {
    "name": "Move Buffer",
    "version": "1.1.0",
    "sentence": "Move Buffer Library for move list storage"
  },
  {
    "name": "Moving-Average",
    "version": "1.1.2",
    "sentence": "Moving Average Library for Arduino"
  },
  {
    "name": "MovingAverage",
    "version": "1.2.1",
    "sentence": "Arduino Library for averaging fixed-point numbers"
  },
  {
    "name": "MovingAverageAngle",
    "version": "1.1.0",
    "sentence": "Arduino & Mbed Library for averaging angles 0-360°"
  },
  {
    "name": "MovingAverageFloat",
    "version": "1.0.1",
    "sentence": "Arduino Library for averaging float numbers"
  },
  {
    "name": "MovingAveragePlus",
    "version": "4.4.1",
    "sentence": "Moving Average library compatible with any number type"
  },
  {
    "name": "MovingAverager",
    "version": "0.0.2",
    "sentence": "A basic moving average filter."
  },
  {
    "name": "MovingPlatform",
    "version": "0.4.0",
    "sentence": "Library for collector motors drivers."
  },
  {
    "name": "Mozzi",
    "version": "2.0.1",
    "sentence": "Sound synthesis library for Arduino"
  },
  {
    "name": "MpesaSTK",
    "version": "1.0.1",
    "sentence": "Mpesa Daraja for microcontrollers."
  },
  {
    "name": "MqttLogger",
    "version": "0.2.3",
    "sentence": "Remote logging on a mqtt broker with the same interface as Serial.print()"
  },
  {
    "name": "MrMx - AW9523B",
    "version": "0.9.0",
    "sentence": "AW9523B LED Driver & GPIO I2C 16bit expander library"
  },
  {
    "name": "MrMx - Arduino SI4012",
    "version": "1.0.0",
    "sentence": "Arduino SI4012 library."
  },
  {
    "name": "MsTimer2",
    "version": "1.1.0",
    "sentence": "Run an interrupt function using Timer2"
  },
  {
    "name": "MsgPack",
    "version": "0.4.2",
    "sentence": "MessagePack implementation for Arduino (compatible with other C++ apps)"
  },
  {
    "name": "MsgPackRosInterfaces",
    "version": "0.1.0",
    "sentence": "ROS2 common_interfaces bridge based on MsgPack"
  },
  {
    "name": "MsgPacketizer",
    "version": "0.5.3",
    "sentence": "msgpack based serializer and deserializer with packetize for Arduino and more"
  },
  {
    "name": "MteCore",
    "version": "1.0.0",
    "sentence": "MteCore - Library For MTE Controller"
  },
  {
    "name": "Multi Channel Relay Arduino Library",
    "version": "1.1.0",
    "sentence": "Arduino library to control Multi Channel Rely."
  },
  {
    "name": "MultiButton",
    "version": "1.3.0",
    "sentence": "Reliable detection of single, double and long clicks."
  },
  {
    "name": "MultiButtons",
    "version": "1.0.1",
    "sentence": "Library for handling multiple buttons with single analog pin for ESP32."
  },
  {
    "name": "MultiFuncShield",
    "version": "1.0.3",
    "sentence": "Arduino Multi Function Shield Library"
  },
  {
    "name": "MultiFunctionShield",
    "version": "1.5.3",
    "sentence": "LED Display driver for Multi Function Shield"
  },
  {
    "name": "MultiLcd",
    "version": "1.0.0-alpha",
    "sentence": "Drive multiple LCDs like a single LiquidCrystal object."
  },
  {
    "name": "MultiMAX6675",
    "version": "0.1.2",
    "sentence": "Read multiple MAX6675 sensor non-blocking(ly)"
  },
  {
    "name": "MultiMap",
    "version": "0.2.0",
    "sentence": "Library for fast non-linear interpolation by means of two arrays."
  },
  {
    "name": "MultiResetDetector_Generic",
    "version": "1.8.1",
    "sentence": "Library to detect a multi reset, using EEPROM, DueFlashStorage, FlashStorage_SAMD, FlashStorage_RTL8720, FlashStorage_STM32 or LittleFS/InternalFS. For AVR, Teensy, SAM DUE, SAMD, STM32F/L/H/G/WB/MP1, nRF52, RP2040-based Nano_RP2040_Connect, RASPBERRY_PI_PICO, RTL8720DN, MBED nRF52840-based Nano_33_BLE, Portenta_H7, etc. boards. Now using efficient FlashStorage_STM32 library and supporting new RP2040-based Nano_RP2040_Connect, RASPBERRY_PI_PICO and STM32 core v2.0.0"
  },
  {
    "name": "MultiTaskLib",
    "version": "1.0.1",
    "sentence": "Storyboard are a series of non blockings tasks that runs in parallel"
  },
  {
    "name": "MultiTrans",
    "version": "1.4.0",
    "sentence": "This library is an implementation of a multi channel transceiver (optionally via IR)"
  },
  {
    "name": "MultiWire",
    "version": "1.0.0",
    "sentence": "Provides an extension to Wire to allow for multiple slave addresses."
  },
  {
    "name": "Multi_BitBang",
    "version": "1.0.0",
    "sentence": "Bit-bang the I2C protocol on multiple GPIO pins on any system."
  },
  {
    "name": "Multi_OLED",
    "version": "1.0.0",
    "sentence": "Control multiple I2C OLED displays."
  },
  {
    "name": "Multiplex",
    "version": "0.2.7",
    "sentence": "Arduino Library implementing a stream multiplexer"
  },
  {
    "name": "MultitapKeypad",
    "version": "1.1.0",
    "sentence": "A library (driver) for matrix 4x3 or 4x4 keypad supports multi-tap and long-tap."
  },
  {
    "name": "Multitasker",
    "version": "1.0.0",
    "sentence": "A library for managing task switching and multitasking in Arduino projects."
  },
  {
    "name": "MultivariateNormal",
    "version": "0.1.1",
    "sentence": "Arduino library for sampling from a multivariate normal distribution"
  },
  {
    "name": "Muse_library",
    "version": "1.0.5",
    "sentence": "A library for the ESP MUSE devices (LUXE, PROTO, MANGA, RADIO) by Raspiaudio"
  },
  {
    "name": "Music Shield",
    "version": "1.0.0",
    "sentence": "Arduino library to control Music Shield V2.0."
  },
  {
    "name": "MusicBuzzer",
    "version": "1.0.0",
    "sentence": "A Collection of musics for buzzer"
  },
  {
    "name": "MusicWithoutDelay",
    "version": "3.5.2",
    "sentence": "A library to play multiple musical notes at the same time without Delay."
  },
  {
    "name": "Musician",
    "version": "1.2.1",
    "sentence": "This library implements a virtual musician. You can easily ask him to play a melody, based on the MELO music notation from the Melody Library."
  },
  {
    "name": "MusiciansMate",
    "version": "1.0.2",
    "sentence": "An Arduino library that helps you develop your musical IoT devices."
  },
  {
    "name": "Mutila",
    "version": "1.2.0",
    "sentence": "Mouse's Utilities for Arduino"
  },
  {
    "name": "Muwerk scheduler library",
    "version": "0.6.5",
    "sentence": "cooperative scheduler and mqtt-like communication queues"
  },
  {
    "name": "Muwerk ustd library",
    "version": "0.7.4",
    "sentence": "A minimal and highly portable micro-standard-library for arrays, queues and maps"
  },
  {
    "name": "Mux7SegsDisplay",
    "version": "1.0.0",
    "sentence": "Library for printing numbers in multiple-digit 7-segments displays."
  },
  {
    "name": "MvcWebServerLib",
    "version": "3.0.0",
    "sentence": "A Model-View-Controller web server and framework."
  },
  {
    "name": "MyAlarm",
    "version": "1.1.2",
    "sentence": "A library that manage alarms and timers based tasks."
  },
  {
    "name": "MyBlinker",
    "version": "0.1.0-alpha",
    "sentence": "A LED blinker library for Arduino platform."
  },
  {
    "name": "MyButton",
    "version": "2.0.3",
    "sentence": "Making buttons easy and fun to work with (normal, and counting buttons)"
  },
  {
    "name": "MyDelay",
    "version": "1.0.2",
    "sentence": "Arduino library that provides a non-blocking repeating timer with callback functionality."
  },
  {
    "name": "MyKeywords",
    "version": "1.0.0",
    "sentence": "Define your own custom color-highlighted keywords for the Arduino IDE!"
  },
  {
    "name": "MyLD2410",
    "version": "1.0.12",
    "sentence": "An Arduino library for the LD2410 presence sensor"
  },
  {
    "name": "MyMacros",
    "version": "0.6.0",
    "sentence": "The Arduino library identifies your unique collection of development boards."
  },
  {
    "name": "MyOwnBricks",
    "version": "1.2.1",
    "sentence": "A library for the emulation of LEGO PoweredUp sensors on microcontrollers"
  },
  {
    "name": "MySQL Connector Arduino",
    "version": "1.2.0",
    "sentence": "Connects Arduino using Arduino Ethernet-compatible shields including the Ethernet Shield and WiFi Shield."
  },
  {
    "name": "MySQL Query Client",
    "version": "1.0.2",
    "sentence": "Connects your project to MySQL DB server using Ethernet, WiFi or GSM client."
  },
  {
    "name": "MySQL_MariaDB_Generic",
    "version": "1.7.2",
    "sentence": "Connects to MySQL or MariaDB using ESP8266/ESP32, WT32_ETH01 (ESP32 + LAN8720A), nRF52, SAMD21/SAMD51, STM32F/L/H/G/WB/MP1, Teensy, SAM DUE, Mega, RP2040-based boards, Portenta_H7, etc. with W5x00, ENC28J60 Ethernet, Teensy 4.1 NativeEthernet/QNEthernet, WiFiNINA modules/shields or Portenta_H7 WiFi/Ethernet. W5x00 can use Ethernet_Generic library. ENC28J60 can use either EthernetENC or UIPEthernet Library."
  },
  {
    "name": "MySensors",
    "version": "2.3.2",
    "sentence": "Home Automation Framework"
  },
  {
    "name": "MyTimer",
    "version": "1.2.0",
    "sentence": "Functions for non-blocking millis() timer."
  },
  {
    "name": "Mybotic Durian Blynk ESP8266",
    "version": "1.1.0",
    "sentence": "Library for using Durian UNO + ESP8266"
  },
  {
    "name": "MycilaConfig",
    "version": "7.0.3",
    "sentence": "A simple and efficient config library"
  },
  {
    "name": "MycilaDS18",
    "version": "4.1.4",
    "sentence": "ESP32 / Arduino Library for Dallas / Maxim DS18 sensor using RMT peripheral"
  },
  {
    "name": "MycilaESPConnect",
    "version": "7.1.1",
    "sentence": "Simple & Easy Network Manager for ESP32 with WiFi, Ethernet and Captive Portal support"
  },
  {
    "name": "MycilaEasyDisplay",
    "version": "3.1.0",
    "sentence": "Easy to use Arduino / ESP32 library for SH1106, SH1107, SSD1306 OLED I2C displays, virtual displays and carousels"
  },
  {
    "name": "MycilaHADiscovery",
    "version": "6.0.1",
    "sentence": "Simple and efficient Home Assistant Discovery library for Arduino / ESP32"
  },
  {
    "name": "MycilaJSY",
    "version": "14.0.2",
    "sentence": "Arduino / ESP32 library for the JSY1031, JSY-MK-163, JSY-MK-193, JSY-MK-194, JSY-MK-227, JSY-MK-229, JSY-MK-333 families single-phase and three-phase AC bidirectional meters from Shenzhen Jiansiyan Technologies Co, Ltd."
  },
  {
    "name": "MycilaLogger",
    "version": "3.2.1",
    "sentence": "A simple and efficient logging library"
  },
  {
    "name": "MycilaMQTT",
    "version": "6.0.5",
    "sentence": "A simple and efficient MQTT/MQTTS client for Arduino / ESP32 based on Espressif API"
  },
  {
    "name": "MycilaNTP",
    "version": "6.0.5",
    "sentence": "A simple and efficient NTP library for ESP32 / Arduino"
  },
  {
    "name": "MycilaPZEM004Tv3",
    "version": "6.0.0",
    "sentence": "Arduino / ESP32 library for the PZEM-004T v3 Power and Energy monitor"
  },
  {
    "name": "MycilaPulseAnalyzer",
    "version": "3.0.0",
    "sentence": "ESP32 / Arduino Library to analyze pulses from a Zero-Cross Detection circuit"
  },
  {
    "name": "MycilaRelay",
    "version": "4.0.1",
    "sentence": "Arduino / ESP32 library to control Electromagnetic and Solid State Relays"
  },
  {
    "name": "MycilaSystem",
    "version": "4.0.1",
    "sentence": "Arduino / ESP32 library for system-related tasks"
  },
  {
    "name": "MycilaTaskManager",
    "version": "4.0.0",
    "sentence": "Arduino / ESP32 Task Manager Library"
  },
  {
    "name": "MycilaTaskMonitor",
    "version": "4.0.0",
    "sentence": "Arduino / ESP32 library to monitor task priority and stack high watermark"
  },
  {
    "name": "MycilaTrial",
    "version": "1.1.0",
    "sentence": "Arduino / ESP32 library to add a trial duration in your app"
  },
  {
    "name": "MycilaUtilities",
    "version": "3.2.0",
    "sentence": "Utils stuff for Arduino / ESP32 like PID, Time, CircularBuffer, etc"
  },
  {
    "name": "MycilaWebSerial",
    "version": "8.1.1",
    "sentence": "A Web based Serial Monitor for ESP8266 & ESP32 to debug your code remotely."
  },
  {
    "name": "MyoWare Arduino Library",
    "version": "1.0.0",
    "sentence": "Arduino library for the MyoWare 2.0 Muscle Sensor and Ecosystem."
  },
  {
    "name": "N64Controller",
    "version": "0.1.1",
    "sentence": "Arduino library to connect a Nintendo 64 controller (N64 controller)."
  },
  {
    "name": "N64Pad",
    "version": "0.2.0",
    "sentence": "Interface with Nintendo 64/GameCube controllers"
  },
  {
    "name": "NB_Generic",
    "version": "1.3.1",
    "sentence": "Enables NB-IoT/LTE-M/CAT M1 network connection using the Generic NB-IoT modules (u-blox SARA R4, etc.) and boards"
  },
  {
    "name": "NBitArray",
    "version": "1.0.0",
    "sentence": "Array of bits to save memory instead of using 8-bit boolean values."
  },
  {
    "name": "NColor",
    "version": "2.0.0",
    "sentence": "NColor Library."
  },
  {
    "name": "NDEF_MFRC522",
    "version": "2.0.1",
    "sentence": "An Arduino library for NFC Data Exchange Format (NDEF)."
  },
  {
    "name": "NDNOverUDP",
    "version": "1.0.0",
    "sentence": "A simpler and lighter NDN protocol for local IoT contexts."
  },
  {
    "name": "NDefs",
    "version": "2.0.0",
    "sentence": "NDefs library, dependency."
  },
  {
    "name": "NE555",
    "version": "0.9.0",
    "sentence": "Simulation of the function from a NE555 timer chip. ;)"
  },
  {
    "name": "NESControllerInterface",
    "version": "1.0.3",
    "sentence": "An interface for the NES controller"
  },
  {
    "name": "NETSGPClient",
    "version": "2.0.1",
    "sentence": "Interface for MicroInverters speaking the so-called NETSGP protocol."
  },
  {
    "name": "NEvents",
    "version": "2.0.0",
    "sentence": "NEvents library for adding event handling."
  },
  {
    "name": "NFC Tag M24LR6E",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - NFC Tag"
  },
  {
    "name": "NFuncs",
    "version": "2.0.0",
    "sentence": "NFuncs library, dependency of other libs, useful functions."
  },
  {
    "name": "NGLedFlasher Library",
    "version": "1.0.0",
    "sentence": "Arduino library for Flashing more then one LED"
  },
  {
    "name": "NH8CHIR-lib",
    "version": "1.1.2",
    "sentence": "This library is a library that use for control a NH8CHIR"
  },
  {
    "name": "NHB_AD7124",
    "version": "1.1.0",
    "sentence": "Library for the Analog Devices AD7124-4 24 bit precision analog converter IC"
  },
  {
    "name": "NHB_AD7794",
    "version": "1.2.1",
    "sentence": "Library for using the Analog Devices AD7794 6ch 24 bit precision analog converter IC"
  },
  {
    "name": "NHBot",
    "version": "0.1.2",
    "sentence": "A Library for control NHBot"
  },
  {
    "name": "NHCSR04",
    "version": "2.0.0",
    "sentence": "NHCSR04 for the HC-SR04 Ultrasonic sensor."
  },
  {
    "name": "NHD_Character_LCD",
    "version": "1.0.0",
    "sentence": "A library to allow easy interfacing with Newhaven character LCDs."
  },
  {
    "name": "NINA-Wi-Fi",
    "version": "1.0.1",
    "sentence": "Enables network connection (local and Internet) with the Arduino MKR WiFi 1010, Arduino MKR VIDOR 4000, Arduino Uno WiFi Rev.2 and Nano 33 IoT."
  },
  {
    "name": "NL2Client",
    "version": "1.0.0",
    "sentence": "An easy-to-use client for the NoLimits 2 Telemetry Server"
  },
  {
    "name": "NMEAParser",
    "version": "1.1.0",
    "sentence": "A simple Arduino library to parse NMEA sentences."
  },
  {
    "name": "NMEA_Parser",
    "version": "0.0.2",
    "sentence": "Arduino library to parse NMEA sentences"
  },
  {
    "name": "NMH1000_Arduino",
    "version": "1.0.1",
    "sentence": "An library for NXP NMH1000"
  },
  {
    "name": "NOKIA5110_TEXT",
    "version": "2.4.0",
    "sentence": "NOKIA5110_TEXT is a light-weight library to display ASCII text on Nokia 5110 LCD PCD8544 controller."
  },
  {
    "name": "NPush",
    "version": "3.0.1",
    "sentence": "NPush library for Push buttons."
  },
  {
    "name": "NRF51_Radio_library",
    "version": "0.2.1",
    "sentence": "Microbit Radio library for NRF51, based on runtine inplementation from Landcaster University"
  },
  {
    "name": "NRF52_ISR_Servo",
    "version": "1.2.1",
    "sentence": "This library enables you to use Interrupt from Hardware PWM modules on nRF52832/nRF52840 board to control multiple servo motors."
  },
  {
    "name": "NRF52_MBED_TimerInterrupt",
    "version": "1.4.1",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an NRF52-based board using mbed-RTOS such as Nano-33-BLE."
  },
  {
    "name": "NRF52_TimerInterrupt",
    "version": "1.4.2",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an nRF52-based board"
  },
  {
    "name": "NRFLite",
    "version": "3.0.5",
    "sentence": "nRF24L01+ library requiring very little code along with YouTube videos showing all available features."
  },
  {
    "name": "NRF_HAL",
    "version": "1.0.3",
    "sentence": "nRFgo SDK nRF24L01 transceiver HAL API port for Arduino."
  },
  {
    "name": "NRotary",
    "version": "2.0.0",
    "sentence": "NRotary library for using rotary encoders and gradationals."
  },
  {
    "name": "NST1001",
    "version": "1.2.0",
    "sentence": "NST1001 temperature sensor driver."
  },
  {
    "name": "NST1001Driver",
    "version": "1.0.2",
    "sentence": "NST1001Driver for ESP32"
  },
  {
    "name": "NStreamCom",
    "version": "2.0.0",
    "sentence": "Data communications library that encode/decodes, and buffers data"
  },
  {
    "name": "NTC_Thermistor",
    "version": "2.1.0",
    "sentence": "The Library implements a set of methods for working with a NTC thermistor."
  },
  {
    "name": "NTP",
    "version": "1.7.0",
    "sentence": "NTP library"
  },
  {
    "name": "NTPClient",
    "version": "3.2.1",
    "sentence": "An NTPClient to connect to a time server"
  },
  {
    "name": "NTPClient_Generic",
    "version": "3.7.5",
    "sentence": "Library for NTPClient to connect to an NTP time-server"
  },
  {
    "name": "NTPtime",
    "version": "1.2.1",
    "sentence": "NTPtime, UNIXtime and TimeFunc give you full control and more manipulation with time."
  },
  {
    "name": "NTimer",
    "version": "2.0.2",
    "sentence": "Timing for events, asynchronus delays"
  },
  {
    "name": "NVSRAM",
    "version": "1.0.0",
    "sentence": "Arduino library for Microchip 23LCV512 and 23LCV1024 NVSRAM."
  },
  {
    "name": "NX2003 library",
    "version": "1.0.4",
    "sentence": "A library for NX2003 board."
  },
  {
    "name": "NXP PCA9633",
    "version": "1.1.1",
    "sentence": "Device driver for NXP PCA9633."
  },
  {
    "name": "NXPMotionSense",
    "version": "1.0.0",
    "sentence": "Motion sensing with NXP FXOS8700 Accelerometer & Magnetometer and NXP FXAS21002 Gyroscope."
  },
  {
    "name": "NXTBluetooth",
    "version": "1.0.2",
    "sentence": "A library that makes communicating with the LEGO Mindstorms NXT via bluetooth easy."
  },
  {
    "name": "Namino_Industrial_Boards",
    "version": "1.0.18",
    "sentence": "Namino industrial board"
  },
  {
    "name": "NanitLib",
    "version": "1.4.3",
    "sentence": "A library for Nanit"
  },
  {
    "name": "Nano33BLESensor",
    "version": "1.1.0",
    "sentence": "An Arduino library for the Nano 33 BLE Sense that leverages Mbed OS to automatically place sensor measurements in a ring buffer that can be integrated into programs in a simple manner."
  },
  {
    "name": "NanoBLEFlashPrefs",
    "version": "1.2.0",
    "sentence": "Substitute for the missing EEPROM storage on Arduino Nano 33 BLE and BLE Sense."
  },
  {
    "name": "NanoConnectHcSr04",
    "version": "1.0.1",
    "sentence": "HC-SR04 support for the Arduino Nano RP2040 Connect."
  },
  {
    "name": "NanoPlayBoard",
    "version": "0.1.1",
    "sentence": "Enables easy access to the sensors and actuators of the Arduino NanoPlayBoard."
  },
  {
    "name": "NanoProtoShield",
    "version": "0.9.6",
    "sentence": "Arduino library to interact with the NanoProtoShield hardware."
  },
  {
    "name": "Nano_Every_WS2812B",
    "version": "1.0.5",
    "sentence": "ATmega4809 core-independent driver for WS2812B addressable RGB LEDs."
  },
  {
    "name": "Navigador",
    "version": "1.0.0",
    "sentence": "Arduino library for dual DC motor navigation."
  },
  {
    "name": "Naviguider_Compass_I2C",
    "version": "1.0.1",
    "sentence": "Arduino library for Naviguider I2C Compass."
  },
  {
    "name": "NbMicro",
    "version": "1.2.0",
    "sentence": "Control devices that implement the NB command set over TWI (I2C)."
  },
  {
    "name": "NceCabBus",
    "version": "0.3.0",
    "sentence": "Enables NCE Cab Bus Communication"
  },
  {
    "name": "NecDecoder",
    "version": "2.1.0",
    "sentence": "Light library for IR receiver with NEC protocol"
  },
  {
    "name": "Neo7Segment",
    "version": "1.1.3",
    "sentence": "A library to display numbers and letters on Neo7Segment displays."
  },
  {
    "name": "NeoBufferedPrint",
    "version": "1.0.0",
    "sentence": "Intermediate printing class for reducing the number of writes."
  },
  {
    "name": "NeoGPS",
    "version": "4.2.9",
    "sentence": "NMEA and ublox GPS parser, configurable to use as few as 10 bytes of RAM"
  },
  {
    "name": "NeoHWSerial",
    "version": "1.6.8",
    "sentence": "NeoHWSerial for AVR"
  },
  {
    "name": "NeoNextion",
    "version": "2.2.0",
    "sentence": "Arduino library for controlling Nextion displays"
  },
  {
    "name": "NeoPatterns",
    "version": "3.2.0",
    "sentence": "Patterns for NeoPixel strips and matrixes including the patterns of the NeoPattern example by Adafruit."
  },
  {
    "name": "NeoPixel Painter",
    "version": "1.0.0",
    "sentence": "Arduino library for easy creation of LED strip animations, based on the NeoPixel library."
  },
  {
    "name": "NeoPixelBus by Makuna",
    "version": "2.8.3",
    "sentence": "A library that makes controlling NeoPixels (WS2812x and many others) and DotStars (SK6812 and many others) easy."
  },
  {
    "name": "NeoPixelConnect",
    "version": "1.2.1",
    "sentence": "An experimental NeoPixel Library for the Arduino Nano RP2040 Connect."
  },
  {
    "name": "NeoSWSerial",
    "version": "3.0.5",
    "sentence": "An efficient replacement for SoftwareSerial at baud rates 9600, 19200 and 38400."
  },
  {
    "name": "Neosegment",
    "version": "1.0.0",
    "sentence": "Simple control of Neosegment Displays"
  },
  {
    "name": "Neotimer",
    "version": "1.1.6",
    "sentence": "\"A powerful non-blocking timer\""
  },
  {
    "name": "NesRob",
    "version": "1.1.2",
    "sentence": "Manipulates the Nintendo R.O.B. (Robotic Operating Buddy)."
  },
  {
    "name": "NetApiHelpers",
    "version": "1.0.2",
    "sentence": "Arduino Networking API helper classes and tests"
  },
  {
    "name": "NetEEPROM",
    "version": "1.1.0",
    "sentence": "A library that stores and retrieves network configuration from EEPROM."
  },
  {
    "name": "NetWizard",
    "version": "1.1.3",
    "sentence": "An easy-to-use yet powerful WiFi manager and captive portal library for wireless microcontrollers."
  },
  {
    "name": "NetworkMonitor",
    "version": "1.0.2",
    "sentence": "A library to provide remote console functions to a MCU through UDP"
  },
  {
    "name": "NeumannCorrector",
    "version": "0.1.1",
    "sentence": "Arduino library for a NeumannCorrector. (randomizing streams of bits)."
  },
  {
    "name": "NeuralNetwork",
    "version": "3.0.0",
    "sentence": "Simple MLP Neural-Network Library."
  },
  {
    "name": "NeuroMaster",
    "version": "0.0.6",
    "sentence": "A library that allows Arduino Uno to interface with NeuroMaster BrainAI Device."
  },
  {
    "name": "Neurona",
    "version": "1.0.0",
    "sentence": "Artificial Neural Network architectures for Arduino"
  },
  {
    "name": "NewEncoder",
    "version": "1.0.4",
    "sentence": "A library that makes coding an rotary encoder a breeze with useful functions"
  },
  {
    "name": "NewPing",
    "version": "1.9.7",
    "sentence": "NewPing allows interfacing with ultrasonic sensors simple, fast & powerful."
  },
  {
    "name": "NewServo",
    "version": "0.1.0",
    "sentence": "An easy-to-use servo motor library for Arduino."
  },
  {
    "name": "Newhaven_CharacterOLED_SPI",
    "version": "1.0.0",
    "sentence": "SPI implementation of Newhaven display DZW series OLED displays."
  },
  {
    "name": "Newt_Display",
    "version": "1.1.5",
    "sentence": "A library to drive the Newt Smart Display."
  },
  {
    "name": "Nexgen_Rover",
    "version": "1.5.9",
    "sentence": "The Nexgen_Rover code library contains code to control the Nexgen Rover including a number of examples"
  },
  {
    "name": "Nextion",
    "version": "2.0.2",
    "sentence": "Class interface for Nextion"
  },
  {
    "name": "Nextion Serial String",
    "version": "1.0.0",
    "sentence": "ESP32/Arduino library for Nextion displays"
  },
  {
    "name": "NextionX2",
    "version": "1.1.2",
    "sentence": "A universal alternative and more flexible Nextion library"
  },
  {
    "name": "NibbleArray",
    "version": "0.2.6",
    "sentence": "Library to implement a compact array of nibbles (4 bit)."
  },
  {
    "name": "NimBLE-Arduino",
    "version": "2.2.1",
    "sentence": "Bluetooth low energy (BLE) library for Arduino based on NimBLE."
  },
  {
    "name": "Nintendo",
    "version": "1.4.0",
    "sentence": "Connect all your favourite Nintendo Controllers to your Arduino."
  },
  {
    "name": "Nintendo Extension Ctrl",
    "version": "0.8.3",
    "sentence": "Library for talking to Nintendo extension controllers over I2C."
  },
  {
    "name": "NintendoControllersSTM32",
    "version": "0.0.2",
    "sentence": "Support Nunchuck, GameCube controller and Game Port joysticks on STM32F1"
  },
  {
    "name": "NintendoSwitchControlLibrary",
    "version": "1.3.1",
    "sentence": "A library for microcontrollers that uses Arduino to automate Nintendo Switch games."
  },
  {
    "name": "NmraDcc",
    "version": "2.0.17",
    "sentence": "Enables NMRA DCC Communication"
  },
  {
    "name": "NoBlockEEPROM",
    "version": "0.0.2",
    "sentence": "Non Blocking EEPROM Library for Arduino"
  },
  {
    "name": "NoDelay",
    "version": "2.2.0",
    "sentence": "Arduino library to make use of the Millis funtion for non Blocking Delays."
  },
  {
    "name": "NodeRedTime",
    "version": "1.0.0",
    "sentence": "Fetch Unix Epoch timestamp from Node-Red flow."
  },
  {
    "name": "Nokia 1.8 Inch Display SPFD54124B",
    "version": "1.0.7",
    "sentence": "Allow user to communicate with Nokia 1.8 inch display."
  },
  {
    "name": "Nokia 5110",
    "version": "1.0.4",
    "sentence": "Nokia 5110 LCD driver"
  },
  {
    "name": "Nokia 5110 LCD library",
    "version": "2.7.2",
    "sentence": "Arduino library for driving the Nokia 5110 LCD"
  },
  {
    "name": "Nokia5110",
    "version": "0.1.0",
    "sentence": "Nokia 5110 lcd library for Arduino"
  },
  {
    "name": "Non-Blocking Melody",
    "version": "1.0.4",
    "sentence": "An Arduino library for non-blocking melody playback."
  },
  {
    "name": "NonBlockingDallas",
    "version": "1.1.0",
    "sentence": "Arduino library for Maxim DS18B20 temperature sensor"
  },
  {
    "name": "NonBlockingDelay",
    "version": "1.0.0",
    "sentence": "Non-blocking delay library for embedded systems, using a .hpp header."
  },
  {
    "name": "NonBlockingRTTTL",
    "version": "1.3.0",
    "sentence": "Non-blocking Arduino library for playing RTTTL melodies."
  },
  {
    "name": "NonBlockingSequence",
    "version": "1.0.0",
    "sentence": "Allows Arduino programmer to create sequence of actions and pauses without blocing the thread."
  },
  {
    "name": "Norman",
    "version": "1.0.0",
    "sentence": "Mathematically simulate natural cycles of daylight, temperature, and humidity for remote locations using minimal data sets."
  },
  {
    "name": "Nostr",
    "version": "0.2.0",
    "sentence": "Nostr for Arduino."
  },
  {
    "name": "NotasMIDI",
    "version": "0.0.3",
    "sentence": "Library of MIDI notes"
  },
  {
    "name": "Notched Shaft Encoder",
    "version": "1.0.0",
    "sentence": "Monitor the postion and clickable button status from a Notched Shaft Encoder"
  },
  {
    "name": "Nouryas Advanced Line Follower",
    "version": "1.1.0",
    "sentence": "Allows the car to run over a specific path (Line)."
  },
  {
    "name": "Nova Fitness Sds dust sensors library",
    "version": "1.5.1",
    "sentence": "A high-level abstaction over Sds sensors family"
  },
  {
    "name": "Nova_SDS011 Sensor Library",
    "version": "0.1.0",
    "sentence": "Nova SDS011 dust sensor library"
  },
  {
    "name": "NoveltyDetection",
    "version": "1.0.2",
    "sentence": "Detects Novelties/Outliers using Support Vector Machine"
  },
  {
    "name": "NtpClientLib",
    "version": "3.0.2-beta",
    "sentence": "Ntp Client Library"
  },
  {
    "name": "NuS-NimBLE-Serial",
    "version": "3.3.2",
    "sentence": "Nordic UART Service (NuS) and BLE serial communications"
  },
  {
    "name": "NukiClientESP",
    "version": "0.0.1",
    "sentence": "Library for accessing the nuki smartlock with an ESP8266"
  },
  {
    "name": "NullPacketComms",
    "version": "0.2.3",
    "sentence": "Packet Based Serial Communication."
  },
  {
    "name": "NullSerial",
    "version": "0.1.0",
    "sentence": "Serial like library which throwing away input/output."
  },
  {
    "name": "NumberSpeaker",
    "version": "1.0.1",
    "sentence": "Arduino library for speaking numbers."
  },
  {
    "name": "Nusabot Simple Timer",
    "version": "1.0.0",
    "sentence": "Simple library to launch timed actions."
  },
  {
    "name": "OBD2",
    "version": "0.0.1",
    "sentence": "An Arduino library for reading OBD-II data from your car over CAN bus."
  },
  {
    "name": "OCServo",
    "version": "1.0.1",
    "sentence": "Allows user to control ROBS series servos (OCServo manufacturer)."
  },
  {
    "name": "ODriveArduino",
    "version": "0.10.5",
    "sentence": "Library to control ODrive motor controllers"
  },
  {
    "name": "OLED Display 96x96",
    "version": "1.0.0",
    "sentence": "Arduino library for controlling OLED Display 96x96, using I2C communication."
  },
  {
    "name": "OLED Display VGY12864L-03",
    "version": "1.0.0",
    "sentence": "ARDUINO Library for OLED Display VGY12864L-03."
  },
  {
    "name": "OLED SSD1306 - SH1106",
    "version": "1.0.7",
    "sentence": "Supported OLED display chip: SSD1306 or SH1106. Supported Interface: I2C (internal driven)"
  },
  {
    "name": "OLED_Display_SSD1306",
    "version": "1.1.0",
    "sentence": "Simple OLED Display library for SSD1306 (128x64) 0.96\" to draw bitmaps and pixels stored in RAM"
  },
  {
    "name": "OLED_SSD1306_Chart",
    "version": "1.3.2",
    "sentence": "Arduino library to easily draw cartesian charts in oled displays based on the SSD1306 drivers."
  },
  {
    "name": "OOCSI",
    "version": "1.5.18",
    "sentence": "OOCSI client library for the development boards of ESP32 series, ESP8266 series, Arduino MKR Wifi 101, Arduino UNO Wifi, Arduino Nano 33 IoT, Arduino Nano RP2040, and Arduno Uno R4 WiFi"
  },
  {
    "name": "OOKwiz",
    "version": "0.2.0",
    "sentence": "Receiving/analysing/sending on-off-keying signals for radio remote controls 📱, weather stations 🌦️ and more."
  },
  {
    "name": "OPC",
    "version": "2.0.0",
    "sentence": "A library for Arduino OPC Server support."
  },
  {
    "name": "OPT3101",
    "version": "1.0.1",
    "sentence": "OPT3101 distance sensor library"
  },
  {
    "name": "OPT4048",
    "version": "1.13.0",
    "sentence": "Arduino library for Texas Instruments OPT4048 Ambient Light Sensor (ALS)"
  },
  {
    "name": "OPTIGA Trust M",
    "version": "1.1.0",
    "sentence": "This library allows you to communicate with Optiga Trust M Security Controller"
  },
  {
    "name": "OPTIGATrustX",
    "version": "1.0.2",
    "sentence": "This library allows you to communicate with OPTIGA™ Trust X Products."
  },
  {
    "name": "OROCA-EduBot",
    "version": "0.2.1",
    "sentence": "A library for OROCA-EduBot"
  },
  {
    "name": "OSC",
    "version": "1.3.7",
    "sentence": "Open Sound Control (OSC)"
  },
  {
    "name": "OSFS",
    "version": "1.2.3",
    "sentence": "An Overly Simplified FileSystem for storing things, e.g. in the Arduino's EEPROM"
  },
  {
    "name": "OSP 2wireSPI aospi",
    "version": "0.5.7",
    "sentence": "A library that implements 2-wire SPI towards and from OSP nodes."
  },
  {
    "name": "OSP CommandInterpreter aocmd",
    "version": "0.5.8",
    "sentence": "A library with a command interpreter (over UART/USB) and handlers for OSP telegrams."
  },
  {
    "name": "OSP Middleware aomw",
    "version": "0.4.2",
    "sentence": "A library with middleware for OSP applications."
  },
  {
    "name": "OSP ResultCodes aoresult",
    "version": "0.4.5",
    "sentence": "A library that defines all error codes that may occur in any of the OSP libraries."
  },
  {
    "name": "OSP ReusableApps aoapps",
    "version": "0.2.10",
    "sentence": "A library with reusable \"apps\" for OSP chains."
  },
  {
    "name": "OSP Telegrams aoosp",
    "version": "0.5.0",
    "sentence": "A library that constructs OSP telegrams to send, and destructs received OSP telegrams."
  },
  {
    "name": "OSP ToplevelSketches aotop",
    "version": "0.1.7",
    "sentence": "A \"library\" that acts as a container for top-level OSP demo sketches and for top-level OSP documentation."
  },
  {
    "name": "OSP UIDriversOSP32 aoui32",
    "version": "0.3.9",
    "sentence": "A library with drivers for the UI elements on the OSP32 board (the OSP/SAID root MCU board)."
  },
  {
    "name": "OSS-EC ABLIC S-58LM20A 00000057",
    "version": "1.0.4",
    "sentence": "ABLIC S58LM20A Temperature Sensor Library."
  },
  {
    "name": "OSS-EC NXP MPXA4250A 00000057",
    "version": "1.0.14",
    "sentence": "NXP MPXA4250A Pressure Sensor Library."
  },
  {
    "name": "OSS-EC_ABLIC_S-5813A_5814A_00000057",
    "version": "1.0.4",
    "sentence": "ABLIC S-5813A, S-5814A  Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_ABLIC_S-8110C_8120C_00000057",
    "version": "1.0.3",
    "sentence": "ABLIC S-8110C, S-8120C  Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_ADI_AD22100A_00000057",
    "version": "1.0.4",
    "sentence": "Analog devices AD22100A  Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_ADI_AD22100K_00000057",
    "version": "1.0.4",
    "sentence": "Analog devices AD22100K  Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_ADI_AD22100S_00000057",
    "version": "1.0.4",
    "sentence": "Analog devices AD22100S  Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_ADI_AD22103K_00000057",
    "version": "1.0.0",
    "sentence": "Analog devices AD22103K  Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_MAXIM_MAX6605MXKV_00000057",
    "version": "1.0.3",
    "sentence": "Maxim Integrated MAX6605MXKV Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_MAXIM_MAX6605MXK_00000057",
    "version": "1.0.3",
    "sentence": "Maxim Integrated MAX6605MXK  Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_MAXIM_MAX6607IXK_MAX6608IUK_00000057",
    "version": "1.0.0",
    "sentence": "Maxim Integrated MAX6607IXK, MAX6608IUK Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_MAXIM_MAX6613MXK_MAX6613MXKV_00000057",
    "version": "1.0.3",
    "sentence": "Maxim Integrated MAX6613MXK, MAX6613MXK/V Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_MICROCHIP_MCP9700_MCP9700A_00000057",
    "version": "1.0.0",
    "sentence": "Microchip Technology MCP9700, MCP9700A Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_MICROCHIP_MCP9701_MCP9701A_00000057",
    "version": "1.0.0",
    "sentence": "Microchip Technology MCP9701, MCP9701A Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_MICROCHIP_TC1046_00000057",
    "version": "1.0.0",
    "sentence": "Microchip Technology TC1046 Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_MICROCHIP_TC1047_TC1047A_00000057",
    "version": "1.0.0",
    "sentence": "Microchip Technology TC1047, TC1047A Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_NXP_MPX5999D_00000057",
    "version": "1.0.0",
    "sentence": "NXP MPX5999D Pressure Sensor Library."
  },
  {
    "name": "OSS-EC_NXP_MPXH6115A_00000057",
    "version": "1.0.0",
    "sentence": "NXP MPXH6115A Pressure Sensor Library."
  },
  {
    "name": "OSS-EC_NXP_MPXH6400A_00000057",
    "version": "1.0.0",
    "sentence": "NXP MPXH6400A Pressure Sensor Library."
  },
  {
    "name": "OSS-EC_NXP_MPXHZ6250A_00000057",
    "version": "1.0.0",
    "sentence": "NXP MPXHZ6250A Pressure Sensor Library."
  },
  {
    "name": "OSS-EC_ROHM_BD1020HFV_00000057",
    "version": "1.0.0",
    "sentence": "ROHM BD1020HFV Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_STM_STLM20DD9F_00000057",
    "version": "1.0.0",
    "sentence": "STMicroelectronics STLM20DD9F Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_STM_STLM20W87F_00000057",
    "version": "1.0.0",
    "sentence": "STMicroelectronics STLM20W87F Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_TDK_CHS-UPS_UPR_UGS_UGR_00000057",
    "version": "1.0.1",
    "sentence": "TDK CHS-UPS, CHS-UPR, CHS-UGS, CHS-UGR Humidity Sensor Library."
  },
  {
    "name": "OSS-EC_TDK_CHS_MSS_00000057",
    "version": "1.0.1",
    "sentence": "TDK CHS-MSS Humidity Sensor Library."
  },
  {
    "name": "OSS-EC_TI_LM35C_LM35CA_00000057",
    "version": "1.0.0",
    "sentence": "Texas Instruments LM35C, LM35CA Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_TI_LM35D_00000057",
    "version": "1.0.0",
    "sentence": "Texas Instruments LM35D Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_TI_LM35_LM35A_00000057",
    "version": "1.0.0",
    "sentence": "Texas Instruments LM35, LM35A Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_TI_LM45B_LM45C_00000057",
    "version": "1.0.0",
    "sentence": "Texas Instruments LM45B, LM45C Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_TI_LM50B_00000057",
    "version": "1.0.0",
    "sentence": "Texas Instruments LM50B Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_TI_LM50C_00000057",
    "version": "1.0.0",
    "sentence": "Texas Instruments LM50C, LM50-Q1 Temperature Sensor Library."
  },
  {
    "name": "OSS-EC_TI_TMP9A00_00000057",
    "version": "1.0.0",
    "sentence": "Texas Instruments TMP9A00-EP Temperature Sensor Library."
  },
  {
    "name": "OTAEsp",
    "version": "1.0.2",
    "sentence": "A simple library for the ESP8266 to set up an access point, serve HTML pages, and connect to Wi-Fi."
  },
  {
    "name": "OTAUpdateManager",
    "version": "1.0.2",
    "sentence": "Library for configuring ESP8266/ESP32 modules OTA update and monitoring using website https://ota.serveo.net/."
  },
  {
    "name": "OTAWrapper",
    "version": "1.3.2",
    "sentence": "ESP Library to simplify OTA setup."
  },
  {
    "name": "OTAdrive_ESP",
    "version": "1.1.33",
    "sentence": "Official library to use OTAdrive services in ESP8266/ESP32 arduino platform"
  },
  {
    "name": "OUTPIN",
    "version": "0.1.0",
    "sentence": "Arduino library for (AVR) faster and extended output pin."
  },
  {
    "name": "OV5640 Auto Focus for ESP32 Camera",
    "version": "0.1.1",
    "sentence": "A library that makes the OV5640AF usable on the ESP32."
  },
  {
    "name": "OVS",
    "version": "1.1.0",
    "sentence": "Simple Arduino library for oversampling ADC and other data"
  },
  {
    "name": "OZGPS_NMEA",
    "version": "1.0.0",
    "sentence": "GPS NMEA Parser library"
  },
  {
    "name": "OakOLED",
    "version": "0.9.0",
    "sentence": "An Adafruit GFX driver for the Oak OLED (an SSD1306 with no reset line)"
  },
  {
    "name": "ObjectButton",
    "version": "2.0.0",
    "sentence": "An Arduino library for detecting button actions."
  },
  {
    "name": "ObloqAdafruit",
    "version": "1.1.2",
    "sentence": "Hacky library to work with Oblock module and Adafruit servers."
  },
  {
    "name": "OctoPrintAPI",
    "version": "1.1.6",
    "sentence": "Arduino library to access OctoPrint API."
  },
  {
    "name": "OctoPrinter",
    "version": "1.0.9",
    "sentence": "A library for talking to OctoPrint instances."
  },
  {
    "name": "OctoSonar",
    "version": "1.2.0",
    "sentence": "A library to support the OctoSonar v2 HC-SR04 concentrators"
  },
  {
    "name": "OctoWS2811",
    "version": "1.5.0",
    "sentence": "Control thousands of WS2812B / NeoPixel LEDs at video refresh speeds"
  },
  {
    "name": "Octofet",
    "version": "1.0.0",
    "sentence": "Amperka Octofet board (eight-channel power switch) interface library."
  },
  {
    "name": "Octopus Firmware",
    "version": "1.0.6",
    "sentence": "Firmware library for Octopus integration using Arduino BLE Nano 33 rev2 or Nicla Vision."
  },
  {
    "name": "OctopusLab-Library",
    "version": "0.1.0",
    "sentence": "Library for octopuslab modules that make easier work with pins."
  },
  {
    "name": "Oddly Specific Objects LCD FeatherWing Library",
    "version": "1.0.2",
    "sentence": "Driver for the BU9796-based LCD FeatherWing"
  },
  {
    "name": "Oled UI Components",
    "version": "1.0.1",
    "sentence": "SSD1306 oled UI components for building UI."
  },
  {
    "name": "Olimex16x2",
    "version": "0.1.4",
    "sentence": "A library for interfacing with the Olimex SHIELD-LCD16x2"
  },
  {
    "name": "Olympic Robotic Challenge",
    "version": "2.1.2",
    "sentence": "A library to Olympic Robotic Challenge competition and supporting the official kit."
  },
  {
    "name": "OmEspHelpers",
    "version": "1.10.20241217",
    "sentence": "Web front end for simple IoT projects."
  },
  {
    "name": "Omron D6F-PH Arduino Library",
    "version": "1.1.0",
    "sentence": "Library for I2C Communication with Omron D6F-PH Differential Pressure Sensor"
  },
  {
    "name": "OneBitDisplay",
    "version": "2.3.2",
    "sentence": "OLED, LCD and e-paper library for 1-bit per pixel displays."
  },
  {
    "name": "OneButton",
    "version": "2.6.1",
    "sentence": "Arduino library for improving the usage of a singe input button."
  },
  {
    "name": "OneIoT Connectivity",
    "version": "1.1.0",
    "sentence": "This library can be used for serial communication with the OneIoT Connectivity Module."
  },
  {
    "name": "OneMsTaskTimer",
    "version": "1.0.1",
    "sentence": "Enables \"Tasks\" to be run at a one mili second interval."
  },
  {
    "name": "OneSheeld",
    "version": "1.14.0",
    "sentence": "It allows you to control your 1Sheeld(s)."
  },
  {
    "name": "OneShot",
    "version": "0.4.1",
    "sentence": "Generates an event that occurs only once at a specified interval."
  },
  {
    "name": "OneSystemLibrary",
    "version": "1.0.1",
    "sentence": "Arduino library for Delta-Robot One"
  },
  {
    "name": "OneTime-BH1750",
    "version": "1.0.0",
    "sentence": "A library that makes using a BH1750 easy and lightweight."
  },
  {
    "name": "OneWire",
    "version": "2.3.8",
    "sentence": "Access 1-wire temperature sensors, memory and other chips."
  },
  {
    "name": "OneWireHub",
    "version": "2.2.3",
    "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices."
  },
  {
    "name": "OneWireNg",
    "version": "0.14.0",
    "sentence": "Arduino 1-wire service library. OneWire alternative."
  },
  {
    "name": "Onion Arduino Library",
    "version": "0.1.1",
    "sentence": "Onion library for use with the Arduino IDE and the Arduino Dock."
  },
  {
    "name": "OnlyTimer",
    "version": "1.0.0",
    "sentence": "Simple timer based on millis function."
  },
  {
    "name": "OpcServer",
    "version": "1.1.0",
    "sentence": "Open Pixel Control (OPC) Server Library for Arduino"
  },
  {
    "name": "Open RTS",
    "version": "0.9.0",
    "sentence": "Full implementation of the Somfy RTS protocol"
  },
  {
    "name": "OpenBCI_32bit_Library",
    "version": "3.1.2",
    "sentence": "The library for controlling OpenBCI Cyton (32bit) boards. The Cyton is the main one."
  },
  {
    "name": "OpenBCI_32bit_SD",
    "version": "2.0.0",
    "sentence": "The library for controlling OpenBCI Cyton (32bit) SD cards."
  },
  {
    "name": "OpenBCI_Ganglion_Library",
    "version": "2.0.1",
    "sentence": "The library for OpenBCI Ganglion board. Please use the DefaultGanglion.ino file in the examples to use the code that ships with every Ganglion board. Look through the skimmed down versions of the main firmware in the other examples."
  },
  {
    "name": "OpenBCI_Radios",
    "version": "2.0.4",
    "sentence": "The library for OpenBCI RFDuino system for GZLL"
  },
  {
    "name": "OpenBCI_Wifi",
    "version": "2.0.4",
    "sentence": "The core of the OpenBCI Wifi Shield."
  },
  {
    "name": "OpenBCI_Wifi_Master",
    "version": "1.0.1",
    "sentence": "The library for controlling Push The World - OpenBCI Wifi Shield"
  },
  {
    "name": "OpenBehavior",
    "version": "0.5.0",
    "sentence": "OpenBehavior Course on Microcontrollers"
  },
  {
    "name": "OpenBuildsBlox",
    "version": "1.0.0",
    "sentence": "Board Support library for OpenBuilds Blox"
  },
  {
    "name": "OpenDevice",
    "version": "0.5.4",
    "sentence": "OpenDevice is a set of tools and APIs to build solutions for the \"Internet of Things\" like home automations systems, robotics, smart city, energy monitoring, security, sensor monitoring"
  },
  {
    "name": "OpenJigWare_A",
    "version": "1.2.0",
    "sentence": "DYNAMIXEL control Library for Arduino(with Dynamixel2Arduino)"
  },
  {
    "name": "OpenLCB_Single_Thread",
    "version": "0.1.9",
    "sentence": "Implements Single-threaded OpenLCB/LCC stack based on Arduino IDE."
  },
  {
    "name": "OpenMRNLite",
    "version": "2.0.0",
    "sentence": "Network protocol stack for model railroading: OpenLCB and LCC implementation."
  },
  {
    "name": "OpenMV Arduino RPC",
    "version": "1.0.9",
    "sentence": "OpenMV Arduino RPC Interface Library"
  },
  {
    "name": "OpenMenuOS",
    "version": "2.0.0",
    "sentence": "Library to easily build menu on ST7735 0.96\" display for ESP32 and ESP8266"
  },
  {
    "name": "OpenTherm Library",
    "version": "1.1.5",
    "sentence": "OpenTherm Library for HVAC system control communication using Arduino and ESP8266/ESP32 hardware."
  },
  {
    "name": "OpenWeather",
    "version": "0.3.0",
    "sentence": "OpenWeather client"
  },
  {
    "name": "OpenWeatherOneCall",
    "version": "4.0.3",
    "sentence": "Weather Forecast Library for ESP32."
  },
  {
    "name": "Opentherm",
    "version": "1.1.0",
    "sentence": "Arduino library to send and receive data from Opentherm devices."
  },
  {
    "name": "OptaUSBUpdate",
    "version": "1.0.1",
    "sentence": "Execute firmware updates from USB storage."
  },
  {
    "name": "Optional",
    "version": "1.0.0",
    "sentence": "A simple optional type for C++."
  },
  {
    "name": "OptoDebounce",
    "version": "1.0.1",
    "sentence": "100Hz opto debouncer."
  },
  {
    "name": "Orbo",
    "version": "0.0.3",
    "sentence": "A library useful for Orbo robot."
  },
  {
    "name": "Oregon",
    "version": "1.0.1",
    "sentence": "Decode data from Oregon sensors."
  },
  {
    "name": "OrientalAZ_asukiaaa",
    "version": "1.0.0",
    "sentence": "It controls motor driver AZ series."
  },
  {
    "name": "OrientalBLVR_asukiaaa",
    "version": "1.0.0",
    "sentence": "It controls BLV typeR series of Oriental Motor."
  },
  {
    "name": "OrientalCommon_asukiaaa",
    "version": "1.1.1",
    "sentence": "Common api of rs485 of oriental motor."
  },
  {
    "name": "Orvibo WiWo S20 Library",
    "version": "1.0.1",
    "sentence": "ESP8266 library for controlling Orvibo WiWo S20 smart plugs."
  },
  {
    "name": "Oscup",
    "version": "1.2.4",
    "sentence": "Oscup is a customized UART protocol for ESP32!"
  },
  {
    "name": "Ospom",
    "version": "0.1.31",
    "sentence": "Ospom is FaceBook for your Arduino."
  },
  {
    "name": "OtD Library",
    "version": "1.0.0",
    "sentence": "Support library for OtomaDUINO boards"
  },
  {
    "name": "OtaHelper",
    "version": "1.0.0",
    "sentence": "A esp32/8266 library to make more easy to connect to OTA server."
  },
  {
    "name": "OttoArduinoLib",
    "version": "1.0.0",
    "sentence": "Arduino library for Otto and Otto Lee robot."
  },
  {
    "name": "OttoDIYLib",
    "version": "13.0.0",
    "sentence": "Otto DIY official Arduino Libraries."
  },
  {
    "name": "Oversampling",
    "version": "0.9.5",
    "sentence": "Improving ADC Resolution By Oversampling Averaging."
  },
  {
    "name": "OvhAPI",
    "version": "1.0.4",
    "sentence": "Arduino/ESP library to simplify working with OVH API."
  },
  {
    "name": "P1AM",
    "version": "1.0.9",
    "sentence": "P1AM CPU library"
  },
  {
    "name": "P1AM_Serial",
    "version": "1.0.0",
    "sentence": "P1AM_Serial CPU library"
  },
  {
    "name": "PAR27979",
    "version": "0.2.5",
    "sentence": "Arduino library for Parallax 27979 serial LCD display."
  },
  {
    "name": "PAX Graphics",
    "version": "1.0.0",
    "sentence": "The PAX computer graphics library for ESP32."
  },
  {
    "name": "PBEnhancer",
    "version": "0.2.23",
    "sentence": "An Arduino library for easily controlling various events of switches and buttons."
  },
  {
    "name": "PCA6408A",
    "version": "1.0.0",
    "sentence": "PCA6408A 8-bit I/O expander library using I2C for communication."
  },
  {
    "name": "PCA9505_06 Library",
    "version": "1.0.0",
    "sentence": "Library for the 40bit PCA9505/06 I2C Port Expander"
  },
  {
    "name": "PCA9536",
    "version": "1.0.0",
    "sentence": "PCA9536 Driver (4-Channel GPIO I2C Expander)"
  },
  {
    "name": "PCA9536Arduino",
    "version": "0.1.0",
    "sentence": "Arduino library for PCA9536 4-Bit I2C and SMBus I/O Expander With Configuration Registers"
  },
  {
    "name": "PCA9536D",
    "version": "2.0.1",
    "sentence": "Library for the PCA9536D I2C 4-bit I/O Expander."
  },
  {
    "name": "PCA9536_RGB",
    "version": "1.2.0",
    "sentence": "PCA9536 RGB LED Driver"
  },
  {
    "name": "PCA9547",
    "version": "0.1.1",
    "sentence": "Arduino library for PCA9547 (8-channel I2C-bus multiplexer with reset)"
  },
  {
    "name": "PCA9549",
    "version": "0.1.0",
    "sentence": "Arduino Library for PCA9549 I2C octal bus switch."
  },
  {
    "name": "PCA9551",
    "version": "0.3.1",
    "sentence": "Arduino library for PCA9551 I2C LED driver 8 channel"
  },
  {
    "name": "PCA9552",
    "version": "0.3.1",
    "sentence": "Arduino library for PCA9552 I2C LED driver 16 channel"
  },
  {
    "name": "PCA9553",
    "version": "0.4.1",
    "sentence": "Arduino library for PCA9553 I2C LED driver 4 channel"
  },
  {
    "name": "PCA9554",
    "version": "0.0.1",
    "sentence": "PCA9554 8 bit I2C port expander arduino/esp library"
  },
  {
    "name": "PCA9557-arduino",
    "version": "1.0.0",
    "sentence": "Write & Read PCA9557 8-bit I/O expander"
  },
  {
    "name": "PCA95x5",
    "version": "0.1.3",
    "sentence": "Arduino library for PCA9535 and PCA9555 (Remote 16-bit I2C and SMBus I/O Expander with Interrupt Output and Configuration Registers)"
  },
  {
    "name": "PCA9622",
    "version": "1.1.0",
    "sentence": "Library for interaction with the PCA9622 LED Driver"
  },
  {
    "name": "PCA9624",
    "version": "0.1.0",
    "sentence": "Arduino library for PCA9624 8-bit Fm+ I2C-bus 100 mA 40 V LED driver"
  },
  {
    "name": "PCA9632",
    "version": "0.5.1",
    "sentence": "Arduino library for PCA9632 and PCA9633 4 channel, I2C LED driver."
  },
  {
    "name": "PCA9634",
    "version": "0.4.0",
    "sentence": "Arduino library for PCA9634 I2C LED driver 8 channel"
  },
  {
    "name": "PCA9634 Arduino Library",
    "version": "1.0.0",
    "sentence": "A library for use with the NXP PCA9634 8-bit Fm+ I2C-bus LED driver."
  },
  {
    "name": "PCA9634 library",
    "version": "1.0.0",
    "sentence": "A library for the PCA9634 8-bit Fm+ I2C-bus LED driver."
  },
  {
    "name": "PCA9635",
    "version": "0.6.0",
    "sentence": "Arduino library for PCA9635 I2C LED driver, 16 channel PWM, 8 bit."
  },
  {
    "name": "PCA9685",
    "version": "3.0.2",
    "sentence": "PCA9685 16-channel 12-bit PWM controller."
  },
  {
    "name": "PCA9685 16-Channel PWM Driver Module Library",
    "version": "1.2.15",
    "sentence": "Library to control a PCA9685 16-channel PWM driver module from an Arduino board."
  },
  {
    "name": "PCA9685_LED_DRIVER",
    "version": "1.0.4",
    "sentence": "GPIO I2C driver for PCA9685"
  },
  {
    "name": "PCA9685_RT",
    "version": "0.7.1",
    "sentence": "Arduino library for PCA9685 I2C LED driver, 16 channel PWM, 12 bit."
  },
  {
    "name": "PCA9698",
    "version": "1.0.4",
    "sentence": "GPIO I2C driver for PCA9698"
  },
  {
    "name": "PCA9698_RT",
    "version": "0.1.0",
    "sentence": "Arduino library for the PCA9698 - I2C, 40 channel IO expander."
  },
  {
    "name": "PCD8544",
    "version": "1.4.3",
    "sentence": "Philips PCD8544 or compatible LCD library."
  },
  {
    "name": "PCF2129",
    "version": "0.1.0",
    "sentence": "Arduino library for RTC PCF2129 with integrated quartz crystal"
  },
  {
    "name": "PCF8523",
    "version": "1.0.0",
    "sentence": "Arduino Library for PCF8523 Real-Time Clock"
  },
  {
    "name": "PCF8563_RTC",
    "version": "1.0.0",
    "sentence": "A library that interfaces with the PCF8563 RTC."
  },
  {
    "name": "PCF8574",
    "version": "0.4.1",
    "sentence": "Arduino library for PCF8574 - 8 channel I2C IO expander"
  },
  {
    "name": "PCF8574 library",
    "version": "2.3.7",
    "sentence": "Most starred PCF8574 library for Arduino (standard and SAMD), Raspberry Pi Pico and rp2040 boards, ESP8266, smt32 and esp32"
  },
  {
    "name": "PCF8574_LH",
    "version": "1.0.1",
    "sentence": "Arduino library for PCF8574 expander over I2C"
  },
  {
    "name": "PCF8575",
    "version": "0.2.3",
    "sentence": "Arduino library for PCF8575 - 16 channel I2C IO expander"
  },
  {
    "name": "PCF8575 library",
    "version": "2.0.0",
    "sentence": "PCF8575, library for Arduino, Raspberry Pi Pico and rp2040 boards, esp32, SMT32 and ESP8266."
  },
  {
    "name": "PCF8575-lib",
    "version": "1.0.0",
    "sentence": "Easy to use Arduino library for PCF8575 I2C expander."
  },
  {
    "name": "PCF8583",
    "version": "1.0.0",
    "sentence": "PCF8583 Real Time Clock and Event Counter Library for Arduino"
  },
  {
    "name": "PCF8591",
    "version": "0.4.0",
    "sentence": "PCF8591 library for Arduino. Supports multiple I2C WireN bus."
  },
  {
    "name": "PCF8591 library",
    "version": "1.1.2",
    "sentence": "PCF8591, library for Arduino, Raspberry Pi Pico and rp2040 boards, esp32, SMT32 and ESP8266."
  },
  {
    "name": "PCM",
    "version": "1.0.0",
    "sentence": "Playback of short audio samples."
  },
  {
    "name": "PCM51xx DAC",
    "version": "1.1.0",
    "sentence": "Arduino library for TI PCM51xx DAC ICs software configuration via I2C."
  },
  {
    "name": "PCR",
    "version": "0.3.0",
    "sentence": "Arduino library for PCR process control."
  },
  {
    "name": "PCT2075",
    "version": "0.1.0",
    "sentence": "Arduino library for I2C PCT2075 temperature sensor / thermal watchdog."
  },
  {
    "name": "PD-10LX-Library",
    "version": "1.0.2",
    "sentence": "A simple and easy library for the Keller PD-10LX (X-Line) pressure/temp sensors"
  },
  {
    "name": "PDLS_Basic",
    "version": "9.0.5",
    "sentence": "Library for Pervasive Displays iTC screens, extension boards and development kits"
  },
  {
    "name": "PDLS_Common",
    "version": "9.0.4",
    "sentence": "Shared libraries including constants and utilities"
  },
  {
    "name": "PDLS_EXT3_Basic_BWRY",
    "version": "8.2.0",
    "sentence": "DEPRECATED - Library for Pervasive Displays iTC red and yellow colour screens, and EXT3 or EXT3.1 board"
  },
  {
    "name": "PDLS_EXT3_Basic_Fast",
    "version": "8.2.0",
    "sentence": "LEGACY - Library for Pervasive Displays iTC monochrome screens with embedded fast update, and EXT3 or EXT3.1 board"
  },
  {
    "name": "PDLS_EXT3_Basic_Global",
    "version": "8.2.0",
    "sentence": "LEGACY - Library for Pervasive Displays iTC monochrome and colour screens and EXT3 or EXT3.1 board"
  },
  {
    "name": "PDLS_EXT3_Basic_Touch",
    "version": "8.2.0",
    "sentence": "DEPRECATED - Library for Pervasive Displays monochrome e-paper screens with touch and EXT3.1 + EXT3-Touch"
  },
  {
    "name": "PDLS_EXT3_Basic_Wide",
    "version": "8.2.0",
    "sentence": "DEPRECATED - Library for Pervasive Displays iTC monochrome screens with wide temperature and embedded fast update, and EXT3 or EXT3.1 board"
  },
  {
    "name": "PDLS_EXT4_Basic_Matter",
    "version": "8.1.1",
    "sentence": "Library for Pervasive Displays EPDK-Matter EXT4 board and iTC 2.90-HD screen"
  },
  {
    "name": "PE43xx",
    "version": "1.0.0",
    "sentence": "Simplifies usage of PE43xx family of attenuators."
  },
  {
    "name": "PERIPUMP",
    "version": "0.1.2",
    "sentence": "Arduino library for peristaltic pump DFR0523 and compatibles."
  },
  {
    "name": "PF",
    "version": "1.1.0",
    "sentence": "<h2>Petit FatFS for Arduino avr MCUs. to drive SD cards</h2>"
  },
  {
    "name": "PGMTools",
    "version": "1.0.0",
    "sentence": "PGMTools"
  },
  {
    "name": "PGMWrap",
    "version": "1.0.0",
    "sentence": "A convenient library allowing structures and variables stored in PROGMEM to be read directly."
  },
  {
    "name": "PH4502C-Sensor",
    "version": "1.1.1",
    "sentence": "Arduino library for PH4502C sensor."
  },
  {
    "name": "PHPoC",
    "version": "1.5.1",
    "sentence": "PHPoC Ethernet/WiFi Shield for Arduino"
  },
  {
    "name": "PHPoC Expansion",
    "version": "1.0.0",
    "sentence": "PHPoC Expansion library for Arduino"
  },
  {
    "name": "PI3EQX12908A2",
    "version": "1.0.3",
    "sentence": "PI3EQX12908 PCIe 3.0 redriver library for I2C mode"
  },
  {
    "name": "PI4IOE5V6416",
    "version": "0.2.0",
    "sentence": "Arduino library for PI4IOE5V6416 16-bit general-purpose I/O expander"
  },
  {
    "name": "PI4IOE5V9554",
    "version": "0.1.2",
    "sentence": "Arduino library for PI4IOE5V9554 8-bit general-purpose I/O expander"
  },
  {
    "name": "PICxel",
    "version": "2.0.0",
    "sentence": "A library for using Neopixels/WS2812 on chipKIT board (PIC32)"
  },
  {
    "name": "PID",
    "version": "1.2.0",
    "sentence": "PID controller"
  },
  {
    "name": "PID controllers Modular Professional",
    "version": "1.0.2",
    "sentence": "Professional PID controllers: continuous, step, impulse and twelve control functions"
  },
  {
    "name": "PIDController",
    "version": "0.0.1",
    "sentence": "A library that implements PID control to your code."
  },
  {
    "name": "PID_DG",
    "version": "0.1.0",
    "sentence": "An improved PID library"
  },
  {
    "name": "PID_RT",
    "version": "0.1.7",
    "sentence": "Arduino PID library"
  },
  {
    "name": "PID_Timed",
    "version": "1.1.3",
    "sentence": "PID controller with non-uniform time sampling"
  },
  {
    "name": "PID_v1_bc",
    "version": "1.2.7",
    "sentence": "PID controller based on PID_v1 with back-calculation anti-windup"
  },
  {
    "name": "PID_v2",
    "version": "2.0.1",
    "sentence": "PID controller"
  },
  {
    "name": "PIO8255",
    "version": "1.0.0",
    "sentence": "Arduino library for using intel 8255 CMOSes."
  },
  {
    "name": "PIR",
    "version": "0.1.3",
    "sentence": "PIR library for Arduino."
  },
  {
    "name": "PIR8575",
    "version": "0.1.0",
    "sentence": "Arduino library for 16 channel PIR detection system based upon PCF8575."
  },
  {
    "name": "PIRSensor",
    "version": "1.1.0",
    "sentence": "PIRSensor provides a class to control a Passive Infrared sensor."
  },
  {
    "name": "PJON",
    "version": "13.1.0",
    "sentence": "PJON is an open-source, multi-master, multi-media bus network protocol"
  },
  {
    "name": "PL ADXL355",
    "version": "1.1.0",
    "sentence": "Analog Devices ADXL355 accelerometer library"
  },
  {
    "name": "PLCCore2",
    "version": "1.0.0",
    "sentence": "This library providing a function at specific ESP32 module.This library support all version of MiniPLC-32u,MiniPLC-S3 ,DinoPLC"
  },
  {
    "name": "PLCustomDevices",
    "version": "0.2.0",
    "sentence": "[BETA] Perfect Lights Custom Devices official library"
  },
  {
    "name": "PLEN5Stack",
    "version": "1.0.7",
    "sentence": "PLEN5Stack Library"
  },
  {
    "name": "PLS7 shield",
    "version": "1.3.0",
    "sentence": "Arduino shield with various I/O devices"
  },
  {
    "name": "PLSduino",
    "version": "0.1.0",
    "sentence": "Partial Least Squares for arduino using eigen"
  },
  {
    "name": "PL_microEPD",
    "version": "1.1.2",
    "sentence": "A Universal Hardware Library for 1.1”, 1.4\", 2.1\" and 3.1\" E-Paper displays(EPDs) from Plastic Logic based on UC8156 driver IC."
  },
  {
    "name": "PM1006K",
    "version": "1.0.3",
    "sentence": "Driver library for PM1006K sensors."
  },
  {
    "name": "PM2005Lib",
    "version": "1.0.2",
    "sentence": "Controls and reads out data from a PM2005 laser particle sensor module."
  },
  {
    "name": "PM2008 I2C",
    "version": "1.0.1",
    "sentence": "Arduino library to control Cubic PM2008 I2C"
  },
  {
    "name": "PMIC_BQ25896",
    "version": "0.3.0",
    "sentence": "Arduino Library for Power Management and Battery Charging IC BQ25896 from Texas Instruments."
  },
  {
    "name": "PMS Library",
    "version": "1.1.0",
    "sentence": "Arduino library for Plantower PMS sensors."
  },
  {
    "name": "PMSensor-HPMA115",
    "version": "1.0.7",
    "sentence": "A library for interacting with the Honeywell HPMA115 particulate matter sensors."
  },
  {
    "name": "PMW3360 Module",
    "version": "1.1.0",
    "sentence": "This library allows an Arduino/Genuino board to interface with PixArt PMW3360 motion sensor module."
  },
  {
    "name": "PMsensor",
    "version": "1.1.0",
    "sentence": "Arduino Particulate Matter Sensors for GP2Y1010AU0F."
  },
  {
    "name": "PN5180",
    "version": "1.0.0",
    "sentence": "Library for reading ISO15693 RFID cards using the PN5180 RFID reader."
  },
  {
    "name": "PNGdec",
    "version": "1.0.3",
    "sentence": "Universal PNG decoder for MCUs with at least 48K of RAM."
  },
  {
    "name": "PNGenc",
    "version": "1.2.0",
    "sentence": "Universal PNG encoder for MCUs with at least 45K of free RAM."
  },
  {
    "name": "POV library",
    "version": "0.9.0",
    "sentence": "Arduino  library for POV effects"
  },
  {
    "name": "PPM",
    "version": "1.1.5",
    "sentence": "RC (radio control) PPM signal"
  },
  {
    "name": "PPM-reader",
    "version": "1.2.0",
    "sentence": "PPM Reader is an interrupt based pulse-position modulation (PPM) signal reading library for Arduino."
  },
  {
    "name": "PPMEncoder",
    "version": "0.4.0",
    "sentence": "A library to encode/generate a PPM signal for controlling RC Cars, etc..."
  },
  {
    "name": "PPPOSClient",
    "version": "1.0.0",
    "sentence": "A client library for gsm ppp protocol."
  },
  {
    "name": "PRDC_AD7193",
    "version": "1.1.0",
    "sentence": "PR-DC Arduino Library for Analog Devices AD7193."
  },
  {
    "name": "PRDC_AD7194",
    "version": "1.1.0",
    "sentence": "PR-DC Arduino Library for Analog Devices AD7194."
  },
  {
    "name": "PRDC_AD7797",
    "version": "1.0.1",
    "sentence": "PR-DC Arduino Library for Analog Devices AD7797."
  },
  {
    "name": "PRDC_FreePort",
    "version": "1.0.1",
    "sentence": "FreePort Protocol for communication with VFD over RS485 implemented in Arduino library."
  },
  {
    "name": "PRDC_RS485HD_STM32",
    "version": "1.0.1",
    "sentence": "PR-DC Half-Duplex RS485 communication Library for Arduino_Core_STM32."
  },
  {
    "name": "PRDC_ServoHT",
    "version": "1.0.2",
    "sentence": "PWM signal for Servo motor control is generated using HardwareTimer library from Arduino_Core_STM32, for every i/o pin, that has PWM capability."
  },
  {
    "name": "PRDC_TMAESC",
    "version": "1.0.1",
    "sentence": "PR-DC Arduino Library for T-Motor ALPHA ESC Telemetry Protocol."
  },
  {
    "name": "PROGMEMAssert",
    "version": "1.1.0",
    "sentence": "Assert for Arduino that saves RAM by storing assert strings in PROGMEM and prints to Serial."
  },
  {
    "name": "PROMPLUS",
    "version": "1.0.1",
    "sentence": "A fork of the EEPROM.h library"
  },
  {
    "name": "PS-33D I2C",
    "version": "1.0.0",
    "sentence": "Arduino library to control Blue Sky PS-33D I2C"
  },
  {
    "name": "PS2KeyAdvanced",
    "version": "1.0.9",
    "sentence": "PS2 keyboard FULL control and ALL keys processing, as well as LED control."
  },
  {
    "name": "PS2KeyMap",
    "version": "1.0.6",
    "sentence": "PS2 keyboard codes from PS2KeyAdvanced to UTF-8 for any Latin language keyboard."
  },
  {
    "name": "PS2KeyRaw",
    "version": "1.0.5",
    "sentence": "PS2 keyboard control and raw data receiving"
  },
  {
    "name": "PS2Keyboard",
    "version": "2.4.0",
    "sentence": "Use a PS/2 Keyboard for input"
  },
  {
    "name": "PS3 Controller Host",
    "version": "1.1.0",
    "sentence": "Control your ESP32 projects with a PS3 controller!"
  },
  {
    "name": "PS4Controller",
    "version": "1.0.8",
    "sentence": "Control your ESP32 projects with a PS4 controller!"
  },
  {
    "name": "PSACrypto",
    "version": "1.1.1",
    "sentence": "An implementation of the Platform Security Architecture Crypto API for Arduino."
  },
  {
    "name": "PT2258",
    "version": "1.0.0",
    "sentence": "A library to control the 6-Channel Electronic Volume Controller PT2258"
  },
  {
    "name": "PT2314",
    "version": "0.2.0",
    "sentence": "Arduino library for PT2314 i2C 4 channel audio processor,"
  },
  {
    "name": "PT6312",
    "version": "1.0.2",
    "sentence": "PT6312 is an Arduino/AVR library for the PT6312 family of Vacuum Fluorescent Display (VFD) controllers including AD16312, HT16512, ET16312 etc."
  },
  {
    "name": "PTSolns_I2CBackpack",
    "version": "1.0.3",
    "sentence": "Control the PTSolns I2C Backpack."
  },
  {
    "name": "PTSolns_InterfaceShield",
    "version": "1.1.3",
    "sentence": "PTSolns library for Interface-Shield."
  },
  {
    "name": "PTSolns_microWatt",
    "version": "1.1.2",
    "sentence": "microWatt Support Library (mSL)."
  },
  {
    "name": "PTW-Arduino-Assert",
    "version": "1.1.1",
    "sentence": "The library Push The World uses for unit testing."
  },
  {
    "name": "PTZProtocolHandler",
    "version": "1.0.3",
    "sentence": "An Arduino library for reading PTZ commands through RS485 (protocols Pelco-D, Pelco-P, Dahau, Hikvision, Hanbang are supported)."
  },
  {
    "name": "PU2CLR AKC695X",
    "version": "1.0.8",
    "sentence": "Control your AKC6955 Family (AKC6951, AKC6955 and  AKC6959) BROADCAST FM, AM (LW, MW and SW) RECEIVER."
  },
  {
    "name": "PU2CLR BK108X",
    "version": "1.0.6",
    "sentence": "Control your BK1086 and BK1088 BROADCAST FM, AM (LW, MW and SW) RECEIVER."
  },
  {
    "name": "PU2CLR KT0915",
    "version": "1.0.3",
    "sentence": "Control your KT0915 BROADCAST FM, AM (LW, MW and SW) RECEIVER."
  },
  {
    "name": "PU2CLR MCP23008",
    "version": "1.0.8",
    "sentence": "Control the MCP23008/MCP23S08 8-Bit I/O Expander with Serial Interface with your Arduino"
  },
  {
    "name": "PU2CLR PCF8574",
    "version": "1.0.3",
    "sentence": "Control the PCF8574 8-Bit I/O Expander with Serial Interface with your Arduino"
  },
  {
    "name": "PU2CLR RDA5807",
    "version": "1.1.9",
    "sentence": "Control your RDA5807 BROADCAST FM from RDA Microelectronics Inc."
  },
  {
    "name": "PU2CLR SI470X",
    "version": "1.0.5",
    "sentence": "Control your SI470X (si4703, si4702, si4701) BROADCAST FM/RDS."
  },
  {
    "name": "PU2CLR SI4735",
    "version": "2.1.8",
    "sentence": "Control your Silicon Labs SI47XX Family (Si4730, Si4732, Si4731, Si4734, Si4735, Si4740, Si4745 etc) BROADCAST AM/FM/SW RADIO RECEIVER."
  },
  {
    "name": "PU2CLR SI4844",
    "version": "1.2.0",
    "sentence": "Control your SI4822, SI4826, SI4827, SI4840, 4844A, and 4844B  BROADCAST ANALOG TUNING DIGITAL DISPLAY AM/FM/SW RADIO RECEIVER."
  },
  {
    "name": "PU2REO Si5351ArduinoLite",
    "version": "1.1.0",
    "sentence": "A full-featured lite library for the Si5351A (10 MSOP - 3 Clocks Only) series of clock generator ICs from SkyWorks (ex Silicon Labs)."
  },
  {
    "name": "PU2REO_AD9851",
    "version": "1.0.1",
    "sentence": "A full-featured library for the AD9851."
  },
  {
    "name": "PU2REO_Si570",
    "version": "1.0.1",
    "sentence": "A full-featured library for the Si570 from SkyWorks (ex Silicon Labs)."
  },
  {
    "name": "PVision",
    "version": "0.0.4",
    "sentence": "This Arduino library is for talking to the DFRobot IR camera."
  },
  {
    "name": "PWFusion_MAX31856",
    "version": "1.3.2",
    "sentence": "MAX31856 Thermocouple Interface Library"
  },
  {
    "name": "PWFusion_Max31865",
    "version": "2.1.0",
    "sentence": "MAX31865 RTD Sensor Measurement Library"
  },
  {
    "name": "PWFusion_Mcp2515",
    "version": "1.0.1",
    "sentence": "MCP2515 SPI CAN Controller Library"
  },
  {
    "name": "PWFusion_Mcp960x",
    "version": "1.1.0",
    "sentence": "MCP9601 I2C Thermocouple Measurement Library"
  },
  {
    "name": "PWFusion_TCA9548A",
    "version": "1.0.1",
    "sentence": "TCA9548A I2C Multiplexer Library"
  },
  {
    "name": "PWFusion_VL53L3C",
    "version": "1.0.0",
    "sentence": "VL53L3C Time of Flight Sensor Library"
  },
  {
    "name": "PWMFreak",
    "version": "0.2.0",
    "sentence": "Configures the PWM frequency on a pin"
  },
  {
    "name": "PWMMotorControl",
    "version": "2.1.0",
    "sentence": "Control brushed DC motors by PWM and uses optional attached encoders to drive fixed distances. For L298 or TB6612, or Adafruit Motor Shield<br/>"
  },
  {
    "name": "PWMOutESP32",
    "version": "1.0.2",
    "sentence": "Library for controlling ESP32 PWM outputs similar to use on Arduino"
  },
  {
    "name": "PWMServo",
    "version": "2.1.0",
    "sentence": "Control RC Servo motors."
  },
  {
    "name": "PWMrelay",
    "version": "1.2.0",
    "sentence": "Low-frequency software PWM for relay"
  },
  {
    "name": "PZEM004Tv30",
    "version": "1.2.1",
    "sentence": "Library for the PZEM-004T v3.0 Power and Energy monitor"
  },
  {
    "name": "Pablo",
    "version": "1.1.7",
    "sentence": "A library to run Pablo, an Arduino based drawing machine"
  },
  {
    "name": "PacketSerial",
    "version": "1.4.0",
    "sentence": "An Arduino Library that facilitates packet-based serial communication using COBS or SLIP encoding."
  },
  {
    "name": "Packetizer",
    "version": "0.8.3",
    "sentence": "binary data packetization encoder / decoder based on COBS / SLIP encoding"
  },
  {
    "name": "PadComLib",
    "version": "1.1.0",
    "sentence": "A library adds functionality for the PadCom program"
  },
  {
    "name": "PageBuilder",
    "version": "1.5.6",
    "sentence": "HTML string assembly aid library for ESP8266/ESP32 WebServer."
  },
  {
    "name": "PagonGameDev GameLoop",
    "version": "0.0.1",
    "sentence": "\"Library for Creating Game with GameLoop\""
  },
  {
    "name": "Painless Mesh",
    "version": "1.5.4",
    "sentence": "A painless way to setup a mesh with ESP8266 and ESP32 devices"
  },
  {
    "name": "Pairs",
    "version": "1.4.5",
    "sentence": "Text pair:value representation for dynamic data"
  },
  {
    "name": "Palazzetti",
    "version": "2.7.8",
    "sentence": "A communication library for fumis/palazzetti stove."
  },
  {
    "name": "Panel.h for NeoPixel Matrix",
    "version": "1.1.0",
    "sentence": "Control any NeoPixel Matrix using processing like methods"
  },
  {
    "name": "PanelLan",
    "version": "0.0.2",
    "sentence": "TFT LCD Graphics config with touch for PanelLan board"
  },
  {
    "name": "Pantalla12x8",
    "version": "0.0.3",
    "sentence": "Library for graphics on a 12x8 screen on an Arduino R4 WiFi"
  },
  {
    "name": "Paperdink",
    "version": "0.0.7",
    "sentence": "Arduino Library for Paperdink devices"
  },
  {
    "name": "Parallax LCD",
    "version": "1.2.0",
    "sentence": "A library for writing to Parallax three wire LCDs."
  },
  {
    "name": "ParallelPrinter",
    "version": "0.2.6",
    "sentence": "Experimental (not complete) library to connect a parallel printer to Arduino."
  },
  {
    "name": "Parameter",
    "version": "0.0.0",
    "sentence": "Arduino library for handling parameters."
  },
  {
    "name": "Parse Arduino SDK",
    "version": "1.0.3",
    "sentence": "A library that provides access to Parse"
  },
  {
    "name": "ParseCommands",
    "version": "1.5.0",
    "sentence": "Evaluate commands entered over serial or as string and call a defined function."
  },
  {
    "name": "Parser",
    "version": "1.0.0",
    "sentence": "Arduino Library that helps to parse a char array"
  },
  {
    "name": "Pasos",
    "version": "1.0.0",
    "sentence": "Allows Arduino boards to control a the stepper motor model 28BYJ-48."
  },
  {
    "name": "Password",
    "version": "1.2.2",
    "sentence": "Handle passwords easily"
  },
  {
    "name": "PathVariableHandlers",
    "version": "3.0.0",
    "sentence": "Library for handling paths containing variables."
  },
  {
    "name": "PaunaStepper",
    "version": "0.0.1",
    "sentence": "Allows Arduino boards to control hobby stepper motor such as model 28BYJ-48 5v with ULN2003."
  },
  {
    "name": "PciManager",
    "version": "2.1.4",
    "sentence": "This library helps you manage Pin Change Interrupts: subscribe and receive change events."
  },
  {
    "name": "PeanutKing ArduinoShield",
    "version": "1.1.0",
    "sentence": "Arduino library for controlling ArduinoShield by Peanut King."
  },
  {
    "name": "PeanutKing Soccer",
    "version": "4.0.6",
    "sentence": "Arduino library for controlling Soccer Robot by Peanut King."
  },
  {
    "name": "Pelco_And_Arduino",
    "version": "2.3.0",
    "sentence": "This library makes Pelco cameras moves!"
  },
  {
    "name": "PenYX",
    "version": "2.3.3",
    "sentence": "XY Pen plotter"
  },
  {
    "name": "PenguinBotLib",
    "version": "1.0.1",
    "sentence": "A simpler library for the PenguinBot kit v.2 by Elegoo."
  },
  {
    "name": "PersWiFiManager",
    "version": "5.0.0",
    "sentence": "Persistent WiFi Manager"
  },
  {
    "name": "PersistentQueue",
    "version": "1.0.1",
    "sentence": "Implementation of a queue that persists messages to flash."
  },
  {
    "name": "Pervasive_BWRY_Small",
    "version": "9.0.2",
    "sentence": "Driver for Pervasive Displays colour screens"
  },
  {
    "name": "Pervasive_Touch_Small",
    "version": "9.0.2",
    "sentence": "Driver for Pervasive Displays touch-screens"
  },
  {
    "name": "Pervasive_Wide_Large",
    "version": "9.0.2",
    "sentence": "with wide temperature and embedded fast update, large size"
  },
  {
    "name": "Pervasive_Wide_Medium",
    "version": "9.0.2",
    "sentence": "Driver for Pervasive Displays screens"
  },
  {
    "name": "Pervasive_Wide_Small",
    "version": "9.0.3",
    "sentence": "Driver for Pervasive Displays screens"
  },
  {
    "name": "PestoLink-Receive",
    "version": "1.0.6",
    "sentence": "Library for communicating over BLE to PestoLink-Online."
  },
  {
    "name": "PetriNetLib",
    "version": "1.0.0",
    "sentence": "PetriNet Library"
  },
  {
    "name": "Phant",
    "version": "2.2.0",
    "sentence": "A simple interface to post data to a phant stream."
  },
  {
    "name": "PhysicsLabFirmware",
    "version": "1.0.0",
    "sentence": "Firmware for the Physics Lab kit."
  },
  {
    "name": "Piano Board",
    "version": "1.0.1",
    "sentence": "PianoBoard library for the Piano Board from Cheerful Electronic"
  },
  {
    "name": "Picaso-Serial-Arduino-Library",
    "version": "1.0.5",
    "sentence": "Provides library access to communicate with the 4D Systems Picaso processor, when configured in Serial/SPE mode"
  },
  {
    "name": "Pico PIO USB",
    "version": "0.6.1",
    "sentence": "Pico PIO USB library for Arduino"
  },
  {
    "name": "Pico-DMX",
    "version": "3.1.0",
    "sentence": "DMX protocol library for the RaspberryPi Pico"
  },
  {
    "name": "PicoAnalogCorrection",
    "version": "1.4.0",
    "sentence": "Arduino library to calibrate and improve ADC measurements with the Raspberry Pi Pico including the built-in temp sensor."
  },
  {
    "name": "PicoDVI - Adafruit Fork",
    "version": "1.3.0",
    "sentence": "Arduino library for RP2040 DVI output, based on PicoDVI"
  },
  {
    "name": "PicoEncoder",
    "version": "1.1.1",
    "sentence": "High resolution quadrature encoder using the PIO on the RP2040"
  },
  {
    "name": "PicoHM01B0",
    "version": "1.0.1",
    "sentence": "Get high frame rate from a HM01B0 camera using the PIO on the RP2040"
  },
  {
    "name": "PicoMQTT",
    "version": "1.3.0",
    "sentence": "MQTT Broker and client"
  },
  {
    "name": "PicoPLC",
    "version": "1.0.0",
    "sentence": "This library providing a function at specific ESP32 module.This library support all version of Raspberry pi PICO,PICO W"
  },
  {
    "name": "PicoSoftwareSerial",
    "version": "1.0.0",
    "sentence": "Quick 'n' dirty PIO based implementation of SoftwareSerial for an RP2040 based board"
  },
  {
    "name": "PicoStep",
    "version": "1.0.0",
    "sentence": "Library for controlling stepper motors with RP2040 through an H-bridge"
  },
  {
    "name": "PicoWebsocket",
    "version": "1.2.0",
    "sentence": "Websocket Server and Socket"
  },
  {
    "name": "Pico_Keyboard",
    "version": "1.1.2",
    "sentence": "Controls a keyboard composed of a key matrix."
  },
  {
    "name": "Picovoice_AR",
    "version": "3.0.1",
    "sentence": "Picovoice for Arabic language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_DE",
    "version": "3.0.1",
    "sentence": "Picovoice for German language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_EN",
    "version": "3.0.1",
    "sentence": "Picovoice for English language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_ES",
    "version": "3.0.1",
    "sentence": "Picovoice for Spanish language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_FA",
    "version": "3.0.1",
    "sentence": "Picovoice for Farsi language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_FR",
    "version": "3.0.1",
    "sentence": "Picovoice for French language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_HI",
    "version": "3.0.1",
    "sentence": "Picovoice for Hindi language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_IT",
    "version": "3.0.1",
    "sentence": "Picovoice for Italian language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_JA",
    "version": "3.0.1",
    "sentence": "Picovoice for Japanese language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_KO",
    "version": "3.0.1",
    "sentence": "Picovoice for Korean language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_NL",
    "version": "3.0.1",
    "sentence": "Picovoice for Dutch language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_PL",
    "version": "3.0.1",
    "sentence": "Picovoice for Polish language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_PT",
    "version": "3.0.1",
    "sentence": "Picovoice for Portuguese language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_RU",
    "version": "3.0.1",
    "sentence": "Picovoice for Russian language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_SV",
    "version": "3.0.1",
    "sentence": "Picovoice for Swedish language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_VN",
    "version": "3.0.1",
    "sentence": "Picovoice for Vietnamese language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Picovoice_ZH",
    "version": "3.0.1",
    "sentence": "Picovoice for Mandarin language. Picovoice is an end-to-end platform for building voice products on your terms."
  },
  {
    "name": "Pictiva OS288048",
    "version": "0.0.1",
    "sentence": "Library for OSRAM Pictiva OS288048 displays."
  },
  {
    "name": "Pikabot",
    "version": "1.0.1",
    "sentence": "An Arduino library for controlling PikaBot."
  },
  {
    "name": "PimientoClockLib",
    "version": "0.0.5",
    "sentence": "Supporting library for the Pimiento Retro Desk Clock"
  },
  {
    "name": "Pin",
    "version": "4.2.2",
    "sentence": "An easy to use Arduino library for fast and simultaneous operations on Arduino I/O pins."
  },
  {
    "name": "PinButtonEvents",
    "version": "1.0.1",
    "sentence": "Library for handling button events with various conditions and debouncing support."
  },
  {
    "name": "PinChangeInterrupt",
    "version": "1.2.9",
    "sentence": "A simple & compact PinChangeInterrupt library for Arduino."
  },
  {
    "name": "PinExtender Library",
    "version": "1.0.0",
    "sentence": "Library for Pin Extention"
  },
  {
    "name": "PinInGroup",
    "version": "0.1.10",
    "sentence": "A class that groups input pins so they can be read in one logical step."
  },
  {
    "name": "PinMatrix",
    "version": "1.0.0",
    "sentence": "Pin grid-matrix reader"
  },
  {
    "name": "PinOutGroup",
    "version": "0.1.8",
    "sentence": "A class that groups output pins so they can be updated easier and slightly faster on average."
  },
  {
    "name": "PinScribe",
    "version": "1.0.0",
    "sentence": "A library to manage and handle GPIO pin events such as button presses, long presses, and double presses."
  },
  {
    "name": "Pinduino",
    "version": "1.5.0",
    "sentence": "Infterface library for pinduino"
  },
  {
    "name": "PioSPI",
    "version": "0.0.1",
    "sentence": "Allows RP2040 to control a SPI bus on any of its pins using PIOs"
  },
  {
    "name": "PixelGrid",
    "version": "0.0.8",
    "sentence": "Pixelgrid is an arduino based handheld game console."
  },
  {
    "name": "PixelMaestro",
    "version": "2.1.1",
    "sentence": "Library for creating and rendering 2D animations and patterns."
  },
  {
    "name": "Pixel_Spork",
    "version": "1.0.4",
    "sentence": "Pixel Spork is an Arduino library for controlling addressable LEDs."
  },
  {
    "name": "Pixetto",
    "version": "1.6.6",
    "sentence": "An Arduino library for VIA Pixetto Vision Sensor."
  },
  {
    "name": "PixettoLite",
    "version": "1.6.5",
    "sentence": "An lightweight Arduino library for VIA Pixetto."
  },
  {
    "name": "PixhawkArduinoMAVLink",
    "version": "1.0.1",
    "sentence": "Arduino Library to receive Pixhawk sensor's data"
  },
  {
    "name": "Pixie",
    "version": "1.3.0",
    "sentence": "Library for controlling Pixie Displays!"
  },
  {
    "name": "PixieChromaLite",
    "version": "0.2.0",
    "sentence": "RAM-limited Library for controlling Pixie Chroma displays on small microcontrollers!"
  },
  {
    "name": "Pixie_Chroma",
    "version": "1.2.0",
    "sentence": "Library for controlling Pixie Chroma displays!"
  },
  {
    "name": "Pixxi-Serial-Arduino-Library",
    "version": "1.0.3",
    "sentence": "Provides library access to communicate with the 4D Systems Pixxi processors, when configured in Serial/SPE mode"
  },
  {
    "name": "Plaquette",
    "version": "0.6.4",
    "sentence": "An object-oriented library for creative physical computing."
  },
  {
    "name": "PlayNote",
    "version": "1.1.1",
    "sentence": "A library that makes translate notes of song to Hz and play it through passive buzzer."
  },
  {
    "name": "PlayRtttl",
    "version": "2.1.0",
    "sentence": "Plays RTTTL / RTX melodies/ringtones from FLASH or RAM.<br/>"
  },
  {
    "name": "Plex64",
    "version": "1.0.0",
    "sentence": "A library for the Plex64 analog input multiplexer shield."
  },
  {
    "name": "PlotPlus",
    "version": "1.0.0",
    "sentence": "Plotting library compatible with Sloeber IDE and SimPlot"
  },
  {
    "name": "Plotter",
    "version": "2.4.1",
    "sentence": "An Arduino library for easy plotting on host computer via serial communication."
  },
  {
    "name": "PlugAndPlayForLoRa",
    "version": "1.0.0",
    "sentence": "Arduino library interacting and sending messages with a 2.4Ghz Lora modem."
  },
  {
    "name": "PlugPiBlack",
    "version": "0.0.3",
    "sentence": "Library used for program the Plu&Pi Black board."
  },
  {
    "name": "PmodCls",
    "version": "0.1.0",
    "sentence": "Driver for the Digilent PmodCLS LCD device"
  },
  {
    "name": "PneumaticStepper",
    "version": "1.0.11",
    "sentence": "A library to manage pneumatic (stepper) motors and servo valves"
  },
  {
    "name": "PodEnoSim",
    "version": "0.1.0",
    "sentence": "A library to interface with Pod ENO SIM Application"
  },
  {
    "name": "PointzNet",
    "version": "1.1.0",
    "sentence": "A library that makes Internet of Things send data to PointzNet.com."
  },
  {
    "name": "Pokerobo_ABC",
    "version": "0.1.0",
    "sentence": "A library for Pokerobo common classes and utilities"
  },
  {
    "name": "Pokerobo_Arm",
    "version": "0.1.0",
    "sentence": "A library for handling Pokerobo robot arm"
  },
  {
    "name": "Pokerobo_Car",
    "version": "0.1.5-beta",
    "sentence": "A library for handling a robot car."
  },
  {
    "name": "Pokerobo_I2C",
    "version": "0.1.0-alpha",
    "sentence": "A library for handling Pokerobo I2C communication"
  },
  {
    "name": "Pokerobo_IRx",
    "version": "0.1.0-beta",
    "sentence": "A library for handling Pokerobo IR communication"
  },
  {
    "name": "Pokerobo_Labs",
    "version": "0.1.13",
    "sentence": "A collection of Pokerobo Labs"
  },
  {
    "name": "Pokerobo_PSx",
    "version": "0.1.0-beta",
    "sentence": "A library for handling PS2 Dualshock"
  },
  {
    "name": "Pokerobo_RCB",
    "version": "0.1.6-alpha",
    "sentence": "A library for handling Pokerobo remote control board."
  },
  {
    "name": "PollingTimer",
    "version": "0.6.0",
    "sentence": "Arduino library to manage timing and event in a flexible way with polling"
  },
  {
    "name": "Pololu3piPlus32U4",
    "version": "1.1.3",
    "sentence": "Arduino library for the Pololu 3pi+ 32u4 Robot"
  },
  {
    "name": "PololuBuzzer",
    "version": "1.2.0",
    "sentence": "PololuBuzzer library for Arduino"
  },
  {
    "name": "PololuHD44780",
    "version": "2.0.0",
    "sentence": "C++ library for the Arduino IDE that allows you to control an LCD that uses the Hitachi HD44780 protocol."
  },
  {
    "name": "PololuLedStrip",
    "version": "4.3.1",
    "sentence": "Arduino library for addressable RGB LED strips from Pololu"
  },
  {
    "name": "PololuMaestro",
    "version": "1.0.0",
    "sentence": "Pololu Maestro Servo Controller library for Arduino"
  },
  {
    "name": "PololuMenu",
    "version": "2.0.0",
    "sentence": "Pololu library for simple LCD Menus."
  },
  {
    "name": "PololuOLED",
    "version": "2.0.0",
    "sentence": "Arduino library for displaying text and graphics on a SH1106 OLED display."
  },
  {
    "name": "PololuQik",
    "version": "2.1.0",
    "sentence": "Arduino library for the Pololu Qik dual serial motor controllers"
  },
  {
    "name": "PololuRPiSlave",
    "version": "2.0.0",
    "sentence": "Pololu Raspberry Pi I2C Slave Arduino library"
  },
  {
    "name": "Polyline",
    "version": "1.0.0",
    "sentence": "Encode latitude/longitude coordinates to a Polyline string."
  },
  {
    "name": "Polymorphic Buttons",
    "version": "1.0.3",
    "sentence": "A simple library to make multifunction buttons."
  },
  {
    "name": "Ponoor L6470 Library",
    "version": "1.1.0",
    "sentence": "STM L6470 stepper driver chip library."
  },
  {
    "name": "Ponoor PowerSTEP01 Library",
    "version": "1.1.0",
    "sentence": "STM PowerSTEP01 stepper driver chip library with voltage and current drive mode."
  },
  {
    "name": "Porcupine_AR",
    "version": "3.0.1",
    "sentence": "Porcupine for Arabic language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_DE",
    "version": "3.0.1",
    "sentence": "Porcupine for German language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_EN",
    "version": "3.0.1",
    "sentence": "Porcupine for English language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_ES",
    "version": "3.0.1",
    "sentence": "Porcupine for Spanish language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_FA",
    "version": "3.0.1",
    "sentence": "Porcupine for Farsi language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_FR",
    "version": "3.0.1",
    "sentence": "Porcupine for French language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_HI",
    "version": "3.0.1",
    "sentence": "Porcupine for Hindi language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_IT",
    "version": "3.0.1",
    "sentence": "Porcupine for Italian language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_JA",
    "version": "3.0.1",
    "sentence": "Porcupine for Japanese language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_KO",
    "version": "3.0.1",
    "sentence": "Porcupine for Korean language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_NL",
    "version": "3.0.1",
    "sentence": "Porcupine for Dutch language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_PL",
    "version": "3.0.1",
    "sentence": "Porcupine for Polish language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_PT",
    "version": "3.0.1",
    "sentence": "Porcupine for Portuguese language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_RU",
    "version": "3.0.1",
    "sentence": "Porcupine for Russian language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_SV",
    "version": "3.0.1",
    "sentence": "Porcupine for Swedish language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_VN",
    "version": "3.0.1",
    "sentence": "Porcupine for Vietnamese language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "Porcupine_ZH",
    "version": "3.0.1",
    "sentence": "Porcupine for Mandarin language. Porcupine is a highly-accurate and lightweight wake word engine."
  },
  {
    "name": "PortaMob",
    "version": "1.0.0",
    "sentence": "Portable Mobile device-like shield for Arduino UNO."
  },
  {
    "name": "Portenta_H7_AsyncHTTPRequest",
    "version": "1.5.0",
    "sentence": "Simple Async HTTP Request library, supporting GET, POST, PUT, PATCH, DELETE and HEAD, on top of Portenta_H7_AsyncTCP library for Portenta_7, using Vision-shield thernet or Murata WiFi."
  },
  {
    "name": "Portenta_H7_AsyncTCP",
    "version": "1.4.0",
    "sentence": "Asynchronous TCP Library for STM32H7-based Portenta_H7 using mbed_portenta core"
  },
  {
    "name": "Portenta_H7_AsyncUDP",
    "version": "1.0.0",
    "sentence": "Asynchronous TCP Library for STM32H7-based Portenta_H7 using mbed_portenta core"
  },
  {
    "name": "Portenta_H7_AsyncWebServer",
    "version": "1.5.0",
    "sentence": "Asynchronous WebServer Library for STM32H7-based Portenta_H7 using mbed_portenta core."
  },
  {
    "name": "Portenta_H7_ISR_Servo",
    "version": "1.0.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on Portenta_H7 board to control multiple servo motors."
  },
  {
    "name": "Portenta_H7_PWM",
    "version": "2.1.0",
    "sentence": "This library enables you to use Hardware Timers on an STM32H7-based Portenta_H7 board to create and output PWM to pins."
  },
  {
    "name": "Portenta_H7_Slow_PWM",
    "version": "1.2.1",
    "sentence": "This library enables you to use Hardware Timers on an STM32H7-based Portenta_H7 board to create and output PWM to pins."
  },
  {
    "name": "Portenta_H7_TimerInterrupt",
    "version": "1.4.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an STM32H7-based Portenta_H7 board. PWM feature can now be used"
  },
  {
    "name": "Posit",
    "version": "0.1.2",
    "sentence": "Library for posit arithmetic on Arduino Uno and other microcontrollers"
  },
  {
    "name": "PositionControl",
    "version": "1.2.0",
    "sentence": "This is a library aiming at implementing pid control to control the position of a DC motor with feedback from quadrature encoder using speed control driver that accepts PWM input. It is a multifunctional  program with extra feature of tuning the gain parameters and very useful for robotic enthusiast in wheeled robots"
  },
  {
    "name": "PostNeoSWSerial",
    "version": "1.0.5",
    "sentence": "An efficient replacement for SoftwareSerial at baud rates 9600, 19200 and 38400."
  },
  {
    "name": "Potentiometer_ADI_Arduino",
    "version": "0.1.0",
    "sentence": "Demo code for AD5161"
  },
  {
    "name": "Potentiostat_Shield",
    "version": "1.0.1",
    "sentence": "Arduino library for potentiostat shield."
  },
  {
    "name": "PowerFeather-SDK",
    "version": "1.1.0",
    "sentence": "Software development kit for PowerFeather boards."
  },
  {
    "name": "PowerFlex4m",
    "version": "1.0.0",
    "sentence": "Abstraction layer for simple ModBus communications with PowerFlex 4m VFDs"
  },
  {
    "name": "PowerMonitor",
    "version": "1.0.0",
    "sentence": "A Power monitor library"
  },
  {
    "name": "Powerbaas",
    "version": "1.3.11",
    "sentence": "Arduino library for Powerbaas Smart Meter P1 Shield"
  },
  {
    "name": "Pozyx",
    "version": "1.2.2",
    "sentence": "Library for the pozyx indoor positioning shield"
  },
  {
    "name": "Prandom",
    "version": "0.1.6",
    "sentence": "Arduino library for random number generation with Python random interface."
  },
  {
    "name": "PrayerTimes",
    "version": "1.0.0",
    "sentence": "A lightweight Arduino library for calculating Islamic prayer times based on multiple methods."
  },
  {
    "name": "PreMo - Virtual Path Following",
    "version": "2.0.0",
    "sentence": "Adds virtual path following feature to differential drive robots."
  },
  {
    "name": "PrecDueTimer",
    "version": "1.0.1",
    "sentence": "Timer Library that is optimized for when frequent changes to the timer(s) period/frequency are required."
  },
  {
    "name": "PreciseLM35",
    "version": "1.0.2",
    "sentence": "A simple LM35 wrapper with optional voltage calibration facility"
  },
  {
    "name": "Preferences",
    "version": "2.1.0",
    "sentence": "Preferences library for Arduino, ESP8266 and Particle Gen3 devices"
  },
  {
    "name": "PreferencesCLI",
    "version": "1.0.0",
    "sentence": "Arduino library to allow access to the Preferences library via the SimpleCLI library."
  },
  {
    "name": "PressureNXPMXP",
    "version": "1.0.0",
    "sentence": "Pressure differential MXP serie"
  },
  {
    "name": "PrimitiveStepperMotor",
    "version": "1.0.0",
    "sentence": "A library that makes using Stepper Motors with relays or transistors easy!"
  },
  {
    "name": "PrintCharArray",
    "version": "0.4.0",
    "sentence": "Library to capture prints into a char array."
  },
  {
    "name": "PrintCppVersion",
    "version": "1.0.0",
    "sentence": "Print which C++ standard is in use for your Arduino board."
  },
  {
    "name": "PrintEx",
    "version": "1.2.0",
    "sentence": "A printing & formatting enhancement for Stream & Print based libraries."
  },
  {
    "name": "PrintSize",
    "version": "0.3.5",
    "sentence": "Library to determine size of a printed variable."
  },
  {
    "name": "PrintString",
    "version": "0.2.5",
    "sentence": "Library to capture prints into a String."
  },
  {
    "name": "PrinterDuino",
    "version": "0.1.1",
    "sentence": "The simplest library to print in paper using  3 axis"
  },
  {
    "name": "Printoo_Library",
    "version": "1.0.2",
    "sentence": "The library for the Printoo modules."
  },
  {
    "name": "Pro Trinket USB Keyboard Library",
    "version": "1.1.2",
    "sentence": "An arduino library to turn a Pro Trinket 5V/16MHz into a USB Keyboard!"
  },
  {
    "name": "Pro Trinket USB Mouse",
    "version": "1.1.3",
    "sentence": "Library for Pro trinket to turn it into a mouse!"
  },
  {
    "name": "ProcessScheduler",
    "version": "1.0.0",
    "sentence": "An OOP multitasking library"
  },
  {
    "name": "Profiler",
    "version": "1.0.6",
    "sentence": "Easily profile your Arduino functions to see how much time they take. The output can be disabled and enabled at runtime. Very lightweight."
  },
  {
    "name": "Progetto One Pin Keypad",
    "version": "1.0.45",
    "sentence": "A library to use the One Pin Keypad."
  },
  {
    "name": "PromLokiTransport",
    "version": "0.2.2",
    "sentence": "Abstracts a bunch of hardware and connectivity away from the GrafanaLoki and PrometheusArduino libraries"
  },
  {
    "name": "PrometheusArduino",
    "version": "0.4.0",
    "sentence": "Send data to Prometheus via the remote write protocol."
  },
  {
    "name": "PropertyChangeLib",
    "version": "1.0.0",
    "sentence": "Property Change Library"
  },
  {
    "name": "ProtoCentral ADS1220 24-bit ADC Library",
    "version": "1.2.1",
    "sentence": "Library for the ProtoCentral ADS1220 breakout board"
  },
  {
    "name": "ProtoCentral ADS1262 32-bit precision ADC Library",
    "version": "1.0.0",
    "sentence": "ADS1262 32-bit ADC library for Arduino"
  },
  {
    "name": "ProtoCentral ADS1292R ECG and Respiration boards library",
    "version": "1.1.0",
    "sentence": "Library for the ProtoCentral ADS1292R Shield/Breakout  board"
  },
  {
    "name": "ProtoCentral ADS1293 ECG Library",
    "version": "1.0.0",
    "sentence": "Library to read from the ProtoCentral ADS1293 ECG breakout"
  },
  {
    "name": "ProtoCentral AFE4490 PPG and SpO2 boards library",
    "version": "1.3.3",
    "sentence": "Library for the Protocentral AFE4490 Shield and Breakout board"
  },
  {
    "name": "ProtoCentral FDC1004 Capacitive Sensor Library",
    "version": "1.0.2",
    "sentence": "Library for the ProtoCentral FDC1004 breakout board"
  },
  {
    "name": "ProtoCentral HealthyPi v4 Library",
    "version": "0.3.2",
    "sentence": "Library for the ProtoCentral HealthyPi v4"
  },
  {
    "name": "ProtoCentral MAX30001",
    "version": "1.4.0",
    "sentence": "Library for the Protocentral MAX30001 Single lead ECG breakout board."
  },
  {
    "name": "ProtoCentral MAX30003 ECG AFE Sensor Library",
    "version": "1.0.2",
    "sentence": "Library for the ProtoCentral MAX30003 Single lead ECG breakout board."
  },
  {
    "name": "ProtoCentral MAX30205 Body Temperature Sensor Library",
    "version": "2.1.1",
    "sentence": "Arduino library for the ProtoCentral MAX30205 Body Temperature Sensor breakout board"
  },
  {
    "name": "ProtoCentral MAX86150 PPG and ECG IC library",
    "version": "1.0.2",
    "sentence": "Library for the MAX86150 PPG and ECG sensor module breakout board"
  },
  {
    "name": "ProtoCentral MLX90632 Non-contact temperature Library",
    "version": "1.0.0",
    "sentence": "Library for the ProtoCentral MLX90632 breakout board"
  },
  {
    "name": "ProtoCentral Pulse Express SpO2 Heartrate and BPT sensor",
    "version": "1.0.3",
    "sentence": "Library for the ProtoCentral Pulse Express board"
  },
  {
    "name": "ProtoCentral TLA20xx",
    "version": "1.0.0",
    "sentence": "Library for the ProtoCentral TI TLA2021/TLA2022/TLA2024 breakout board."
  },
  {
    "name": "Protothreads",
    "version": "1.4.0-arduino.beta.1",
    "sentence": "A lightweight stackless threads library"
  },
  {
    "name": "Proyectil GD3300",
    "version": "1.0.2",
    "sentence": "A library for Serial MP3 Player board (GD3300 / GD3200AB chip)."
  },
  {
    "name": "Proyectil MedeaWiz",
    "version": "1.0.0",
    "sentence": "A library for Sprite serial control"
  },
  {
    "name": "Proyectil digitalIO",
    "version": "1.0.1",
    "sentence": "Biblioteca Para manejar entradas y salidas digitales, Proyectil Mx"
  },
  {
    "name": "Ps2KeyboardHost",
    "version": "1.0.1",
    "sentence": "PS2 Keyboard host controller"
  },
  {
    "name": "Psgino",
    "version": "1.0.0",
    "sentence": "A library to control PSG (AY-3-8910, YMZ294, etc.) with MML."
  },
  {
    "name": "PsxNewLib",
    "version": "0.4.0",
    "sentence": "A library that allows interfacing with PlayStation 1/2 controllers"
  },
  {
    "name": "PsychicHttp",
    "version": "1.2.1",
    "sentence": "PsychicHttp is a robust webserver that supports http/https + websockets."
  },
  {
    "name": "Psychrometer",
    "version": "1.0.0",
    "sentence": "Library for psychrometer - read humidity from two thermometers"
  },
  {
    "name": "PubSubClient",
    "version": "2.8.0",
    "sentence": "A client library for MQTT messaging."
  },
  {
    "name": "PubSubClientTools",
    "version": "0.6.0",
    "sentence": "Tools for easier usage of PubSubClient"
  },
  {
    "name": "PubSubClient_iiot",
    "version": "2.0.0",
    "sentence": "A fork of Nick O'Leary's PubSubClient to enable protobuf will messages."
  },
  {
    "name": "Pubnub",
    "version": "3.3.0",
    "sentence": "Pubnub SDK for Arduino."
  },
  {
    "name": "Puertas-Logicas-Plugin",
    "version": "1.0.0",
    "sentence": "Librería para MentorBit y Puertas Lógicas"
  },
  {
    "name": "PulseCom",
    "version": "1.0.0",
    "sentence": "Universal communication library for protocols using pulse length to define bytes."
  },
  {
    "name": "PulseDivider",
    "version": "0.1.2",
    "sentence": "Arduino library to divide a pulse stream with a float factor."
  },
  {
    "name": "PulseFlowMeter",
    "version": "1.0.0",
    "sentence": "PulseFlowMeter is simple library for reading accurate flow rates with pulse-output type flow meters."
  },
  {
    "name": "PulsePattern",
    "version": "0.1.7",
    "sentence": "Library to generate repeating pulse patterns. (AVR only)"
  },
  {
    "name": "PulsePosition",
    "version": "1.0.0",
    "sentence": "Send and receive multiple high resolution PPM encoded signal streams."
  },
  {
    "name": "PulseRainUARTConsole",
    "version": "1.0.4",
    "sentence": "Arduino Library for UART Console"
  },
  {
    "name": "PulseSensor Playground",
    "version": "2.3.0",
    "sentence": "Support at PulseSensor.com"
  },
  {
    "name": "Pulser",
    "version": "0.0.2",
    "sentence": "A lightweight library to send sequences of pulses on output pins."
  },
  {
    "name": "PushButton Event Modelling Library",
    "version": "1.0.0",
    "sentence": "PushButton events modelling library"
  },
  {
    "name": "PushButtonTaps",
    "version": "1.0.4",
    "sentence": "Read Push Button Debounced as Single Tap, Double Tap or Long Press without blocking program."
  },
  {
    "name": "Pushbutton",
    "version": "2.0.0",
    "sentence": "Pushbutton library for Arduino"
  },
  {
    "name": "Pushdata_ESP8266_SSL",
    "version": "0.0.9",
    "sentence": "Free, ultra-simple time series data storage for your IoT sensors"
  },
  {
    "name": "Pushetta",
    "version": "1.0.1",
    "sentence": "The library to use Pushetta service, a service to push notifications to mobile phones and other devices"
  },
  {
    "name": "PwFusion_Data_Transfer",
    "version": "1.0.2",
    "sentence": "PwFusion I2C communication simplification library"
  },
  {
    "name": "PwFusion_I2C_Buttons_Arduino_Library",
    "version": "1.0.0",
    "sentence": "PwFusion I2C Buttons interface library"
  },
  {
    "name": "PwFusion_I2C_Encoder_Arduino_Library",
    "version": "1.0.0",
    "sentence": "PwFusion I2C Encoder interface library"
  },
  {
    "name": "PwFusion_I2C_Joystick_Arduino_Library",
    "version": "1.0.0",
    "sentence": "PwFusion I2C Joystick interface library"
  },
  {
    "name": "PwFusion_I2C_Toggle_Arduino_Library",
    "version": "1.0.0",
    "sentence": "PwFusion I2C switch interface library"
  },
  {
    "name": "PwmSin",
    "version": "1.0.0",
    "sentence": "This is an LED lighting library for Arduino."
  },
  {
    "name": "PxMatrix Christmas Icons",
    "version": "0.0.3",
    "sentence": "Arduino/ESP8366 library which contains a number of LED fade effects."
  },
  {
    "name": "PxMatrix LED MATRIX library",
    "version": "1.8.1",
    "sentence": "PxMatrix LED MATRIX library for ESP8266, ESP32 and ATMEL"
  },
  {
    "name": "PxMatrix-1R",
    "version": "1.0.0",
    "sentence": "PxMatrix 1R LED MATRIX library for ESP8266, ESP32 and ATMEL"
  },
  {
    "name": "PxServ",
    "version": "1.0.8",
    "sentence": "PxServ Library for ESP32 / ESP8266"
  },
  {
    "name": "PyArduinoDebug",
    "version": "0.4.0",
    "sentence": "A library enabling USB-based debugging."
  },
  {
    "name": "PyDuinoBridge",
    "version": "1.0.0",
    "sentence": "A transparent library for communication between Python and Arduino."
  },
  {
    "name": "QC2Control",
    "version": "1.1.0",
    "sentence": "Set the voltage of a Quick Charge 2.0 source via the Arduino."
  },
  {
    "name": "QC3Control",
    "version": "1.4.1",
    "sentence": "Sets the voltage of a Quick Charge 3.0 source."
  },
  {
    "name": "QCFA",
    "version": "0.0.2-beta.3",
    "sentence": "Quadcopter Control Functions using Arduino"
  },
  {
    "name": "QDEC",
    "version": "2.1.0",
    "sentence": "High-efficiency, state-machine based quadrature decoder."
  },
  {
    "name": "QDispatch",
    "version": "1.0.0",
    "sentence": "Synchronous task library."
  },
  {
    "name": "QList",
    "version": "0.6.7",
    "sentence": "Library implements linked lists"
  },
  {
    "name": "QMC5883LCompass",
    "version": "1.2.3",
    "sentence": "Library for using QMC5583L series chip boards as a compass."
  },
  {
    "name": "QN8066",
    "version": "1.3.7",
    "sentence": "Control your TX/RX QN8066 device"
  },
  {
    "name": "QNEthernet",
    "version": "0.31.0",
    "sentence": "An lwIP-based Ethernet library for Teensy 4.1 and other platforms."
  },
  {
    "name": "QPESP32",
    "version": "6.9.4",
    "sentence": "QP/C++ Real-Time Embedded Framework for Arduino."
  },
  {
    "name": "QRCode",
    "version": "0.0.1",
    "sentence": "A simple QR code generation library."
  },
  {
    "name": "QRCodeGenerator",
    "version": "0.0.1",
    "sentence": "A simple QR code generation library."
  },
  {
    "name": "QRcodeDisplay",
    "version": "2.1.0",
    "sentence": "Base code for displaying QRcodes on ESP based MCU with OLED, TFT or E-Ink displays"
  },
  {
    "name": "QRcodeEink",
    "version": "2.1.1",
    "sentence": "QR code generation on E-INK displays"
  },
  {
    "name": "QRcodeOled",
    "version": "2.0.0",
    "sentence": "QR code generation on OLED displays"
  },
  {
    "name": "QRcode_ST7789",
    "version": "2.1.0",
    "sentence": "QR code generation for TFT displays"
  },
  {
    "name": "QRcode_eSPI",
    "version": "2.0.0",
    "sentence": "QR code generation for TFT displays"
  },
  {
    "name": "QTRSensors",
    "version": "4.0.0",
    "sentence": "Arduino library for the Pololu QTR Reflectance Sensors"
  },
  {
    "name": "QUAD7SHIFT",
    "version": "1.0.2",
    "sentence": "Library for driving 4 digits seven segments displays (7 segments displays) for modules that use 74HC595 shift registers."
  },
  {
    "name": "QZQSM",
    "version": "1.3.0",
    "sentence": "QZSS DC Report Service Decode Library"
  },
  {
    "name": "QZSSDCX",
    "version": "1.0.0",
    "sentence": "QZSS DCX Decode Library"
  },
  {
    "name": "Qlink",
    "version": "0.1.0",
    "sentence": "serial command API library for Arduino."
  },
  {
    "name": "Qmi8658c",
    "version": "1.0.0",
    "sentence": "Interface with Qmi8658c Inertial Measurement Unit"
  },
  {
    "name": "QuadratureEncoder",
    "version": "1.0.0",
    "sentence": "A library for quadrature encoder utilizing enableInterrupt.h."
  },
  {
    "name": "QuarkDB",
    "version": "1.0.3",
    "sentence": "A No-SQL Json Document DB based on ArduinoJson 6 with command line interface and APIs for esp8266 and esp32 using SPIFFS"
  },
  {
    "name": "QuarkTS",
    "version": "1.7.5",
    "sentence": "An open-source OS for embedded applications that supports prioritized cooperative scheduling, time control, inter-task communications primitives, hierarchical state machines and CoRoutines."
  },
  {
    "name": "QubitroMqttClient",
    "version": "0.0.4",
    "sentence": "(BETA) Easily connect to Qubitro IoT Platform with customized MQTT methods."
  },
  {
    "name": "Queue",
    "version": "2.0.0",
    "sentence": "Queue handling library."
  },
  {
    "name": "Queuetue Digital Balance Library",
    "version": "1.0.6",
    "sentence": "A library of functions to build a digital balance"
  },
  {
    "name": "Queuetue HX711 Library",
    "version": "1.0.1",
    "sentence": "Simple driver for the HX711 ADC."
  },
  {
    "name": "QuickCharge",
    "version": "1.0.0",
    "sentence": "Library for control QuickCharge 2.0/3.0 power adapter or charger"
  },
  {
    "name": "QuickESPNow",
    "version": "2.0.0",
    "sentence": "An Arduino library for handling ESP-NOW communication."
  },
  {
    "name": "QuickMedianLib",
    "version": "1.1.1",
    "sentence": "QuickMedian Library"
  },
  {
    "name": "QuickPID",
    "version": "3.1.9",
    "sentence": "A fast PID controller with multiple options. Various Integral anti-windup, Proportional and Derivative control modes."
  },
  {
    "name": "QuickSortLib",
    "version": "1.2.0",
    "sentence": "QuickSort Library"
  },
  {
    "name": "QuickStats",
    "version": "1.2.4",
    "sentence": "Descriptive Statistics for Arduino"
  },
  {
    "name": "QwiicUART Library",
    "version": "0.0.1",
    "sentence": "An Arduino library to utilize the NXP SC16IS741 as a hardware serial port controlled via I2C."
  },
  {
    "name": "R30X-Fingerprint-Sensor-Library",
    "version": "1.3.1",
    "sentence": "Arduino library for interfacing R30X series optical fingerprint scanners."
  },
  {
    "name": "R4A_ESP32",
    "version": "0.6.7",
    "sentence": "Robots-For-All ESP32 support routines."
  },
  {
    "name": "R4A_I2C",
    "version": "0.4.7",
    "sentence": "Robots-For-All I2C support routines."
  },
  {
    "name": "R4A_Robot",
    "version": "0.3.7",
    "sentence": "Robots-For-All robot support routines."
  },
  {
    "name": "R4HttpClient",
    "version": "1.0.4",
    "sentence": "A lightweight HTTP client wrapper library for Arduino Uno R4 WiFi."
  },
  {
    "name": "R4_LIB_FOR_MCP2517FD",
    "version": "2.0.0",
    "sentence": "Library for interfacing MCP2517FD with Arduino Uno R4 Minima"
  },
  {
    "name": "R4_Touch",
    "version": "1.1.0",
    "sentence": "Touch Sensing for UNO R4"
  },
  {
    "name": "RADAR",
    "version": "0.1.8",
    "sentence": "Arduino library for a pan tilt radar."
  },
  {
    "name": "RAIN",
    "version": "0.1.4",
    "sentence": "Arduino library for FC-37 analog rain sensor and compatibles."
  },
  {
    "name": "RAK-OneWireSerial",
    "version": "0.0.2",
    "sentence": "RAKWireless OneWireSerial"
  },
  {
    "name": "RAK12019_LTR390_UV_Light",
    "version": "1.0.1",
    "sentence": "RAKWireless library for the RAK12019 module with the LTR390 UV light sensor"
  },
  {
    "name": "RAK12022-MAX31865",
    "version": "1.0.1",
    "sentence": "RAKWireless library for the RAK12022-MAX31865"
  },
  {
    "name": "RAK12027-D7S",
    "version": "1.0.0",
    "sentence": "Arduino library for the RAK12027 seismic sensor."
  },
  {
    "name": "RAK12029-LDC1614",
    "version": "1.0.1",
    "sentence": "RAKWireless library for the RAK12029 Induction Sensor module"
  },
  {
    "name": "RAK12035_SoilMoisture",
    "version": "1.0.4",
    "sentence": "Provide access to all functions of the RAKwireless RAK12023/RAK12035 Soil Moisture Sensor."
  },
  {
    "name": "RAK12039_PM_Sensor",
    "version": "1.0.0",
    "sentence": "RAKwireless library for the RAK12039 Particle Matter Sensor"
  },
  {
    "name": "RAK12052-MLX90640",
    "version": "1.0.0",
    "sentence": "RAKWireless library for the matrix"
  },
  {
    "name": "RAK13006-MCP2518 library",
    "version": "1.0.0",
    "sentence": "Arduino library for controlling CAN communication"
  },
  {
    "name": "RAK13800_W5100S",
    "version": "1.0.0",
    "sentence": "Arduino library for the RAK13800 Ethernet Module."
  },
  {
    "name": "RAK13801_UWB",
    "version": "1.0.0",
    "sentence": "Arduino library to use Decawave DW1000 IC."
  },
  {
    "name": "RAK14000_EPD",
    "version": "1.0.0",
    "sentence": "RAKWireless library for the RAK14000 EPD module"
  },
  {
    "name": "RAK14014-FT6336U",
    "version": "1.0.1",
    "sentence": "Arduino library for TFT display"
  },
  {
    "name": "RAK15007-CY15B108QN",
    "version": "1.0.0",
    "sentence": "Arduino library for controlling FRAM."
  },
  {
    "name": "RAK1500x-MB85RC",
    "version": "1.0.0",
    "sentence": "RAKWireless library for the FRAM"
  },
  {
    "name": "RAK5814-ATECC608A",
    "version": "1.0.0",
    "sentence": "RAKWireless library for the encryption"
  },
  {
    "name": "RAKwireless ADS7830 library",
    "version": "1.0.0",
    "sentence": "RAKWireless library for the RAK16001 Sensor Modules"
  },
  {
    "name": "RAKwireless CAP1293 Touch Pad library",
    "version": "1.0.3",
    "sentence": "RAKWireless library for the RAK14002 module with the CAP1293 sense IC"
  },
  {
    "name": "RAKwireless I3G4250D Gyroscope library",
    "version": "1.0.0",
    "sentence": "RAKWireless library for the RAK12025 module with I3G4250D Gyroscope"
  },
  {
    "name": "RAKwireless LED Matrix",
    "version": "1.0.0",
    "sentence": "Arduino library for controlling single-wire-based LED pixels and strip."
  },
  {
    "name": "RAKwireless MQx library",
    "version": "1.0.0",
    "sentence": "RAKWireless library for the MQx Gas Sensor Modules"
  },
  {
    "name": "RAKwireless NCP5623 RGB LED library",
    "version": "1.0.3",
    "sentence": "RAKWireless library for the RAK14001 module with the NCP5623 RGB LED"
  },
  {
    "name": "RAKwireless RAK12033 Library",
    "version": "1.0.1",
    "sentence": "Arduino library for RAK12033 6DoF sensor."
  },
  {
    "name": "RAKwireless RAK12034",
    "version": "1.0.0",
    "sentence": "RAKWireless library for the WisBlock 9DOF RAK12034 module, based on Bosch BMX160"
  },
  {
    "name": "RAKwireless RAK13600 RFID library",
    "version": "1.0.1",
    "sentence": "RAKWireless library for the RAK13600 RFID module with the PN532"
  },
  {
    "name": "RAKwireless Storage",
    "version": "1.0.2",
    "sentence": "Driver for WisBlock Storage modules"
  },
  {
    "name": "RAKwireless TLE7259 LIN Bus library",
    "version": "1.0.3",
    "sentence": "RAKWireless library for the RAK13005 LIN bus module with the TLE7259 chip"
  },
  {
    "name": "RAKwireless VEML Light Sensor",
    "version": "1.0.2",
    "sentence": "RAKWireless library for the RAK12010 ambient light sensor module with the VEML7700 chip"
  },
  {
    "name": "RAKwireless-Audio-library",
    "version": "1.0.8",
    "sentence": "RAKWireless library for the RAK audio module"
  },
  {
    "name": "RAKwireless-RAK12021-TCS37725",
    "version": "1.0.0",
    "sentence": "RAKWireless library for the RAK12021 RGB Light Sensor with the TCS37725"
  },
  {
    "name": "RAKwireless_ADC_SGM58031_library",
    "version": "1.0.1",
    "sentence": "RAKWireless library for ADC"
  },
  {
    "name": "RAKwireless_SDI-12",
    "version": "1.0.1",
    "sentence": "Arduino Library for RAK13010 SDI-12 module."
  },
  {
    "name": "RBD_Button",
    "version": "2.2.1",
    "sentence": "Read and debounce buttons and switches."
  },
  {
    "name": "RBD_Capacitance",
    "version": "1.0.5",
    "sentence": "Measure change in capacitance."
  },
  {
    "name": "RBD_HumanSensor",
    "version": "1.0.5",
    "sentence": "Detect human presence, touch, and pickup events."
  },
  {
    "name": "RBD_Light",
    "version": "2.1.8",
    "sentence": "Control many lights."
  },
  {
    "name": "RBD_LightSensor",
    "version": "1.0.4",
    "sentence": "Read and calibrate photoresistors."
  },
  {
    "name": "RBD_Motor",
    "version": "2.1.2",
    "sentence": "Control many motors without delay."
  },
  {
    "name": "RBD_SerialManager",
    "version": "1.0.0",
    "sentence": "A simple interface for serial communication."
  },
  {
    "name": "RBD_Servo",
    "version": "1.0.2",
    "sentence": "Control many servos without delay."
  },
  {
    "name": "RBD_Threshold",
    "version": "1.0.3",
    "sentence": "Set and check numeric quantile scales."
  },
  {
    "name": "RBD_Timer",
    "version": "1.4.3",
    "sentence": "Manage many timed events."
  },
  {
    "name": "RBD_WaterSensor",
    "version": "2.0.1",
    "sentence": "Measure and calibrate water level sensors."
  },
  {
    "name": "RBE1001Lib",
    "version": "0.13.2",
    "sentence": "Support robotics education with simplified support classes."
  },
  {
    "name": "RBL_nRF8001",
    "version": "1.0.0",
    "sentence": "An Arduino library for the nRF8001 products such as the BLE Shield and Blend."
  },
  {
    "name": "RC Receiver",
    "version": "1.0.2",
    "sentence": "Reads the PWM signal from RC receivers."
  },
  {
    "name": "RC.Easy",
    "version": "0.0.1",
    "sentence": "RC.Easy"
  },
  {
    "name": "RCLSwitch",
    "version": "1.4.1",
    "sentence": "Compact version of RC Switch"
  },
  {
    "name": "RCReceiver",
    "version": "1.4.0",
    "sentence": "A library to add support for rc receivers."
  },
  {
    "name": "RCWL0516",
    "version": "1.1.0",
    "sentence": "RCWL0516 provides a class to control an RCWL-0516 motion detection radar sensor."
  },
  {
    "name": "RCWL_1X05",
    "version": "1.0.0",
    "sentence": "A library for the I2C mode of ultrasonic distance sensors RCWL-1605, RCWL-1005, and probably HC-SR04P"
  },
  {
    "name": "RC_ESC",
    "version": "1.1.0",
    "sentence": "A library to use ESC with the Arduino platform."
  },
  {
    "name": "RDV GY-512 Library",
    "version": "1.0.0",
    "sentence": "An Arduino library to simplify reading values from the GY-512 gyroscope, accelerometer, and temperature sensor."
  },
  {
    "name": "RESTClient",
    "version": "1.0.0",
    "sentence": "Enables sending REST messages using Arduino Ethernet. For all boards."
  },
  {
    "name": "RESTuino",
    "version": "1.0.1",
    "sentence": "A library to handle arduino GPIO via REST API."
  },
  {
    "name": "RF24",
    "version": "1.4.11",
    "sentence": "Radio driver, OSI layer 2 library for nrf24L01(+) modules."
  },
  {
    "name": "RF24Ethernet",
    "version": "1.6.17",
    "sentence": "OSI layer 4/5 (TCP/IP) wireless/radio IoT mesh networks for nRF24L01(+)"
  },
  {
    "name": "RF24G",
    "version": "1.0.1",
    "sentence": "A simple way for up to 6 nRF24L01 radios to communicate with each other."
  },
  {
    "name": "RF24Mesh",
    "version": "2.0.2",
    "sentence": "OSI Layer 7, Automated 'mesh' style networking for nrf24L01(+) & nrf52x radios."
  },
  {
    "name": "RF24Network",
    "version": "2.0.3",
    "sentence": "OSI Layer 3 Networking for nrf24L01(+) & nrf52x devices."
  },
  {
    "name": "RF433any",
    "version": "0.7.7",
    "sentence": "A library to decode any protocol received on a 433 Mhz Radio Frequencies receiver"
  },
  {
    "name": "RF433recv",
    "version": "0.3.4",
    "sentence": "A library to decode a known protocol received on a 433 Mhz Radio Frequencies receiver"
  },
  {
    "name": "RF433send",
    "version": "0.5.5",
    "sentence": "A library to send data on a 433 Mhz Radio Frequencies transmitter"
  },
  {
    "name": "RFCodes",
    "version": "0.9.3",
    "sentence": "RF 433 and IR signal encode and decode library."
  },
  {
    "name": "RFExplorer 3GP IoT",
    "version": "1.0.1806",
    "sentence": "Library reference for RFExplorer 3GP IoT"
  },
  {
    "name": "RFID_MFRC522v2",
    "version": "2.0.6",
    "sentence": "Arduino RFID driver library for MFRC522 (SPI, I2C)"
  },
  {
    "name": "RFM69_LowPowerLab",
    "version": "1.5.2",
    "sentence": "Simple Arduino library for RFM69/SX1231h based radio module transceivers"
  },
  {
    "name": "RG15-Arduino",
    "version": "1.0.0",
    "sentence": "The RG15 Arduino Library (RG15-Arduino) provides robust communication with the RG15 Rain Gauge Sensor over a serial interface."
  },
  {
    "name": "RGB",
    "version": "1.0.10",
    "sentence": "This library for Arduino allows you to control RGB led."
  },
  {
    "name": "RGB LED Lighting Shield XMC1202",
    "version": "1.0.1",
    "sentence": "This library provides an interface to communicate with the RGB LED Lighting Shield XMC1202 via I2C interface."
  },
  {
    "name": "RGB matrix Panel",
    "version": "1.1.9",
    "sentence": "Arduino library and example code for the 16x32 RGB matrix panels in the shop"
  },
  {
    "name": "RGB-LED-Lighting-Shield",
    "version": "1.0.1",
    "sentence": "C++ library for Infineons RGB-LED-Lighting-Shields"
  },
  {
    "name": "RGBLEDBlender",
    "version": "1.1.2",
    "sentence": "A basic RGB LED blending library."
  },
  {
    "name": "RGBProgress",
    "version": "0.1.0",
    "sentence": "Calculate an RGB color according to a progression."
  },
  {
    "name": "RGBWConverter",
    "version": "1.1.0",
    "sentence": "Hue preserving RGB to RGBW conversion library for Arduino!"
  },
  {
    "name": "RGB_LED",
    "version": "1.0.0",
    "sentence": "A library that manage 4 legs rgb leds colour and light duration."
  },
  {
    "name": "RLEBitmap",
    "version": "1.2.0",
    "sentence": "Run Length Encoded bitmaps"
  },
  {
    "name": "RLNode",
    "version": "1.2.0",
    "sentence": "This is the common backbone for RealLogger Nodes."
  },
  {
    "name": "RL_ToneSongPlayer",
    "version": "1.0.0",
    "sentence": "Arduino library to play songs composed of tone notes and durations on a digital pin in a non-interrupting way without using the delay() function."
  },
  {
    "name": "RLab",
    "version": "1.0.0",
    "sentence": "Управление РОББО Лабораторией."
  },
  {
    "name": "RMCS-220X",
    "version": "1.1.1",
    "sentence": "A library to facilitate the control of a Rhino RMCS-220X Servo Motor over i2c."
  },
  {
    "name": "RMDX",
    "version": "1.0.0",
    "sentence": "Arduino library for MyActuator's RMD-X brushless motors"
  },
  {
    "name": "RN487x",
    "version": "1.2.0",
    "sentence": "An Arduino library for the Microchip RN487x"
  },
  {
    "name": "ROBLEX",
    "version": "1.0.12",
    "sentence": "library for the ROBLEX Development Kit"
  },
  {
    "name": "ROKduino",
    "version": "2.2.5",
    "sentence": "Allows control of Rokenbok Education ROKduino robotics system."
  },
  {
    "name": "RP2040-BrtEve",
    "version": "1.1.0",
    "sentence": "Library for BridgeTek EVE series"
  },
  {
    "name": "RP2040_ISR_Servo",
    "version": "1.1.2",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on RP2040 board to control multiple servo motors."
  },
  {
    "name": "RP2040_PIO_Charlieplexing",
    "version": "1.0.1",
    "sentence": "A RP2040 PIO program for 6-leds and 5-leds Charlieplexing."
  },
  {
    "name": "RP2040_PWM",
    "version": "1.7.0",
    "sentence": "his library enables you to use Hardware-based PWM channels on RP2040-based boards, such as Nano_RP2040_Connect, RASPBERRY_PI_PICO, with either Arduino-mbed (mbed_nano or mbed_rp2040) or arduino-pico core to create and output PWM to any GPIO pin."
  },
  {
    "name": "RP2040_RTC",
    "version": "1.1.1",
    "sentence": "This library enables you to use RTC from RP2040-based boards such as Nano_RP2040_Connect, RASPBERRY_PI_PICO"
  },
  {
    "name": "RP2040_SD",
    "version": "1.0.1",
    "sentence": "This library enables you to use SPI SD cards with RP2040-based boards such as Nano_RP2040_Connect, RASPBERRY_PI_PICO using either RP2040 Arduino-mbed or arduino-pico core."
  },
  {
    "name": "RP2040_Slow_PWM",
    "version": "1.2.1",
    "sentence": "This library enables you to use ISR-based PWM channels on RP2040-based boards, such as ADAFRUIT_FEATHER_RP2040, RASPBERRY_PI_PICO, etc., with arduino-pico core to create and output PWM any GPIO pin."
  },
  {
    "name": "RPI_PICO_TimerInterrupt",
    "version": "1.3.1",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on RP2040-based boards such as RASPBERRY_PI_PICO"
  },
  {
    "name": "RPM",
    "version": "1.0.4",
    "sentence": "RPM sensor library for Arduino."
  },
  {
    "name": "RPlatform",
    "version": "1.0.0",
    "sentence": "Управление РОББО Платформой."
  },
  {
    "name": "RPulse",
    "version": "1.0.0",
    "sentence": "Отладка робота в реальном времени."
  },
  {
    "name": "RRE Font Library",
    "version": "1.2.2",
    "sentence": "Fast RRE Font Library"
  },
  {
    "name": "RS485",
    "version": "0.5.1",
    "sentence": "RS485 library for Arduino."
  },
  {
    "name": "RS485HwSerial",
    "version": "1.1.2",
    "sentence": "Enhanced Arduino serial library with RS485 transmit enable control."
  },
  {
    "name": "RSbus",
    "version": "2.4.0",
    "sentence": "Library for the (Lenz) RS-bus protocol"
  },
  {
    "name": "RT-Thread",
    "version": "1.0.0",
    "sentence": "Real Time Operating System porting for Arduino SAM and SAMD boards"
  },
  {
    "name": "RTC",
    "version": "1.9.2",
    "sentence": "Library for I2C based RTCs (DS1307, DS3231, PCF8563, PCF8523, MCP7940)."
  },
  {
    "name": "RTC RV-3028-C7 Arduino Library",
    "version": "2.1.0",
    "sentence": "A library to drive the RV-3028-C7 extremely precise, extremely low power, real-time clock"
  },
  {
    "name": "RTC3231",
    "version": "1.0.0",
    "sentence": "A modified RTClib library to handle DS3231 RTC only."
  },
  {
    "name": "RTC4543lib",
    "version": "1.0.2",
    "sentence": "A simple RTC4543 library."
  },
  {
    "name": "RTCCounter",
    "version": "1.0.1",
    "sentence": "Provides use of the RTC peripheral in 32bit counter mode. For Arduino SAMD21 boards only."
  },
  {
    "name": "RTCDS1307",
    "version": "1.0.0",
    "sentence": "Library for rtc 1307"
  },
  {
    "name": "RTCDue",
    "version": "1.1.0",
    "sentence": "Use for the RTC inside the SAM3X8E from the Arduino DUE"
  },
  {
    "name": "RTCLib by NeiroN",
    "version": "1.6.3",
    "sentence": "A library that makes interfacing DS1302, DS1307, DS3231, PCF8583, PCF8563, RTC_Millis Real Time Clock modules easy."
  },
  {
    "name": "RTCMemory",
    "version": "2.0.0",
    "sentence": "An intuitive library to simplify read and write operations on RTC memory of ESP8266 and its backup on flash memory."
  },
  {
    "name": "RTCTimer",
    "version": "1.0.0",
    "sentence": "An Arduino library to easily perform scheduled tasks."
  },
  {
    "name": "RTCVars",
    "version": "0.1.1",
    "sentence": "This library eases the storage of variables in reset-safe RTC memory."
  },
  {
    "name": "RTCZero",
    "version": "1.6.0",
    "sentence": "Allows to use the RTC functionalities. For Arduino Zero, MKRZero and MKR1000 only."
  },
  {
    "name": "RTC_DS1307_Library",
    "version": "1.1.1",
    "sentence": "Use a DS1307 Real Time Clock module with the Time library."
  },
  {
    "name": "RTC_NXP_Arduino",
    "version": "1.1.1",
    "sentence": "Class library for NXP RTCs"
  },
  {
    "name": "RTC_RX8025NB",
    "version": "1.1.0",
    "sentence": "A simple Arduino RTC library for the EPSON RX-8025NB module."
  },
  {
    "name": "RTC_RX8025T",
    "version": "1.0.7",
    "sentence": "Arduino library for the RX8025T real time clock (RTC)"
  },
  {
    "name": "RTClib",
    "version": "2.1.4",
    "sentence": "A fork of Jeelab's fantastic RTC library"
  },
  {
    "name": "RTCtime",
    "version": "1.0.5",
    "sentence": "A \"Standard C Runtime\" compatible library for interfacing the DS1307 and DS3231 Real Time Clock modules."
  },
  {
    "name": "RTCx",
    "version": "1.1.10",
    "sentence": "Library to access DS1307, DS1337/8, MCP7941x and PCF85263 real-time clocks."
  },
  {
    "name": "RTD10K-temp-sensor",
    "version": "3.0.0",
    "sentence": "Read temperature with analog input and 10K RTD"
  },
  {
    "name": "RTL8720_RTC",
    "version": "1.0.2",
    "sentence": "This library enables you to use RTC from RTL8720-based boards such as RTL8720DN, RTL8722DM, RTL8722CSM."
  },
  {
    "name": "RTL8720_TimerInterrupt",
    "version": "1.1.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an RTL8720-based board"
  },
  {
    "name": "RTT QRCode",
    "version": "0.1.0",
    "sentence": "RT-Thread QR Code App"
  },
  {
    "name": "RTT Stream",
    "version": "1.4.1",
    "sentence": "Arduino library for Segger RTT Real-Time Transfer"
  },
  {
    "name": "RTT-CMSIS-OS",
    "version": "1.0.0",
    "sentence": "RT-Thread CMSIS RTOS2"
  },
  {
    "name": "RTT-Ethernet",
    "version": "2.2.0",
    "sentence": "RT-Thread Ethernet driver"
  },
  {
    "name": "RTT-GUI",
    "version": "0.9.1",
    "sentence": "Embedded GUI Library"
  },
  {
    "name": "RUI3-Arduino-Library",
    "version": "1.0.2",
    "sentence": "RUI3 Arduino AT command library."
  },
  {
    "name": "RV-1805-C3",
    "version": "1.0.0",
    "sentence": "Library for Micro Crystal RV-1805-C3 extreme low power RTC module."
  },
  {
    "name": "RV-3028-C7",
    "version": "1.1.2",
    "sentence": "Library for Micro Crystal RV-3028-C7 extreme low power RTC module."
  },
  {
    "name": "RV3028",
    "version": "1.1.0",
    "sentence": "Basic library for the RV-3028-C7 RTC"
  },
  {
    "name": "RV8523",
    "version": "1.0.0",
    "sentence": "A library to control the RV-8523-C3 RTC."
  },
  {
    "name": "RV8803Tiny",
    "version": "0.0.9",
    "sentence": "A library to drive the RV8803 extremely precise, extremely low power, real-time clock from new ATTINY series that run on MegaTinyCore."
  },
  {
    "name": "RX8010SJ",
    "version": "1.0.1",
    "sentence": "This is a library to handle Seikos RX8010SJ RTC module with an arduino."
  },
  {
    "name": "RX8025",
    "version": "1.0.0",
    "sentence": "Control RX8025 chip or the solar calendar to the lunar calendar."
  },
  {
    "name": "RX8900",
    "version": "1.0.0",
    "sentence": "Arduino library for RX8900 series RTC IC control."
  },
  {
    "name": "RadSensBoard",
    "version": "1.0.0",
    "sentence": "An Arduino library for RadSens Geiger counter board."
  },
  {
    "name": "RadarIQ",
    "version": "1.0.5",
    "sentence": "Adds support for the RadarIQ sensors."
  },
  {
    "name": "RadiationWatch",
    "version": "0.6.4",
    "sentence": "Arduino driver for Radiation Watch Pocket Geiger sensor"
  },
  {
    "name": "Radio",
    "version": "3.0.1",
    "sentence": "Library for controlling FM radio receiver chips."
  },
  {
    "name": "RadioHead",
    "version": "1.143.1",
    "sentence": "Packet Radio library for embedded microprocessors"
  },
  {
    "name": "RadioLib",
    "version": "7.1.2",
    "sentence": "Universal wireless communication library"
  },
  {
    "name": "RadioengeLoraWAN",
    "version": "0.0.1",
    "sentence": "Implementation of RadioengeLoraWAN AT-COMMANDS.."
  },
  {
    "name": "Ramp",
    "version": "0.6.3",
    "sentence": "A library that manage interpolation beetween values."
  },
  {
    "name": "Rando HX711 Library",
    "version": "1.1.0",
    "sentence": "Simple driver for the HX711 ADC, with various options for output formatting/scaling."
  },
  {
    "name": "Random16",
    "version": "1.0.0",
    "sentence": "Fast 16 bit random number generator"
  },
  {
    "name": "RandomForestModel",
    "version": "1.0.1",
    "sentence": "A library for Linear Regression modeling in Arduino projects."
  },
  {
    "name": "RapifireMqttClient",
    "version": "1.3.1",
    "sentence": "Enables the communication between Arduino and RAPIFIRE platform."
  },
  {
    "name": "Raspberry Pi Pico CPU Temperature",
    "version": "1.0.0",
    "sentence": "Get the CPU temperature of your Raspberry Pi Pico"
  },
  {
    "name": "RazorIMU_9DOF",
    "version": "1.0.0",
    "sentence": "This library is for the Razor AHRS 9DOF IMU by Sparkfun."
  },
  {
    "name": "RcSwitchReceiver",
    "version": "0.6.3",
    "sentence": "Receive data from 433/315Mhz remote controls."
  },
  {
    "name": "Rcn600",
    "version": "1.5.8",
    "sentence": "Enable RCN-600 SUSI Communication"
  },
  {
    "name": "Rdebug",
    "version": "0.3.0",
    "sentence": "The Arduino library provides a unique form of debugging."
  },
  {
    "name": "ReGIS",
    "version": "2.0.1-0",
    "sentence": "ReGIS, short for Remote Graphic Instruction Set, is a vector graphics markup language for embedded devices using serial interfaces."
  },
  {
    "name": "ReWire MAX32664 Biosensor Hub Library",
    "version": "1.0.0",
    "sentence": "Library for interfacing with the MAX32664 biometric hub"
  },
  {
    "name": "ReactESP",
    "version": "3.2.0",
    "sentence": "Asynchronous programming library for the ESP32 and other microcontrollers compatible with the Arduino framework."
  },
  {
    "name": "React_Generic",
    "version": "2.1.0",
    "sentence": "Asynchronous programming library for the generic microcontrollers compatible with the Arduino framework."
  },
  {
    "name": "ReactiveArduino",
    "version": "1.0.0",
    "sentence": "ReactiveArduino implements observable-observer pattern on a processor like Arduino"
  },
  {
    "name": "ReactorProtocol",
    "version": "0.0.2",
    "sentence": "Simulated Reactor communication protocol."
  },
  {
    "name": "ReadFilter",
    "version": "1.0.0",
    "sentence": "An arduino library with functions for filtering noisy analogRead signals"
  },
  {
    "name": "ReceptorRF",
    "version": "1.0.1",
    "sentence": "Permite recibir códigos de controls RF o IR de cualquier extensión de bits."
  },
  {
    "name": "ReciclaBot",
    "version": "1.1.5",
    "sentence": "Biblioteca do projeto ReciclaBot do IFPA Paragominas."
  },
  {
    "name": "RedEye",
    "version": "0.1.2",
    "sentence": "A library implementing the \"RedEye\" infrared protocol"
  },
  {
    "name": "Redis for Arduino",
    "version": "2.6.3",
    "sentence": "An Arduino library for Redis."
  },
  {
    "name": "Redis for ESP8266",
    "version": "1.1.0",
    "sentence": "An Arduino library for Redis that works on ESP8266."
  },
  {
    "name": "ReefwingAHRS",
    "version": "2.3.6",
    "sentence": "Attitude and Heading Reference System (AHRS) used in the Reefwing Flight Controller."
  },
  {
    "name": "ReefwingFilter",
    "version": "2.0.0",
    "sentence": "A collection of filters & noise generators used in the Reefwing Flight Controller."
  },
  {
    "name": "ReefwingLPS22HB",
    "version": "1.0.3",
    "sentence": "Arduino Library for the LPS22HB Pressure Sensor."
  },
  {
    "name": "ReefwingLSM9DS1",
    "version": "1.0.3",
    "sentence": "Arduino Library for the LSM9DS1 9-axis IMU."
  },
  {
    "name": "ReefwingMPU6050",
    "version": "1.0.0",
    "sentence": "Arduino library for MPU6050 IMU"
  },
  {
    "name": "ReefwingMPU6x00",
    "version": "1.0.1",
    "sentence": "Arduino library for MPU6000/6500 IMUs"
  },
  {
    "name": "ReefwingMSP",
    "version": "2.0.0",
    "sentence": "A light weight Arduino implementation of the MultiWii Serial Protocol."
  },
  {
    "name": "ReefwingMotorShield",
    "version": "3.0.1",
    "sentence": "A library that supports the Reefwing Motor Shield and Carrier Board."
  },
  {
    "name": "ReefwingPWM",
    "version": "1.0.2",
    "sentence": "PWM on arbitrary pins"
  },
  {
    "name": "ReefwingSBUS",
    "version": "2.0.1",
    "sentence": "SBUS Library for the Nano 33 BLE."
  },
  {
    "name": "ReefwingTimer",
    "version": "2.0.1",
    "sentence": "A non blocking Scheduler based on millis()."
  },
  {
    "name": "Reefwing_imuTypes",
    "version": "2.0.3",
    "sentence": "common structs and enums used by the Reefwing IMU Libraries."
  },
  {
    "name": "Reefwing_xIMU3",
    "version": "1.1.0",
    "sentence": "Arduino Library for the xIMU3 GUI."
  },
  {
    "name": "Regexp",
    "version": "0.1.0",
    "sentence": "Regular expression parser for microcontrollers"
  },
  {
    "name": "Regression",
    "version": "1.0.1",
    "sentence": "Easy-to-use Statistical Regressions."
  },
  {
    "name": "Relay",
    "version": "1.0.0",
    "sentence": "Simple relay usage"
  },
  {
    "name": "RelayModule",
    "version": "1.1.2",
    "sentence": "The Library implements a set of methods for working with a digital relay module."
  },
  {
    "name": "Remocon",
    "version": "2.2.0",
    "sentence": "IOSignal Remocon Examples for https://remocon.kr app"
  },
  {
    "name": "RemoteDebug",
    "version": "3.0.5",
    "sentence": "A library for Arduino to debug projects over WiFi, with web app or telnet client, with Print commands like Serial Monitor."
  },
  {
    "name": "RemoteDebug2",
    "version": "4.0.1",
    "sentence": "A library for ESP2866 and ESP32 for debuging projects over WiFi."
  },
  {
    "name": "RemoteDebugger",
    "version": "0.9.4",
    "sentence": "RemoteDebug addon: RemoteDebugger, an simple software debugger - based on SerialDebug Library"
  },
  {
    "name": "RemoteMe",
    "version": "1.0.26",
    "sentence": "Libraries for RemoteMe.org system"
  },
  {
    "name": "RemoteMeUtils",
    "version": "1.0.18",
    "sentence": "Utils Libraries for RemoteMe.org system"
  },
  {
    "name": "RemoteSensor",
    "version": "1.0.3",
    "sentence": "RemoteSensor library for Arduino."
  },
  {
    "name": "RemoteSerial",
    "version": "0.0.1",
    "sentence": "A web-based serial monitor for ESP8266 & ESP32 devices."
  },
  {
    "name": "RemoteSignal",
    "version": "0.8.0",
    "sentence": "Remote Signal Arduino Client."
  },
  {
    "name": "RemoteXY",
    "version": "3.1.14",
    "sentence": "For all RemoteXY projects."
  },
  {
    "name": "RepeatButton",
    "version": "1.2.1",
    "sentence": "RepeatButton Library for Arduino."
  },
  {
    "name": "RequestBuilder",
    "version": "1.0.0",
    "sentence": "HTTP request header/body/parameter builder"
  },
  {
    "name": "RescenicIO",
    "version": "0.0.1",
    "sentence": "Library untuk mempermudah penggunaan Input & Output"
  },
  {
    "name": "ResistorReader_asukiaaa",
    "version": "1.0.3",
    "sentence": "It read value of a resistor."
  },
  {
    "name": "ResponsiveAnalogRead",
    "version": "1.2.1",
    "sentence": "Arduino library for eliminating noise in analogRead inputs without decreasing responsiveness"
  },
  {
    "name": "Restfully",
    "version": "0.2.0-beta",
    "sentence": "Handles Rest requests including parsing of URIs with arguments."
  },
  {
    "name": "RevEng PAJ7620",
    "version": "1.5.0",
    "sentence": "Arduino library to provide a driver and API for the PixArt PAJ7620 (PAJ7620U2 or PAJ7620F2) integrated gesture recognition sensor."
  },
  {
    "name": "Rfid134 by Makuna",
    "version": "1.0.2",
    "sentence": "Library for the RFID WL-134 module"
  },
  {
    "name": "RfidDb",
    "version": "1.1.1",
    "sentence": "A library that stores 32 bit identifiers and associated names to EEPROM which can be used to as a basis for RFID access control applications."
  },
  {
    "name": "RhinoServo",
    "version": "1.0.0",
    "sentence": "This library is for the Encoder DC Servo Motor: RMCS220x."
  },
  {
    "name": "RichHttpServer",
    "version": "3.1.0",
    "sentence": "An addon for ESP8266WebServer which makes common tasks for developing a rich REST API straightforward."
  },
  {
    "name": "RingBuf",
    "version": "2.0.0",
    "sentence": "A library for buffering items into a ring (circular/FIFO) buffer"
  },
  {
    "name": "RingBufCPP",
    "version": "1.3.0",
    "sentence": "A C++ library for buffering items into a ring (circular/FIFO) buffer"
  },
  {
    "name": "RingBuffer",
    "version": "1.0.5",
    "sentence": "This library allows to use ring buffer with and without interrupts."
  },
  {
    "name": "RingEEPROM",
    "version": "0.1.0",
    "sentence": "The library increases the arduino EEPROM Write endurance"
  },
  {
    "name": "Ringo by CircuitMess Library",
    "version": "1.0.5",
    "sentence": "Ringo is an educational DIY mobile phone designed to bring electronics and programming to the crowd in a fun and interesting way."
  },
  {
    "name": "Riscduino_MCUFRIEND_kbv",
    "version": "3.1.0-Beta",
    "sentence": "TFT Library for 2.4, 2.8, 3.5, 3.6, 3.95 inch mcufriend Riscduino and Arduino UNO Shields"
  },
  {
    "name": "Rivers Engineering",
    "version": "2.3.1",
    "sentence": "Arduino library for engineering classes at The Rivers School"
  },
  {
    "name": "RobbusKidsy",
    "version": "2.0.0",
    "sentence": "Rocket Launcher library of the Robbus Kidsy robot vehicle"
  },
  {
    "name": "RobbyIO",
    "version": "1.0.0",
    "sentence": "Library Input Output"
  },
  {
    "name": "RoboCore - BRIICK Encoder",
    "version": "1.0.0",
    "sentence": "Library for the BRIICK Encoder."
  },
  {
    "name": "RoboCore - BRIICK Keypad",
    "version": "1.0.0",
    "sentence": "Library for the BRIICK Keypad."
  },
  {
    "name": "RoboCore - BRIICK TRIAC",
    "version": "1.0.0",
    "sentence": "Library for the BRIICK TRIAC."
  },
  {
    "name": "RoboCore - MMA8452Q",
    "version": "1.0.1",
    "sentence": "Library for the MMA8452Q 3-axis accelerometer."
  },
  {
    "name": "RoboCore - Rocky",
    "version": "1.0.0",
    "sentence": "Library for the BlackBoard Rocky (https://www.robocore.net/placa-robocore/blackboard-rocky)"
  },
  {
    "name": "RoboCore - SMW_SX1262M0",
    "version": "1.0.1",
    "sentence": "Library for the LoRaWAN SMW_SX1262M0 module (https://www.robocore.net/loja/produtos/1443)"
  },
  {
    "name": "RoboCore - SMW_SX1276M0",
    "version": "1.1.0",
    "sentence": "Library for the LoRaWAN SMW_SX1276M0 module (https://www.robocore.net/loja/produtos/1239)"
  },
  {
    "name": "RoboCore - Serial Relay",
    "version": "1.0.0",
    "sentence": "Library for the Serial Relay module (https://www.robocore.net/modules.php?name=GR_LojaVirtual&prod=663)"
  },
  {
    "name": "RoboCore - Vespa",
    "version": "1.3.0",
    "sentence": "Library for the Vespa (https://www.robocore.net/vespa)"
  },
  {
    "name": "RoboFi",
    "version": "1.0.0",
    "sentence": "Enables easy access to the controls of the ESP32 Robot Control board."
  },
  {
    "name": "RoboHeart",
    "version": "2.1.7",
    "sentence": "Arduino library for the RoboHeart"
  },
  {
    "name": "RoboWunduino",
    "version": "1.0.2",
    "sentence": "Arduino Library for Robo Wunderkind Products"
  },
  {
    "name": "Robopoly Bluetooth",
    "version": "1.5.1",
    "sentence": "This library allows you to use the bluetooth module on the Robopoly Shield."
  },
  {
    "name": "Robopoly Linear Camera",
    "version": "0.2.0",
    "sentence": "This library allows you to get data from the Robopoly Linear Camera."
  },
  {
    "name": "Robopoly PRismino",
    "version": "1.5.2",
    "sentence": "This library allows you to use all the functions of the Robopoly PRismino and the Robopoly Shield."
  },
  {
    "name": "Robopoly RomeEnco",
    "version": "1.0.0",
    "sentence": "This library allows you to read up to four encoders at the same time."
  },
  {
    "name": "Robot",
    "version": "1.0.0",
    "sentence": "Arduino library to imitate a real car."
  },
  {
    "name": "Robot Control",
    "version": "1.0.4",
    "sentence": "Enables easy access to the controls of the Arduino Robot Control board. For Arduino Robot only."
  },
  {
    "name": "Robot IR Remote",
    "version": "2.0.0",
    "sentence": "Allows controlling the Arduino Robot via an IR remote control. For Arduino Robot only."
  },
  {
    "name": "Robot Motor",
    "version": "1.0.3",
    "sentence": "Enables easy access to the motors of the Arduino Robot Motor board. For Arduino Robot only."
  },
  {
    "name": "RobotDuLAB Arduino Library",
    "version": "0.0.2",
    "sentence": "Bibliothèque de pilotage simplifié de RobotDuLAB."
  },
  {
    "name": "RobotLib",
    "version": "1.6.1",
    "sentence": "A robotics library to simplify implementing generic robotics hardware."
  },
  {
    "name": "Robotec",
    "version": "1.0.1",
    "sentence": "Biblioteca para robotica educativa"
  },
  {
    "name": "Robust-EEPROM",
    "version": "2.2.0",
    "sentence": "Allows the use of unallocated bytes on an EEPROM memory as redundant memory for failed allocated bytes."
  },
  {
    "name": "RocciBoard-Library",
    "version": "1.2.0",
    "sentence": "Library for the RocciBoard-Shield."
  },
  {
    "name": "Rocket Scream LowPowerAVRZero",
    "version": "1.0.0",
    "sentence": "Low power management for MegaAVR 0-series MCU."
  },
  {
    "name": "Rocket Scream RTCAVRZero",
    "version": "1.0.0",
    "sentence": "Minimalistic RTC (Real Time Counter) implementation for MegaAVR 0-series MCU."
  },
  {
    "name": "RogueMP3",
    "version": "2.0.0",
    "sentence": "A library to communicate with the Rogue Robotics MP3 Playback Modules.<br />"
  },
  {
    "name": "RogueSD",
    "version": "2.0.0",
    "sentence": "A library to communicate with the Rogue Robotics Data Storage Modules.<br />"
  },
  {
    "name": "RokitSmart",
    "version": "1.0.9",
    "sentence": "A library for RokitSmart users"
  },
  {
    "name": "Romans Audio FastDigitalPin Library",
    "version": "1.0.1",
    "sentence": "Arduino lib for fast digital reads and writes."
  },
  {
    "name": "Romans Audio RARGBLED Library",
    "version": "1.0.3",
    "sentence": "Arduino lib for RGB LEDs"
  },
  {
    "name": "Romi32U4",
    "version": "1.0.3",
    "sentence": "Romi 32U4 Arduino library"
  },
  {
    "name": "RoomWeather",
    "version": "1.2.0",
    "sentence": "Arduino library that provides plug and play support for various air quality sensors."
  },
  {
    "name": "RootCertificates",
    "version": "1.0.3",
    "sentence": "Library used to associate certificates to top level domains"
  },
  {
    "name": "Rosserial Arduino Library",
    "version": "0.9.1",
    "sentence": "Use an Arduino as a ROS publisher/subscriber"
  },
  {
    "name": "RotEnc",
    "version": "1.1.1",
    "sentence": "Simple library for handling a 2-phase rotary encoder."
  },
  {
    "name": "RotEncoder",
    "version": "1.0.0",
    "sentence": "Fast and precise rotary encoder library with low power consumption, optimized for high-speed and battery-powered applications."
  },
  {
    "name": "Rotary",
    "version": "1.0.0",
    "sentence": "ESP8266/Arduino Library for reading rotary encoder values."
  },
  {
    "name": "RotaryDial",
    "version": "0.0.1",
    "sentence": "Library to read pulse dialing data from telephone rotary dials"
  },
  {
    "name": "RotaryEncoder",
    "version": "1.5.3",
    "sentence": "Use a rotary encoder with quadrature pulses as an input device."
  },
  {
    "name": "RotaryEncoderPCNT",
    "version": "1.1.0",
    "sentence": "ESP32 rotary encoder implementation, using pulse counter (PCNT) peripheral."
  },
  {
    "name": "RotaryEncoder_Zanduino",
    "version": "1.0.6",
    "sentence": "Access the 3-Color LED Rotary Encoder - read and set colors"
  },
  {
    "name": "Rotary_encoder",
    "version": "1.1.3",
    "sentence": "Reads the position of a rotary encoder."
  },
  {
    "name": "RoverWing",
    "version": "3.1.0",
    "sentence": "Arduino  library for use with RoverWing, a robotics expansion board for Adafruit Feather boards"
  },
  {
    "name": "RoxMux",
    "version": "1.7.3",
    "sentence": "Collection of Multiplexer and Hardware Controllers."
  },
  {
    "name": "Rtc by Makuna",
    "version": "2.5.0",
    "sentence": "A library that makes interfacing DS1302, DS1307, DS3231, DS3234, and PCF8563/BM8563 Real Time Clock modules easy."
  },
  {
    "name": "Rtc_Pcf8563",
    "version": "1.0.3",
    "sentence": "A library that interfaces the Phillips PCF8563 Real Time Clock chip."
  },
  {
    "name": "Rtttl",
    "version": "1.0.0",
    "sentence": "A library that plays Rtttl melodies"
  },
  {
    "name": "RunAvgWeight",
    "version": "0.2.0",
    "sentence": "Running Average with weight of N elements."
  },
  {
    "name": "RunningAverage",
    "version": "0.4.7",
    "sentence": "The library stores the last N individual values in a circular buffer to calculate the running average."
  },
  {
    "name": "RunningMedian",
    "version": "0.3.9",
    "sentence": "The library stores the last N individual values in a buffer to select the median."
  },
  {
    "name": "RunningStats",
    "version": "0.1.0",
    "sentence": "It computes simple running statistics."
  },
  {
    "name": "RussianText_u8g",
    "version": "0.1.2",
    "sentence": "Russian text for library u8g_lib"
  },
  {
    "name": "RustyKeypad",
    "version": "1.0.4",
    "sentence": "A flexible keypad library supporting T9 input, long presses, and various event types."
  },
  {
    "name": "RustyVoltmeter",
    "version": "1.0.5",
    "sentence": "A library to measure voltage using a voltage divider with Arduino."
  },
  {
    "name": "S.Port sensor library for FrSky",
    "version": "1.0.3",
    "sentence": "an Arduino Library to create FrSky S.Port sensors"
  },
  {
    "name": "S11059",
    "version": "0.1.0",
    "sentence": "A color sensor library for Arduino"
  },
  {
    "name": "S4ALib",
    "version": "1.0.5",
    "sentence": "Simple library for S4A EDU Robotic Controller."
  },
  {
    "name": "S5851A",
    "version": "1.2.1",
    "sentence": "A temperature sensor library for Arduino"
  },
  {
    "name": "S7XG",
    "version": "0.1.0",
    "sentence": "AcSIP S7XG LoRaWAN/GPS module library"
  },
  {
    "name": "S8_UART",
    "version": "1.0.2",
    "sentence": "SenseAir S8 CO2 sensor library using UART communication"
  },
  {
    "name": "S9706",
    "version": "0.1.1",
    "sentence": "A color sensor library for Arduino"
  },
  {
    "name": "SAM32WiFiEsp",
    "version": "2.2.2-f1",
    "sentence": "Arduino (and SAM32) WiFi library for ESP8266"
  },
  {
    "name": "SAMD21 Audio Player",
    "version": "0.7.2",
    "sentence": "Simple audio player for SAMD21-based Arduinos"
  },
  {
    "name": "SAMD21 turbo PWM",
    "version": "0.8.5",
    "sentence": "Fast-PWM library for SAMD21G-based Arduinos"
  },
  {
    "name": "SAMDUE_PWM",
    "version": "1.0.1",
    "sentence": "This library enables you to use Hardware-based PWM channels on SAMDUE boards to create and output PWM to pins."
  },
  {
    "name": "SAMDUE_Slow_PWM",
    "version": "1.2.2",
    "sentence": "This library enables you to use ISR-based PWM channels on an Arduino SAM_DUE board to create and output PWM any GPIO pin."
  },
  {
    "name": "SAMDUE_TimerInterrupt",
    "version": "1.3.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an SAM-DUE-based board"
  },
  {
    "name": "SAMD_ISR_Servo",
    "version": "1.1.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on SAMD21/SAMD51 board to control multiple servo motors."
  },
  {
    "name": "SAMD_PWM",
    "version": "1.2.0",
    "sentence": "This library enables you to use Hardware-based PWM channels on SAMD21/SAMD51-based boards to create and output PWM to pins."
  },
  {
    "name": "SAMD_Slow_PWM",
    "version": "1.2.3",
    "sentence": "This library enables you to use Hardware Timers on SAMD21/SAMD51 boards to create and output PWM to pins."
  },
  {
    "name": "SAMD_TimerInterrupt",
    "version": "1.10.1",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on SAMD-based boards such as SAMD21 Nano-33-IoT, Adafruit SAMD51 Itsy-Bitsy M4, SeeedStudio XIAO, Sparkfun SAMD51_MICROMOD, etc."
  },
  {
    "name": "SBC",
    "version": "0.0.3",
    "sentence": "Allows communications with a Steel Battalion Controller using a Teensy 4.0 or 4.1"
  },
  {
    "name": "SBUS2",
    "version": "1.2.0",
    "sentence": "Arduino Library for receiving SBUS and SBUS2 Frames and transmit Telemetry Data"
  },
  {
    "name": "SC16IS7X0",
    "version": "1.0.1",
    "sentence": "Library to read and write UART and GPIO for the SC16IS740_750_760"
  },
  {
    "name": "SCA100T",
    "version": "1.0.2",
    "sentence": "This library allows communication with Murata SCA100T inclinometer sensors using SPI."
  },
  {
    "name": "SCButton",
    "version": "1.0.6",
    "sentence": "Button that reacts periodically on constant pressure."
  },
  {
    "name": "SCConfig",
    "version": "1.0.16",
    "sentence": "Stores device configuration in JSON format in EEPROM."
  },
  {
    "name": "SCL3300",
    "version": "3.3.1",
    "sentence": "A library for SPI communication with the Murata SCL3300 Inclinometer sensor."
  },
  {
    "name": "SCL3400",
    "version": "0.0.1",
    "sentence": "A library for SPI communication with the Murata SCL3400 Inclinometer sensor."
  },
  {
    "name": "SCPI_Parser",
    "version": "2.2.0",
    "sentence": "Port of the C/C++ \"SCPI Parser\" library by Jan Breuer, suitable for advanced C/C++ programmers. For a much simpler solution in your Arduino projects, consider the Vrekrer SCPI Parser library."
  },
  {
    "name": "SCPeriod",
    "version": "1.0.9",
    "sentence": "Calls callback function on period expiration."
  },
  {
    "name": "SCServo",
    "version": "1.0.2",
    "sentence": "SC-series Servo library for Arduino and ESP32"
  },
  {
    "name": "SD",
    "version": "1.3.0",
    "sentence": "Enables reading and writing on SD cards."
  },
  {
    "name": "SD2405",
    "version": "0.2.0",
    "sentence": "Arduino library for I2C SD2405 RTC and compatibles."
  },
  {
    "name": "SDConfig",
    "version": "1.1.0",
    "sentence": "A library for reading and writing settings from a configuration file on a SD card."
  },
  {
    "name": "SDConfigCommand",
    "version": "0.25.0",
    "sentence": "SDConfigCommand streamlines reading settings from a config file on SD card."
  },
  {
    "name": "SDHT",
    "version": "2.0.0",
    "sentence": "Class for DHT11, DHT12, DHT21 and DHT22 Sensors"
  },
  {
    "name": "SDI-12",
    "version": "2.2.1",
    "sentence": "An Arduino library for SDI-12 communication with a wide variety of environmental sensors."
  },
  {
    "name": "SDList",
    "version": "1.0.0-BETA",
    "sentence": "A Simple ArrayList Implementation that saves memory by dumping contents into an SD Card."
  },
  {
    "name": "SDPSensor-ESP",
    "version": "0.0.4",
    "sentence": "arduino-esp library for Sensirion's Differential Pressure sensors"
  },
  {
    "name": "SDS011 sensor Library",
    "version": "0.0.5",
    "sentence": "Nova Fitness SDS011 dust sensor library"
  },
  {
    "name": "SDS011_vers",
    "version": "0.1.1",
    "sentence": "A library for NovaFitness SDS011 Particle Matter Sensor"
  },
  {
    "name": "SDU AGS SensorBoard",
    "version": "1.0.0",
    "sentence": "Library that supports the AGS sensor board."
  },
  {
    "name": "SDU_CAR",
    "version": "2.0.0",
    "sentence": "Enables the use of all the functions used by the SDU Car."
  },
  {
    "name": "SD_card_logger",
    "version": "2.0.4",
    "sentence": "SD card logger, easy to use library for data logging"
  },
  {
    "name": "SEN10724",
    "version": "1.0.0",
    "sentence": "Provides functions to handle the SEN 10724 board."
  },
  {
    "name": "SET",
    "version": "0.2.7",
    "sentence": "Arduino library to implement simple SET datastructure."
  },
  {
    "name": "SE_BasicUnit",
    "version": "1.0.1",
    "sentence": "Library for writing firmware of modules of expansion module of the AlphaSE system."
  },
  {
    "name": "SE_Button",
    "version": "1.0.0",
    "sentence": "Advanced button operation library"
  },
  {
    "name": "SE_EEPROM",
    "version": "1.0.1",
    "sentence": "The library is made to work with EEPROM. All data is saved in 3 copies to implement the possibility of automatic recovery in case of partial damage."
  },
  {
    "name": "SFFS",
    "version": "1.0.1",
    "sentence": "Arduino FRAM file system for I2C/SPI FRAM breakout boards"
  },
  {
    "name": "SFM-V1.7",
    "version": "1.0.3",
    "sentence": "Interfacing to the SFM-V1.7 Fingerprint Sensor for ESP32 platform"
  },
  {
    "name": "SFR_Reader",
    "version": "0.6.0",
    "sentence": "StaRFIshrail I2C RFID Tag Reader Library"
  },
  {
    "name": "SGP30",
    "version": "0.3.1",
    "sentence": "Arduino library for SGP30 environment sensor."
  },
  {
    "name": "SH1106",
    "version": "1.1.0",
    "sentence": "Adafruit GFX compatible library to use the SH1106 OLED driver."
  },
  {
    "name": "SHCSR04",
    "version": "2.0.1",
    "sentence": "Arduino class for sensor HCSR04"
  },
  {
    "name": "SHEX",
    "version": "0.3.3",
    "sentence": "Arduino library to generate hex dump over Serial"
  },
  {
    "name": "SHT1x sensor library for ESPx",
    "version": "1.0.2",
    "sentence": "Arduino ESP library for SHT1x Temp & Humidity Sensors for ESP32"
  },
  {
    "name": "SHT2x",
    "version": "0.5.0",
    "sentence": "Arduino library for the I2C SHT20 SHT21 SHT25 series temperature and humidity sensor."
  },
  {
    "name": "SHT31",
    "version": "0.5.0",
    "sentence": "Arduino library for the SHT31 temperature and humidity sensor"
  },
  {
    "name": "SHT31_SW",
    "version": "0.3.1",
    "sentence": "Arduino library for the I2C SHT31 temperature and humidity sensor"
  },
  {
    "name": "SHT31_SWW",
    "version": "0.2.0",
    "sentence": "Arduino library for the I2C SHT31 temperature and humidity sensor"
  },
  {
    "name": "SHT85",
    "version": "0.6.0",
    "sentence": "Arduino library for the SHT85, SHT30, SHT31, SHT35 Sensirion temperature and humidity sensors and compatibles."
  },
  {
    "name": "SHTC3 Soldered Library",
    "version": "1.0.0",
    "sentence": "Library for controling SHTC3 sensor with EasyC comunication"
  },
  {
    "name": "SI1145_WE",
    "version": "1.1.7",
    "sentence": "An Arduino library for the SI1145 VIS, IR, PS and UV-Index sensor."
  },
  {
    "name": "SID6581",
    "version": "3.0.1-beta",
    "sentence": "SID 6581/8580 Chiptune Player / MIDI slave for ESP32"
  },
  {
    "name": "SIKTEC Keys",
    "version": "1.0.2",
    "sentence": "Library for Keypad shield"
  },
  {
    "name": "SIKTEC_AVR_Controller",
    "version": "1.0.6",
    "sentence": "Examples for programming and using SIKTEC AVR Controller Shield"
  },
  {
    "name": "SIKTEC_EPD",
    "version": "1.0.5",
    "sentence": "ePaper / eInk display driver to easily integrate SIKTEC displays."
  },
  {
    "name": "SIKTEC_MDSwitch",
    "version": "1.0.1",
    "sentence": "Library to easily use Multi Direction Switches."
  },
  {
    "name": "SIKTEC_Rotary",
    "version": "1.0.2",
    "sentence": "Library to easily use Rotary Encoders"
  },
  {
    "name": "SIKTEC_SPI",
    "version": "1.0.2",
    "sentence": "A Lightweight SPI wrapper for HW SPI and Software SPI"
  },
  {
    "name": "SIKTEC_SRAM",
    "version": "1.0.2",
    "sentence": "Library for Interfacing Microchip SRAM chips"
  },
  {
    "name": "SIKTEC_SdExplore",
    "version": "1.0.3",
    "sentence": "A light-weight companion library to easily scan / search for files"
  },
  {
    "name": "SIM800L HTTP connector",
    "version": "1.14.0",
    "sentence": "Library for GSM/GPRS module SIMCom SIM800L to make HTTP/S connections with GET and POST methods."
  },
  {
    "name": "SIM800_YL",
    "version": "1.0.0",
    "sentence": "Arduino library for Esp8266."
  },
  {
    "name": "SIM808",
    "version": "2.0.0",
    "sentence": "Straightforward Arduino library for the SIM808"
  },
  {
    "name": "SIM900",
    "version": "1.0.0",
    "sentence": "Arduino SIM900 Shield Comprehensive Library"
  },
  {
    "name": "SIMON",
    "version": "0.1.3",
    "sentence": "Arduino library to build the \"Simon says\" game or a digital lock."
  },
  {
    "name": "SLIC",
    "version": "1.0.2",
    "sentence": "Simple lossless image codec."
  },
  {
    "name": "SLIPStream",
    "version": "1.0.1",
    "sentence": "A decorator for Stream objects that sends and receives SLIP."
  },
  {
    "name": "SMA SunnyBoy Reader",
    "version": "0.1.0",
    "sentence": "Library for reading data from an SMA SunnyBoy Inverter"
  },
  {
    "name": "SMV_CAN_Bus",
    "version": "2.0.3",
    "sentence": "UCLA Bruin SMV library for CAN bus."
  },
  {
    "name": "SM_16DIGIN",
    "version": "1.0.0",
    "sentence": "A easy to use Arduino Library for Sixteen LV Digital Inputs HAT"
  },
  {
    "name": "SM_16RELAYS",
    "version": "1.0.0",
    "sentence": "A easy to use Arduino Library for Sixteen Relays HAT"
  },
  {
    "name": "SM_16UNIVIN",
    "version": "1.0.1",
    "sentence": "A easy to use Arduino Library for Sixteen Analog/Digital Inputs HAT"
  },
  {
    "name": "SM_4REL4IN",
    "version": "1.0.1",
    "sentence": "A easy to use Arduino Library for Four Relays four Inputs HAT"
  },
  {
    "name": "SM_8CRT",
    "version": "1.0.0",
    "sentence": "A easy to use Arduino Library for HALL Current Sensor DAQ 8-Layer Stackable HAT"
  },
  {
    "name": "SM_BAS",
    "version": "1.0.0",
    "sentence": "A easy to use Arduino Library for Building Automation HAT"
  },
  {
    "name": "SM_ESP32Pi",
    "version": "1.0.0",
    "sentence": "A easy to use Arduino Library for ESP32-PI"
  },
  {
    "name": "SM_LCDAdapter",
    "version": "1.0.2",
    "sentence": "A easy to use Arduino Library for Six-in-one LCD Adapter Kit"
  },
  {
    "name": "SM_RTD",
    "version": "1.0.0",
    "sentence": "A easy to use Arduino Library for RTD Data Acquisition HAT"
  },
  {
    "name": "SM_TC",
    "version": "1.0.0",
    "sentence": "A easy to use Arduino Library for Eight Thermocouples DAQ HAT"
  },
  {
    "name": "SMoS",
    "version": "0.2.0",
    "sentence": "Utility library for encoding and decoding of SMoS messages."
  },
  {
    "name": "SN76489",
    "version": "1.0.0",
    "sentence": "sn76489 arduino library."
  },
  {
    "name": "SNMP",
    "version": "2.0.0",
    "sentence": "An SNMP library to write SNMP agent or manager for Arduino boards."
  },
  {
    "name": "SNMP Manager",
    "version": "1.1.13",
    "sentence": "An SNMP Manager library to make SNMP requests to other SNMP enabled devices."
  },
  {
    "name": "SNMP_Agent",
    "version": "2.1.0",
    "sentence": "SNMP Agent: An fully compliant SNMPv2c Agent for esp32 for acting as an SNMP client device."
  },
  {
    "name": "SNP_Sensor",
    "version": "1.0.4",
    "sentence": "Arduino library for the SNP Sensor."
  },
  {
    "name": "SOLDERED HX711 Arduino Library",
    "version": "1.0.0",
    "sentence": "Library for controling HX711 sensor."
  },
  {
    "name": "SOLOMotorControllers",
    "version": "5.4.3",
    "sentence": "Arduino Library for SOLO Motor Controller Units"
  },
  {
    "name": "SOMOIoD",
    "version": "1.0.0",
    "sentence": "SOMO Library for the gen4-IoD and IoD-09 by 4D Systems"
  },
  {
    "name": "SPC",
    "version": "1.0.0",
    "sentence": "A library for easy processing of Analog Signals"
  },
  {
    "name": "SPFD5408 TFT Library",
    "version": "1.1.0",
    "sentence": "TFT library for SPFD5408"
  },
  {
    "name": "SPI VFD",
    "version": "1.1.4",
    "sentence": "Arduino Library for 20T202DA2JA SPI VFD"
  },
  {
    "name": "SPI-DAC7611",
    "version": "2.0.3",
    "sentence": "A library that interfaces with the DAC7611 using the standard SPI library."
  },
  {
    "name": "SPI-FlashMem",
    "version": "1.3.5",
    "sentence": "SPI Memory library for Arduino"
  },
  {
    "name": "SPIExtension",
    "version": "0.1.0",
    "sentence": "SPI extension/wrapper for Arduino"
  },
  {
    "name": "SPIFFS ImageReader Library",
    "version": "1.0.2",
    "sentence": "Companion library for Adafruit_GFX and Adafruit_EPD to load images from SPIFFS partition."
  },
  {
    "name": "SPIFFSIniFile",
    "version": "1.0.0",
    "sentence": "Library to read and parse .ini files on ESP8266 and ESP32 platforms"
  },
  {
    "name": "SPIFFSReadServer",
    "version": "0.0.4",
    "sentence": "SPIFFS Read Server"
  },
  {
    "name": "SPIFFS_FilePrint",
    "version": "1.1.0",
    "sentence": "Lightweight library for rolling file print. It logs to SPIFFS."
  },
  {
    "name": "SPIFFS_Shell",
    "version": "0.1.0",
    "sentence": "A Serial-based interface that resembles a Linux shell for interacting with SPIFFS."
  },
  {
    "name": "SPIFlash_LowPowerLab",
    "version": "101.1.3",
    "sentence": "Simple Arduino library for SPI flash memory chips"
  },
  {
    "name": "SPIMemory",
    "version": "3.4.0",
    "sentence": "SPI Memory library for Arduino. (Formerly SPIFlash)"
  },
  {
    "name": "SPIShiftRegister",
    "version": "1.1.2",
    "sentence": "A simple library for controlling any length of chained 595 style shift registers over the built in SPI bus."
  },
  {
    "name": "SPL06-001",
    "version": "1.0.0",
    "sentence": "Arduino library for SPL06-001 sensor"
  },
  {
    "name": "SPL06-007",
    "version": "0.1.0",
    "sentence": "SPL06-007 library for Arduino processors"
  },
  {
    "name": "SQLiteDatabaseConnection",
    "version": "1.0.1",
    "sentence": "Modern C++ interface for SQLite."
  },
  {
    "name": "SRAM",
    "version": "1.0.1",
    "sentence": "Simple library for serial SRAM IC's"
  },
  {
    "name": "SRAM_23LC",
    "version": "1.1.2",
    "sentence": "Driver for Microchip Technology Inc. 23LC (23LCV, 23A, 23K) SPI SRAM chips for AVR, SAM3X (Due), and SAM M0+ (SAMD, SAML, SAMC) microcontrollers"
  },
  {
    "name": "SRAMsimple",
    "version": "1.0.0",
    "sentence": "Communications with 23LC1024 SRAM chip"
  },
  {
    "name": "SRF05",
    "version": "0.3.0",
    "sentence": "Arduino library for SRF05 distance sensor"
  },
  {
    "name": "SSD1306 OLED Display",
    "version": "1.0.2",
    "sentence": "An easy-to-use library for controlling SSD1306 OLED displays with custom fonts, progress bars, and more."
  },
  {
    "name": "SSD1306Ascii",
    "version": "1.3.5",
    "sentence": "Text display on small monochrome OLED modules."
  },
  {
    "name": "SSD1306TUR",
    "version": "1.0.2",
    "sentence": "SSD1306 oled library with Turkish alphabet!"
  },
  {
    "name": "SSD1306wire",
    "version": "2.0.1",
    "sentence": "Display text on OLED module SSD1306 with I2C."
  },
  {
    "name": "SSD1803A_I2C",
    "version": "1.0.2",
    "sentence": "LCD library for EA DOGx displays."
  },
  {
    "name": "SSLClient",
    "version": "1.6.11",
    "sentence": "Arduino library to add TLS functionality to any Client class"
  },
  {
    "name": "SSLClientESP32",
    "version": "2.0.3",
    "sentence": "Provides secure network connection over a generic Client transport object."
  },
  {
    "name": "SST25VF",
    "version": "0.1.0",
    "sentence": "Arduino Library for controlling the SST Nor Serial Flash SST25VF family."
  },
  {
    "name": "SSVAnySensor",
    "version": "1.0.0",
    "sentence": "Simple class to incorporate logic of practically any sensor."
  },
  {
    "name": "SSVLongTime",
    "version": "1.0.0",
    "sentence": "Singleton class to return uptime in seconds."
  },
  {
    "name": "SSVNTPCoreClass",
    "version": "1.0.0",
    "sentence": "Singleton class to get real time over NTP. Based on esp8266 core function configTime(). Supports auto DST per time zone."
  },
  {
    "name": "SSVQueueStackArray",
    "version": "1.0.0",
    "sentence": "Queue/Stack storage based on array ring buffer."
  },
  {
    "name": "SSVRGBGradientCalc",
    "version": "1.0.3",
    "sentence": "Simple class to implement RGB Gradient calulations, based on FastLED."
  },
  {
    "name": "SSVTimer",
    "version": "1.0.3",
    "sentence": "One more non-blocking timer class based on millis() function."
  },
  {
    "name": "SSVWaitForStringInStream",
    "version": "1.0.0",
    "sentence": "Simple class to compare coming characters one by one, on the fly, from any stream, and compare it with predefined string constants."
  },
  {
    "name": "SSVXYMatrix",
    "version": "1.0.0",
    "sentence": "FastLED-based class to handle XY Full Color LED Matrix."
  },
  {
    "name": "SSVXYMatrixText",
    "version": "1.0.0",
    "sentence": "Class to show text (English, Russian) on XY LED Matrix, based on FastLED."
  },
  {
    "name": "ST7032_asukiaaa",
    "version": "1.0.5",
    "sentence": "This library controls ST7032 on LCD."
  },
  {
    "name": "ST7565 LCD",
    "version": "1.0.2",
    "sentence": "ST7565 LCD driver library for monochrome 128x64 display"
  },
  {
    "name": "ST7789 AVR",
    "version": "1.2.1",
    "sentence": "Very fast SPI library for the ST7789 IPS display"
  },
  {
    "name": "STAMP-PICO",
    "version": "0.0.2",
    "sentence": "Library for STAMP-PICO development kit"
  },
  {
    "name": "STEAMbot",
    "version": "1.0.3",
    "sentence": "Library that provides access to all the STEAMbot facilities."
  },
  {
    "name": "STLED316S",
    "version": "1.1.0",
    "sentence": "Arduino library for STLED316S 6-digit LED controller with keyscan"
  },
  {
    "name": "STM32F1_RTC",
    "version": "1.1.0",
    "sentence": "Allows to use the RTC functionalities of STM32F1xx based boards using external low speed oscillator."
  },
  {
    "name": "STM32_CAN",
    "version": "1.2.0",
    "sentence": "CAN bus Library for Arduino STM32"
  },
  {
    "name": "STM32_ISR_Servo",
    "version": "1.1.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an STM32F/L/H/G/WB/MP1 board to control multiple servo motors."
  },
  {
    "name": "STM32_PWM",
    "version": "1.0.1",
    "sentence": "This wrapper library enables you to use Hardware-based PWM on STM32F/L/H/G/WB/MP1 boards to create and output PWM to pins."
  },
  {
    "name": "STM32_Slow_PWM",
    "version": "1.2.3",
    "sentence": "This library enables you to use Hardware Timers on STM32F/L/H/G/WB/MP1 boards to create and output PWM to pins."
  },
  {
    "name": "STM32_TimerInterrupt",
    "version": "1.3.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an STM32F/L/H/G/WB/MP1-based board"
  },
  {
    "name": "STM32ad9833",
    "version": "0.9.2",
    "sentence": "Arduino STM32 library for Analog Devices ad9833 DDS module"
  },
  {
    "name": "STM32duino ASM330LHH",
    "version": "2.0.1",
    "sentence": "Automotive inertial measurement unit."
  },
  {
    "name": "STM32duino Examples",
    "version": "1.2.5",
    "sentence": "Provides several examples for the Arduino core for STM32 MCUs."
  },
  {
    "name": "STM32duino FP_Examples",
    "version": "1.8.0",
    "sentence": "Provides several Function Packs that combine the usage of several X-NUCLEO boards"
  },
  {
    "name": "STM32duino FreeRTOS",
    "version": "10.3.2",
    "sentence": "Real Time Operating System implemented for STM32"
  },
  {
    "name": "STM32duino HTS221",
    "version": "2.0.1",
    "sentence": "Capacitive digital sensor for relative humidity and temperature."
  },
  {
    "name": "STM32duino I-NUCLEO-LRWAN1",
    "version": "1.0.2",
    "sentence": "This library provides the LoRa® driver for the expansion board I-NUCLEO-LRWAN1."
  },
  {
    "name": "STM32duino IIS2DLPC",
    "version": "2.0.0",
    "sentence": "High Performance Ultra Low Power 3D accelerometer."
  },
  {
    "name": "STM32duino IIS2MDC",
    "version": "2.0.2",
    "sentence": "Ultra Low Power 3D magnetometer."
  },
  {
    "name": "STM32duino ISM330DHCX",
    "version": "2.1.0",
    "sentence": "High-Performance 3D digital accelerometer and 3D digital gyroscope."
  },
  {
    "name": "STM32duino ISM330DLC",
    "version": "2.0.1",
    "sentence": "3D accelerometer and 3D gyroscope."
  },
  {
    "name": "STM32duino ISM43362-M3G-L44",
    "version": "1.1.2",
    "sentence": "This library includes drivers for Inventek Systems WiFi device named ISM43362-M3G-L44."
  },
  {
    "name": "STM32duino LIS2DU12",
    "version": "1.0.1",
    "sentence": "Ultra Low Power 3D accelerometer."
  },
  {
    "name": "STM32duino LIS2DUXS12",
    "version": "1.0.2",
    "sentence": "Ultra Low Power 3D accelerometer."
  },
  {
    "name": "STM32duino LIS2DW12",
    "version": "2.1.1",
    "sentence": "Ultra Low Power 3D accelerometer."
  },
  {
    "name": "STM32duino LIS2MDL",
    "version": "2.0.1",
    "sentence": "Ultra Low Power 3D magnetometer."
  },
  {
    "name": "STM32duino LIS3MDL",
    "version": "2.0.0",
    "sentence": "High-performance 3D magnetometer."
  },
  {
    "name": "STM32duino LPS22DF",
    "version": "1.0.4",
    "sentence": "Nano pressure sensor."
  },
  {
    "name": "STM32duino LPS22HB",
    "version": "2.0.0",
    "sentence": "260-1260 hPa absolute digital output barometer."
  },
  {
    "name": "STM32duino LPS22HH",
    "version": "2.0.4",
    "sentence": "Nano pressure sensor."
  },
  {
    "name": "STM32duino LPS25HB",
    "version": "2.0.0",
    "sentence": "260-1260 hPa absolute digital output barometer."
  },
  {
    "name": "STM32duino LSM303AGR",
    "version": "2.0.2",
    "sentence": "3D accelerometer and 3D magnetometer."
  },
  {
    "name": "STM32duino LSM6DS0",
    "version": "2.0.0",
    "sentence": "3D accelerometer and 3D gyroscope."
  },
  {
    "name": "STM32duino LSM6DS3",
    "version": "2.0.0",
    "sentence": "3D accelerometer and 3D gyroscope."
  },
  {
    "name": "STM32duino LSM6DSL",
    "version": "2.0.0",
    "sentence": "3D accelerometer and 3D gyroscope."
  },
  {
    "name": "STM32duino LSM6DSO",
    "version": "2.2.0",
    "sentence": "Ultra Low Power inertial measurement unit."
  },
  {
    "name": "STM32duino LSM6DSO16IS",
    "version": "1.1.3",
    "sentence": "Ultra Low Power inertial measurement unit."
  },
  {
    "name": "STM32duino LSM6DSOX",
    "version": "2.3.4",
    "sentence": "Ultra Low Power inertial measurement unit."
  },
  {
    "name": "STM32duino LSM6DSR",
    "version": "2.2.0",
    "sentence": "iNEMO inertial measurement unit."
  },
  {
    "name": "STM32duino LSM6DSV16X",
    "version": "2.0.3",
    "sentence": "Ultra Low Power inertial measurement unit."
  },
  {
    "name": "STM32duino Low Power",
    "version": "1.3.0",
    "sentence": "Power save primitives features for STM32 boards"
  },
  {
    "name": "STM32duino LwIP",
    "version": "2.1.3",
    "sentence": "A Lightweight TCP/IP stack"
  },
  {
    "name": "STM32duino M24SR64-Y",
    "version": "1.1.0",
    "sentence": "This library includes drivers for ST's M24SR64-Y NFC/RFID tag."
  },
  {
    "name": "STM32duino M95640-R",
    "version": "1.0.0",
    "sentence": "This library includes drivers for ST M95640-R EEPROM."
  },
  {
    "name": "STM32duino MX25R6435F",
    "version": "2.0.0",
    "sentence": "Quad-SPI NOR Flash memory library."
  },
  {
    "name": "STM32duino MotionFX",
    "version": "1.1.0",
    "sentence": "Allows to run Sensor Fusion algorithms with ST MEMS sensors on STM32 boards"
  },
  {
    "name": "STM32duino NFC-RFAL",
    "version": "1.0.2",
    "sentence": "Allows controlling the ST NFC card reader components based on RFAL"
  },
  {
    "name": "STM32duino Proximity Gesture",
    "version": "1.0.5",
    "sentence": "Allows performing simple gestures detection using proximity sensors"
  },
  {
    "name": "STM32duino RTC",
    "version": "1.6.0",
    "sentence": "Allows to use the RTC functionalities of STM32 based boards."
  },
  {
    "name": "STM32duino S2-LP",
    "version": "1.1.4",
    "sentence": "This library includes drivers for ST S2-LP sub-1GHz transceiver."
  },
  {
    "name": "STM32duino SHT40-AD1B",
    "version": "1.0.0",
    "sentence": "Capacitive digital sensor for relative humidity and temperature."
  },
  {
    "name": "STM32duino SPBTLE-RF",
    "version": "1.0.3",
    "sentence": "This library includes drivers for ST's BlueNRG/BlueNRG-MS Bluetooth Low Energy device."
  },
  {
    "name": "STM32duino ST25DV",
    "version": "2.1.2",
    "sentence": "Allows controlling the NFC ST25DV"
  },
  {
    "name": "STM32duino ST25R3911B",
    "version": "1.0.4",
    "sentence": "Allows controlling the ST ST25R3911B component"
  },
  {
    "name": "STM32duino ST25R3916",
    "version": "1.1.0",
    "sentence": "Allows controlling the ST ST25R3916 and ST25R3916B components"
  },
  {
    "name": "STM32duino ST25R95",
    "version": "1.0.0",
    "sentence": "Allows controlling the ST ST25R95 component"
  },
  {
    "name": "STM32duino STEVAL-MKBOXPRO-Audio",
    "version": "1.0.0",
    "sentence": "PCM recording using digital microphone MP23DB01HP on STEVAL-MKBOXPRO."
  },
  {
    "name": "STM32duino STEVAL-MKBOXPRO-Examples",
    "version": "1.1.0",
    "sentence": "Examples to use MEMS sensors and NFC tag on STEVAL board"
  },
  {
    "name": "STM32duino STM32Ethernet",
    "version": "1.4.0",
    "sentence": "Enables network connection (local and Internet) using the STM32 Board."
  },
  {
    "name": "STM32duino STM32SD",
    "version": "1.4.0",
    "sentence": "Enables reading and writing on SD card using SD card slot connected to the SDIO/SDMMC-hardware of the STM32 MCU. For slots connected to SPI-hardware use the standard Arduino SD library."
  },
  {
    "name": "STM32duino STTS22H",
    "version": "2.0.2",
    "sentence": "digital temperature sensor."
  },
  {
    "name": "STM32duino STTS751",
    "version": "2.0.1",
    "sentence": "digital temperature sensor."
  },
  {
    "name": "STM32duino VL53L0X",
    "version": "2.0.1",
    "sentence": "Allows controlling the VL53L0X (Time-of-Flight and gesture detection sensor)"
  },
  {
    "name": "STM32duino VL53L1",
    "version": "2.1.0",
    "sentence": "Allows controlling the VL53L1 (Time-of-Flight)"
  },
  {
    "name": "STM32duino VL53L1X",
    "version": "2.0.1",
    "sentence": "Allows controlling the VL53L1X (Time-of-Flight and gesture detection sensor)"
  },
  {
    "name": "STM32duino VL53L3CX",
    "version": "2.0.0",
    "sentence": "Allows controlling the VL53L3CX (Time-of-Flight ranging sensor with multi target detection)"
  },
  {
    "name": "STM32duino VL53L4CD",
    "version": "1.0.5",
    "sentence": "Allows controlling the VL53L4CD (Time-of-Flight)"
  },
  {
    "name": "STM32duino VL53L4CX",
    "version": "1.1.0",
    "sentence": "Allows controlling the VL53L4CX (Time-of-Flight ranging sensor with multi target detection)"
  },
  {
    "name": "STM32duino VL53L4ED",
    "version": "1.0.1",
    "sentence": "Allows controlling the VL53L4ED (Time-of-Flight)"
  },
  {
    "name": "STM32duino VL53L5CX",
    "version": "1.2.3",
    "sentence": "Allows controlling the VL53L5CX (Time-of-Flight 8x8 multizone ranging sensor with wide field view)"
  },
  {
    "name": "STM32duino VL53L7CH",
    "version": "1.0.0",
    "sentence": "Allows controlling the VL53L7CH (Time-of-Flight 8x8 multizone ranging sensor with wide field view)"
  },
  {
    "name": "STM32duino VL53L7CX",
    "version": "1.0.2",
    "sentence": "Allows controlling the VL53L7CX (Time-of-Flight 8x8 multizone ranging sensor with wide field view)"
  },
  {
    "name": "STM32duino VL53L8CH",
    "version": "1.0.0",
    "sentence": "Allows controlling the VL53L8CH (Time-of-Flight 8x8 multizone ranging sensor with wide field view)"
  },
  {
    "name": "STM32duino VL53L8CX",
    "version": "2.0.1",
    "sentence": "Allows controlling the VL53L8CX (Time-of-Flight 8x8 multizone ranging sensor with wide field view)"
  },
  {
    "name": "STM32duino VL6180",
    "version": "1.0.0",
    "sentence": "Allows controlling the VL6180 (proximity sensor)"
  },
  {
    "name": "STM32duino VL6180X",
    "version": "2.0.0",
    "sentence": "Allows controlling the VL6180X (proximity and ambient light sensing (ALS) sensor)"
  },
  {
    "name": "STM32duino X-NUCLEO-53L0A1",
    "version": "2.0.0",
    "sentence": "Allows controlling the VL53L0X sensors on board of X-NUCLEO-53L0A1"
  },
  {
    "name": "STM32duino X-NUCLEO-53L1A1",
    "version": "2.0.0",
    "sentence": "Allows controlling the VL53L1X sensors on board of X-NUCLEO-53L1A1"
  },
  {
    "name": "STM32duino X-NUCLEO-53L1A2",
    "version": "2.0.0",
    "sentence": "Allows controlling the VL53L1 sensors on board of X-NUCLEO-53L1A2"
  },
  {
    "name": "STM32duino X-NUCLEO-53L3A2",
    "version": "2.0.0",
    "sentence": "Allows controlling the VL53L3CX sensors on board of X-NUCLEO-53L3A2"
  },
  {
    "name": "STM32duino X-NUCLEO-53L4A1",
    "version": "1.0.0",
    "sentence": "Allows controlling the VL53L4CD sensors on board of X-NUCLEO-53L4A1"
  },
  {
    "name": "STM32duino X-NUCLEO-53L4A2",
    "version": "1.0.0",
    "sentence": "Allows controlling the VL53L4CX sensors on board of X-NUCLEO-53L4A2"
  },
  {
    "name": "STM32duino X-NUCLEO-53L4A3",
    "version": "1.0.0",
    "sentence": "Allows controlling the VL53L4ED sensors on board of X-NUCLEO-53L4A3"
  },
  {
    "name": "STM32duino X-NUCLEO-53L5A1",
    "version": "1.1.1",
    "sentence": "Allows controlling the VL53L5CX sensors on board of X-NUCLEO-53L5A1"
  },
  {
    "name": "STM32duino X-NUCLEO-53L7A1",
    "version": "1.0.1",
    "sentence": "Allows controlling the VL53L7CX sensors on board of X-NUCLEO-53L7A1"
  },
  {
    "name": "STM32duino X-NUCLEO-53L8A1",
    "version": "2.0.1",
    "sentence": "Allows controlling the VL53L8CX sensors on board of X-NUCLEO-53L8A1"
  },
  {
    "name": "STM32duino X-NUCLEO-6180A1",
    "version": "1.0.1",
    "sentence": "Allows controlling the VL6180 sensors on board of X-NUCLEO-6180A1"
  },
  {
    "name": "STM32duino X-NUCLEO-6180XA1",
    "version": "2.0.0",
    "sentence": "Allows controlling the VL6180X sensors on board of X-NUCLEO-6180XA1"
  },
  {
    "name": "STM32duino X-NUCLEO-GNSS1A1",
    "version": "1.0.5",
    "sentence": "Allows controlling the X-NUCLEO-GNSS1A1 (GNSS expansion board based on Teseo LIV3F)"
  },
  {
    "name": "STM32duino X-NUCLEO-IDB05A1",
    "version": "1.0.2",
    "sentence": "Allows controlling the ST X-NUCLEO-IDB05A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-IHM01A1",
    "version": "1.0.1",
    "sentence": "Allows controlling the ST X-NUCLEO-IHM01A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-IHM02A1",
    "version": "1.0.2",
    "sentence": "Allows controlling the ST X-NUCLEO-IHM02A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-IHM05A1",
    "version": "1.0.0",
    "sentence": "Allows controlling the ST X-NUCLEO-IHM05A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-IHM12A1",
    "version": "1.0.0",
    "sentence": "Allows controlling the ST X-NUCLEO-IHM12A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-IHM15A1",
    "version": "1.0.0",
    "sentence": "Allows controlling the ST X-NUCLEO-IHM15A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-IKA01A1",
    "version": "1.0.0",
    "sentence": "Allows controlling the ST Microelectronics X-NUCLEO-IKA01A1 Expansion Board"
  },
  {
    "name": "STM32duino X-NUCLEO-IKS01A1",
    "version": "1.1.0",
    "sentence": "Allows controlling the ST X-NUCLEO-IKS01A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-IKS01A2",
    "version": "1.1.0",
    "sentence": "Allows controlling the ST X-NUCLEO-IKS01A2 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-IKS01A3",
    "version": "1.2.1",
    "sentence": "Allows controlling the ST X-NUCLEO-IKS01A3 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-IKS02A1",
    "version": "1.2.0",
    "sentence": "Allows controlling the ST X-NUCLEO-IKS02A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-IKS02A1 Audio",
    "version": "1.1.1",
    "sentence": "Digital microphone IMP34DT05."
  },
  {
    "name": "STM32duino X-NUCLEO-IKS4A1",
    "version": "1.0.1",
    "sentence": "Allows controlling the ST X-NUCLEO-IKS4A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-LED61A1",
    "version": "1.0.0",
    "sentence": "Allows controlling the ST Microelectronics X-NUCLEO-LED61A1 Expansion Board"
  },
  {
    "name": "STM32duino X-NUCLEO-NFC01A1",
    "version": "1.0.2",
    "sentence": "Allows controlling the ST X-NUCLEO-NFC01A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-NFC03A1",
    "version": "2.0.0",
    "sentence": "Allows controlling the ST X-NUCLEO-NFC03A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-NFC04A1",
    "version": "2.0.1",
    "sentence": "Allows controlling the ST X-NUCLEO-NFC04A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-NFC05A1",
    "version": "1.0.1",
    "sentence": "Allows controlling the ST X-NUCLEO-NFC05A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-NFC06A1",
    "version": "1.0.1",
    "sentence": "Allows controlling the ST X-NUCLEO-NFC06A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-NFC07A1",
    "version": "1.0.1",
    "sentence": "Allows controlling the ST X-NUCLEO-NFC07A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-NFC08A1",
    "version": "1.0.0",
    "sentence": "Allows controlling the ST X-NUCLEO-NFC08A1 expansion board"
  },
  {
    "name": "STM32duino X-NUCLEO-S2868A1",
    "version": "1.0.1",
    "sentence": "Allows controlling the S2-LP radio on board of X-NUCLEO-S2868A1"
  },
  {
    "name": "STM32duino X-NUCLEO-S2868A2",
    "version": "1.0.1",
    "sentence": "Allows controlling the S2-LP radio on board of X-NUCLEO-S2868A2"
  },
  {
    "name": "STM32duino X-NUCLEO-S2915A1",
    "version": "1.0.1",
    "sentence": "Allows controlling the S2-LP radio on board of X-NUCLEO-S2915A1"
  },
  {
    "name": "STM32duino-Semihosting",
    "version": "1.0.5",
    "sentence": "Debug arduinos with arm processors."
  },
  {
    "name": "STM32duinoBLE",
    "version": "1.2.8",
    "sentence": "Fork of ArduinoBLE library to add the support of STM32WB, SPBTLE-RF, SPBTLE-1S, BLUENRG-M2SP and BLUENRG-M0 BLE modules."
  },
  {
    "name": "STM32duinoLoRaWAN",
    "version": "0.3.0",
    "sentence": "Support library for STM32WL microcontrollers featuring a sub-GHz radio based-on Semtech SX126x"
  },
  {
    "name": "STM32encoder",
    "version": "0.9.7",
    "sentence": "Arduino library for the management of rotary encoders with STM32"
  },
  {
    "name": "STM32mcp4151",
    "version": "0.9.1",
    "sentence": "Arduino STM32 library for microchip mcp 4151 digital potentiometer"
  },
  {
    "name": "STMSpeeduino",
    "version": "0.2.1",
    "sentence": "A library with faster commands for STM32H747"
  },
  {
    "name": "STPM3X",
    "version": "1.0.0",
    "sentence": "Library to interface with the Power Monitor Chips STPM34 or STPM32 by ST Microelectronics."
  },
  {
    "name": "STS_Servos",
    "version": "1.2.0",
    "sentence": "Arduino library for Feetech's STS smart servos"
  },
  {
    "name": "STUSB4500",
    "version": "1.0.5",
    "sentence": "Arduino driver library for STUSB4500"
  },
  {
    "name": "ST_HW_HC_SR04",
    "version": "2.0.3",
    "sentence": "Advanced arduino library for HC-SR04 ultrasonic sensors."
  },
  {
    "name": "STools",
    "version": "0.4.5",
    "sentence": "This library is a collection of useful tools."
  },
  {
    "name": "SUSHI-EXP-BOARD",
    "version": "1.0.0",
    "sentence": "Arduino library for SUSHI-EXP board."
  },
  {
    "name": "SWAP",
    "version": "1.0.9",
    "sentence": "Simple Wireless Abstract Protocol (SWAP) library for ISM radios"
  },
  {
    "name": "SWI2C",
    "version": "2.0.2",
    "sentence": "Software I2C library."
  },
  {
    "name": "SWSPI",
    "version": "0.1.2",
    "sentence": "Arduino library for software SPI. (Experimental)."
  },
  {
    "name": "SWSerialOut",
    "version": "0.1.1",
    "sentence": "Arduino library for SWSerialOut, supports only data out (TX)."
  },
  {
    "name": "SX126x-Arduino",
    "version": "2.0.29",
    "sentence": "Arduino library to use Semtech SX126x LoRa chips and modules to communicate"
  },
  {
    "name": "SX1509 IO Expander",
    "version": "3.0.5",
    "sentence": "Arduino library and hardware files for the SparkFun SX1509 IO Expander Breakout board."
  },
  {
    "name": "SX150x",
    "version": "1.0.8",
    "sentence": "A library for the Semtech SX150x family of i2c GPIO expanders."
  },
  {
    "name": "SX8634",
    "version": "1.1.0",
    "sentence": "A library for Semtech's SX8634 capacitive touch sensor."
  },
  {
    "name": "SXAccessoire",
    "version": "3.3.0",
    "sentence": "Arduino library for accessing the Selectrix SX-bus"
  },
  {
    "name": "SafeString",
    "version": "4.1.35",
    "sentence": "A Safe, Static String library to replace Arduino String, plus non-blocking Serial I/O, I/O buffering, loopTimer and millisDelay"
  },
  {
    "name": "SakuraIO",
    "version": "1.1.6",
    "sentence": "Library for Sakura Communication Module (https://sakura.io/)"
  },
  {
    "name": "Salesforce",
    "version": "1.0.0",
    "sentence": "A library to facilitate calls between Arduino and Salesforce"
  },
  {
    "name": "SandTimer",
    "version": "1.0.0",
    "sentence": "Easy to use and lightweight timer"
  },
  {
    "name": "Sanke",
    "version": "1.0.0",
    "sentence": "This library allows to run snake on 7-segments display (we use it in idle)."
  },
  {
    "name": "Satspares_DWIN_DGUS_HMI",
    "version": "2.1.0",
    "sentence": "Updated version of the original DWIN version."
  },
  {
    "name": "SavLayFilter",
    "version": "1.0.0",
    "sentence": "Savitzky-Golay Filtering Algorithm"
  },
  {
    "name": "SavitzkyGolayFilter",
    "version": "1.3.2",
    "sentence": "Savitzky-Golay Filtering Algorithm"
  },
  {
    "name": "Sbutton",
    "version": "0.1.2",
    "sentence": "Button library for easy use"
  },
  {
    "name": "SceneManager",
    "version": "0.2.1",
    "sentence": "cooperative multi-scene manager for Arduino"
  },
  {
    "name": "SchedTask",
    "version": "1.1.4",
    "sentence": "Task Scheduler Library for Arduino"
  },
  {
    "name": "ScheduleTable",
    "version": "1.4.3",
    "sentence": "This library allows to schedule multiple actions along time."
  },
  {
    "name": "Scheduler",
    "version": "0.4.4",
    "sentence": "Allows multiple tasks to run at the same time, without interrupting each other. For Arduino sam and samd architectures only (Due, Zero...)."
  },
  {
    "name": "SchedulerESP8266",
    "version": "1.1.2",
    "sentence": "A library to create timed schedules."
  },
  {
    "name": "SchmittTrigger",
    "version": "1.0.2",
    "sentence": "A lightweight schmitt trigger for debouncing and filtering."
  },
  {
    "name": "SchooMyUtilities",
    "version": "1.2.4",
    "sentence": "A utility library for schoomy."
  },
  {
    "name": "ScioSense_APC1",
    "version": "1.1.1",
    "sentence": "Arduino library for the Air Purification Combo ONE sensor with UART or I2C communication interface"
  },
  {
    "name": "ScioSense_ENS16x",
    "version": "1.0.0",
    "sentence": "Arduino library for the ENS16x digital four channel MOX gas sensor family with I2C interface from ScioSense"
  },
  {
    "name": "ScioSense_ENS21x",
    "version": "1.2.0",
    "sentence": "Arduino library for ENS21x digital temperature & humidity sensors with I2C interface from ScioSense"
  },
  {
    "name": "ScioSense_ENS220",
    "version": "1.1.0",
    "sentence": "Library for the ENS220 pressure and temperature sensor by ScioSense"
  },
  {
    "name": "Scissors",
    "version": "2.1.0",
    "sentence": "A library for parsing multibyte messages."
  },
  {
    "name": "ScreenUi",
    "version": "1.1.0",
    "sentence": "ScreenUi is a simple user interface library for character based LCDs like those commonly used with Arduinos."
  },
  {
    "name": "ScrollingText8x8Display",
    "version": "0.0.2",
    "sentence": "Display a scrolling text on a 8x8 LED display."
  },
  {
    "name": "SdCardServer",
    "version": "1.4.1",
    "sentence": "Arduino library to serve the contents of an SD card using the AsyncWebServer."
  },
  {
    "name": "SdFat",
    "version": "2.3.0",
    "sentence": "Provides access to SD memory cards."
  },
  {
    "name": "SdFat - Adafruit Fork",
    "version": "2.2.3",
    "sentence": "Provides access to SD memory cards and (Q)SPI Flash."
  },
  {
    "name": "SdTerminal",
    "version": "2.0.0",
    "sentence": "Basic terminal interface for Arduino SD card logging/file management"
  },
  {
    "name": "SecureMQTT",
    "version": "0.1.0",
    "sentence": "Library for AES128 encrypted MQTT communication"
  },
  {
    "name": "Seeed Arduino 24GHz Radar Sensor",
    "version": "1.0.1",
    "sentence": "An extensible library for interfacing with 24GHz Radar Sensor devices"
  },
  {
    "name": "Seeed Arduino 8Channel I2C Hub",
    "version": "1.0.1",
    "sentence": "An extensible library for interfacing with 8Channel I2C Hub"
  },
  {
    "name": "Seeed Arduino Audio",
    "version": "1.4.3",
    "sentence": "Flexible, High Quality Audio Processing Library"
  },
  {
    "name": "Seeed Arduino FS",
    "version": "2.1.3",
    "sentence": "A friendly library for file operation."
  },
  {
    "name": "Seeed Arduino IR",
    "version": "1.0.2",
    "sentence": "Seeed Arduino Infrared Library"
  },
  {
    "name": "Seeed Arduino LSM6DS3",
    "version": "2.0.4",
    "sentence": "Arduino library to control Grove 6 Axis Accelerometer&Gyroscope LSM6DS3, LSM6DS3-C."
  },
  {
    "name": "Seeed Arduino Mic",
    "version": "1.0.0",
    "sentence": "An extensible library for interfacing with Microphone devices"
  },
  {
    "name": "Seeed Arduino RTC",
    "version": "2.0.0",
    "sentence": "RTC library for SAMD21 and SAMD51."
  },
  {
    "name": "Seeed Arduino SFUD",
    "version": "2.0.2",
    "sentence": "Library for Seeed Arduino SFUD"
  },
  {
    "name": "Seeed Arduino SGP30",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove SGP30_Gas_Sensor."
  },
  {
    "name": "Seeed Arduino SSCMA",
    "version": "1.0.1",
    "sentence": "Arduino library for SSCMA-Mirco Device"
  },
  {
    "name": "Seeed Arduino Sketchbook",
    "version": "1.0.2",
    "sentence": "Wio Terminal and Other Seeed Demos"
  },
  {
    "name": "Seeed Arduino rpcBLE",
    "version": "1.0.0",
    "sentence": "A lightweight BLE Arduino Library"
  },
  {
    "name": "Seeed Arduino rpcUnified",
    "version": "2.1.4",
    "sentence": "An rpc system can be connected to the rtl8720 module"
  },
  {
    "name": "Seeed Arduino rpcWiFi",
    "version": "1.1.0",
    "sentence": "A lightweight WiFi Arduino Library"
  },
  {
    "name": "Seeed Serial MP3 Player",
    "version": "2.0.1",
    "sentence": "Arduino library for controlling Grove Mp3"
  },
  {
    "name": "Seeed Wio GPS Board",
    "version": "1.0.2",
    "sentence": "Seeed wio gps board Arduino library."
  },
  {
    "name": "Seeed-GroveOfflineVoiceRecognition",
    "version": "1.0.0",
    "sentence": "A library to Integrate Seeed Studio's Grove Offline Voice Recognition Sensor"
  },
  {
    "name": "Seeed-PCA9685",
    "version": "0.0.1",
    "sentence": "Arduino library of 16-Channel Servo Driver"
  },
  {
    "name": "SeeedNrf52480Battery",
    "version": "1.0.1",
    "sentence": "Arduino library for battery management on the Seeed Studio NRF52480 BLE (Sense)"
  },
  {
    "name": "Seeed_Arduino_AHT20",
    "version": "1.0.1",
    "sentence": "A  AHT20 library for Arduino."
  },
  {
    "name": "Seeed_Arduino_mbedtls",
    "version": "3.0.2",
    "sentence": "Seeed Arduino library for TLS/SSL connection"
  },
  {
    "name": "Seeeduino GPRS",
    "version": "1.0.0",
    "sentence": "Arduino library to control Seeeduino GPRS."
  },
  {
    "name": "Seg16",
    "version": "1.0.0",
    "sentence": "A simple Arduino library for driving 16-segment displays with a HT16K33."
  },
  {
    "name": "Seg7",
    "version": "0.9.0",
    "sentence": "A library for MAX7219 based 7 segment displays."
  },
  {
    "name": "Segma",
    "version": "0.0.5",
    "sentence": "Dynamic indication with shift registers"
  },
  {
    "name": "Segment",
    "version": "3.0.0",
    "sentence": "The most powerful and popular available library for using 7/14/16 segment display, supporting daisy chaining so you can control mass amounts from your Arduino!"
  },
  {
    "name": "SenseBoxBLE",
    "version": "1.1.1",
    "sentence": "Arduino library to send data over the senseBox BLE Bee"
  },
  {
    "name": "SensesInnoma",
    "version": "1.1.0",
    "sentence": "A library for send data from Internet of Things to \"Innoma Platform\""
  },
  {
    "name": "Senses_NBIoT",
    "version": "0.1.0",
    "sentence": "A library for Internet of Things send data and control on Senses IoT platfrom."
  },
  {
    "name": "Senses_wifi",
    "version": "1.1.0",
    "sentence": "A library for Internet of Things send data and control on Senses IoT platfrom."
  },
  {
    "name": "Senses_wifi_esp32",
    "version": "1.4.1",
    "sentence": "A library that makes Internet of Things send data and control on Senses IoT platform."
  },
  {
    "name": "Sensesiot",
    "version": "3.0.0",
    "sentence": "A library for send data from Internet of Things to \"Sensesiot\""
  },
  {
    "name": "Sensirion Core",
    "version": "0.7.1",
    "sentence": "Library containing code base for Sensirion Sensor Libraries."
  },
  {
    "name": "Sensirion Gadget BLE Arduino Lib",
    "version": "1.4.1",
    "sentence": "Library for BLE communication between BLE Gadgets and the MyAmbience app."
  },
  {
    "name": "Sensirion Gas Index Algorithm",
    "version": "3.2.3",
    "sentence": "Library for gas index algorithm to use with Sensirion sensors"
  },
  {
    "name": "Sensirion I2C SCD30",
    "version": "0.1.0",
    "sentence": "Library for the SCD30 sensor by Sensirion"
  },
  {
    "name": "Sensirion I2C SCD4x",
    "version": "1.0.0",
    "sentence": "Library for the SCD4X sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C SDP",
    "version": "0.1.0",
    "sentence": "Library for the SDP sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C SEN44",
    "version": "0.1.0",
    "sentence": "Library for the SEN44 sensor module family by Sensirion"
  },
  {
    "name": "Sensirion I2C SEN5X",
    "version": "0.3.0",
    "sentence": "Library for the SEN5X sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C SEN66",
    "version": "1.1.0",
    "sentence": "Library for the SEN66 sensor by Sensirion"
  },
  {
    "name": "Sensirion I2C SF06-LF",
    "version": "1.0.0",
    "sentence": "Library for the SF06-LF sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C SFA3x",
    "version": "0.1.0",
    "sentence": "Library for the SFA3X sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C SFM-SF06",
    "version": "3.0.1",
    "sentence": "Library for the SFM-SF06 sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C SFM3000",
    "version": "0.1.0",
    "sentence": "Library for the SFM3000 sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C SFx6xxx",
    "version": "1.0.0",
    "sentence": "Library for the SFX6XXX sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C SGP40",
    "version": "0.1.0",
    "sentence": "Library for the SGP40 sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C SGP41",
    "version": "1.0.0",
    "sentence": "Library for the SGP41 sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C SHT3x",
    "version": "1.0.1",
    "sentence": "Library for the SHT3X sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C SHT4x",
    "version": "1.1.2",
    "sentence": "Library for the SHT4X sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C STC3x",
    "version": "1.0.1",
    "sentence": "Library for the STC3X sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C STS3x",
    "version": "1.0.1",
    "sentence": "Library for the STS3X sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C STS4x",
    "version": "0.1.0",
    "sentence": "Library for the STS4x sensor family by Sensirion"
  },
  {
    "name": "Sensirion I2C SVM4x",
    "version": "0.2.0",
    "sentence": "Library for the SVM4x evaluation kit board by Sensirion."
  },
  {
    "name": "Sensirion UART SEN44",
    "version": "0.1.0",
    "sentence": "Library for the SEN44 sensor by Sensirion"
  },
  {
    "name": "Sensirion UART SFA3x",
    "version": "0.1.0",
    "sentence": "Library for the SFA3X sensor family by Sensirion"
  },
  {
    "name": "Sensirion UART SFx6xxx",
    "version": "1.1.0",
    "sentence": "Library for the SFX6XXX sensor family by Sensirion"
  },
  {
    "name": "Sensirion UART Svm4x",
    "version": "2.0.3",
    "sentence": "Library for the SVM4Xsensor by Sensirion"
  },
  {
    "name": "Sensirion UPT BLE Auto Detection",
    "version": "0.2.0",
    "sentence": "Automatically detects Sensirion Gadgets via Bluetooth and reads out measurement data."
  },
  {
    "name": "Sensirion UPT Core",
    "version": "0.5.1",
    "sentence": "Library for definitions and configurations used by other Sensirion Unified Prototyping Toolkit (UPT) libraries."
  },
  {
    "name": "Sensirion UPT I2C Auto Detection",
    "version": "0.3.0",
    "sentence": "Automatically detects Sensirion Sensors on an I2C bus and reads out measurement data."
  },
  {
    "name": "Sensor",
    "version": "0.1.0",
    "sentence": "A simple Arduino Sensor/map wrapper"
  },
  {
    "name": "Sensor Communication Library",
    "version": "0.4.0",
    "sentence": "Arduino library for easy sensors data communication"
  },
  {
    "name": "SensorFusion",
    "version": "1.0.6",
    "sentence": "A library that makes using a IMU a breeze."
  },
  {
    "name": "SensorLib",
    "version": "0.2.6",
    "sentence": "Commonly used I2C , SPI device multi-platform libraries"
  },
  {
    "name": "SensorModbusMaster",
    "version": "0.7.3",
    "sentence": "Arduino library for communicating via modbus with the Arduino acting as master"
  },
  {
    "name": "SensorNormalization",
    "version": "0.0.3",
    "sentence": "Library for line sensors."
  },
  {
    "name": "SensorPlot WebInterface",
    "version": "1.2.3",
    "sentence": "WebInterface to display Sensor-Data."
  },
  {
    "name": "SensorToButton",
    "version": "1.0.1",
    "sentence": "An algorithm to convert analog Data into a Button.<br />"
  },
  {
    "name": "SensorWLED",
    "version": "1.0.0",
    "sentence": "Provides methods to retrieve instant and peak values from the ADC input. The Arduino library SensorWLED splits the input from a varying analog signal from the ADC into components, i.e., provides the capability of a sample-and-hold circuit."
  },
  {
    "name": "SeqButton",
    "version": "1.5.0",
    "sentence": "Sequential Button Arduino Library"
  },
  {
    "name": "SeqTimer",
    "version": "2.3.0",
    "sentence": "Small piece of sequential Timer class (does not modify hw timers)"
  },
  {
    "name": "Sequent Home Automation HAT",
    "version": "1.0.2",
    "sentence": "A easy to use Arduino Library for Home Automation HAT"
  },
  {
    "name": "SercomSPISlave",
    "version": "0.2.0",
    "sentence": "Sercom SPI slave library for ATSAMD21 boards such as Arduino Zero, Arduino MKR Zero and Adafruit Feather M0."
  },
  {
    "name": "Serde",
    "version": "0.3.0",
    "sentence": "Exchange structured data between Arduino boards"
  },
  {
    "name": "Serial Controlled Motor Driver",
    "version": "1.0.4",
    "sentence": "Use this to command the SCMD and connected chain."
  },
  {
    "name": "Serial Data Exporter",
    "version": "0.1.0",
    "sentence": "This library provides a simple way to collect and export data via Serial in various output formats."
  },
  {
    "name": "SerialBuffSender",
    "version": "1.0.1",
    "sentence": "sending buffer via serial"
  },
  {
    "name": "SerialBus",
    "version": "0.2.0",
    "sentence": "Uses bit bagging to create async communication over a single wire as bus. Most ideal for sending short periodic signal messages."
  },
  {
    "name": "SerialCAN",
    "version": "1.0.0",
    "sentence": "A library that lets you send data over Serial using the CAN communication protocol"
  },
  {
    "name": "SerialCmd",
    "version": "1.1.6",
    "sentence": "Just another library to tokenize and parse commands."
  },
  {
    "name": "SerialCom",
    "version": "0.1.2",
    "sentence": "Arduino Library for sending data"
  },
  {
    "name": "SerialCommand",
    "version": "2.0.1",
    "sentence": "Arduino library for Serial Commands over a serial port"
  },
  {
    "name": "SerialCommand Advanced",
    "version": "1.0.0",
    "sentence": "A Wiring/Arduino library to tokenize and parse commands received over any serial port."
  },
  {
    "name": "SerialCommands",
    "version": "2.2.0",
    "sentence": "An Arduino library to tokenize and parse commands received over a serial port."
  },
  {
    "name": "SerialConfigCommand",
    "version": "0.7.0",
    "sentence": "SerialConfigCommand for Arduino allows user to set commands via the Serial Monitor easily."
  },
  {
    "name": "SerialDebug",
    "version": "0.9.82",
    "sentence": "Improved serial debug to Arduino with debug levels an simple software debugger"
  },
  {
    "name": "SerialDebugger",
    "version": "1.0.0",
    "sentence": "A library for serial port debugging parameter for Arduino or ESP32."
  },
  {
    "name": "SerialDraw",
    "version": "1.0.2",
    "sentence": "Enables communication between Arduino and ArduinoSerialDraw Software client."
  },
  {
    "name": "SerialFlash",
    "version": "0.5.0",
    "sentence": "Access SPI Serial Flash memory with filesystem-like functions"
  },
  {
    "name": "SerialMIIO",
    "version": "0.0.7",
    "sentence": "A library for serial communication with Xiaomi IoT module."
  },
  {
    "name": "SerialMP3",
    "version": "1.1.0",
    "sentence": "A library for Serial MP3 Player board GD3300D/TD5580A chip."
  },
  {
    "name": "SerialMP3Player",
    "version": "1.0.0",
    "sentence": "A library for Serial MP3 Player board (YX5300 chip)."
  },
  {
    "name": "SerialMenuCmd",
    "version": "1.1.3",
    "sentence": "This library constitutes a basic command line interface"
  },
  {
    "name": "SerialRFID",
    "version": "0.2.0",
    "sentence": "Arduino library to read RFID tags from ID-innovations RFID readers (e.g. ID-12LA) using serial."
  },
  {
    "name": "SerialRecord",
    "version": "0.3.6",
    "sentence": "Send and receive multiple values to and from the serial port, with error checking."
  },
  {
    "name": "SerialServo",
    "version": "1.0.0",
    "sentence": "A versatile library for controlling TTL serial servos via hardware serial."
  },
  {
    "name": "SerialTerminal",
    "version": "1.2.0",
    "sentence": "Arduino Hardware Serial Terminal"
  },
  {
    "name": "SerialTerminalIO",
    "version": "0.1.2",
    "sentence": "Toolbox for creating terminal control"
  },
  {
    "name": "SerialTerminalPRO",
    "version": "1.1.1",
    "sentence": "a simple Arduino library to incorporate a serial terminal to your project"
  },
  {
    "name": "SerialToWifi",
    "version": "0.1.6",
    "sentence": "Drop-in replacement for the Serial Arduino library that manages i/o to a remote console over wifi on ESP32."
  },
  {
    "name": "SerialTransfer",
    "version": "3.1.4",
    "sentence": "Arduino library to transfer packetized data fast/reliably via UART/Serial"
  },
  {
    "name": "SerialTuning",
    "version": "1.2.2",
    "sentence": "Tune variables without a sweat."
  },
  {
    "name": "SerialUI",
    "version": "3.1.0",
    "sentence": "A user interface through the serial channel (menus, sub-menus and command execution), with support for navigation through the menu hierarchy and online help."
  },
  {
    "name": "SerialUtil",
    "version": "1.0.0",
    "sentence": "A library for sending/recieving data between two arduino's over serial communication"
  },
  {
    "name": "SerialVariable",
    "version": "1.0.1",
    "sentence": "Save values to the Arduino over Serial"
  },
  {
    "name": "SerialWireOutput",
    "version": "1.0.5",
    "sentence": "With Serial Wire Output (SWO) an stm32duino can write tracing and logging to a pc at high speed."
  },
  {
    "name": "SerialWombat",
    "version": "2.1.9",
    "sentence": "A library to drive the Serial Wombat Family by UART or I2C."
  },
  {
    "name": "SerialWombat18ABVGADriver",
    "version": "2.1.7",
    "sentence": "A library to Connect the Serial Wombat 18AB VGA Pin mode to Adafruit GFX"
  },
  {
    "name": "Serial_BLE",
    "version": "1.1.3",
    "sentence": "Customizable BLE Serial (UART) library."
  },
  {
    "name": "Serial_Monitor",
    "version": "4.0.8",
    "sentence": "Monitors your code and prints actions to the Serial monitor"
  },
  {
    "name": "Serie",
    "version": "1.4.1",
    "sentence": "A library for mesures that makes easy to use time series"
  },
  {
    "name": "Series",
    "version": "1.0.4",
    "sentence": "It's like a task list."
  },
  {
    "name": "Servo",
    "version": "1.2.2",
    "sentence": "Allows Arduino boards to control a variety of servo motors."
  },
  {
    "name": "Servo Hardware PWM",
    "version": "1.3.0",
    "sentence": "Allows Arduino/Genuino Mega boards to control up to 9 servos with the integrated 16-bit hardware PWM timer/counter."
  },
  {
    "name": "Servo328",
    "version": "1.0.0",
    "sentence": "A servo motor driver for Arduino Uno with ATmega328P PWM"
  },
  {
    "name": "ServoCtrl",
    "version": "1.3.3",
    "sentence": "An Arduino-based servo control library."
  },
  {
    "name": "ServoESP32",
    "version": "1.1.1",
    "sentence": "Generate RC servo signal on a selected pins with ESP32 device and Arduino framework."
  },
  {
    "name": "ServoESP32Fix",
    "version": "1.1.2",
    "sentence": "Generate RC servo signal on a selected pins with ESP32 device and Arduino framework, fixed support for latest ESP32 core"
  },
  {
    "name": "ServoEasing",
    "version": "3.4.0",
    "sentence": "Enables smooth servo movement. Linear as well as other (Cubic, Circular, Bounce, Sine, Back, Precision, etc.) ease movements for servos are provided. The Arduino Servo library or PCA9685 servo expanders are supported."
  },
  {
    "name": "ServoInput",
    "version": "2.1.0",
    "sentence": "Read positional data from servo motors and drivers."
  },
  {
    "name": "ServoMotor",
    "version": "1.1.0",
    "sentence": "Library to make a custom/DIY servo motor."
  },
  {
    "name": "ServoOsc",
    "version": "1.2.0",
    "sentence": "Library to configure a servo to oscillate around a center point."
  },
  {
    "name": "ServoSmooth",
    "version": "3.9.0",
    "sentence": "Library for smooth control of servo motor"
  },
  {
    "name": "Servo_Motor_Module",
    "version": "0.5.4",
    "sentence": "This library uses the Servo Library to control Servo Motors"
  },
  {
    "name": "SessionManager",
    "version": "1.0.1",
    "sentence": "Manage session states for web server."
  },
  {
    "name": "SetPoint",
    "version": "1.0.0",
    "sentence": "A library that makes detecting changes on an analog input simple."
  },
  {
    "name": "Settings",
    "version": "1.2.5",
    "sentence": "Simple UI webface builder for esp8266/esp32"
  },
  {
    "name": "Settings Manager",
    "version": "2.1.2",
    "sentence": "Settings manager"
  },
  {
    "name": "SettingsManagerESP32",
    "version": "2.0.1",
    "sentence": "Abstraction over ESP32 Arduino Preferences library to make your life easier."
  },
  {
    "name": "SevSeg",
    "version": "3.7.0",
    "sentence": "Turns your Arduino into a seven segment display controller!"
  },
  {
    "name": "SevSegShift",
    "version": "3.6.1",
    "sentence": "Fork of SevSeg that adds the functionality of Shift Registers"
  },
  {
    "name": "Seven Segment Library",
    "version": "1.0.1",
    "sentence": "Arduino Library for using common anode seven segment display"
  },
  {
    "name": "Seven Segment Pixel",
    "version": "1.0.0",
    "sentence": "Arduino library for controlling custom-built, pixel based 7 segment displays."
  },
  {
    "name": "Seven Segments K",
    "version": "1.0.0",
    "sentence": "Library for working with Seven Segments displays"
  },
  {
    "name": "SevenSeg",
    "version": "1.2.1",
    "sentence": "A mature and flexible seven segment display driver."
  },
  {
    "name": "SevenSeg4D",
    "version": "1.0.0",
    "sentence": "Library for driving a 4 digit 7segment LED display screen with 2 HC595 shift registers"
  },
  {
    "name": "SevenSegDisplays",
    "version": "1.3.0",
    "sentence": "7 segment 4 digits (and extended to generic 1 to 8 digits) LED display easy to use and powerful library for modules based on two 74HC595 (or similar) shift registers chips"
  },
  {
    "name": "SevenSegInt",
    "version": "1.0.0",
    "sentence": "A library to drive 7 segment displays using interrupts."
  },
  {
    "name": "SevenSegmentDisplay",
    "version": "1.0.1",
    "sentence": "Library for displaying digits and decimal points on a Seven Segment Display."
  },
  {
    "name": "SevenSegmentPanel",
    "version": "1.1.0",
    "sentence": "Driver for panel on 7-segment indicators"
  },
  {
    "name": "SevenSegmentTM1637",
    "version": "1.1.0",
    "sentence": "Library for using a 4 digit seven segment display with TM1636 or TM1637 driver IC"
  },
  {
    "name": "SevenSegmentsDisp",
    "version": "1.0.0",
    "sentence": "Library for Seven Segments Displays"
  },
  {
    "name": "Sharer",
    "version": "1.0.1",
    "sentence": "Arduino library that simplifies Serial communication"
  },
  {
    "name": "Sharp GP2Y Dust Sensor",
    "version": "1.1.0",
    "sentence": "Read dust density using Sharp GP2Y Dust Sensors like GP2Y1010AU0F and GP2Y1014AU0F"
  },
  {
    "name": "SharpDistSensor",
    "version": "1.6.0",
    "sentence": "Sharp analog distance sensor library"
  },
  {
    "name": "SharpIR",
    "version": "2.0.1",
    "sentence": "Allow to acquire distance data from analog Sharp IR sensors"
  },
  {
    "name": "Shellminator",
    "version": "1.2.0",
    "sentence": "This library can be used to interface with VT-100 compatible terminal emulators."
  },
  {
    "name": "Shift Register LED Matrix Lib",
    "version": "2.0.3",
    "sentence": "A driver for LED matrices that use shift registers to control rows and columns."
  },
  {
    "name": "ShiftDisplay",
    "version": "3.6.1",
    "sentence": "Arduino library for driving 7-segment displays using 74HC595 shift registers"
  },
  {
    "name": "ShiftDisplay2",
    "version": "1.2.1",
    "sentence": "Arduino library for driving 7-segment displays using shift registers"
  },
  {
    "name": "ShiftInSlow",
    "version": "0.1.4",
    "sentence": "Arduino library for shiftIn with build-in delay - e.g. for 74HC165"
  },
  {
    "name": "ShiftLcd",
    "version": "1.0.2",
    "sentence": "A library for using a LCD with as few pins as possible."
  },
  {
    "name": "ShiftOutMega",
    "version": "1.0.1",
    "sentence": "Library to control additional digital ports using CI 74HC595"
  },
  {
    "name": "ShiftOutSlow",
    "version": "0.1.5",
    "sentence": "Arduino library for shiftOut with build-in delay - e.g. for 74HC165"
  },
  {
    "name": "ShiftRegister",
    "version": "1.0.0",
    "sentence": "Allows Arduino boards to write numbers to shift register (DEC -> BIN)"
  },
  {
    "name": "ShiftRegister-PWM-Library",
    "version": "1.0.0",
    "sentence": "Makes shift register pins PWM capable."
  },
  {
    "name": "ShiftRegister74HC595",
    "version": "1.3.1",
    "sentence": "Simplifies usage of shift registers, designed for the 74HC595."
  },
  {
    "name": "ShiftRegisterController",
    "version": "0.2.0",
    "sentence": "An Arduino library that allows seamless control of the 74HC595 shift register."
  },
  {
    "name": "ShiftRegisterPWM595",
    "version": "1.0.2",
    "sentence": "Library for 74HC595 control PWM"
  },
  {
    "name": "Shifty",
    "version": "0.1.5",
    "sentence": "Extremely flexible and easy-to-use shift register driver for 74HC595 shift registers"
  },
  {
    "name": "Shox96 Progmem Compression",
    "version": "1.1.0",
    "sentence": "Compress short strings and messages using Shox96 technique and save space on Flash (PROGMEM)"
  },
  {
    "name": "Shutters",
    "version": "3.0.0-beta.4",
    "sentence": "Allows non-smart roller-shutters to be percentage-controlled using time"
  },
  {
    "name": "Si4703",
    "version": "1.4.1",
    "sentence": "Basic functionality of the Si4703 FM tuner chip."
  },
  {
    "name": "SiC45x",
    "version": "1.0.4",
    "sentence": "Arduino library for the SiC450, SiC451, SiC453 DC/DC buck regulator from Vishay"
  },
  {
    "name": "SiC45xDriver",
    "version": "0.9.0",
    "sentence": "A library to talk to the SiC45x series buck converters using I2C (Wire)."
  },
  {
    "name": "SiderealObjects",
    "version": "1.1.1",
    "sentence": "A library for providing basic astronomy related object tables."
  },
  {
    "name": "SiderealPlanets",
    "version": "1.5.0",
    "sentence": "A library for providing basic astronomy related functions."
  },
  {
    "name": "SigmaDSP",
    "version": "1.1.6",
    "sentence": "An intuitive and easy to use Arduino library for interfacing with the AAU1401, ADAU1701 or ADAU1702 audio DSP over i2c"
  },
  {
    "name": "SignalAcquisition",
    "version": "1.2.4",
    "sentence": "A library for the Arduino IDE that allows you to sample signals at regular intervals, and send the resulting samples, in batches, over a serial port using a simple binary protocol."
  },
  {
    "name": "SignalControl",
    "version": "2.3.0",
    "sentence": "This library provides code for controlling LEDs in signals on your model railway."
  },
  {
    "name": "Signature",
    "version": "2.0.1",
    "sentence": "Processing AVR microcontrollers signature"
  },
  {
    "name": "SiguesAhi",
    "version": "0.0.1",
    "sentence": "[ALPHA] Library for building instruments that check if institutions still exist."
  },
  {
    "name": "Silvervest OLED-0010 SPI",
    "version": "1.0.0",
    "sentence": "OLED-0010 oled driver library 16x2 displays via SPI"
  },
  {
    "name": "Sim Racing Library",
    "version": "1.1.5",
    "sentence": "Interface with sim racing peripherals including pedals, gear shifters, and handbrakes."
  },
  {
    "name": "Sim800L Library",
    "version": "1.0.0",
    "sentence": "Arduino library for Sim800L"
  },
  {
    "name": "Sim800L Library Revised",
    "version": "1.1.9",
    "sentence": "Arduino library for Sim800L"
  },
  {
    "name": "SimRacingController",
    "version": "2.1.0",
    "sentence": "Advanced controller library for sim racing button boxes."
  },
  {
    "name": "Simple FOC",
    "version": "2.3.4",
    "sentence": "A library demistifying FOC for BLDC motors"
  },
  {
    "name": "Simple LED Matrix",
    "version": "2.0.0",
    "sentence": "A library for the MAX7219 LED display drivers."
  },
  {
    "name": "Simple Repository IO",
    "version": "3.0.5",
    "sentence": "A simple IO controller"
  },
  {
    "name": "Simple Web Serial",
    "version": "1.0.0",
    "sentence": "A library to simplify connecting Arduino to your web applications, using the Web Serial API."
  },
  {
    "name": "Simple-Hydroponics-Arduino",
    "version": "0.6.0",
    "sentence": "Hydruino: Simple automation controller for hydroponic grow systems."
  },
  {
    "name": "Simple-SolarTracker-Arduino",
    "version": "0.6.0",
    "sentence": "Helioduino: Simple automation controller for solar tracking systems."
  },
  {
    "name": "Simple5641AS",
    "version": "1.0.0",
    "sentence": "Simple use of the 5641AS LED 7-segment display."
  },
  {
    "name": "SimpleAD9833",
    "version": "1.0.0",
    "sentence": "A simple Arduino library for controlling the AD9833 waveform generator."
  },
  {
    "name": "SimpleBME280",
    "version": "1.0.0",
    "sentence": "Simple library for Bosch Sensortec BME280 I2C."
  },
  {
    "name": "SimpleBox",
    "version": "0.2.1",
    "sentence": "A Simple MQTT client for connection with cloud providers"
  },
  {
    "name": "SimpleCLI",
    "version": "1.1.4",
    "sentence": "A Command Line Interface Library for Arduino"
  },
  {
    "name": "SimpleCollections",
    "version": "1.2.4",
    "sentence": "An associative container used either as a list or btree without needing std lib, and a concurrent circular buffer. Works from AVR/Uno upwards to ESP32, mbed etc"
  },
  {
    "name": "SimpleComponents",
    "version": "1.0.0",
    "sentence": "A library for Arduino that makes it easy to use various electronic components in your projects"
  },
  {
    "name": "SimpleControl",
    "version": "0.1.1",
    "sentence": "A library to control Simple DC-motors."
  },
  {
    "name": "SimpleDCMotor",
    "version": "1.0.3",
    "sentence": "A library enabling DC motor control with SimpleFOC."
  },
  {
    "name": "SimpleDHT",
    "version": "1.0.15",
    "sentence": "Arduino Temp & Humidity Sensors for DHT11 and DHT22."
  },
  {
    "name": "SimpleEncoder",
    "version": "1.2.2",
    "sentence": "SimpleEncoder is a library that makes it easy to use rotary encoders with Arduino's."
  },
  {
    "name": "SimpleEspNowConnection",
    "version": "1.2.0",
    "sentence": "EspNow Library for communication and device pairing"
  },
  {
    "name": "SimpleExpressions",
    "version": "1.1.1",
    "sentence": "Make you Robots cute and noisy"
  },
  {
    "name": "SimpleFOCDrivers",
    "version": "1.0.8",
    "sentence": "A library of supporting drivers for SimpleFOC. Motor drivers chips, encoder chips, current sensing and supporting code."
  },
  {
    "name": "SimpleFSM",
    "version": "1.3.1",
    "sentence": "Arduino/ESP state machine library."
  },
  {
    "name": "SimpleFTPServer",
    "version": "2.1.10",
    "sentence": "Simple FTP server for esp8266, esp32, STM32, Raspberry Pi Pico and Arduino"
  },
  {
    "name": "SimpleFilter",
    "version": "1.0.1",
    "sentence": "A denoising library which can be used in raw anolog data process like touch screen input."
  },
  {
    "name": "SimpleFusion",
    "version": "1.0.6",
    "sentence": "Simple IMU fusion with a complementary filter."
  },
  {
    "name": "SimpleHOTP",
    "version": "1.0.1",
    "sentence": "A lightweight HOTP (HMAC - Based one Time Password) Generator for Arduino."
  },
  {
    "name": "SimpleIMU",
    "version": "1.0.0",
    "sentence": "A Beginner Friendly library to interface MPU6050 with Arduino."
  },
  {
    "name": "SimpleIOT",
    "version": "1.0.0",
    "sentence": "Connecting Arduino ESP32 to AWS IOT via SimpleIOT framework"
  },
  {
    "name": "SimpleJ1939",
    "version": "0.0.2",
    "sentence": "Simple J1939 CAN library."
  },
  {
    "name": "SimpleKalmanFilter",
    "version": "0.2.0",
    "sentence": "A simple implementation of Kalman Filter."
  },
  {
    "name": "SimpleKeypad",
    "version": "1.0.0",
    "sentence": "SimpleKeypad is an Arduino library for using matrix keypads."
  },
  {
    "name": "SimpleLed",
    "version": "1.0.2",
    "sentence": "Arduino library for control LED."
  },
  {
    "name": "SimpleLogger",
    "version": "1.1.0",
    "sentence": "A simple Serial Logger for Arduino"
  },
  {
    "name": "SimpleMelt",
    "version": "1.0.0",
    "sentence": "Open source meltybrain control firmware"
  },
  {
    "name": "SimpleMeteoCalc",
    "version": "1.0.0",
    "sentence": "Simple library for calculate weather parameters using T-H-P basics."
  },
  {
    "name": "SimpleMotionV2-Arduino",
    "version": "1.0.0",
    "sentence": "An Arduino library for controlling SimpleMotion IONI/ARGON drives from Granite Devices."
  },
  {
    "name": "SimplePacketComs",
    "version": "1.0.1",
    "sentence": "A library to convert byte streams of packets into floats."
  },
  {
    "name": "SimplePortal",
    "version": "1.2.0",
    "sentence": "Simple WiFi credentials captive portal for esp8266"
  },
  {
    "name": "SimpleProperties",
    "version": "1.0.1-BETA",
    "sentence": "This library provides an easy and efficient way to create and save \"Properties\". This Library is built on the Hashtable Library, and Mimicks the Java Properties Class."
  },
  {
    "name": "SimpleQueue",
    "version": "1.0.0",
    "sentence": "A simple, lightweight queue implementation for Arduino."
  },
  {
    "name": "SimpleRelay",
    "version": "1.0.2",
    "sentence": "A library for controlling a relay."
  },
  {
    "name": "SimpleRotary",
    "version": "1.1.3",
    "sentence": "Library for using rotary encorders."
  },
  {
    "name": "SimpleSerialProtocol",
    "version": "2.4.0",
    "sentence": "Library for communicate between serial port enabled devices"
  },
  {
    "name": "SimpleSerialShell",
    "version": "1.0.0",
    "sentence": "Simple serial text shell for sending commands to Arduino board."
  },
  {
    "name": "SimpleShell",
    "version": "1.0.0",
    "sentence": "A quick and easy way to control your Arduino using serial."
  },
  {
    "name": "SimpleShell Enhanced",
    "version": "1.0.5",
    "sentence": "A quick and easy way to control your Arduino using serial, enhanced version."
  },
  {
    "name": "SimpleShiftRegisterController",
    "version": "1.0.1",
    "sentence": "Allows you to control easyly a shift register like the 74hc595"
  },
  {
    "name": "SimpleStack",
    "version": "1.1.2",
    "sentence": "A library that enables you to create a simple stack of arbitrary datatype."
  },
  {
    "name": "SimpleStepper",
    "version": "1.0.0",
    "sentence": "Simple library for controlling unipolar and bipolar steppers"
  },
  {
    "name": "SimpleSyslog",
    "version": "0.1.2",
    "sentence": "Add remote syslog capabilities to your project"
  },
  {
    "name": "SimpleTaskManager",
    "version": "1.2.4",
    "sentence": "SimpleTaskManager - simple task dispatcher for Arduino based devices with limited memory."
  },
  {
    "name": "SimpleTicker",
    "version": "2.1.0",
    "sentence": "A library for creating Tickers, which will notify user that a given period has elapsed. Replaces delay() and allows users to write non-blocking code."
  },
  {
    "name": "SimpleTime",
    "version": "1.0.0",
    "sentence": "SimpleTime functionality for Arduino"
  },
  {
    "name": "SimpleTimeout",
    "version": "2.0.0",
    "sentence": "Minimal, production-ready timeout library for Arduino."
  },
  {
    "name": "SimpleTimer",
    "version": "1.0.0",
    "sentence": "Simple arduino timer."
  },
  {
    "name": "SimpleTiming",
    "version": "0.1.0",
    "sentence": "A library which helps you to write non-delaying timers"
  },
  {
    "name": "SimpleUDPController",
    "version": "0.5.0",
    "sentence": "Decodes messages sent from InoPad app."
  },
  {
    "name": "SimpleUltrasonic",
    "version": "1.0.0",
    "sentence": "A library for the HC-SR04 ultrasonic sensor."
  },
  {
    "name": "SimpleVector",
    "version": "1.0.4-BETA",
    "sentence": "A Templated Library for creating dynamic arrays in Arduino projects. It's purpose is meant to be used for Number types, but can be used for any type though it is not recommended as it has not been tested on other types."
  },
  {
    "name": "SimpleWiFiClient",
    "version": "1.0.5",
    "sentence": "Enables low latency control with the UDP protocol"
  },
  {
    "name": "Simple_HC-SR04_Control",
    "version": "0.0.1",
    "sentence": "Simple library to use HC-SR04."
  },
  {
    "name": "Simple_HCSR04",
    "version": "1.0.0",
    "sentence": "A simple wrapper for the HC-SR04 Module."
  },
  {
    "name": "Simpletimer",
    "version": "2.1.7",
    "sentence": "this is simple class you can use to manage time and tasks"
  },
  {
    "name": "SimplifiedTimer",
    "version": "1.1.2",
    "sentence": "Simple arduino timer."
  },
  {
    "name": "SimplyAtomic",
    "version": "1.0.0",
    "sentence": "A library for creating portable atomic blocks within your program"
  },
  {
    "name": "Sindormir SevenSegments",
    "version": "1.1.0",
    "sentence": "Simple Seven Segments library for Arduino."
  },
  {
    "name": "Single LED Library",
    "version": "1.0.0",
    "sentence": "Makes intergrating non interrupting lighting behaviours easy!"
  },
  {
    "name": "SingleEMAFilterLib",
    "version": "1.0.0",
    "sentence": "SingleEMAFilter Library"
  },
  {
    "name": "SingleSevenSegment",
    "version": "1.0.0",
    "sentence": "Display digits or light individual segments of a singular 7 segment display."
  },
  {
    "name": "SingleWireDataBus",
    "version": "1.1.2",
    "sentence": "With this library you can send data to multiple devices over 1 wire."
  },
  {
    "name": "SingleWireSerial",
    "version": "1.2.0",
    "sentence": "Robust software serial library using a single line in half-duplex mode."
  },
  {
    "name": "SinricPro",
    "version": "3.4.0",
    "sentence": "Library for https://sinric.pro - simple way to connect your device to alexa"
  },
  {
    "name": "SinricProBusinessSdk",
    "version": "1.1.1",
    "sentence": "Library to build commercial products using SinricPro"
  },
  {
    "name": "SinricPro_Generic",
    "version": "2.8.5",
    "sentence": "Library for https://sinric.pro - Simple way to connect your device to Alexa"
  },
  {
    "name": "SinricPro_Renesas",
    "version": "1.0.0",
    "sentence": "Arduino Renesas library for https://sinric.pro"
  },
  {
    "name": "SinricTeleport",
    "version": "1.2.1",
    "sentence": "The simple way to access your ESP32 over internet"
  },
  {
    "name": "Sitron Labs OPT3001 Ambient Light Sensor Arduino Library",
    "version": "0.1.1",
    "sentence": "Arduino library for the Texas Instruments OPT3001 Ambient Light Sensor."
  },
  {
    "name": "Sitron Labs SH1106 Arduino Library",
    "version": "0.1.0",
    "sentence": "Arduino library for OLED displays based on the Sino Wealth SH1106 controller."
  },
  {
    "name": "Sitron Labs ST75256 Arduino Library",
    "version": "0.1.0",
    "sentence": "Arduino library for LCD displays based on the ST75256 controller."
  },
  {
    "name": "Sitron Labs TIC Arduino Library",
    "version": "0.3.0",
    "sentence": "Arduino library for parsing consumer-side data provided by electricity meters in France."
  },
  {
    "name": "Sitron Labs WK2132 Arduino Library",
    "version": "0.2.0",
    "sentence": "Arduino library for the Weikai WK2132 multi-bus to UART."
  },
  {
    "name": "SixAxisRing",
    "version": "0.0.3",
    "sentence": "A library for communicating with the Six Axis Shield."
  },
  {
    "name": "Sixfab_CellularIoT",
    "version": "1.3.1",
    "sentence": "This is library of Sixfab Cellular IoT Shield and Cellular IoT Application Shield."
  },
  {
    "name": "Sixfab_NBIoT",
    "version": "1.0.0",
    "sentence": "This is library of Sixfab NBIoT Shield."
  },
  {
    "name": "SketchBinder",
    "version": "1.0.0",
    "sentence": "Sketch Binder."
  },
  {
    "name": "SkyMap",
    "version": "4.1.0",
    "sentence": "SkyMap is a powerful header only library for calculating the positions of stars and planets in the sky."
  },
  {
    "name": "SlackAPI",
    "version": "1.0.1",
    "sentence": "A library to wrap the Slack API (supports ESP8266/ESP32 & others)"
  },
  {
    "name": "Sleep_n0m1",
    "version": "1.1.1",
    "sentence": "A library that sets the Arduino into sleep mode for a specified length of time, or until an interrupt"
  },
  {
    "name": "Sleepy Pi 2",
    "version": "1.0.1",
    "sentence": "Arduino Library for Sleepy Pi 2 Raspberry Pi HAT"
  },
  {
    "name": "SlimLoRa",
    "version": "0.6.12",
    "sentence": "SlimLoRa Library"
  },
  {
    "name": "SlipMassage",
    "version": "1.0.0",
    "sentence": "SlipMassage is a microcontroller message packer and parser for the SLIP format in different protocols."
  },
  {
    "name": "SlowMotionServo",
    "version": "1.2.0",
    "sentence": "This library allows to move multiple servos slowly."
  },
  {
    "name": "SlowPWM",
    "version": "1.0.2",
    "sentence": "Slow PWM library which makes driving high thermal inertia loads easy."
  },
  {
    "name": "Small e-paper Shield V2",
    "version": "1.0.0",
    "sentence": "Arduino library to control Small e-paper Shield V2."
  },
  {
    "name": "SmallProjects",
    "version": "1.0.2",
    "sentence": "Small Projects to demonstrate the usage of Khoi Hoang's libraries, such as ISR-based timers for ESP8266, ESP32 and Arduino Mega, Nano, etc."
  },
  {
    "name": "SmallRTC",
    "version": "2.4.3",
    "sentence": "Replacement RTC library for Watchy."
  },
  {
    "name": "SmallSetup",
    "version": "1.0.0",
    "sentence": "Optimize the Arduino setup routines."
  },
  {
    "name": "Smart Motor Driver - SAMI",
    "version": "1.0.3",
    "sentence": "Arduino library for SAMI the Smart Motor Driver by dannimakes."
  },
  {
    "name": "SmartButton Library",
    "version": "0.3.0",
    "sentence": "Asynchronous SmartButton library for handling various button events."
  },
  {
    "name": "SmartCard",
    "version": "1.0.0",
    "sentence": "Use a smart card with arduino"
  },
  {
    "name": "SmartCardReader",
    "version": "1.0.0",
    "sentence": "A Library with Samples for the Parallax Smart Card Reader."
  },
  {
    "name": "SmartComm",
    "version": "1.0.1",
    "sentence": "Simple solution to device inter-communication."
  },
  {
    "name": "SmartDial",
    "version": "1.0.0",
    "sentence": "A library to communicate with the Rogue Robotics SmartDial.<br />"
  },
  {
    "name": "SmartEverything CC2541",
    "version": "1.0.1",
    "sentence": "Library code for the TDK-SP13808 module."
  },
  {
    "name": "SmartEverything HTS221",
    "version": "1.1.2",
    "sentence": "Library code for HTS221 Capacitive digital sensor for relative humidity and temperature"
  },
  {
    "name": "SmartEverything LPS25H",
    "version": "1.1.1",
    "sentence": "Library code for LPS25H MEMS pressure sensor: 260-1260 hPa absolute digital output barometer"
  },
  {
    "name": "SmartEverything LSM6DS3",
    "version": "1.0.1",
    "sentence": "Library code for LSM6DS3 iNEMO inertial module:3D accelerometer, 3D gyroscope"
  },
  {
    "name": "SmartEverything LSM9DS1",
    "version": "1.1.0",
    "sentence": "Library code for LSM9DS1 iNEMO inertial module:3D accelerometer, 3D gyroscope, 3D magnetometer"
  },
  {
    "name": "SmartEverything Lion RN2483",
    "version": "1.3.0",
    "sentence": "Library code for the Microchip RN2483 LoaraWAN Module"
  },
  {
    "name": "SmartEverything NFC NT3H1101",
    "version": "1.1.1",
    "sentence": "Library code for the NXP NT3H1101 a NFC_I2C module"
  },
  {
    "name": "SmartEverything SE868-AS",
    "version": "1.1.1",
    "sentence": "Library code for the Telit SE868-AS GPS System"
  },
  {
    "name": "SmartEverything SIGFOX LE51-868",
    "version": "2.1.1",
    "sentence": "Library code for the TELEIT LE51-868 a SIGFOX module"
  },
  {
    "name": "SmartEverything VL6180X",
    "version": "1.1.1",
    "sentence": "Library code for the Ambient Light & Proximity sensor from ST component."
  },
  {
    "name": "SmartLadder",
    "version": "1.0.3",
    "sentence": "A versatile CPU control library for SmartLadder systems"
  },
  {
    "name": "SmartMatrix",
    "version": "4.0.3",
    "sentence": "Drive HUB75 RGB Matrix Panels with High Quality Graphics from a Teensy 3, Teensy 4, or ESP32"
  },
  {
    "name": "SmartMatrix GFX",
    "version": "1.2.0",
    "sentence": "Adafruit_GFX and FastLED compatible library for SmartMatrix panels"
  },
  {
    "name": "SmartPin",
    "version": "1.0.0",
    "sentence": "Construct easy to follow semantic expressions using variables that represent the pins"
  },
  {
    "name": "SmartRC-CC1101-Driver-Lib",
    "version": "2.5.7",
    "sentence": "Driver for cc1101."
  },
  {
    "name": "SmartSW",
    "version": "1.0.0",
    "sentence": "Companion library for Smart CHERRY MX LOW Profile RGB switches."
  },
  {
    "name": "SmartSystem",
    "version": "1.0.0",
    "sentence": "A library that simplifies exposing modular Arduino functionality over Wire I2C / RF24 radio"
  },
  {
    "name": "Smart_Duty_Cycling",
    "version": "1.0.0",
    "sentence": "Automatic duty cycle generation for your Arduino program."
  },
  {
    "name": "Smartcar shield",
    "version": "7.0.2",
    "sentence": "Arduino library for controlling the Smartcar platform"
  },
  {
    "name": "Smelpro Macaron Library",
    "version": "1.0.1",
    "sentence": "Library for development board Smelpro Macaron"
  },
  {
    "name": "Smooth",
    "version": "1.9.0",
    "sentence": "Keep smooth running averages without using arrays! The sample size is adjustable at runtime."
  },
  {
    "name": "SmoothADC",
    "version": "1.0.0",
    "sentence": "Get ADC to return averaged values."
  },
  {
    "name": "SmoothLed",
    "version": "1.0.1",
    "sentence": "Arduino library for FadeCandy style control of single-wire-based LED neopixels and WS2812B strips with megaTinyCore."
  },
  {
    "name": "SmoothProgress",
    "version": "1.0.1",
    "sentence": "Smooth progress bar for character LCD displays"
  },
  {
    "name": "SmoothThermistor",
    "version": "1.3.0",
    "sentence": "Flexible thermistor reading library."
  },
  {
    "name": "SmoothTouch",
    "version": "1.0.0",
    "sentence": "Custom XPT2046 touch input library with built-in denoising."
  },
  {
    "name": "Smoothed",
    "version": "1.3.0",
    "sentence": "A simple library to store and calculate smoothed values from sensors."
  },
  {
    "name": "SnailwalkPromptpay",
    "version": "0.0.1",
    "sentence": "library gen promptpay qr code"
  },
  {
    "name": "Snake",
    "version": "1.0.1",
    "sentence": "This library allows to run snake on 7-segments display (we use it in idle)."
  },
  {
    "name": "SnappyProto",
    "version": "0.1.2",
    "sentence": "A library which includes a snappy compressor and nanopb for creating snappy compressed protobufs."
  },
  {
    "name": "SnappyXO-PreciseMovement-library",
    "version": "1.0.0",
    "sentence": "Move your SnappyXO robot more precisely."
  },
  {
    "name": "Snowduino",
    "version": "0.0.1",
    "sentence": "A library with faster commands for SAMC21"
  },
  {
    "name": "SoapESP32",
    "version": "1.4.1",
    "sentence": "Enables ESP32 devices to scan the local network for DLNA media servers, browse their content and download files."
  },
  {
    "name": "SocketIoClient",
    "version": "0.3.0",
    "sentence": "socket.io Client for ESP8266 and Arduino"
  },
  {
    "name": "Sodaq_BMP085",
    "version": "1.4.0",
    "sentence": "An Arduino library for the BMP085/BMP180 Barometric Pressure + Temp sensor"
  },
  {
    "name": "Sodaq_DS3231",
    "version": "1.2.2",
    "sentence": "An Arduino library for the DS3231 RTC (Real Time Clock)."
  },
  {
    "name": "Sodaq_HTS221",
    "version": "1.0.0",
    "sentence": "An Arduino library for the HTS221 sensor."
  },
  {
    "name": "Sodaq_LIS3DE",
    "version": "1.1.0",
    "sentence": "An Arduino library for the ST LIS3DE."
  },
  {
    "name": "Sodaq_LPS22HB",
    "version": "1.0.0",
    "sentence": "An Arduino library for the LPS22HB sensor."
  },
  {
    "name": "Sodaq_LSM303AGR",
    "version": "2.0.0",
    "sentence": "An Arduino library for the ST LSM303AGR."
  },
  {
    "name": "Sodaq_N2X",
    "version": "1.0.1",
    "sentence": "An Arduino library for the SARA N2X modules."
  },
  {
    "name": "Sodaq_PcInt",
    "version": "1.2.0",
    "sentence": "An Arduino library to deal with PCINT (Pin Change Interrupts)"
  },
  {
    "name": "Sodaq_R4X",
    "version": "2.2.1",
    "sentence": "An Arduino library for the UBlox SARA R4X modules."
  },
  {
    "name": "Sodaq_R4X_MQTT",
    "version": "1.0.1",
    "sentence": "Adapter to use the Sodaq_R4X library with Sodaq_MQTT"
  },
  {
    "name": "Sodaq_RN2483",
    "version": "1.1.0",
    "sentence": "An Arduino library for the Microchip RN2483."
  },
  {
    "name": "Sodaq_SHT2x",
    "version": "1.2.0",
    "sentence": "An Arduino library for the SHT21 / SHT25 humidity and temperature sensors"
  },
  {
    "name": "Sodaq_UBlox_GPS",
    "version": "0.9.6",
    "sentence": "An Arduino library for the UBlox EVA7M (as available on LoRaONE)."
  },
  {
    "name": "Sodaq_dataflash",
    "version": "1.0.3",
    "sentence": "An Arduino library for the AT45DB dataflash as used on SODAQ boards."
  },
  {
    "name": "Sodaq_nbIOT",
    "version": "2.0.1",
    "sentence": "An Arduino library for the uBlox nbIOT modules."
  },
  {
    "name": "Sodaq_wdt",
    "version": "1.0.2",
    "sentence": "An Arduino wrapper for the Watch Dog Timer."
  },
  {
    "name": "SoftFilters",
    "version": "0.1.0",
    "sentence": "Arduino framework and library of software data filters."
  },
  {
    "name": "SoftI2C",
    "version": "1.0.0",
    "sentence": "An Arduino library for software-based I2C communication."
  },
  {
    "name": "SoftI2CMaster",
    "version": "2.1.9",
    "sentence": "I2C lib that supports bit banging and hardware support"
  },
  {
    "name": "SoftModem",
    "version": "1.0.0",
    "sentence": "Audio Jack Modem Library for Arduino."
  },
  {
    "name": "SoftPWM",
    "version": "1.0.1",
    "sentence": "A software library to produce a 50 percent duty cycle PWM signal on arbitrary pins.<br />"
  },
  {
    "name": "SoftPathElectronics",
    "version": "2.0.1",
    "sentence": "Library with example code for SoftPath-Electronics products."
  },
  {
    "name": "SoftSPIB",
    "version": "1.1.1",
    "sentence": "Software SPI class for Arduino with support of not 8-bit aligned transfers."
  },
  {
    "name": "SoftServo",
    "version": "1.2.0",
    "sentence": "Library for software servo motor control (by system timer)"
  },
  {
    "name": "SoftTimer",
    "version": "3.2.0",
    "sentence": "SoftTimer is a lightweight pseudo multitasking solution for Arduino."
  },
  {
    "name": "SoftTimers",
    "version": "2.1.0",
    "sentence": "The SoftTimers arduino library is a collection of software timers. The library aims at greatly simplifying multitask complexity."
  },
  {
    "name": "SoftWire",
    "version": "2.0.10",
    "sentence": "Software I2C library."
  },
  {
    "name": "SoftwareReset",
    "version": "3.0.1",
    "sentence": "Software methods to reset AVR boards"
  },
  {
    "name": "SoftwareSerialTX",
    "version": "0.0.33",
    "sentence": "<h3>A SoftwareSerial implementation only for transmitting data, maximum size reduced </h3>"
  },
  {
    "name": "SoftwareTimer",
    "version": "1.0.1",
    "sentence": "Software timer library"
  },
  {
    "name": "SoftwareWire",
    "version": "1.6.0",
    "sentence": "Creates a software I2C/TWI bus on every pins."
  },
  {
    "name": "Soict_IoT_Labs",
    "version": "1.1.1",
    "sentence": "Practice exercises for the subject Introduce to ICT"
  },
  {
    "name": "SoilHygrometer",
    "version": "1.0.0",
    "sentence": "Allows Arduino/Genuino boards to simplify the use of the soil hygrometer."
  },
  {
    "name": "SoilSensor",
    "version": "1.2.0",
    "sentence": "Arduino library for HARDWARIO Soil Sensor."
  },
  {
    "name": "SolarCalculator",
    "version": "2.0.1",
    "sentence": "A library inspired by the NOAA Solar Calculator."
  },
  {
    "name": "SolarCharger",
    "version": "1.0.2",
    "sentence": "Solar Charger Shield."
  },
  {
    "name": "SolarChargerSB041",
    "version": "1.0.0",
    "sentence": "Library to read data from the SB041 solar charger designed for the senseBox."
  },
  {
    "name": "Soldered ADS1015 and ADS1115 EasyC Library",
    "version": "1.0.0",
    "sentence": "Popular ADC boards by Soldered."
  },
  {
    "name": "Soldered AS3935 Lightning sensor library",
    "version": "1.0.0",
    "sentence": "AS3935 Lightning sensor Arduino library"
  },
  {
    "name": "Soldered BME280 and BME680 EasyC Library",
    "version": "1.0.0",
    "sentence": "BME280 and BME680 EasyC Library"
  },
  {
    "name": "Soldered BMP280 Arduino Library",
    "version": "1.0.0",
    "sentence": "Soldered Arduino library for BMP280n Sensor Breakout."
  },
  {
    "name": "Soldered BQ27441-G1 Arduino Library",
    "version": "1.0.0",
    "sentence": "Soldered BQ27441-G1 Arduino Library"
  },
  {
    "name": "Soldered CAN Bus Breakout Arduino Library",
    "version": "1.0.0",
    "sentence": "CAN Bus Breakout Library for Arduino"
  },
  {
    "name": "Soldered Fingerprint Sensor",
    "version": "1.0.0",
    "sentence": "Simple Fingerprint Sensor by Soldered"
  },
  {
    "name": "Soldered Hall Effect Arduino Library",
    "version": "1.0.1",
    "sentence": "Hall Effect Sensor library (Analog and Digital, regular and EasyC)"
  },
  {
    "name": "Soldered INA219 Board Arduino Library",
    "version": "1.0.0",
    "sentence": "INA219 Current Sensor Board Arduino Library by Soldered"
  },
  {
    "name": "Soldered LCD",
    "version": "1.0.0",
    "sentence": "Library for 16x2 and 20x4 EasyC LCD displays"
  },
  {
    "name": "Soldered LSM9DS1TR Arduino Library",
    "version": "1.0.0",
    "sentence": "Library for the LSM9DS1TR breakout board by Soldered."
  },
  {
    "name": "Soldered LTR-507 Arduino Library",
    "version": "1.0.1",
    "sentence": "Library used to easily operate with the LTR-507 Light And Proximity Sensor"
  },
  {
    "name": "Soldered MCP23017 Arduino Library",
    "version": "1.0.1",
    "sentence": "MCP23017 board library for Arduino"
  },
  {
    "name": "Soldered MCP4018 Arduino Library",
    "version": "1.0.1",
    "sentence": "Arduino library for MCP4018 Digital potentiometer breakout board"
  },
  {
    "name": "Soldered MCP47A1 DAC library",
    "version": "1.0.0",
    "sentence": "Arduino library for Soldered MCP47A1 1 Channel 6 Bit DAC Breakout board"
  },
  {
    "name": "Soldered MQ-X Gas Sensor Arduino Library",
    "version": "1.0.1",
    "sentence": "MQ-X Gas Sensor Library by Soldered"
  },
  {
    "name": "Soldered OLED Display Arduino Library",
    "version": "1.0.1",
    "sentence": "128x64 OLED Display"
  },
  {
    "name": "Soldered Obstacle Sensor Arduino Library",
    "version": "1.0.1",
    "sentence": "Obstacle Sensor easyC library"
  },
  {
    "name": "Soldered PCF85063A RTC Arduino Library",
    "version": "1.0.0",
    "sentence": "PCF85063A Board Arduino Library"
  },
  {
    "name": "Soldered PMS7003 Arduino Library",
    "version": "1.0.0",
    "sentence": "PMS7003 Arduino Library by Soldered"
  },
  {
    "name": "Soldered SI114X Light Sensor Arduino Library",
    "version": "1.0.1",
    "sentence": "Library used to easily operate with SI1142 and SI1147 Light Sensors"
  },
  {
    "name": "Soldered SIM7020 NB-IoT Library",
    "version": "1.0.0",
    "sentence": "SIM7020 NB-IoT Soldered library"
  },
  {
    "name": "Soldered SIM800L Arduino Library",
    "version": "1.0.0",
    "sentence": "SIM800L Arduino Library by Soldered"
  },
  {
    "name": "Soldered TCA9548A Multiplexer Arduino Library",
    "version": "1.0.0",
    "sentence": "TCA9548A I2C Multiplexer Board"
  },
  {
    "name": "Soldered Ultrasonic Distance Sensor Arduino library",
    "version": "1.0.1",
    "sentence": "Ultrasonic sensor is used to measure distance"
  },
  {
    "name": "Soldered WS2812 Arduino Library",
    "version": "1.0.0",
    "sentence": "WS2812 Programable Led Library"
  },
  {
    "name": "Soldered nRF24 Arduino Library",
    "version": "1.0.1",
    "sentence": "nRF24 Library for Soldered Boards"
  },
  {
    "name": "Soldering Machine",
    "version": "1.0.0",
    "sentence": "Download this library to easily interact with the MESA soldering machine"
  },
  {
    "name": "SomeSerial",
    "version": "1.1.3",
    "sentence": "A library to wrap HardwareSerial, SoftwareSerial or USBAPI Serial_."
  },
  {
    "name": "Somfy_RTS",
    "version": "1.0.0",
    "sentence": "A library that makes it easy to control Somfy RTS devices via MQTT using an ESP8266"
  },
  {
    "name": "Somfy_Remote_Lib",
    "version": "0.4.1",
    "sentence": "Control Somfy RTS devices"
  },
  {
    "name": "SonarI2C",
    "version": "1.1.2",
    "sentence": "A library to support cheap ultrasonic sensors on I2C bus"
  },
  {
    "name": "Sony9PinRemote",
    "version": "0.3.2",
    "sentence": "RS422 Sony 9-Pin Protocol Remote Controller of VTRs for Arduino"
  },
  {
    "name": "SoracomArcESP32",
    "version": "0.0.1",
    "sentence": "A utility library to use/bootstrap Soracom Arc easily on ESP32 Arduino boards."
  },
  {
    "name": "SoundPlayer",
    "version": "1.1.1",
    "sentence": "Allows Arduino Boards to play 8-bit sounds recorded at 40kHz sampling frequency."
  },
  {
    "name": "Soundex",
    "version": "0.1.5",
    "sentence": "\"Arduino Library for calculating Soundex hash."
  },
  {
    "name": "SpaceTrek EasyStarterKit",
    "version": "0.1.5",
    "sentence": "EasyStarterKit by SpaceTrek"
  },
  {
    "name": "SpaceTrek ExoNaut",
    "version": "0.0.9",
    "sentence": "ExoNaut Robotics by SpaceTrek"
  },
  {
    "name": "SpaceTrek_ClassBot2",
    "version": "0.2.6",
    "sentence": "ClassBot 2.0 by SpaceTrek"
  },
  {
    "name": "SpacebrewYun",
    "version": "1.0.2",
    "sentence": "Enables the communication between interactive objects using WebSockets. For Arduino Yún only."
  },
  {
    "name": "Spacecat",
    "version": "1.4.0",
    "sentence": "An Arduino library for ESP8266/ESP32 to makes things easier that requires authentication with an RFID card"
  },
  {
    "name": "SparkFun 6DoF ISM330DHCX",
    "version": "1.0.6",
    "sentence": "This library is for the SparkFun Qwiic and Qwiic Micro, 6DoF ISM330DHCX breakout board."
  },
  {
    "name": "SparkFun 6DoF LSM6DSV16X",
    "version": "1.0.2",
    "sentence": "This library is for the SparkFun Qwiic and Qwiic Micro, 6DoF LSM6DSV16X breakout board."
  },
  {
    "name": "SparkFun 9DoF IMU Breakout - ICM 20948 - Arduino Library",
    "version": "1.3.0",
    "sentence": "Use the low-power high-resolution ICM 20948 9 DoF IMU from Invensense with I2C or SPI. Version 1.2 of the library includes support for the InvenSense Digital Motion Processor (DMP™)."
  },
  {
    "name": "SparkFun ACS37800 Power Monitor Arduino Library",
    "version": "1.0.6",
    "sentence": "Library for the Allegro MicroSystems ACS37800 power monitor IC"
  },
  {
    "name": "SparkFun AD5330",
    "version": "1.2.3",
    "sentence": "Libraries for the AD5330 8-bit DAC"
  },
  {
    "name": "SparkFun ADIN1110 Arduino Library",
    "version": "1.0.0",
    "sentence": "Driver for ADIN1110 Single Pair Ethernet"
  },
  {
    "name": "SparkFun ADS1015 Arduino Library",
    "version": "2.3.2",
    "sentence": "Library for the ADS1015 ADC to I2C converter used on the SparkFun Qwiic 12-bit ADC and Flex Glove Controller."
  },
  {
    "name": "SparkFun ADS1219 Arduino Library",
    "version": "1.0.2",
    "sentence": "An Arduino library for the ADS1219 24-Bit 4-Channel ADC from TI"
  },
  {
    "name": "SparkFun ADS122C04 ADC Arduino Library",
    "version": "1.0.4",
    "sentence": "Arduino library for the TI ADS122C04"
  },
  {
    "name": "SparkFun ADXL313 Arduino Library",
    "version": "1.0.4",
    "sentence": "Library for the SparkFun 3-Axis Digital Accelerometer Breakout - ADXL313 (Qwiic)"
  },
  {
    "name": "SparkFun ADXL345 Arduino Library",
    "version": "1.0.0",
    "sentence": "An Arduino library for interfacing with the SparkFun Triple Axis Accelerometer Breakout - ADXL345"
  },
  {
    "name": "SparkFun AK9750 Human Presence Sensor Library",
    "version": "1.0.2",
    "sentence": "Library for the AK9750 PIR Human Presence Qwiic Board"
  },
  {
    "name": "SparkFun AK975X Human Presence Sensor Library",
    "version": "1.0.6",
    "sentence": "Library for the AK9753 PIR Human Presence Qwiic Board"
  },
  {
    "name": "SparkFun APDS-9301 Lux Sensor",
    "version": "1.0.0",
    "sentence": "Broadcom APDS-9301 Lux Sensor."
  },
  {
    "name": "SparkFun APDS9960 RGB and Gesture Sensor",
    "version": "1.4.2",
    "sentence": "Library for the Avago APDS-9960 sensor"
  },
  {
    "name": "SparkFun ARGOS ARTIC R2 Arduino Library",
    "version": "1.1.2",
    "sentence": "Library for the ARGOS ARTIC R2 chipset found on the SparkFun ARTIC R2 Breakout"
  },
  {
    "name": "SparkFun AS3935 Lightning Detector Arduino Library",
    "version": "1.4.9",
    "sentence": "This is an Arduino Library for the AS3935 Lightning Detector by AMS"
  },
  {
    "name": "SparkFun AS6212 Qwiic Arduino Library",
    "version": "2.0.5",
    "sentence": "Arduino Library for interfacing with the AMS AS6212 Temperature Sensor"
  },
  {
    "name": "SparkFun AS726X",
    "version": "2.0.1",
    "sentence": "A library to drive the AMS AS726X NIR/VIS Spectrum Sensor"
  },
  {
    "name": "SparkFun AS7331 Arduino Library",
    "version": "2.1.2",
    "sentence": "An Arduino library to make use of the Qwiic and Qwiic Mini AS7331 Spectral UV Sensor"
  },
  {
    "name": "SparkFun ATECCX08a Arduino Library",
    "version": "1.3.1",
    "sentence": "Library for the Microchip ATECCX08a Cryptographic Co-processors."
  },
  {
    "name": "SparkFun ATSHA204 Library",
    "version": "1.0.0",
    "sentence": "Library for the ATSHA204 IC."
  },
  {
    "name": "SparkFun AVR ISP Programming Library",
    "version": "1.0.0",
    "sentence": "A low level library to allow you to program AVR ISP devices from another device<br/><br/>"
  },
  {
    "name": "SparkFun Ambient Light Sensor Arduino Library",
    "version": "1.0.4",
    "sentence": "Library for the SparkFun Ambient Light Sensor-VEML6030"
  },
  {
    "name": "SparkFun Angular Displacement Sensor Arduino Library",
    "version": "1.3.3",
    "sentence": "Library for the Bend Labs ASD sensor"
  },
  {
    "name": "SparkFun BH1749NUC Arduino Library",
    "version": "1.0.0",
    "sentence": "Library for the BH1749NUC color sensor on the SparkFun Qwiic RGB Sensor"
  },
  {
    "name": "SparkFun BMA400 Arduino Library",
    "version": "1.0.0",
    "sentence": "A library to drive the Bosch BMA400 accelerometer."
  },
  {
    "name": "SparkFun BME280",
    "version": "2.0.9",
    "sentence": "A library to drive the Bosch BME280 Altimeter and Pressure sensor"
  },
  {
    "name": "SparkFun BMI270 Arduino Library",
    "version": "1.0.3",
    "sentence": "A library to drive the Bosch BMI270 6-DoF IMU."
  },
  {
    "name": "SparkFun BMP384 Arduino Library",
    "version": "1.0.1",
    "sentence": "A library to drive the Bosch BMP384 pressure sensor."
  },
  {
    "name": "SparkFun BMP581 Arduino Library",
    "version": "1.0.1",
    "sentence": "A library to drive the Bosch BMP581 pressure sensor."
  },
  {
    "name": "SparkFun BNO080 Cortex Based IMU",
    "version": "1.1.12",
    "sentence": "Library for the SparkFun Qwiic VR IMU - BNO080/BNO085"
  },
  {
    "name": "SparkFun BNO08x Cortex Based IMU",
    "version": "1.0.6",
    "sentence": "Library for the SparkFun Qwiic VR IMU - BNO080/BNO085/BNO086"
  },
  {
    "name": "SparkFun BQ27441 LiPo Fuel Gauge Arduino Library",
    "version": "1.1.0",
    "sentence": "An Arduino library for interfacing with the BQ27441-G1 LiPo Fuel Gauge"
  },
  {
    "name": "SparkFun BQ40Z50 Battery Manager Arduino Library",
    "version": "1.0.0",
    "sentence": "Library for I2C Communication and Configuration of the BQ40Z50"
  },
  {
    "name": "SparkFun Bar Graph Library",
    "version": "1.2.0",
    "sentence": "Provides functionality of 10-segment bar graphs."
  },
  {
    "name": "SparkFun Bio Sensor Hub Library",
    "version": "1.1.0",
    "sentence": "Library for the MAX32664 Bio Metric Hub IC"
  },
  {
    "name": "SparkFun CAP1203 Arduino Library",
    "version": "1.0.5",
    "sentence": "SparkFun library for the CAP1203 capactive slider sensor"
  },
  {
    "name": "SparkFun CCS811 Arduino Library",
    "version": "2.0.3",
    "sentence": "An Arduino library to drive the AMS CCS811 by I2C."
  },
  {
    "name": "SparkFun Clock 5P49V60 Arduino Library",
    "version": "1.0.1",
    "sentence": "Library that enables all functionality for the SparkFun Clock Generator 5P49V60."
  },
  {
    "name": "SparkFun Color LCD Shield",
    "version": "1.0.1",
    "sentence": "This is an Arduino library for SparkFun's Color LCD Shield"
  },
  {
    "name": "SparkFun Color Sensor OPT4048",
    "version": "1.2.1",
    "sentence": "This library is for the SparkFun Qwiic and Qwiic Mini, Color Sensor: OPT4048"
  },
  {
    "name": "SparkFun DE2120 2D Barcode Reader",
    "version": "1.2.1",
    "sentence": "Serial Library for the DE2120 2D Barcode Reader"
  },
  {
    "name": "SparkFun DMX Shield Library",
    "version": "2.0.1",
    "sentence": "Library for the SparkFun ESP32 DMX to LED Shield"
  },
  {
    "name": "SparkFun Extensible Message Parser",
    "version": "1.0.2",
    "sentence": "Library to parse structured serial streams"
  },
  {
    "name": "SparkFun External EEPROM Arduino Library",
    "version": "3.2.9",
    "sentence": "Library for I2C Communication with external EEPROMs"
  },
  {
    "name": "SparkFun Flexible Grayscale OLED Breakout",
    "version": "1.0.4",
    "sentence": "Library for the <a href=\"https://www.sparkfun.com/products/14543\">SparkFun Flexible Grayscale Display</a>."
  },
  {
    "name": "SparkFun Flying Jalapeno 2 Arduino Library",
    "version": "1.0.4",
    "sentence": "An Arduino Library to control the Flying Jalapeno 2 test platform."
  },
  {
    "name": "SparkFun Flying Jalapeno Arduino Library",
    "version": "1.0.1",
    "sentence": "An Arduino Library to control the Flying Jalapeno test platform."
  },
  {
    "name": "SparkFun Garmin LIDAR-Lite v4 Arduino Library",
    "version": "1.2.4",
    "sentence": "Arduino library for Garmin LIDAR-Lite."
  },
  {
    "name": "SparkFun Graphic LCD Serial Backpack",
    "version": "1.0.1",
    "sentence": "Library containing functions for SparkFun Graphic LCD Serial Backpack"
  },
  {
    "name": "SparkFun GridEYE AMG88 Library",
    "version": "1.0.2",
    "sentence": "Library for the Panasonic GridEYE Thermopile Array - AMG88"
  },
  {
    "name": "SparkFun HM1X Bluetooth Arduino Library",
    "version": "1.0.2",
    "sentence": "Library for the HM-12 and HM-13 Bluetooth 4.0 modules"
  },
  {
    "name": "SparkFun HTU21D Humidity and Temperature Sensor Breakout",
    "version": "1.1.3",
    "sentence": "HTU21D temperature and humidity densor breakout."
  },
  {
    "name": "SparkFun Haptic Motor Driver",
    "version": "1.1.1",
    "sentence": "Library for the DRV2605L Haptic Motor Driver"
  },
  {
    "name": "SparkFun High Precision Temperature Sensor TMP117 Qwiic",
    "version": "1.2.5",
    "sentence": "A library to drive the Texas Instruments TMP117 by I2C."
  },
  {
    "name": "SparkFun Himax HM01B0 Camera",
    "version": "0.0.3",
    "sentence": "Configure and use the Himax HM01B0 camera module"
  },
  {
    "name": "SparkFun HyperDisplay",
    "version": "2.0.1",
    "sentence": "Standardized library for control of displays"
  },
  {
    "name": "SparkFun HyperDisplay 4DLCD-320240",
    "version": "1.0.0",
    "sentence": "Control SparkFun 2.4\" TFT products using HyperDisplay"
  },
  {
    "name": "SparkFun HyperDisplay ILI9163C",
    "version": "1.0.2",
    "sentence": "ILI9163C extension for HyperDisplay"
  },
  {
    "name": "SparkFun HyperDisplay ILI9341",
    "version": "1.0.0",
    "sentence": "ILI9341 extension for HyperDisplay"
  },
  {
    "name": "SparkFun HyperDisplay KWH018ST01",
    "version": "1.0.2",
    "sentence": "Control SparkFun 1.8\" TFT products using HyperDisplay"
  },
  {
    "name": "SparkFun HyperDisplay SSD1309",
    "version": "1.1.1",
    "sentence": "Standardized library for control of displays using the SSD1309 driver IC."
  },
  {
    "name": "SparkFun HyperDisplay Transparent Graphical OLED",
    "version": "1.1.0",
    "sentence": "Control the Tranparent Graphical OLED using HyperDisplay graphics library. WiseChip UG2856KLBAG01"
  },
  {
    "name": "SparkFun I2C Expander Arduino Library",
    "version": "1.0.1",
    "sentence": "Library for PCA and TCA I2C GPIO Expanders"
  },
  {
    "name": "SparkFun I2C GPS Reading and Control",
    "version": "1.0.6",
    "sentence": "Library for the SparkFun Qwiic I2C GPS Module"
  },
  {
    "name": "SparkFun I2C Mux Arduino Library",
    "version": "1.0.3",
    "sentence": "Library to control I2C multiplexers including the TCA9548/PCA9548."
  },
  {
    "name": "SparkFun IM19 IMU Arduino Library",
    "version": "1.0.1",
    "sentence": "Library for interfacing to the IM19 tilt sensor"
  },
  {
    "name": "SparkFun ISL29125 Breakout",
    "version": "1.0.1",
    "sentence": "Arduino library showing basic functionality for the ISL29125 RGB Light Sensor Breakout Board."
  },
  {
    "name": "SparkFun Indoor Air Quality Sensor - ENS160",
    "version": "1.1.0",
    "sentence": "This library is for the SparkFun Indoor Air Quality Sensor - ENS160 (Qwiic)"
  },
  {
    "name": "SparkFun KX13X Arduino Library",
    "version": "2.0.4",
    "sentence": "Communicates and configures the SparkFun KX132/KX134 Accelerometer."
  },
  {
    "name": "SparkFun LG290P Quadband RTK GNSS Arduino Library",
    "version": "1.0.4",
    "sentence": "Library for Serial Communication and Configuration of the LG290P"
  },
  {
    "name": "SparkFun LIS2DH12 Arduino Library",
    "version": "1.0.3",
    "sentence": "Library for I2C Communication with ST LIS2DH12 low power accelerometer"
  },
  {
    "name": "SparkFun LIS3DH Arduino Library",
    "version": "1.0.3",
    "sentence": "A library to drive the STmicro LIS3DH by SPI or I2C."
  },
  {
    "name": "SparkFun LP55231 Breakout",
    "version": "1.1.0",
    "sentence": "A library to control the Texas Instruments LP55231 9-channel LED driver."
  },
  {
    "name": "SparkFun LPS25HB Pressure Sensor Library",
    "version": "1.1.1",
    "sentence": "Library for the <a href=\"https://www.sparkfun.com/products/14767\">SparkFun Qwiic Pressure Sensor - LPS25HB</a>."
  },
  {
    "name": "SparkFun LPS28DFW Arduino Library",
    "version": "1.0.0",
    "sentence": "A library to drive the STMicroelectronics LPS28DFW barometer."
  },
  {
    "name": "SparkFun LSM303C 6 DOF IMU Breakout",
    "version": "1.0.2",
    "sentence": "Driver for ST's LSM303C 6-DOF IMU (3-axis accelerometer & 3-axis magnetometer)"
  },
  {
    "name": "SparkFun LSM6DS3 Breakout",
    "version": "1.0.3",
    "sentence": "A library to drive the STmicro LSM6DS3 by SPI or I2C."
  },
  {
    "name": "SparkFun LSM9DS0 Breakout",
    "version": "1.0.1",
    "sentence": "Library for the 9 degree of freedom IC -ST Micro's LSM9DS0."
  },
  {
    "name": "SparkFun LSM9DS1 IMU",
    "version": "2.0.0",
    "sentence": "A driver library for the LSM9DS1 IMU."
  },
  {
    "name": "SparkFun LTE Shield Arduino Library",
    "version": "1.3.0",
    "sentence": "Library for the SparkFun LTE Shield -- based on the u-blox SARA-R410M-02B"
  },
  {
    "name": "SparkFun Line Follower Array",
    "version": "1.0.1",
    "sentence": "Library to operate the 8 position line sensor array for robots."
  },
  {
    "name": "SparkFun MAX1704x Fuel Gauge Arduino Library",
    "version": "1.0.4",
    "sentence": "Arduino library for the MAX17043/44/48/49 fuel gauges"
  },
  {
    "name": "SparkFun MAX3010x Pulse and Proximity Sensor Library",
    "version": "1.1.2",
    "sentence": "Library for the MAX30102 Pulse and MAX30105 Proximity Breakout"
  },
  {
    "name": "SparkFun MAX31855K Thermocouple Digitizer",
    "version": "1.0.1",
    "sentence": "K type thermocouple digitizer board."
  },
  {
    "name": "SparkFun MCP9600 Thermocouple Library",
    "version": "1.0.5",
    "sentence": "Driver for Microchip's MCP9600 Thermocouple Amplifier."
  },
  {
    "name": "SparkFun MG2639 CellShield",
    "version": "1.0.0",
    "sentence": "Driver library for SparkFun's MG2639 cellular shield."
  },
  {
    "name": "SparkFun MLX90632 Noncontact Infrared Temperature Sensor",
    "version": "1.0.1",
    "sentence": "Library for the SparkFun Qwiic Noncontact Thermo Sensor - MLX90632"
  },
  {
    "name": "SparkFun MMA8452Q Accelerometer",
    "version": "1.4.0",
    "sentence": "Basic I2C functionality of the <a href=\"https://www.sparkfun.com/products/14587\">MMA8452Q Accelerometer Breakout</a>"
  },
  {
    "name": "SparkFun MMC5983MA Magnetometer Arduino Library",
    "version": "1.1.4",
    "sentence": "A I2C/SPI library for the MMC5983MA magnetic compass sensor."
  },
  {
    "name": "SparkFun MPL3115A2 Altitude and Pressure Sensor Breakout",
    "version": "1.2.4",
    "sentence": "SparkFun's breakout for the Freescale MPL3115A2 Precision Altimeter"
  },
  {
    "name": "SparkFun MPU-9250 9 DOF IMU Breakout",
    "version": "1.0.2",
    "sentence": "Driver for InvenSense's MPU-9250 9-DOF IMU (3-axis gyroscope, 3-axis accelerometer & 3-axis magnetometer)"
  },
  {
    "name": "SparkFun MS5637 Barometric Pressure Library",
    "version": "1.0.2",
    "sentence": "Library for the SparkFun Qwiic Pressure Sensor - MS5637"
  },
  {
    "name": "SparkFun MS5803-14BA Pressure Sensor",
    "version": "1.1.4",
    "sentence": "Library for MS5803-14BA Pressure Sensor."
  },
  {
    "name": "SparkFun MetaWatch",
    "version": "1.1.0",
    "sentence": "A simple library to interface from Arduino to BlueSMiRF to MetaWatch"
  },
  {
    "name": "SparkFun Micro OLED Breakout",
    "version": "1.3.4",
    "sentence": "Library for the <a href=\"https://www.sparkfun.com/products/13003\">SparkFun Micro OLED Breakout</a>."
  },
  {
    "name": "SparkFun MicroMod Button",
    "version": "1.0.0",
    "sentence": "Communicates with the buttons connected to the MicroMod Input and Display board."
  },
  {
    "name": "SparkFun MicroPressure Library",
    "version": "1.0.1",
    "sentence": "A library to read Honeywell's MPR series micropressure sensor."
  },
  {
    "name": "SparkFun MicroView",
    "version": "1.0.2",
    "sentence": "The MicroView is a chip-sized Arduino with a built-in OLED, available from SparkFun Electronics"
  },
  {
    "name": "SparkFun MiniGen",
    "version": "1.1.0",
    "sentence": "SparkFun MiniGen library allows the user to generate sine, square, or triangle waves at up to 3MHz, and approximately 1Vp-p."
  },
  {
    "name": "SparkFun MiniMoto",
    "version": "1.1.0",
    "sentence": "Arduino Library for the SparkFun MiniMoto board, which uses the TI DRV8830 IC for I2C low-voltage DC motor control."
  },
  {
    "name": "SparkFun OWire Arduino Library",
    "version": "1.0.1",
    "sentence": "Library for \"OWire\" or \"0-Wire\" 2-pin Multi-Mode LEDs"
  },
  {
    "name": "SparkFun PCA9536 Arduino Library",
    "version": "1.2.2",
    "sentence": "Library for the PCA9536 on the SparkFun Qwiic RGB Sensor"
  },
  {
    "name": "SparkFun PCA9846 Mux Arduino Library",
    "version": "1.0.0",
    "sentence": "Library to control I2C multiplexers based on the PCA9846."
  },
  {
    "name": "SparkFun PHT MS8607 Arduino Library",
    "version": "1.0.5",
    "sentence": "Arduino library for the TE Connectivity MS8607 PHT sensor"
  },
  {
    "name": "SparkFun Particle Sensor Panasonic SN-GCJA5",
    "version": "1.0.1",
    "sentence": "A library to communicate with the Panasonic SN-GCJA5 particle sensor."
  },
  {
    "name": "SparkFun ProDriver TC78G670FTG Arduino Library",
    "version": "1.0.1",
    "sentence": "Library for the SparkFun ProDriver - Stepper Motor Driver (TC78H670FTG)"
  },
  {
    "name": "SparkFun Quadstepper Motor Driver",
    "version": "1.0.1",
    "sentence": "4-axis stepper motor driver, available from SparkFun Electronics"
  },
  {
    "name": "SparkFun Qwiic 6Dof - LSM6DS0",
    "version": "1.0.2",
    "sentence": "A library to drive the STmicro LSM6DS0 by SPI or I2C."
  },
  {
    "name": "SparkFun Qwiic AS7341L 10-Channel Spectral Sensor",
    "version": "1.0.0",
    "sentence": "Configures and communicates with the SparkFun Qwiic AS7341L 10-Channel Spectral Sensor."
  },
  {
    "name": "SparkFun Qwiic Alphanumeric Display Arduino Library",
    "version": "2.2.11",
    "sentence": "A library to drive the Holtek HT16K33 LED Driver with an Alphanumeric Display."
  },
  {
    "name": "SparkFun Qwiic Button and Qwiic Switch Library",
    "version": "2.0.6",
    "sentence": "Communicates and configures the SparkFun Qwiic Button and Switch."
  },
  {
    "name": "SparkFun Qwiic Buzzer Library",
    "version": "1.0.1",
    "sentence": "Communicates with and configures the SparkFun Qwiic Buzzer"
  },
  {
    "name": "SparkFun Qwiic Digital Capacitor Arduino Library",
    "version": "1.0.0",
    "sentence": "A library to get and set the capacitance of the NCD2400M digital capacitor in both volatile and non-volatile memory."
  },
  {
    "name": "SparkFun Qwiic Fan Arduino Library",
    "version": "1.2.1",
    "sentence": "Library for the SparkFun Qwiic PC Fan Boards"
  },
  {
    "name": "SparkFun Qwiic GPIO TCA9534 Arduino Library",
    "version": "1.0.0",
    "sentence": "A library to drive the TCA9534 I2C->GPIO"
  },
  {
    "name": "SparkFun Qwiic Haptic Driver DA7280 Library",
    "version": "1.1.3",
    "sentence": "Library for the DA7280 Haptic Driver"
  },
  {
    "name": "SparkFun Qwiic Humidity AHT20",
    "version": "1.0.3",
    "sentence": "A library to drive ASAIT's new AHT20 temperature and humidity IC."
  },
  {
    "name": "SparkFun Qwiic IR Thermometer MLX90614 Arduino Library",
    "version": "1.1.5",
    "sentence": "Library for the SparkFun IR Thermometer Evaluation Board, Qwiic IR Thermometer Board, and the MLX90614 IR thermometer."
  },
  {
    "name": "SparkFun Qwiic Joystick Arduino Library",
    "version": "1.1.1",
    "sentence": "Library for the SparkFun Qwiic Joystick"
  },
  {
    "name": "SparkFun Qwiic Keypad Arduino Library",
    "version": "1.2.0",
    "sentence": "Library for the SparkFun Qwiic Keypad"
  },
  {
    "name": "SparkFun Qwiic LED Stick Library",
    "version": "1.0.5",
    "sentence": "Library for the SparkFun Qwiic LED Stick"
  },
  {
    "name": "SparkFun Qwiic MP3 Trigger Arduino Library",
    "version": "1.0.4",
    "sentence": "Library for the SparkFun Qwiic MP3 Trigger"
  },
  {
    "name": "SparkFun Qwiic OLED Arduino Library",
    "version": "1.0.13",
    "sentence": "Library for SparkFun SSD1306 based OLED display products."
  },
  {
    "name": "SparkFun Qwiic OTOS Arduino Library",
    "version": "1.0.2",
    "sentence": "A library to use the SparkFun Qwiic Optical Tracking Odometry Sensor"
  },
  {
    "name": "SparkFun Qwiic OpenLog",
    "version": "3.0.2",
    "sentence": "Library for the SparkFun Qwiic OpenLog"
  },
  {
    "name": "SparkFun Qwiic PIR Library",
    "version": "1.0.0",
    "sentence": "Configures and communicates with the SparkFun Qwiic PIR."
  },
  {
    "name": "SparkFun Qwiic Power Switch Arduino Library",
    "version": "1.0.2",
    "sentence": "Arduino library for the Qwiic Power Switch"
  },
  {
    "name": "SparkFun Qwiic RFID Arduino Library",
    "version": "1.1.6",
    "sentence": "Library for the SparkFun Qwiic RFID Reader"
  },
  {
    "name": "SparkFun Qwiic RTC RV1805 Arduino Library",
    "version": "1.1.0",
    "sentence": "A library to drive the RV-1805 extremely precise, extremely low power, real-time clock"
  },
  {
    "name": "SparkFun Qwiic RTC RV8803 Arduino Library",
    "version": "1.2.9",
    "sentence": "A library to drive the RV-8803 extremely precise, extremely low power, real-time clock"
  },
  {
    "name": "SparkFun Qwiic Relay Arduino Library",
    "version": "1.3.1",
    "sentence": "Library for the SparkFun Quad, Dual and Single Relay Boards"
  },
  {
    "name": "SparkFun Qwiic Scale NAU7802 Arduino Library",
    "version": "1.0.6",
    "sentence": "Library to control the 24-bit load cell amplifier NAU7802."
  },
  {
    "name": "SparkFun Qwiic Step Arduino Library",
    "version": "2.0.1",
    "sentence": "Control one or more stepper motors by sending I2C commands over the easy-to-use Qwiic system to your SparkFun Qwiic Step Board."
  },
  {
    "name": "SparkFun Qwiic TMF-8801 Time-of-flight Library",
    "version": "1.0.0",
    "sentence": "Configures and communicates with the SparkFun Qwiic TMF-8801 Time-of-flight sensor."
  },
  {
    "name": "SparkFun Qwiic TMF882X Library",
    "version": "1.0.2",
    "sentence": "Library for the SparkFun Qwiic breakout boards for the AMS TMF882X sensor products."
  },
  {
    "name": "SparkFun Qwiic Twist Arduino Library",
    "version": "1.0.4",
    "sentence": "Library for the SparkFun Qwiic Twist Digital Encoder"
  },
  {
    "name": "SparkFun Qwiic Ultrasonic Arduino Library",
    "version": "1.1.2",
    "sentence": "A library to use the SparkFun Qwiic Ultrasonic Distance Sensor"
  },
  {
    "name": "SparkFun Qwiic Universal Auto-Detect",
    "version": "1.0.1",
    "sentence": "A scalable library for logging data from a wide range of Qwiic sensors<br/><br/>"
  },
  {
    "name": "SparkFun QwiicNES Arduino Library",
    "version": "1.0.0",
    "sentence": "Library for the SparkFun QwiicNES Nintendo Controller Interface"
  },
  {
    "name": "SparkFun QwiicRF",
    "version": "1.0.0",
    "sentence": "Arduino library for controlling the QwiicRF LoRa Radio Board"
  },
  {
    "name": "SparkFun RFD77402 Distance Sensor - VCSEL Time of Flight",
    "version": "1.0.0",
    "sentence": "Library for the SparkFun Qwiic Distance Sensor - RFD77402"
  },
  {
    "name": "SparkFun RGB OLED 64x64 Library",
    "version": "1.0.0",
    "sentence": "Library for the <a href=\"https://www.sparkfun.com/products/14860\">SparkFun RGB OLED 64x64 0.6\" - SSD1357</a>."
  },
  {
    "name": "SparkFun RHT03 Arduino Library",
    "version": "1.0.0",
    "sentence": "An Arduino library for interfacing with the SparkFun RHT03 (DHT22)"
  },
  {
    "name": "SparkFun RedBot Library",
    "version": "2.1.1",
    "sentence": "Provides control to the SparkFun RedBot."
  },
  {
    "name": "SparkFun SCD30 Arduino Library",
    "version": "1.0.20",
    "sentence": "Library for the Sensirion SCD30 CO2 Sensor"
  },
  {
    "name": "SparkFun SCD4x Arduino Library",
    "version": "1.1.2",
    "sentence": "Library for the Sensirion SCD4x family of CO2 Sensors (SCD40 and SCD41)"
  },
  {
    "name": "SparkFun SDP3x Arduino Library",
    "version": "1.0.4",
    "sentence": "Library for the Sensirion SDP3x Differential Pressure Sensors"
  },
  {
    "name": "SparkFun SGP30 Arduino Library",
    "version": "1.0.5",
    "sentence": "Library for the Sensirion SGP30 air quality sensor"
  },
  {
    "name": "SparkFun SGP4 Arduino Library",
    "version": "1.0.4",
    "sentence": "SGP4 model for calculating satellite positions and predicting overpasses."
  },
  {
    "name": "SparkFun SGP40 Arduino Library",
    "version": "1.0.4",
    "sentence": "Library for the Sensirion SGP40 air quality sensor"
  },
  {
    "name": "SparkFun SHTC3 Humidity and Temperature Sensor Library",
    "version": "1.1.4",
    "sentence": "Library for the SHTC3 humidity and temperature sensor by Sensirion"
  },
  {
    "name": "SparkFun SPI SerialFlash Arduino Library",
    "version": "1.0.3",
    "sentence": "A low level library for interfacing to serial flash ICs<br/><br/>"
  },
  {
    "name": "SparkFun ST25DV64KC Arduino Library",
    "version": "1.0.0",
    "sentence": "Library for the ST25DV64KC NFC/RFID Tag<br/><br/>"
  },
  {
    "name": "SparkFun STC3x Arduino Library",
    "version": "1.0.0",
    "sentence": "Library for the Sensirion STC3x family of CO2 Sensors (STC31)"
  },
  {
    "name": "SparkFun STHS34PF80 Arduino Library",
    "version": "1.0.4",
    "sentence": "A library to drive the STMicroelectronics infrared sensor STHS34PF80."
  },
  {
    "name": "SparkFun STUSB4500",
    "version": "1.1.5",
    "sentence": "A library for the SparkFun Power Delivery Board - STUSB4500."
  },
  {
    "name": "SparkFun SerLCD Arduino Library",
    "version": "1.0.9",
    "sentence": "Library for I2C, SPI, and Serial Communication with SparkFun SerLCD Displays"
  },
  {
    "name": "SparkFun Serial Fingerprint Scanners AS-108M and AD-013",
    "version": "1.0.1",
    "sentence": "Configures and communicates with the SparkFun Serial Fingerprint Scanners AS-108M and AD-013."
  },
  {
    "name": "SparkFun Si7021 Humidity and Temperature Sensor",
    "version": "2.0.0",
    "sentence": "Library for Si7021 Humidity and Temperature Sensor."
  },
  {
    "name": "SparkFun Simultaneous RFID Tag Reader Library",
    "version": "1.2.0",
    "sentence": "Library for the RFID Modules from ThingMagic"
  },
  {
    "name": "SparkFun Spectral Triad AS7265X",
    "version": "1.0.5",
    "sentence": "An Arduino library for the AS7265x Triple Spectroscopy Sensor Board"
  },
  {
    "name": "SparkFun Swarm Satellite Arduino Library",
    "version": "1.1.10",
    "sentence": "Library for the Swarm M138 satellite modem<br/><br/>"
  },
  {
    "name": "SparkFun TLC5940",
    "version": "1.1.1",
    "sentence": "Library for the TLC5940 IC."
  },
  {
    "name": "SparkFun TMAG5273 Arduino Library",
    "version": "1.0.3",
    "sentence": "A library to drive the Texas Instruments hall-effect sensor TMAG5273."
  },
  {
    "name": "SparkFun TMP102 Breakout",
    "version": "1.1.2",
    "sentence": "A library to drive the Texas Instruments TMP102 using I2C."
  },
  {
    "name": "SparkFun TPA2016D2 Arduino Library",
    "version": "1.0.0",
    "sentence": "Library for the TPA2016D2 Stereo Class D Amp"
  },
  {
    "name": "SparkFun TSL2561",
    "version": "1.1.0",
    "sentence": "An Arduino Library for the <a href=\"https://www.sparkfun.com/products/12055\">TSL2561 Luminosity Sensor Breakout</a> from SparkFun Electronics."
  },
  {
    "name": "SparkFun Temperature Sensor - STTS22H",
    "version": "1.0.1",
    "sentence": "This library is for the SparkFun Temperature Sensor - STTS22H"
  },
  {
    "name": "SparkFun Toolkit",
    "version": "0.9.2",
    "sentence": "A utility library that other SparkFun libraries can take advantage of."
  },
  {
    "name": "SparkFun TouchInput Arduino Library",
    "version": "1.0.0",
    "sentence": "Master library to handle user input through touchscreens"
  },
  {
    "name": "SparkFun TouchInput Driver FT5xx6",
    "version": "1.0.0",
    "sentence": "A driver library for using FT5xx6 devices, compatible with the SparkFun TouchInput library"
  },
  {
    "name": "SparkFun Tsunami Super WAV Trigger Qwiic",
    "version": "1.0.0",
    "sentence": "A library to control the SparkFun Tsunami Super WAV Trigger Qwiic."
  },
  {
    "name": "SparkFun UM980 Triband RTK GNSS Arduino Library",
    "version": "1.0.5",
    "sentence": "Library for Serial Communication and Configuration of the UM980"
  },
  {
    "name": "SparkFun USB Hub Qwiic USB251x",
    "version": "1.0.0",
    "sentence": "Configure the PID/VID and power consumption settings on the USB2514X USB Hub."
  },
  {
    "name": "SparkFun VCNL4040 Proximity Sensor Library",
    "version": "1.0.4",
    "sentence": "Library for the SparkFun Qwiic Proximity Sensor 20cm - VCNL4040"
  },
  {
    "name": "SparkFun VEML6075 Arduino Library",
    "version": "1.1.5",
    "sentence": "Library for the VEML6075 on the SparkFun Qwiic UV Sensor"
  },
  {
    "name": "SparkFun VEML7700 Arduino Library",
    "version": "1.0.0",
    "sentence": "Library for the VEML7700 Ambient Light Sensor"
  },
  {
    "name": "SparkFun VKey Arduino Library",
    "version": "1.0.3",
    "sentence": "Arduino Library for interfacing the SparkFun VKey Voltage Keypad."
  },
  {
    "name": "SparkFun VL53L1X 4m Laser Distance Sensor",
    "version": "1.2.12",
    "sentence": "Library for the SparkFun Qwiic 4m Distance Sensor - VL53L1X"
  },
  {
    "name": "SparkFun VL53L5CX Arduino Library",
    "version": "1.0.3",
    "sentence": "Distance sensing (VL53L5CX) with 64 pixels up to 4 meters at 15Hz."
  },
  {
    "name": "SparkFun VL6180 Sensor",
    "version": "1.1.3",
    "sentence": "The VL6180 combines an IR emitter, a range sensor, and an ambient light sensor together for you to easily use and communicate with via an I2C interface."
  },
  {
    "name": "SparkFun WAV Trigger Pro Qwiic",
    "version": "1.0.1",
    "sentence": "A library to control the SparkFun WAV Trigger Pro using the Qwiic interface."
  },
  {
    "name": "SparkFun WM8960 Arduino Library",
    "version": "1.0.6",
    "sentence": "Library for the WM8960 Codec Breakout Board"
  },
  {
    "name": "SparkFun WT2003S MP3 Decoder Library",
    "version": "1.0.3",
    "sentence": "Library for the <a href=\"https://www.sparkfun.com/products/14810\">SparkFun WT2003S MP3 decoder breakout</a>."
  },
  {
    "name": "SparkFun Weather Meter Kit Arduino Library",
    "version": "1.1.1",
    "sentence": "A library to use the SparkFun Weather Meter Kit"
  },
  {
    "name": "SparkFun WiseChip HUD",
    "version": "1.0.2",
    "sentence": "Arduino library for controlling the Transparent OLED Heads-Up Display from WiseChip"
  },
  {
    "name": "SparkFun XM125 Arduino Library",
    "version": "1.0.4",
    "sentence": "An Arduino library to make use of the Qwiic XM125 A121 Pulsed Radar Module from Acconeer."
  },
  {
    "name": "SparkFun ZX Distance and Gesture Sensor",
    "version": "1.0.1",
    "sentence": "The ZX Sensor uses infrared light to determine the distance from an object and where the object is located on the X axis (between IR LEDs), available from SparkFun Electronics"
  },
  {
    "name": "SparkFun ePaper Arduino Library",
    "version": "2.1.3",
    "sentence": "Library for SparkFun ePaper displays"
  },
  {
    "name": "SparkFun smol Power Board Arduino Library",
    "version": "1.0.0",
    "sentence": "This library facilitates communication with the smôl Power Boards over I<sup>2</sup>C."
  },
  {
    "name": "SparkFun u-blox Arduino Library",
    "version": "1.8.11",
    "sentence": "DEPRECATED Library for I2C and Serial Communication with u-blox modules<br/><br/>"
  },
  {
    "name": "SparkFun u-blox Cellular Arduino Library",
    "version": "1.0.1",
    "sentence": "Library for u-blox cellular modules"
  },
  {
    "name": "SparkFun u-blox GNSS Arduino Library",
    "version": "2.2.27",
    "sentence": "Library for I2C, Serial and SPI Communication with u-blox GNSS modules<br/><br/>"
  },
  {
    "name": "SparkFun u-blox GNSS v3",
    "version": "3.1.8",
    "sentence": "Library for I2C, Serial and SPI Communication with u-blox GNSS modules<br/><br/>"
  },
  {
    "name": "SparkFun u-blox PointPerfect Library",
    "version": "1.11.4",
    "sentence": "The u-blox PointPerfect Library (SDK) in Arduino format"
  },
  {
    "name": "SparkFun u-blox SARA-R5 Arduino Library",
    "version": "1.1.13",
    "sentence": "Library for the u-blox SARA-R5 LTE-M / NB-IoT modules with secure cloud<br/><br/>"
  },
  {
    "name": "SparkFun_FS3000_Arduino_Library",
    "version": "1.0.5",
    "sentence": "A library to control the SparkFun Air Velocity Sensor Breakout - FS3000 (Qwiic)."
  },
  {
    "name": "SparkFun_WebServer_ESP32_W5500",
    "version": "1.5.6",
    "sentence": "Simple Ethernet WebServer for ESP32 boards using W5500."
  },
  {
    "name": "Sparkfun T5403 Barometric Sensor Library",
    "version": "1.0.1",
    "sentence": "Arduino Library for interfacing with the T5403 Barometric sensor."
  },
  {
    "name": "Sparkpad",
    "version": "0.2.1",
    "sentence": "Arduino firmware for the Sparkpad"
  },
  {
    "name": "SparseArray",
    "version": "0.1.2",
    "sentence": "Arduino library for sparse arrays of floats."
  },
  {
    "name": "SparseMatrix",
    "version": "0.1.5",
    "sentence": "Arduino library for sparse matrices."
  },
  {
    "name": "Sparthan Module",
    "version": "1.0.0",
    "sentence": "Motor controller library for the Sparthan Module"
  },
  {
    "name": "Sparthan Myo",
    "version": "0.1.0",
    "sentence": "ESP32 Bluetooth communication library for the Myo Armband"
  },
  {
    "name": "Sparthan gForce",
    "version": "1.0.0",
    "sentence": "Bluetooth communication library for the gForce EMG armband"
  },
  {
    "name": "SpeedControl",
    "version": "1.1.0",
    "sentence": "This is a library aiming at implementing pid control to control the speed of a DC motor with feedback from quadrature encoder. It is a multifunctional  program with extra feature of tuning the gain parameters and very useful for robotic enthusiast in wheeled robots"
  },
  {
    "name": "SpeedMeasurer",
    "version": "1.0.1",
    "sentence": "Pito tube library for 2 BMP180 sensors"
  },
  {
    "name": "Speeduino",
    "version": "0.0.6",
    "sentence": "A library with faster commands for SAMD21"
  },
  {
    "name": "SpeeduinoGL",
    "version": "0.0.80",
    "sentence": "A library with basic graphical functions optimised for arm cortex m7."
  },
  {
    "name": "SpeedyStepper",
    "version": "1.0.0",
    "sentence": "Stepper motor control library for Arduino."
  },
  {
    "name": "SpheroRVR",
    "version": "1.0.0",
    "sentence": "This library allows you to communicate with a Sphero RVR using an Arduino Uno."
  },
  {
    "name": "SpinWearables",
    "version": "1.0.3",
    "sentence": "A small, colorful, programmable, wearable kit to facilitate student exploration of physics, engineering, and computer science."
  },
  {
    "name": "Splash",
    "version": "1.0.0",
    "sentence": "Library for managing 16x2 and 20x4 LCD displays."
  },
  {
    "name": "SplashScreen",
    "version": "1.0.0",
    "sentence": "SplashScreen library to provide abiltity display changing screens"
  },
  {
    "name": "SpotifyEsp32",
    "version": "2.0.10",
    "sentence": "A wrapper for the Spotify API"
  },
  {
    "name": "SpresenseNeoPixel",
    "version": "0.1.1",
    "sentence": "NeoPixel library for SPRESENSE (Arduino)"
  },
  {
    "name": "SpritzCipher",
    "version": "1.2.0",
    "sentence": "Spritz library for Arduino, CSPRNG, cryptographic hash and MAC functions, symmetric-key data encryption, and some general-purpose functions."
  },
  {
    "name": "Sqlite Micro Logger",
    "version": "1.2.0",
    "sentence": "Log data into Sqlite database from any MCU having >2kb RAM"
  },
  {
    "name": "Sqlite3 for ESP8266",
    "version": "1.2.0",
    "sentence": "Sqlite3 library for ESP8266 Arduino core (includes Shox96 compression)"
  },
  {
    "name": "Sqlite3Esp32",
    "version": "2.5.0",
    "sentence": "Sqlite3 database library for ESP32 core"
  },
  {
    "name": "Stack",
    "version": "1.0.1",
    "sentence": "Dynamic/static array buffer for any data type with handy functions"
  },
  {
    "name": "StackString",
    "version": "0.1.0",
    "sentence": "This library was written to accommodate a need for a string class but without the (memory) disadvantages that regular std::string brings."
  },
  {
    "name": "StackmatTimer",
    "version": "1.0.0",
    "sentence": "A library for interfacing with a Stackmat/Cube timer"
  },
  {
    "name": "Stackmq",
    "version": "1.2.0",
    "sentence": "A library for WiFi and secure MQTT connection with message callbacks."
  },
  {
    "name": "Stamp",
    "version": "1.4.2",
    "sentence": "Library for time keeping and manipulation"
  },
  {
    "name": "StarterRemote",
    "version": "1.0.0",
    "sentence": "IR remote library for mini sumo (and sumo, tracker etc.) start modules."
  },
  {
    "name": "StateMachine",
    "version": "1.0.13",
    "sentence": "\"A simple state machine implementation.\""
  },
  {
    "name": "StateMachineLib",
    "version": "1.0.0",
    "sentence": "StateMachine Library"
  },
  {
    "name": "StateSpaceControl",
    "version": "1.1.0",
    "sentence": "A library for state space feedback control on on Arduino"
  },
  {
    "name": "StaticSerialCommands",
    "version": "1.2.0",
    "sentence": "An Arduino library for parsing commands received over a serial port."
  },
  {
    "name": "Statistic",
    "version": "1.0.8",
    "sentence": "Library with basic statistical functions for Arduino."
  },
  {
    "name": "Statistical",
    "version": "2.1.1",
    "sentence": "Statistic, Sum, Max, Min, Sq_Sum, Arithmetic Average, Geometric Average, RMS Average, Ext RMS Average, Bubble Sort, Median, Standard Deviation, Standard Deviation Error, Coefficient Factor, Average, Stream, Regression, Slope, Data, Analyse"
  },
  {
    "name": "Stator",
    "version": "0.6.0",
    "sentence": "For managing states of your variables"
  },
  {
    "name": "StatsD",
    "version": "2.0.0",
    "sentence": "StatsD client with tag support."
  },
  {
    "name": "SteerBot_TB6612",
    "version": "0.9.1",
    "sentence": "A library for controlling differential steering robots using the TB6612 motor driver."
  },
  {
    "name": "StensTimer",
    "version": "1.1.2",
    "sentence": "An accessible Arduino timer library that enables you to use callbacks on class-instances as well as static callbacks (most commonly used)."
  },
  {
    "name": "StepMotor4windings",
    "version": "1.0.0",
    "sentence": "Cool code class for driving 4 windings (pins) stepper motors."
  },
  {
    "name": "Step_CYC10_I2C",
    "version": "1.0.2",
    "sentence": "Library for the I2C Soft Controller on Step CYC10 FPGA board"
  },
  {
    "name": "Step_CYC10_Seven_Seg_Display",
    "version": "1.0.5",
    "sentence": "Library for the 7-segment display on Step CYC10 FPGA board"
  },
  {
    "name": "Stepper",
    "version": "1.1.3",
    "sentence": "Allows Arduino boards to control a variety of stepper motors."
  },
  {
    "name": "Stepper Async 5",
    "version": "1.1.0",
    "sentence": "This is a library that modifies the Arduino 'Stepper' library to drive a step motor asynchronously. [Korean]�Ƶ��̳� 'Stepper'���̺귯���� �����Ͽ� �񵿱��� ���ܸ��͸� ������ �� �ְ� ���ִ� ���̺귯���Դϴ�."
  },
  {
    "name": "Stepper595",
    "version": "1.1.0",
    "sentence": "Quick and easy control of stepper motors through SPI and a shift register."
  },
  {
    "name": "StepperControl",
    "version": "2.2.1",
    "sentence": "Stepper Motor Controller for 28BYJ-48."
  },
  {
    "name": "StepperDriver",
    "version": "1.4.1",
    "sentence": "A4988, DRV8825 and generic two-pin stepper motor driver library."
  },
  {
    "name": "StepperMotor",
    "version": "1.0.1",
    "sentence": "Arduino library for driving a stepper motor via a motor driver."
  },
  {
    "name": "StepperMulti",
    "version": "1.0.1",
    "sentence": "Allows Arduino to control several stepper motors simultaneously."
  },
  {
    "name": "Stepper_28BYJ_48",
    "version": "1.0.0",
    "sentence": "Stepper Library for 5V Stepper Motors 28BYJ-48 with ULN2003 Driver"
  },
  {
    "name": "StereoSID",
    "version": "2.0.7",
    "sentence": "MOS6581 Stereo SID Emulator Arduino Library"
  },
  {
    "name": "StevesAwesomeButton",
    "version": "1.0.0",
    "sentence": "An event based button class designed to be simple and easy to use."
  },
  {
    "name": "StivSeg",
    "version": "1.0.1",
    "sentence": "Multi-digit seven-segment display library for arduino."
  },
  {
    "name": "Stone_serial",
    "version": "1.1.2",
    "sentence": "STONE HMI LCD Library. Used to receive and send commands on the serial port screen."
  },
  {
    "name": "StopLoop",
    "version": "1.3.0",
    "sentence": "Stop a void loop() by inputting any character to the Serial Monitor in the Arduino IDE"
  },
  {
    "name": "StopWatch_RT",
    "version": "0.3.5",
    "sentence": "Arduino Library implementing a stopwatch."
  },
  {
    "name": "StopwatchLib",
    "version": "1.0.0",
    "sentence": "Stopwatch Library"
  },
  {
    "name": "StoryBoardLib",
    "version": "1.0.0",
    "sentence": "Storyboard are a series of non blockings tasks that runs sequencially"
  },
  {
    "name": "Strawbees Quirkbot",
    "version": "2.10.0",
    "sentence": "Allows you to program Quirkbots."
  },
  {
    "name": "StreamAverage",
    "version": "1.0.1",
    "sentence": "Library for averaging without having huge data Buffers consuming all your memory."
  },
  {
    "name": "StreamDebugger",
    "version": "1.0.1",
    "sentence": "Debugger for Arduino Stream-based communication"
  },
  {
    "name": "StreamDeviceAT",
    "version": "2.0.0",
    "sentence": "A library for stream device AT instruction set."
  },
  {
    "name": "StreamIO",
    "version": "1.0.5",
    "sentence": "Read/write wrapper for Stream and array buffers"
  },
  {
    "name": "StreamLib",
    "version": "1.4.0",
    "sentence": "BufferedPrint stream for efficient networking. ChunkedPrint for HTTP chunked encoding. ChunkedStreamReader for HTTP chunked decoding. CStringBuilder builds a c-string with Print class methods. StringReadStream to wrap string as Stream. And printf() function with formatting string from F macro."
  },
  {
    "name": "StreamLog",
    "version": "1.1.2",
    "sentence": "To format and log sensor data as CSV, coming from Arduino in a streamlined manner."
  },
  {
    "name": "StreamUtilities",
    "version": "1.0.1",
    "sentence": "Stream utilities for writing/reading"
  },
  {
    "name": "StreamUtils",
    "version": "1.9.0",
    "sentence": "💪 Power-ups for Arduino streams"
  },
  {
    "name": "Streaming",
    "version": "6.2.0",
    "sentence": "Streaming C++-style Output with Operator <<"
  },
  {
    "name": "StreamlabsArduinoAlerts",
    "version": "1.0.0",
    "sentence": "Library to get Streamlabs event from Twitch"
  },
  {
    "name": "StringAction",
    "version": "1.0.5",
    "sentence": "Introduces string operations and Serial reading"
  },
  {
    "name": "StringEEPROM",
    "version": "1.0.4",
    "sentence": "A library for storing and managing strings in Arduino EEPROM memory."
  },
  {
    "name": "StringLib",
    "version": "1.0.0",
    "sentence": "Efficient string building and reading for Arduino applications."
  },
  {
    "name": "StringSplitter",
    "version": "1.0.0",
    "sentence": "Arduino String Splitter Library"
  },
  {
    "name": "StringUtils",
    "version": "1.4.30",
    "sentence": "Bunch of converting functions for string data"
  },
  {
    "name": "Stringcalculater",
    "version": "1.0.1",
    "sentence": "Arduino library to calculate a stirng."
  },
  {
    "name": "StripDisplay",
    "version": "0.5.2",
    "sentence": "Display text and bitmaps on strip led panels."
  },
  {
    "name": "Strober",
    "version": "1.0.1",
    "sentence": "Easy to use and lightweight led light pattern player"
  },
  {
    "name": "Student",
    "version": "0.1.0",
    "sentence": "LArduino library for Student or T-distribution math."
  },
  {
    "name": "Subpixie",
    "version": "1.0.0",
    "sentence": "Subpixel font renderer for small displays"
  },
  {
    "name": "SunFounder AI Camera",
    "version": "1.1.1",
    "sentence": "SunFounder AI Camera library."
  },
  {
    "name": "SunFounderPowerControl",
    "version": "0.0.6",
    "sentence": "SunFounder Power Control, a library for PiPower 3, PiPower 5, etc."
  },
  {
    "name": "SunPosition",
    "version": "1.2.0",
    "sentence": "Library for tracking Sun position by location and time for Arduino"
  },
  {
    "name": "SunRise",
    "version": "2.0.4",
    "sentence": "Calculate sun rise/set times."
  },
  {
    "name": "SuperButton",
    "version": "0.1.2",
    "sentence": "Multifunctional Arduino button."
  },
  {
    "name": "SuperTimers",
    "version": "1.0.0",
    "sentence": "A Simple Timer Implementation that allows you to set a time and then check if the time has passed. You can set time in millis or minutes."
  },
  {
    "name": "SuplaDevice",
    "version": "25.1.3",
    "sentence": "Library enables you to connect the device to the SUPLA automation system."
  },
  {
    "name": "SupmeaDO7016",
    "version": "0.3.0",
    "sentence": "Communicate and control the Supmea DO7016 oxygen probe."
  },
  {
    "name": "SvgParser",
    "version": "0.0.1",
    "sentence": "A SVG GUI library for ESP8266. Output to a (touch) display and also as webservice"
  },
  {
    "name": "SwarmTile",
    "version": "0.0.3",
    "sentence": "Library for the Swarm Tile satellite modem, enabling low cost satellite communication for IoT projects."
  },
  {
    "name": "SwissHandmade MiniPirate",
    "version": "1.1.0",
    "sentence": "Commandline for GPIO, I2C and CPU manipulations"
  },
  {
    "name": "Switch",
    "version": "1.2.8",
    "sentence": "Arduino library for deglitching and debouncing switches and buttons."
  },
  {
    "name": "Switch2_lib",
    "version": "1.0.0",
    "sentence": "A clone of Switch_lib (O.Goma) library for switching digital pins with timers, adding milliseconds"
  },
  {
    "name": "SwitchLib",
    "version": "1.1.1",
    "sentence": "An Arduino Library for handling tactile switches...or anything else."
  },
  {
    "name": "Switch_lib",
    "version": "1.0.0",
    "sentence": "A library for switching digital pins with timers, temporization and periods"
  },
  {
    "name": "Synapse",
    "version": "1.0.2",
    "sentence": "A library designed for the Synapse CV/Gate I/O shield"
  },
  {
    "name": "SyncGenie",
    "version": "1.4.2",
    "sentence": "A library for interfacing with a Teensy development board via the SyncGenie breakout board, including tools for various neuroscience synchronization and triggering purposes."
  },
  {
    "name": "SyncWaveformsLib",
    "version": "1.0.0",
    "sentence": "Arduino SyncWaveforms implements timed functions that runs synchronously"
  },
  {
    "name": "Syncano Arduino Library",
    "version": "0.2.0",
    "sentence": "A library that provides access to Syncano"
  },
  {
    "name": "TA6932",
    "version": "1.0.0",
    "sentence": "TA6932 library - 7 segments display IC"
  },
  {
    "name": "TAMC_FT62X6",
    "version": "1.0.9",
    "sentence": "Arduino library for FT62X6"
  },
  {
    "name": "TAMC_GT911",
    "version": "1.0.2",
    "sentence": "Arduino library for GT911"
  },
  {
    "name": "TB67H450-arduino-library",
    "version": "1.0.1",
    "sentence": "This is a library for the TB67H450."
  },
  {
    "name": "TB9051FTGMotorCarrier",
    "version": "1.0.2",
    "sentence": "An Arduino library for the Pololu TB9051FTG motor driver carrier."
  },
  {
    "name": "TBPubSubClient",
    "version": "2.11.0",
    "sentence": "A client library for MQTT messaging."
  },
  {
    "name": "TB_TFT_eSPI",
    "version": "1.0.2",
    "sentence": "TFT graphics library for Arduino processors with performance optimisation for RP2040, STM32, ESP8266 and ESP32"
  },
  {
    "name": "TC78B009FTG_asukiaaa",
    "version": "1.0.2",
    "sentence": "It controls TC78B009FTG"
  },
  {
    "name": "TCA6416A",
    "version": "1.1.1",
    "sentence": "Arduino library for operating TCA6416A."
  },
  {
    "name": "TCA9534",
    "version": "0.1.1",
    "sentence": "Arduino library for TCA9534 Low Voltage 8-Bit I2C and SMBUS Low-Power I/O Expander with Interrupt Output and Configuration Registers"
  },
  {
    "name": "TCA9534-GPIO",
    "version": "1.1.0",
    "sentence": "A library to drive the TCA9534 I2C->GPIO"
  },
  {
    "name": "TCA9548",
    "version": "0.3.0",
    "sentence": "Arduino Library for TCA9548 I2C multiplexer and compatibles."
  },
  {
    "name": "TCA9548A",
    "version": "1.1.3",
    "sentence": "Arduino library for the TCA9548A"
  },
  {
    "name": "TCA9554",
    "version": "0.1.1",
    "sentence": "Arduino library for I2C TCA9554 8 channel port expander - 8 IO-lines."
  },
  {
    "name": "TCA9555",
    "version": "0.4.1",
    "sentence": "Arduino library for I2C TCA9555 16 channel port expander - 16 IO-lines."
  },
  {
    "name": "TCM2lib",
    "version": "1.0.1",
    "sentence": "Arduino library for the MPico TCM2 E-Ink timings module"
  },
  {
    "name": "TCP over Serial",
    "version": "1.1.1",
    "sentence": "TCP over Serial client connection to a server from the Arduino, using the connected host. (No Ethernet/WiFi shields necessary)"
  },
  {
    "name": "TCS230_ESP32",
    "version": "1.0.0",
    "sentence": "Library for the TCS230 color sensor for the ESP32"
  },
  {
    "name": "TCS3200-Sensor",
    "version": "1.0.3",
    "sentence": "Arduino library for TCS3200 color sensor."
  },
  {
    "name": "TCS3210",
    "version": "0.1.1",
    "sentence": "Arduino library for TCS3210 colour light to frequency convertor."
  },
  {
    "name": "TCS34725",
    "version": "0.1.1",
    "sentence": "Arduino library for TCS34725 RGB Color Sensor"
  },
  {
    "name": "TCS34725 async",
    "version": "1.0.1",
    "sentence": "An improved version of Adafruit TCS34725 wrapper given in their examples."
  },
  {
    "name": "TCS34725AutoGain",
    "version": "1.0.0",
    "sentence": "Library for TCS34725 RGB Color Sensor"
  },
  {
    "name": "TCXWriter",
    "version": "0.1.0",
    "sentence": "A Tiny Library for writing/creating TCX files."
  },
  {
    "name": "TCone",
    "version": "1.1.0",
    "sentence": "MicroBeaut-TCone Library with Timer and Counter One."
  },
  {
    "name": "TE SM9000-series",
    "version": "1.2.2",
    "sentence": "TE Connectivity SM9000 series pressure sensors."
  },
  {
    "name": "TEE UC20 Shield",
    "version": "1.0.5",
    "sentence": "Library for Quectel UC20 3G Shield and Quectel UC15 3G Module for Arduino Board."
  },
  {
    "name": "TEMT6000",
    "version": "0.1.1",
    "sentence": "Arduino library for analog TEMT6000 light / LUX sensor."
  },
  {
    "name": "TF03K",
    "version": "1.0.0",
    "sentence": "A library for the TF03K battery monitor"
  },
  {
    "name": "TFA 433 Receiver",
    "version": "0.1.1",
    "sentence": "Arduino library for TFA remote Temp & Humidity Sensors"
  },
  {
    "name": "TFA 433 Receiver for Dostmann 30.3208.02",
    "version": "0.1.0",
    "sentence": "Arduino library for TFA Dostmann 30.3208.02 remote temperature & humidity sensors"
  },
  {
    "name": "TFL-Status",
    "version": "1.1.2",
    "sentence": "A small library for an ESP8266 to pull tube status from the TFL API (work in progress)"
  },
  {
    "name": "TFLI2C",
    "version": "0.2.0",
    "sentence": "Arduino library for Benewake TFLuna distance sensor in I2C mode"
  },
  {
    "name": "TFMPI2C",
    "version": "1.7.3",
    "sentence": "Arduino library for Benewake TFMini-Plus distance sensor in I2C mode"
  },
  {
    "name": "TFMPlus",
    "version": "1.5.0",
    "sentence": "An Arduino driver for the Benewake TFMini-Plus Lidar distance sensor."
  },
  {
    "name": "TFMini",
    "version": "0.1.0",
    "sentence": "An Arduino driver for the Benewake TFMini time-of-flight distance sensor."
  },
  {
    "name": "TFT",
    "version": "1.0.6",
    "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display."
  },
  {
    "name": "TFT Touch Shield V1.0",
    "version": "1.0.2",
    "sentence": "Arduino library to control 2.8 inch TFT Touch Shield v1.0."
  },
  {
    "name": "TFT Touch Shield v2.0",
    "version": "2.0.3",
    "sentence": "Arduino library to control 2.8 inch TFT Touch Shield v2.0."
  },
  {
    "name": "TFTTerminal",
    "version": "0.0.1",
    "sentence": "Library for TFTTerminal"
  },
  {
    "name": "TFT_22_ILI9225",
    "version": "1.4.5",
    "sentence": "ILI9225 2.2\" 176x220 TFT LCD shield"
  },
  {
    "name": "TFT_eSPI",
    "version": "2.5.43",
    "sentence": "TFT graphics library for Arduino processors with performance optimisation for RP2040, STM32, ESP8266 and ESP32"
  },
  {
    "name": "TFT_eSPI_ES32Lab",
    "version": "2.4.80",
    "sentence": "TFT graphics library for Arduino processors with performance optimisation for ES32Lab"
  },
  {
    "name": "TFT_eSPI_Scroll",
    "version": "1.0.5",
    "sentence": "Adds flickerless text scrolling functionality to TFT eSPI library"
  },
  {
    "name": "TFT_eSPI_Widgets",
    "version": "0.1.4",
    "sentence": "Widget API to enhance the TFT_eSPI library."
  },
  {
    "name": "TFT_eWidget",
    "version": "0.0.5",
    "sentence": "A TFT GUI widget library"
  },
  {
    "name": "TFminiArduino",
    "version": "0.1.1",
    "sentence": "Arduino library for Benewake TFmini micro LiDAR module"
  },
  {
    "name": "TFminiS",
    "version": "0.0.1",
    "sentence": "A library to interface with the TFmini-S LiDAR sensor for Arduino Mega and ESP32."
  },
  {
    "name": "TGP Bouton",
    "version": "2.0.2",
    "sentence": "Permet le contrôle et la lecture d'un bouton."
  },
  {
    "name": "TGP Decodeur",
    "version": "2.0.0",
    "sentence": "Permet de décoder les messages provenant d'un objet de type Stream (tel que Serial), selon un format standard."
  },
  {
    "name": "TGP Del",
    "version": "2.0.0",
    "sentence": "Permet le contrôle d'une diode électroluminescente (DEL)."
  },
  {
    "name": "TGP Ecran",
    "version": "2.0.0",
    "sentence": "Permet l'intitialisation simplifié de l'écran Adafruit SSD1306."
  },
  {
    "name": "TGP LCD Keypad",
    "version": "1.0.0",
    "sentence": "Permet le contrôle simplifié pour un blindage \"LCD Keypad Shield\""
  },
  {
    "name": "TGP Menu OLED",
    "version": "2.0.2",
    "sentence": "Permet la création d'un menu déroulant sur écran."
  },
  {
    "name": "TGP ProtoTGP",
    "version": "2.0.0",
    "sentence": "Permet le contrôle simplifié de la plateforme de développement ProtoTPhys."
  },
  {
    "name": "TGP Suiveur",
    "version": "1.0.1",
    "sentence": "Permet de lire le suiveur de ligne composé de 6 photodétecteurs."
  },
  {
    "name": "THERMISTOR",
    "version": "1.0.3",
    "sentence": "NTC thermistor library"
  },
  {
    "name": "THiNX",
    "version": "2.4.192",
    "sentence": "A library to wrap THiNX device registration, MQTT and ESP8266HttpUpdate/ArduinoOTA"
  },
  {
    "name": "THiNX32",
    "version": "2.8.252",
    "sentence": "A library to wrap THiNX device registration, MQTT and OTA Update"
  },
  {
    "name": "TI TCA9548A",
    "version": "1.0.0",
    "sentence": "Support for the TI TCA9584A Low-Voltage 8-Channel I2C Switch with Reset."
  },
  {
    "name": "TIFF_G4",
    "version": "1.3.0",
    "sentence": "Optimized TIFF G4 decoder for MCUs with 16K+ RAM."
  },
  {
    "name": "TIL306",
    "version": "1.0.0",
    "sentence": "Library for Texas Instruments TIL306 and TIL307 LED Numeric Displays."
  },
  {
    "name": "TI_SN76489",
    "version": "0.0.2",
    "sentence": "Arduino (Uno) Library to manage Texas Instruments SN76489 sound chip"
  },
  {
    "name": "TJpg_Decoder",
    "version": "1.1.0",
    "sentence": "A JPEG decoder based on tjpgd"
  },
  {
    "name": "TLA2518",
    "version": "1.0.4",
    "sentence": "Arduino library for Texas instrument TLA2518"
  },
  {
    "name": "TLC5615",
    "version": "1.2.0",
    "sentence": "Driver for Texas Instruments TLC5615 10-bit DAC"
  },
  {
    "name": "TLC59116",
    "version": "1.0.1",
    "sentence": "Library for managing Texas Instruments TLC59116 LED Drivers."
  },
  {
    "name": "TLC5916_Lite",
    "version": "1.0.0",
    "sentence": "Works in Normal Mode to turn on/off LEDs, and special mode for current gain and open circuit detection."
  },
  {
    "name": "TLC5917",
    "version": "0.2.1",
    "sentence": "Arduino library for TLC5917 8-Channel Constant-Current LED Sink Drivers."
  },
  {
    "name": "TLC591x",
    "version": "1.4.3",
    "sentence": "Library for TI TLC5916 and TLC5917 constant current sink LED driver chips."
  },
  {
    "name": "TLC5947",
    "version": "0.3.0",
    "sentence": "Arduino library for TLC5947 24 channel 12 bit PWM."
  },
  {
    "name": "TLE493D",
    "version": "1.3.1",
    "sentence": "This library is deprecated and no longer maintained."
  },
  {
    "name": "TLE5012B",
    "version": "3.1.0",
    "sentence": "This library enables the Infineon TLE5012B magnetic angle sensor."
  },
  {
    "name": "TLE72X",
    "version": "1.0.1",
    "sentence": "Multichannel low-side and high-side driver library."
  },
  {
    "name": "TLE9012_BMS_IC",
    "version": "1.0.0",
    "sentence": "This library provides an interface for Infineons Battery Management IC TLE9012"
  },
  {
    "name": "TLE94112",
    "version": "3.0.4",
    "sentence": "DEPRECATED. This library provides an interface for Infineons DC Motor Control Shield with TLE94112EL"
  },
  {
    "name": "TLE9879 BLDC Motor Control Shield",
    "version": "1.1.0",
    "sentence": "TLE9879 BLDC motor control shield library for Arduino"
  },
  {
    "name": "TLI493D",
    "version": "2.1.1",
    "sentence": "This library is deprecated and no longer maintained."
  },
  {
    "name": "TLI4970",
    "version": "1.2.0",
    "sentence": "This library provides an interface for Infineon's TLI4970-D050T4 Current Sensor with hall technology."
  },
  {
    "name": "TLI4971-Current-Sensor",
    "version": "1.1.2",
    "sentence": "This library provides an Interface for Infineons TLI4971 Current Sensor"
  },
  {
    "name": "TLT",
    "version": "0.0.1",
    "sentence": "Provides network communication capabilities over ME310G1 Telit module."
  },
  {
    "name": "TLV493D-A1B6",
    "version": "1.0.4",
    "sentence": "This library is deprecated and no longer maintained."
  },
  {
    "name": "TLog",
    "version": "1.0.3",
    "sentence": "Arduino TLog library; to also send (Serial) logs via telnet, mqtt, syslog, a web browser, etc."
  },
  {
    "name": "TLx4966-Direction-Speed-Sensor",
    "version": "1.1.2",
    "sentence": "This library provides an interface to interact with the TLx4966 Double Hall sensor family."
  },
  {
    "name": "TM1637",
    "version": "1.2.0",
    "sentence": "Driver for 4 digit 7-segment display modules, based on the TM1637 chip."
  },
  {
    "name": "TM1637 Driver",
    "version": "2.2.1",
    "sentence": "Feature-full and simple TM1637 library with nonblocking animation support"
  },
  {
    "name": "TM1637TinyDisplay",
    "version": "1.12.0",
    "sentence": "A simple library to display numbers, text and animation on 4 and 6 digit 7-segment TM1637 based display modules. Offers non-blocking animations and scrolling!"
  },
  {
    "name": "TM1637_RT",
    "version": "0.4.0",
    "sentence": "TM1637 Library for Arduino."
  },
  {
    "name": "TM1638",
    "version": "1.0.1",
    "sentence": "library for driving TM1638 led display-leds-buttons like https://fr.aliexpress.com/wholesale?SearchText=TM1638"
  },
  {
    "name": "TM1638lite",
    "version": "1.1.0",
    "sentence": "Interface library from Arduino to TM1638 display chip/card"
  },
  {
    "name": "TM1638plus",
    "version": "2.0.1",
    "sentence": "TM1638plus is an Arduino library to control TM1638 seven segment modules."
  },
  {
    "name": "TM1650",
    "version": "1.1.0",
    "sentence": "7 segment display driver for JY-MCU module based on TM1650 chip."
  },
  {
    "name": "TM16xx LEDs and Buttons",
    "version": "0.7.2501",
    "sentence": "TM16xx library for Arduino. Supports LED and KEY modules based on TM1638 and similar chips."
  },
  {
    "name": "TMC2130",
    "version": "1.0.6",
    "sentence": "Trinamic TMC2130 bipolar stepper motor driver."
  },
  {
    "name": "TMC2130Stepper",
    "version": "2.5.1",
    "sentence": "Arduino library for Trinamic TMC2130 stepper drivers"
  },
  {
    "name": "TMC2208Stepper",
    "version": "0.2.5",
    "sentence": "Arduino library for Trinamic TMC2208 stepper drivers"
  },
  {
    "name": "TMC2209",
    "version": "10.0.0",
    "sentence": "The TMC2209 is an ultra-silent motor driver IC for two phase stepper motors with both UART serial and step and direction interfaces."
  },
  {
    "name": "TMC429",
    "version": "2.3.1",
    "sentence": "Trinamic TMC429 triple-axis dedicated step and direction motion controller."
  },
  {
    "name": "TMC5072",
    "version": "0.3.6",
    "sentence": "Control TMC5072 stepper motor drivers."
  },
  {
    "name": "TMC7300",
    "version": "0.6.0",
    "sentence": "Control TMC7300 DC motor drivers."
  },
  {
    "name": "TMCStepper",
    "version": "0.7.3",
    "sentence": "Arduino library for Trinamic stepper drivers"
  },
  {
    "name": "TMD3725",
    "version": "0.1.0",
    "sentence": "Arduino library to control the TMD3725 RGB color sensor"
  },
  {
    "name": "TMP117-Arduino",
    "version": "1.0.3",
    "sentence": "Full-featured Arduino compatible TMP117 driver"
  },
  {
    "name": "TMP36",
    "version": "1.3.1",
    "sentence": "Makes using a TMP36 temperature sensor even easier!"
  },
  {
    "name": "TMP6x",
    "version": "1.0.1",
    "sentence": "Library for the TI linear thermistors (TMP61, TMP63 and TMP64) using your own Analog Digital Converter (ADC)."
  },
  {
    "name": "TMRpcm",
    "version": "1.3.6",
    "sentence": "PCM/WAV Audio playback"
  },
  {
    "name": "TN_SwitchState",
    "version": "1.0.2",
    "sentence": "A library to manage switch state transitions."
  },
  {
    "name": "TOPMAX",
    "version": "0.2.1",
    "sentence": "Arduino library to track top n maxima."
  },
  {
    "name": "TOPMIN",
    "version": "0.2.1",
    "sentence": "Arduino library to track top n minima."
  },
  {
    "name": "TOTP library",
    "version": "1.1.0",
    "sentence": "Library to generate Time-based One-Time Passwords"
  },
  {
    "name": "TOTP-RC6236-generator",
    "version": "1.0.0",
    "sentence": "Time based one time password generator; complies with RFC 6238"
  },
  {
    "name": "TQDF_WatchOS",
    "version": "1.5.4",
    "sentence": "Arduino library to support all features of TQDF Watch."
  },
  {
    "name": "TR064",
    "version": "1.2.2",
    "sentence": "Arduino/ESP library for the TR-064 SOAP protocol"
  },
  {
    "name": "TS4231 Library",
    "version": "1.0.4",
    "sentence": "Triad Semiconductor library for configuring the TS4231 Light to Digital Converter."
  },
  {
    "name": "TS8000 Library",
    "version": "4.0.0-beta",
    "sentence": "Triad Semiconductor library for the TS8000 Ultrasonic to Digital Converter."
  },
  {
    "name": "TSBridge",
    "version": "1.1.0",
    "sentence": "An Arduino library for controlling Train Simulator."
  },
  {
    "name": "TSC2004",
    "version": "1.1.0",
    "sentence": "Library for the TSC2004 resistive touch screen controller"
  },
  {
    "name": "TSController",
    "version": "1.1.0",
    "sentence": "An Arduino library for controlling Train Simulator."
  },
  {
    "name": "TSD305lib",
    "version": "1.0.3",
    "sentence": "TSD305 IR thermopile library for Arduino"
  },
  {
    "name": "TSIC",
    "version": "1.1.2",
    "sentence": "Library for TSIC digital temperature sensors (type 206/306/506 and similar)."
  },
  {
    "name": "TSL235R",
    "version": "0.1.5",
    "sentence": "Library for the TSL235R light to frequency convertor."
  },
  {
    "name": "TSL2591MI",
    "version": "0.10.0",
    "sentence": "A library for the Austria Microsystems TSL2591 Lux Sensor."
  },
  {
    "name": "TSL260R",
    "version": "0.1.4",
    "sentence": "Arduino library for the TSL260R, TSL261R and TSL262R infrared to voltage convertor."
  },
  {
    "name": "TTN_esp32",
    "version": "0.1.7",
    "sentence": "ESP 32 port of the Arduino TheThingsNetwork library."
  },
  {
    "name": "TTP229",
    "version": "1.1.0",
    "sentence": "Arduino library for TTP229 module."
  },
  {
    "name": "TVout",
    "version": "1.0.2",
    "sentence": "A library for generating PAL or NTSC video output with an AVR."
  },
  {
    "name": "TWI_GPS",
    "version": "0.0.3",
    "sentence": "GPS message API wrapper library for I2C Arduino connection"
  },
  {
    "name": "TXOnlySerial",
    "version": "1.0.0",
    "sentence": "Enables one-way serial communication (TX) on any digital pin."
  },
  {
    "name": "TabahiConsole",
    "version": "1.4.1",
    "sentence": "Control ESP and Arduino modules remotely from your web console"
  },
  {
    "name": "Table",
    "version": "1.1.0",
    "sentence": "Dynamic table for Arduino"
  },
  {
    "name": "Tachometer",
    "version": "1.3.0",
    "sentence": "Library for frequency and period measurement"
  },
  {
    "name": "TactNecklace",
    "version": "1.0.0",
    "sentence": "Arduino Library receives acceleration data from acclerometer, outputting a signal of varying srength to the vibrators"
  },
  {
    "name": "TactileSwitch",
    "version": "1.0.0",
    "sentence": "class for tactile switch"
  },
  {
    "name": "Tago ESP32",
    "version": "0.0.1",
    "sentence": "Tago ESP32 library"
  },
  {
    "name": "Talk2",
    "version": "1.0.3",
    "sentence": "<font color=\"#0066CC\">Library for the Talk2 Boards.</font>"
  },
  {
    "name": "Talkie",
    "version": "1.4.0",
    "sentence": "Speech library for Arduino. Generates speech from a fixed vocabulary encoded with LPC."
  },
  {
    "name": "TalkiePCM",
    "version": "0.1.1",
    "sentence": "Speech library for Arduino: Generates PCM speech from a fixed vocabulary encoded with LPC."
  },
  {
    "name": "TalkingButton",
    "version": "0.3.2",
    "sentence": "Transform a press button into a powerful input device"
  },
  {
    "name": "TalkingLED",
    "version": "0.5.0",
    "sentence": "Make your system to display messages by LED blinking"
  },
  {
    "name": "Talking_Display",
    "version": "1.5.0",
    "sentence": "A library to output date, time and sensor values as speech."
  },
  {
    "name": "TankController",
    "version": "24.10.2",
    "sentence": "Software for the Arduino that controls pH and temperature in the Open-Acidification project."
  },
  {
    "name": "TapCode",
    "version": "0.1.0",
    "sentence": "An Arduino library to interpret 'tap code' sent with a single button."
  },
  {
    "name": "TapatioElectronics",
    "version": "1.0.1",
    "sentence": "Allows access to the use of sensors, actuators and control panels designed by Tapatio Electronics"
  },
  {
    "name": "Tarmos",
    "version": "1.3.2",
    "sentence": "Tarmos için modül geliştirme kütüphanesi."
  },
  {
    "name": "Task Scheduler",
    "version": "1.4.0",
    "sentence": "Lightweight and fast preemptive scheduler for ATMega and SAM3X Arduino Boards."
  },
  {
    "name": "Task by Makuna",
    "version": "1.1.6",
    "sentence": "A library that makes creating complex mulitple task projects easy."
  },
  {
    "name": "TaskJockey",
    "version": "1.0.4",
    "sentence": "A simple, light-weight cooperative task manager for Arduino, ESP32, STM32, and similar systems"
  },
  {
    "name": "TaskManager",
    "version": "0.5.2",
    "sentence": "cooperative multi-task manager for Arduino"
  },
  {
    "name": "TaskManagerIO",
    "version": "1.5.1",
    "sentence": "Task manager for Arduino and mbed with marshalled interrupts, first class support for events and timed execution. Thread safe for RTOS use."
  },
  {
    "name": "TaskScheduler",
    "version": "3.8.5",
    "sentence": "Cooperative multitasking for Arduino, ESPx, STM32 and other microcontrollers."
  },
  {
    "name": "Tasker",
    "version": "2.0.3",
    "sentence": "Get rid of delay() calls, schedule tasks/functions instead."
  },
  {
    "name": "Taskfun",
    "version": "0.1.93",
    "sentence": "Preemptive multitasking for Arduino AVR and SAMD21"
  },
  {
    "name": "Taskrunner",
    "version": "1.0.1",
    "sentence": "Allows arduino to run scheduler which can run functions at specific frequency"
  },
  {
    "name": "Tasks",
    "version": "1.0.2",
    "sentence": "A library that handles ongoing tasks."
  },
  {
    "name": "TcBUTTON",
    "version": "1.0.11",
    "sentence": "Button for TcBUTTON is a easy to use button for your application and call back function for your button."
  },
  {
    "name": "TcMenuLog",
    "version": "1.0.4",
    "sentence": "Logging framework and helper text utils for the TcMenu framework."
  },
  {
    "name": "TeXie arduino Client",
    "version": "0.2.0",
    "sentence": "Client library of TeXie plattform."
  },
  {
    "name": "Technoshield-ui-lib",
    "version": "1.0.1",
    "sentence": "Technoshield User Interface API."
  },
  {
    "name": "TeeGrid",
    "version": "1.1.0",
    "sentence": "Record electric fish with electrode arrays based on Teensy_Amp amplifiers and Teensy microcontrollers."
  },
  {
    "name": "TeeRec",
    "version": "0.10.0",
    "sentence": "Teensy recorder libraries."
  },
  {
    "name": "Teensy41_AsyncTCP",
    "version": "1.1.0",
    "sentence": "Async TCP Library for Teensy 4.1 using QNEthernet"
  },
  {
    "name": "TeensyAudioFlashLoader",
    "version": "1.0.8",
    "sentence": "utility to load audio samples from uSD card to external flash ram or psram on teensy 4.1"
  },
  {
    "name": "TeensyAudioLaunchCtrl",
    "version": "1.0.1",
    "sentence": "Trigger audio samples using your usb midi controller"
  },
  {
    "name": "TeensyAudioSampler",
    "version": "1.0.7",
    "sentence": "play pitched multi-polyphonic audio samples with teensy audio library"
  },
  {
    "name": "TeensyDMX",
    "version": "4.2.0",
    "sentence": "A full-featured DMX library for Teensy 3, Teensy LC, and Teensy 4."
  },
  {
    "name": "TeensyID",
    "version": "1.3.3",
    "sentence": "A library for getting Teensy IDs"
  },
  {
    "name": "TeensySimplePacketComs",
    "version": "0.2.0",
    "sentence": "A library to use SimplePacketCOms with the USB HID on the Teensy class device"
  },
  {
    "name": "TeensyStep",
    "version": "2.3.4",
    "sentence": "High speed stepper driver for PJRC Teensy boards (T3.0 - T3.6) and STM32F4"
  },
  {
    "name": "TeensyTimerTool",
    "version": "1.4.1",
    "sentence": "Generic Interface to Teensy Timers"
  },
  {
    "name": "TeensyUserInterface",
    "version": "1.3.0",
    "sentence": "A simple touchscreen user interface for Teensy."
  },
  {
    "name": "TeensyVariablePlayback",
    "version": "1.1.0",
    "sentence": "Play samples at variable pitch using Teensy Audio Library"
  },
  {
    "name": "TeensyView",
    "version": "1.1.0",
    "sentence": "A library for driving the TeensyView OLED board"
  },
  {
    "name": "Teensy_3X_Multipurpose_Board",
    "version": "1.2.0",
    "sentence": "Library to interface with Teensy 3.X breakout board (PCB gerber and Eagle project files included!)"
  },
  {
    "name": "Teensy_PWM",
    "version": "1.1.1",
    "sentence": "This library enables you to use Hardware-based PWM channels on Teensy boards, such as Teensy 2.x, Teensy LC, Teensy 3.x, Teensy 4.x, Teensy MicroMod, etc., to create and output PWM to pins. Using the same functions as other FastPWM libraries to enable you to port PWM code easily between platforms."
  },
  {
    "name": "Teensy_Slow_PWM",
    "version": "1.2.1",
    "sentence": "This library enables you to use ISR-based PWM channels on Teensy boards, such as Teensy 2.x, Teensy LC, Teensy 3.x, Teensy 4.x, Teensy MicroMod, etc., to create and output PWM any GPIO pin."
  },
  {
    "name": "Teensy_TimerInterrupt",
    "version": "1.3.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on a Teensy-based board such as Teensy 4.x, 3.x, LC, 2.0, etc."
  },
  {
    "name": "Telaire T6700 CO2 Sensor Module Library",
    "version": "1.0.1",
    "sentence": "I2C communication Library for Telaire T6700 CO2 Sensor Module"
  },
  {
    "name": "TelegramBot",
    "version": "1.2.5",
    "sentence": "Arduino library for TelegramBot"
  },
  {
    "name": "TelegramBotClient",
    "version": "0.6.1",
    "sentence": "A non blocking client library for accessing Telegram's Bot API"
  },
  {
    "name": "TelegramESP32",
    "version": "0.1.2",
    "sentence": "ESP32 library for Telegram Bot API communication"
  },
  {
    "name": "Telegraph",
    "version": "1.0.0",
    "sentence": "Telegraph automatically sends Morse code signals on an Arduino pin."
  },
  {
    "name": "Teleinfo",
    "version": "0.0.2",
    "sentence": "Teleinfo library for arduino"
  },
  {
    "name": "Telemetrix4Arduino",
    "version": "5.4.4",
    "sentence": "The server for the Telemetrix Project."
  },
  {
    "name": "Telemetrix4Connect2040",
    "version": "1.0.2",
    "sentence": "The Arduino Nano Connect RP2040 server for the Telemetrix Project."
  },
  {
    "name": "Telemetrix4Esp32",
    "version": "3.0.0",
    "sentence": "The ESP-32 servers for the Telemetrix Project."
  },
  {
    "name": "Telemetrix4Esp8266",
    "version": "5.3.1",
    "sentence": "The ESP-8266 server for the Telemetrix Project."
  },
  {
    "name": "Telemetrix4RPiPicoW",
    "version": "1.1.0",
    "sentence": "The server for the Telemetrix Project."
  },
  {
    "name": "Telemetrix4UnoR4",
    "version": "1.0.4",
    "sentence": "The Arduino Uno R4 Telemetrix4UnoR4 servers."
  },
  {
    "name": "TelemetryJet",
    "version": "0.2.0",
    "sentence": "A lightweight telemetry protocol for hardware sensor data."
  },
  {
    "name": "Telit xE910 Series GSM Modem Library",
    "version": "1.9.6",
    "sentence": "Telit xE910 series GSM modem library."
  },
  {
    "name": "TelloESP32",
    "version": "1.0.1",
    "sentence": "Arduino library for controlling DJI Tello drones using ESP32."
  },
  {
    "name": "Telnet",
    "version": "0.2.0",
    "sentence": "Manage Your ESP Over Telnet."
  },
  {
    "name": "TelnetStream",
    "version": "1.3.0",
    "sentence": "Stream implementation over telnet for OTA debuging"
  },
  {
    "name": "TelnetStream2",
    "version": "1.0.0",
    "sentence": "Stream implementation over telnet for OTA debuging"
  },
  {
    "name": "Temboo",
    "version": "1.2.1",
    "sentence": "This library enables calls to Temboo, a platform that connects Arduino/Genuino boards to 100+ APIs, databases, code utilities and more."
  },
  {
    "name": "TempReader",
    "version": "1.1.0",
    "sentence": "A library that allows users to use the internal temperature sensor of ATMega328P."
  },
  {
    "name": "TempSensors_NXP_Arduino",
    "version": "1.1.0",
    "sentence": "Class library for NXP temperature sensors"
  },
  {
    "name": "Temperature",
    "version": "0.3.7",
    "sentence": "Library with weather and temperature conversion functions."
  },
  {
    "name": "TemperatureZero",
    "version": "1.2.0",
    "sentence": "Arduino library for internal temperature of the family SAMD21 and SAM51"
  },
  {
    "name": "TemplateTango",
    "version": "1.0.0",
    "sentence": "An HTML template engine for Arduino and ESP32 microcontrollers."
  },
  {
    "name": "TencentCloudIoTSDK",
    "version": "1.0.1",
    "sentence": "A toplevel client library for TencentCloud IOT Platform."
  },
  {
    "name": "TensorFlowLite_ESP32",
    "version": "1.0.0",
    "sentence": "Allows you to run machine learning models locally on your ESP32 device."
  },
  {
    "name": "Terminal",
    "version": "1.0.4",
    "sentence": "Terminal for Serial Ports, Telnet, and other Streams."
  },
  {
    "name": "TerminalCommander",
    "version": "1.0.0",
    "sentence": "An interactive serial terminal for Arduino."
  },
  {
    "name": "TeslaCloud",
    "version": "0.1.5",
    "sentence": "Build communication for Arduino devices with Tesla Cloud!"
  },
  {
    "name": "TetrisAnimation",
    "version": "1.1.0",
    "sentence": "Library for drawing text out with tetris blocks"
  },
  {
    "name": "Text2Matrix",
    "version": "1.0.0",
    "sentence": "8x8 LED Matrix controller for displaying text"
  },
  {
    "name": "Tgui",
    "version": "1.0.0",
    "sentence": "Tgui is a lightweight GUI for Arduino Uno type of MCU with small TFT screen, primarily for showing sensor data."
  },
  {
    "name": "TheThingsNetwork",
    "version": "2.7.2",
    "sentence": "The Things Network Arduino Library."
  },
  {
    "name": "TheThingsNode",
    "version": "2.0.9",
    "sentence": "The Things Node Arduino Library."
  },
  {
    "name": "TheTroll",
    "version": "1.0.10",
    "sentence": "Arduino Library for use with Patrick Mitchells \"The Troll\" board."
  },
  {
    "name": "TheVaporTrail SubPixel",
    "version": "0.5.0",
    "sentence": "Library for smooth LED animation and color blending."
  },
  {
    "name": "TheengsDecoder",
    "version": "1.8.5",
    "sentence": "A simple, efficient, portable and lightweight library for Internet of Things messages decoding."
  },
  {
    "name": "Thermal Printer Library",
    "version": "2.2.1",
    "sentence": "Bluetooth Low Energy Thermal Printer Library"
  },
  {
    "name": "ThermistorLibrary",
    "version": "1.0.6",
    "sentence": "This library allows you to read the thermistors very easily."
  },
  {
    "name": "ThinSat Program TSLPB Library",
    "version": "0.6.0",
    "sentence": "A driver library for the Twiggs Space Lab Payload Board"
  },
  {
    "name": "ThingESP",
    "version": "1.3.0",
    "sentence": "Arduino library for the ThingsESP Platform."
  },
  {
    "name": "ThingPulse XPT2046 Touch",
    "version": "1.4.0",
    "sentence": "Touchscreens using the XPT2046 controller chip."
  },
  {
    "name": "ThingSpeak",
    "version": "2.0.1",
    "sentence": "ThingSpeak Communication Library for Arduino, ESP8266 & EPS32"
  },
  {
    "name": "ThingSpeak_asukiaaa",
    "version": "1.0.1",
    "sentence": "An API manager for ThingSpeak"
  },
  {
    "name": "ThingerCore32",
    "version": "0.1.0",
    "sentence": "Thinger.io Core32 OS Library for ESP32 based devices"
  },
  {
    "name": "ThingfaceClient",
    "version": "0.0.2",
    "sentence": "The thingface client library for Arduino"
  },
  {
    "name": "Thingpings",
    "version": "1.1.0",
    "sentence": "Send a ping to Thingpings."
  },
  {
    "name": "Thingplus",
    "version": "1.0.11",
    "sentence": "Helps connecting your Arduino board to Thing+ cloud easly and fast"
  },
  {
    "name": "ThingsBoard",
    "version": "0.15.0",
    "sentence": "ThingsBoard library for Arduino."
  },
  {
    "name": "ThingsCloud_ESP_SDK",
    "version": "1.0.12",
    "sentence": "Build your IoT project in minutes!"
  },
  {
    "name": "ThingsIoT",
    "version": "1.2.0",
    "sentence": "Arduino library for the ThingsIoT Cloud Platform."
  },
  {
    "name": "ThingsML",
    "version": "1.4.2",
    "sentence": "Thingsml Encoder/Decoder"
  },
  {
    "name": "ThingsOfValue SDK for Arduino",
    "version": "1.0.2",
    "sentence": "LOTTE IoT Platform (a.k.a Things Of Value) SDK for Arduino"
  },
  {
    "name": "Thingworx ESP32",
    "version": "1.0.0",
    "sentence": "Thingworx REST library for ESP32"
  },
  {
    "name": "Thread",
    "version": "0.0.2",
    "sentence": "Simplest kernel for multythreading."
  },
  {
    "name": "ThreadedTimer",
    "version": "0.1.0",
    "sentence": "A threaded timing library for mbed Arduinos"
  },
  {
    "name": "ThreeD",
    "version": "0.0.8",
    "sentence": "Processes a 3D coordinate matrix to generate 2D coordinates."
  },
  {
    "name": "ThresholdLib",
    "version": "1.0.0",
    "sentence": "Threshold Library"
  },
  {
    "name": "Throttle",
    "version": "1.0.0",
    "sentence": "Just like Debounce but faster"
  },
  {
    "name": "Tic",
    "version": "2.2.0",
    "sentence": "Tic Stepper Motor Controller library for Arduino"
  },
  {
    "name": "TickTwo",
    "version": "4.4.0",
    "sentence": "A library for creating Tickers which can call repeating functions. Replaces delay() with non-blocking functions. Recommanded for ESP and Arduino boards with mbed behind."
  },
  {
    "name": "Ticker",
    "version": "4.4.0",
    "sentence": "A library for creating Tickers which can call repeating functions. Replaces delay() with non-blocking functions."
  },
  {
    "name": "TiltSensor",
    "version": "1.1.0",
    "sentence": "TiltSensor provides a class to control a passive tilt-switch sensor."
  },
  {
    "name": "Timber",
    "version": "1.0.0",
    "sentence": "A wrapper logging Arduino library."
  },
  {
    "name": "Time",
    "version": "1.6.1",
    "sentence": "Timekeeping functionality for Arduino"
  },
  {
    "name": "TimeAlarms",
    "version": "1.5.0",
    "sentence": "Perform tasks at specific times or after specific intervals."
  },
  {
    "name": "TimeInterrupt",
    "version": "1.0.2",
    "sentence": "Allows for timer interrupts on various platforms."
  },
  {
    "name": "TimeInterval",
    "version": "0.3.7",
    "sentence": "Library developed by ESDeveloperBR with the objective of facilitating the control of intervals, avoiding the use of the DELAY command."
  },
  {
    "name": "TimeOut",
    "version": "5.1.0",
    "sentence": "An Arduino library that creates timer callbacks."
  },
  {
    "name": "TimeProfiler",
    "version": "0.2.2",
    "sentence": "Time profiler for Arduino"
  },
  {
    "name": "TimeRandom",
    "version": "1.0.0",
    "sentence": "Library for generating random numbers with time syncronization"
  },
  {
    "name": "TimeSeries",
    "version": "1.0.0",
    "sentence": "Arduino library for time series forecasting."
  },
  {
    "name": "TimedBlink",
    "version": "1.0.2",
    "sentence": "An object oriented library for asynchrnous programmable LED blinking"
  },
  {
    "name": "TimedPID",
    "version": "1.0.0",
    "sentence": "PID controller"
  },
  {
    "name": "TimedState",
    "version": "1.0.2",
    "sentence": "An Arduino Library providing utilities for controlling program state over time without delay()."
  },
  {
    "name": "TimeoutCallback",
    "version": "1.3.0",
    "sentence": "Library to call a callback after a certain time."
  },
  {
    "name": "TimeoutTaskLib",
    "version": "1.0.0",
    "sentence": "TimeoutTask Library"
  },
  {
    "name": "Timer",
    "version": "1.2.1",
    "sentence": "A library for creating start / stop Timers"
  },
  {
    "name": "Timer-CAM",
    "version": "1.0.1",
    "sentence": "Library for M5Stack Timer-CAM development kit"
  },
  {
    "name": "TimerEvent",
    "version": "0.5.0",
    "sentence": "TimerEvent is a non-blocking alternative to the delay() function."
  },
  {
    "name": "TimerExtensions",
    "version": "0.0.3",
    "sentence": "Easy access to advanced Arduino timer functions, such as precise timing, pulse generation, and input event capture."
  },
  {
    "name": "TimerFa",
    "version": "2.0.1",
    "sentence": "Software Timer"
  },
  {
    "name": "TimerFive",
    "version": "1.1.0",
    "sentence": "Use hardware Timer5 for finer PWM control and/or running an periodic interrupt function"
  },
  {
    "name": "TimerFour",
    "version": "1.1.0",
    "sentence": "Use hardware Timer4 for finer PWM control and/or running an periodic interrupt function"
  },
  {
    "name": "TimerFour32u4",
    "version": "1.0.1",
    "sentence": "Allow usage of the 10-bit hardware high speed Timer4 on ATMega16u4 and ATMega32u4."
  },
  {
    "name": "TimerInterrupt",
    "version": "1.8.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an Arduino, Adafruit or Sparkfun AVR board, such as Nano, UNO, Mega, Leonardo, YUN, Teensy, Feather_32u4, Feather_328P, Pro Micro, etc."
  },
  {
    "name": "TimerInterrupt_Generic",
    "version": "1.13.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on supported Arduino boards such as AVR, Mega-AVR, ESP8266, ESP32, SAMD, SAM DUE, nRF52, STM32F/L/H/G/WB/MP1, Teensy, Nano-33-BLE, RP2040-based boards, etc."
  },
  {
    "name": "TimerMs",
    "version": "1.2.0",
    "sentence": "Advanced software timer (based on millis())"
  },
  {
    "name": "TimerOne",
    "version": "1.1.1",
    "sentence": "Use hardware Timer1 for finer PWM control and/or running an periodic interrupt function"
  },
  {
    "name": "TimerOne_V2",
    "version": "2.0.0",
    "sentence": "Use hardware Timer1 for finer PWM control and/or running an periodic interrupt function"
  },
  {
    "name": "TimerThree",
    "version": "1.1.0",
    "sentence": "Use hardware Timer3 for finer PWM control and/or running an periodic interrupt function"
  },
  {
    "name": "TimerUtils",
    "version": "1.1.0",
    "sentence": "A library for making frequent tasks easy"
  },
  {
    "name": "Timers",
    "version": "1.0.2",
    "sentence": "LightWeight Timers library"
  },
  {
    "name": "TimersOneForAll",
    "version": "2.0.0",
    "sentence": "Make full use of all your hardware timers on your Arduino board. 充分利用你开发板上所有的硬件计时器"
  },
  {
    "name": "Timezone",
    "version": "1.2.4",
    "sentence": "Arduino library to facilitate time zone conversions and automatic daylight saving (summer) time adjustments."
  },
  {
    "name": "Timezone_Generic",
    "version": "1.10.1",
    "sentence": "Library to facilitate time zone conversions and automatic daylight saving (summer) time adjustments."
  },
  {
    "name": "TimonelTwiM",
    "version": "1.2.0",
    "sentence": "Upload firmware to a microcontroller running the Timonel bootloader."
  },
  {
    "name": "TinBus",
    "version": "1.0.0",
    "sentence": "A library for creating a multi master bus using the UART."
  },
  {
    "name": "TindieApi",
    "version": "1.0.0",
    "sentence": "A library to wrap the Tindie API (supports ESP8266/ESP32 & others)"
  },
  {
    "name": "TinkerController",
    "version": "0.1.0",
    "sentence": "TinkerController allows you to use Gaming Controllers with your Arduino/ESP IOT devices."
  },
  {
    "name": "Tiny Key Value Store",
    "version": "1.0.0",
    "sentence": "A simple key-value store library based on FileSystem"
  },
  {
    "name": "Tiny-I2C-Drivers",
    "version": "1.0.0",
    "sentence": "Various I2C driver libraries for the ATtiny1 series using megaTinyCore."
  },
  {
    "name": "Tiny4kOLED",
    "version": "2.3.0",
    "sentence": "This is a library for an ATTiny85 to use an I2C SSD1306 OLED. It supports double buffering on 128x32 pixel OLED."
  },
  {
    "name": "TinyButton",
    "version": "1.0.0",
    "sentence": "This library simplifies a click function for ATTiny projects."
  },
  {
    "name": "TinyCBOR",
    "version": "0.5.3002",
    "sentence": "Concise Binary Object Representation (CBOR) Library"
  },
  {
    "name": "TinyCmdTable",
    "version": "1.0.0",
    "sentence": "Very small command line manager"
  },
  {
    "name": "TinyConsole",
    "version": "0.4.6",
    "sentence": "A tiny command line and term handler"
  },
  {
    "name": "TinyDHT sensor library",
    "version": "1.1.2",
    "sentence": "Arduino library for Using DHT11, DHT22, etc Temp & Humidity Sensors with the ATtiny85 such as Adafruit Trinket and Arduino Gemma"
  },
  {
    "name": "TinyDMXSerial",
    "version": "1.5.3-tiny",
    "sentence": "Enables DMX communication using the built-in serial port for Arduino boards."
  },
  {
    "name": "TinyDatabase_Arduino",
    "version": "1.0.2",
    "sentence": "A tiny database to manipulate EEPROM easily"
  },
  {
    "name": "TinyDebug",
    "version": "2.0.0",
    "sentence": "ATtiny85 Serial-like debug interface for the Wokwi.com simulator."
  },
  {
    "name": "TinyDecisionTreeClassifier",
    "version": "2.0.1",
    "sentence": "TinyDecisionTreeClassifier is a simple but elegant standalone library for training decision trees directly on the edge."
  },
  {
    "name": "TinyFilmFestival",
    "version": "1.1.0",
    "sentence": "Extended controls for drawing the LED Matrix for Project 2"
  },
  {
    "name": "TinyFontRenderer",
    "version": "1.0.0",
    "sentence": "A library which renders TinyFonts derived from Truetype fonts"
  },
  {
    "name": "TinyGPS",
    "version": "13.0.0",
    "sentence": "A compact Arduino NMEA (GPS) parsing library"
  },
  {
    "name": "TinyGPSMinus",
    "version": "1.0.0",
    "sentence": "A smaller and simpler TinyGPS fork with fewer features."
  },
  {
    "name": "TinyGPSPlus",
    "version": "1.0.3",
    "sentence": "TinyGPSPlus provides object-oriented parsing of GPS (NMEA) sentences"
  },
  {
    "name": "TinyGPSPlus-ESP32",
    "version": "0.0.2",
    "sentence": "A GPS library"
  },
  {
    "name": "TinyGPSPlusPlus",
    "version": "0.0.4",
    "sentence": "TinyGPSPlus provides object-oriented parsing of GPS (NMEA) sentences"
  },
  {
    "name": "TinyGSM",
    "version": "0.12.0",
    "sentence": "A small Arduino library for GPRS modules, that just works."
  },
  {
    "name": "TinyGuixhe",
    "version": "1.0.2",
    "sentence": "An eloquent interface to guixhe-main Lite for Microcontrollers"
  },
  {
    "name": "TinyIO",
    "version": "0.0.1",
    "sentence": "A versatile IO library for Arduino and ESP32, providing abstractions for reading and writing data with support for custom input/output handlers."
  },
  {
    "name": "TinyKT0803",
    "version": "0.1.0",
    "sentence": "Arduino library for the KT0803 and KT0803K FM transmitter.(tiny edition). Based upon KT0803."
  },
  {
    "name": "TinyLiquidCrystal",
    "version": "1.2.2",
    "sentence": "A simplified library for the Adafruit I2C/SPI backpack, for use with Gemma & Trinket"
  },
  {
    "name": "TinyLiquidCrystal_I2C",
    "version": "1.1.4",
    "sentence": "LiquidCrystal Arduino library for ATtiny microcontrollers (PCF8574 I2C based displays)."
  },
  {
    "name": "TinyLoRa",
    "version": "1.4.2",
    "sentence": "Tiny LoRa Library for TTN"
  },
  {
    "name": "TinyMPU6050",
    "version": "0.5.3",
    "sentence": "Tiny implementation for MPU6050 focusing on performance and accuracy"
  },
  {
    "name": "TinyMatrixMath",
    "version": "0.3.0",
    "sentence": "Implments common matrix math operations for small matrices."
  },
  {
    "name": "TinyMegaI2C",
    "version": "0.0.4",
    "sentence": "An efficient optimised i2c library for new ATTINY series uCs"
  },
  {
    "name": "TinyMenu",
    "version": "1.1.1",
    "sentence": "A Tiny Menu for SuperPico-Compactible Boards (RP2040), based on TFT_eSPI"
  },
  {
    "name": "TinyMqtt",
    "version": "0.9.16",
    "sentence": "A tiny broker and client library for MQTT messaging."
  },
  {
    "name": "TinyNunchuk",
    "version": "1.0.0",
    "sentence": "This is a library for an ATTiny85 to use a Wii Nunchuk."
  },
  {
    "name": "TinyOLED-Fonts",
    "version": "1.2.0",
    "sentence": "This is a collection of fonts for use with the Tiny4kOLED library."
  },
  {
    "name": "TinyPICO Helper Library",
    "version": "1.5.0",
    "sentence": "A TinyPICO Helper Library"
  },
  {
    "name": "TinyRTCLib",
    "version": "1.1.2",
    "sentence": "A tiny version of RTCLib, for use with TinyWireM"
  },
  {
    "name": "TinyScheduler",
    "version": "0.1.3",
    "sentence": "A lightweight and flexible task scheduling library for Arduino, allowing users to manage time-based events such as timeouts, periodic tasks, and repeated executions with an intuitive API."
  },
  {
    "name": "TinyScreen",
    "version": "1.1.0",
    "sentence": "Arduino compatible software support for TinyScreen and TinyScreen+."
  },
  {
    "name": "TinySnore",
    "version": "1.0.1",
    "sentence": "Library for putting ATtiny25/45/85 to timed sleep in one line of code!"
  },
  {
    "name": "TinyStepper",
    "version": "1.2.0",
    "sentence": "Arduino library to drive stepper motors. Small and easy to use."
  },
  {
    "name": "TinyStepper_28BYJ_48",
    "version": "1.0.0",
    "sentence": "Tiny stepper motor 28BYJ-48 control library for Arduino."
  },
  {
    "name": "TinySuite",
    "version": "2.1.0",
    "sentence": "A collection of tools for ATTiny85"
  },
  {
    "name": "TinyTemplateEngine",
    "version": "1.1.0",
    "sentence": "Hello ${0}! A line-by-line template engine for large input data with a very small memory footprint"
  },
  {
    "name": "TinyTrainable",
    "version": "0.2.3",
    "sentence": "Library to build media arts instruments with tiny machine learning."
  },
  {
    "name": "TinyUPnP",
    "version": "3.2.0",
    "sentence": "Add port mappings to your router automatically"
  },
  {
    "name": "TinyUSBSimplePacketComs",
    "version": "0.0.1",
    "sentence": "A library to use SimplePacketComs with the USB HID on the TinyUSB class device"
  },
  {
    "name": "TinyWireM",
    "version": "1.1.3",
    "sentence": "I2C library for Trinket and Gemma, adapted from BroHogan's code on Arduino Playground"
  },
  {
    "name": "TinyXML",
    "version": "1.0.3",
    "sentence": "Fork of Adam Rudd's (adamvr) TinyXML library."
  },
  {
    "name": "Tinyfox",
    "version": "0.9.3",
    "sentence": "This library provides a simple way to make use of Wisol radios (sigfox and point to point)."
  },
  {
    "name": "Tlc5940",
    "version": "0.16.0",
    "sentence": "Use the Texas Instruments TLC5940 16-channel LED Driver"
  },
  {
    "name": "Toggl API v8 - Arduino Implementation",
    "version": "1.2.4",
    "sentence": "Toggl API v8 implementation for ESP"
  },
  {
    "name": "Toggle",
    "version": "3.1.8",
    "sentence": "AArduino button debounce library for various switch types, port expanders and other 8-bit data sources."
  },
  {
    "name": "TomIBT2",
    "version": "1.1.2",
    "sentence": "TomIBT2 is an Arduino library for controlling the IBT-2 motor driver board"
  },
  {
    "name": "TomServo",
    "version": "1.0.4",
    "sentence": "Servo Library that allows multiple servos on one battery"
  },
  {
    "name": "TomStick",
    "version": "1.0.1",
    "sentence": "A TomStick library is an Arduino library for simply controlling the axes of the joystick."
  },
  {
    "name": "Tone",
    "version": "1.0.0",
    "sentence": "A software digital square wave tone generation library.<br />"
  },
  {
    "name": "ToneESP32",
    "version": "1.0.0",
    "sentence": "Tone library for ESP32"
  },
  {
    "name": "ToneLibrary",
    "version": "1.7.1",
    "sentence": "This is an Arduino Library to produce a tone on any Arduino pin."
  },
  {
    "name": "TonePitch",
    "version": "1.0.3",
    "sentence": "Real accurate list of music notes with tone variants for Arduino."
  },
  {
    "name": "TonePlayer",
    "version": "3.0.0",
    "sentence": "A library for playing melody in background process using the builtin tone() function."
  },
  {
    "name": "TongHopThuVien",
    "version": "1.0.4",
    "sentence": "Makerlab.vn Collection"
  },
  {
    "name": "TongHopThuVienCon1",
    "version": "1.0.0",
    "sentence": "Test Tong hop thu vien"
  },
  {
    "name": "Tools",
    "version": "1.2.0",
    "sentence": "General purpose API for the Arduino UNO."
  },
  {
    "name": "Tools.Easy",
    "version": "0.1.4",
    "sentence": "This library contains some useful macro definitions that can help you program"
  },
  {
    "name": "TopView NBduino Library",
    "version": "0.20.0",
    "sentence": "Arduino library for the TopView NBduino shield"
  },
  {
    "name": "Totem Library",
    "version": "1.2.0",
    "sentence": "Library to control Totem boards, modules and Mini Lab"
  },
  {
    "name": "Totem Roboboard",
    "version": "1.3.1",
    "sentence": "Totem RoboBoard X3/X4 control library for ESP32 Arduino Core"
  },
  {
    "name": "Touch Screen Driver",
    "version": "1.0.0",
    "sentence": "Arduino library for Touch Screen Driver."
  },
  {
    "name": "TouchCal",
    "version": "1.1.0",
    "sentence": "Touchscreen calibration library."
  },
  {
    "name": "TouchEvent",
    "version": "1.3.0",
    "sentence": "An Event-Manager for Touchscreen with XPT2046 requires XPT2046-Touchscreen library."
  },
  {
    "name": "TouchKeypad",
    "version": "0.0.6",
    "sentence": "A keypad for touchscreens."
  },
  {
    "name": "TouchLed",
    "version": "1.0.0",
    "sentence": "Touch input and LED indicator with just two wires on ESP32"
  },
  {
    "name": "TouchScreenAdapter",
    "version": "0.5.0",
    "sentence": "The TouchScreenAdapter library provides a unified API for interacting with different types of touchscreens, including resistive and capacitive."
  },
  {
    "name": "TouchWheel",
    "version": "1.1.0",
    "sentence": "Capacitive touch wheels and sliders using only 2-3 analog pins!"
  },
  {
    "name": "TouchscreenResistive",
    "version": "1.0.1",
    "sentence": "Read resistive touchscreens directly using MCU ADC"
  },
  {
    "name": "TouchyTouch",
    "version": "1.1.1",
    "sentence": "Capacitive sense touch library that mimics how CircuitPython touchio works"
  },
  {
    "name": "TpdButton",
    "version": "1.0.1",
    "sentence": "Simple prototyping library to read different events on a button."
  },
  {
    "name": "Tr4cker",
    "version": "1.1.0",
    "sentence": "Tr4cker is a device tracker/locator which only use Wifi. It works perfectly with ESP8266 and ESP32 modules."
  },
  {
    "name": "Transform",
    "version": "0.1.0",
    "sentence": "A library for implementing all integer signal transofrms."
  },
  {
    "name": "TrapeZoid",
    "version": "0.0.1",
    "sentence": "trapezoidal control using moving average."
  },
  {
    "name": "TriSonica_Mini",
    "version": "1.0.0",
    "sentence": "Library for communicating with the TriSonica Mini Wind Sensor."
  },
  {
    "name": "TriacDimmer",
    "version": "1.1.0",
    "sentence": "A library for controlling a triac dimmer."
  },
  {
    "name": "TriangleSolverLib",
    "version": "1.0.0",
    "sentence": "Library that implements functions to solve triangles. Usefull for articulated machines"
  },
  {
    "name": "TridentTD_EasyFreeRTOS32",
    "version": "1.9.0",
    "sentence": "A library for ESP32's FreeRTOS in the easy way"
  },
  {
    "name": "TridentTD_Linenotify",
    "version": "3.0.6",
    "sentence": "A library for LINE Nofity"
  },
  {
    "name": "TridentTD_SimplePair",
    "version": "1.0.0",
    "sentence": "ESP8266 Simple-Pair library that exchange basic data without connecting WiFi"
  },
  {
    "name": "TrigDef",
    "version": "1.0.1",
    "sentence": "A look-up table for trig functions."
  },
  {
    "name": "Trill",
    "version": "1.1.6",
    "sentence": "A library for using the Trill family of capacitive sensors."
  },
  {
    "name": "TrimWright",
    "version": "0.10.0",
    "sentence": "UML State Machines for Arduino"
  },
  {
    "name": "Trinamic_TMC4210",
    "version": "1.0.0",
    "sentence": "Library to control Trinamic TMC4210 IC."
  },
  {
    "name": "Trioe",
    "version": "2.0.0",
    "sentence": "A comprehensive library to simplify the creation, operation, and utilization of your DIY Internet of Things devices using Trioe hardware."
  },
  {
    "name": "TrivialKalmanFilter",
    "version": "1.0.1",
    "sentence": "Trivial Kalman Filter."
  },
  {
    "name": "Troolean",
    "version": "0.1.8",
    "sentence": "Arduino Library for a three state logic data type"
  },
  {
    "name": "Troyka-IMU",
    "version": "2.0.0",
    "sentence": "Arduino library for Amperka IMU-sensor."
  },
  {
    "name": "TroykaAccelerometer",
    "version": "1.0.0",
    "sentence": "Allows you to read data from the analog accelerometer ADXL335."
  },
  {
    "name": "TroykaDHT",
    "version": "1.0.0",
    "sentence": "Allows you to read the temperature and humidity from the DHT series sensors."
  },
  {
    "name": "TroykaGPS",
    "version": "1.0.0",
    "sentence": "Allows you to read data from the GPS/GLONASS sensor module."
  },
  {
    "name": "TroykaI2CHub",
    "version": "1.0.0",
    "sentence": "Allows you to control 8-channel I²C-bus multiplexer PCA9547."
  },
  {
    "name": "TroykaLight",
    "version": "1.0.0",
    "sentence": "Allows you to read the Illuminance from the light sensor (GL5528)."
  },
  {
    "name": "TroykaThermometer",
    "version": "1.0.0",
    "sentence": "Allows you to read the temperature from the TMP36 sensor."
  },
  {
    "name": "TrueProx",
    "version": "1.0.0",
    "sentence": "Arduino library for high accuracy presence detection using analog proximity sensors."
  },
  {
    "name": "TsicSensor",
    "version": "1.0.2",
    "sentence": "Arduino library for reading TSIC temperature sensors."
  },
  {
    "name": "Tsunami",
    "version": "1.0.0",
    "sentence": "Library for interfacing with the Tsunami's hardware peripherals."
  },
  {
    "name": "TsyDMASPI",
    "version": "0.1.3",
    "sentence": "SPI library using DMA buffer for Teensy"
  },
  {
    "name": "TunePlayer",
    "version": "1.3.3",
    "sentence": "A library to decode and play simple tunes."
  },
  {
    "name": "TurnoutPulser",
    "version": "1.0.1",
    "sentence": "Control a Kato or Tomix style two-wire turnout."
  },
  {
    "name": "Tuya_BLE_MCU_SDK",
    "version": "0.0.2",
    "sentence": "Communicate with Tuya modules that have flashed the Tuya common BLE firmware."
  },
  {
    "name": "Tuya_WiFi_MCU_SDK",
    "version": "0.0.3",
    "sentence": "Communicate with Tuya modules that have flashed the Tuya common Wi-Fi firmware."
  },
  {
    "name": "Tuya_ZIGBEE_MCU_SDK",
    "version": "0.0.3",
    "sentence": "Communicate with Tuya modules that have flashed the Tuya common ZIGBEE firmware."
  },
  {
    "name": "Tuyav",
    "version": "1.2.1",
    "sentence": "Communicate with the Tuya IoT module"
  },
  {
    "name": "Tweakly",
    "version": "1.0.3",
    "sentence": "A bizarre library, with the familiarity of Wiring and the power of real-time processes, advanced pin functions, and bouncing free."
  },
  {
    "name": "Tween",
    "version": "0.4.2",
    "sentence": "Tween library for Arduino with Robert Penners easing functions"
  },
  {
    "name": "TwiBus",
    "version": "1.2.0",
    "sentence": "Scans the TWI (I2C) bus in search of connected devices addresses and data."
  },
  {
    "name": "TwiLiquidCrystal by Arnakazim",
    "version": "1.0.2",
    "sentence": "A library to interface an HD44780 based LCD via I2C (or TWI in Arduino terms)."
  },
  {
    "name": "TwitchApi",
    "version": "1.0.0",
    "sentence": "A library to wrap the Twitch API (supports ESP8266/ESP32 & others)"
  },
  {
    "name": "TwitterApi",
    "version": "1.0.0",
    "sentence": "A wrapper for the Twitter API for Arduino (supports ESP8266 & WiFi101 boards)"
  },
  {
    "name": "Two Way ESP",
    "version": "0.1.0",
    "sentence": "A simple wrapper for the ESP_NOW protocol"
  },
  {
    "name": "TwoButtonsInterface",
    "version": "1.0.4",
    "sentence": "A button library that handles two buttons interface."
  },
  {
    "name": "TwoWheelRobot",
    "version": "1.0.0",
    "sentence": "A library to make issuing simple directional commands to a two wheeled robot easier."
  },
  {
    "name": "Tympan_Library",
    "version": "3.1.1",
    "sentence": "Tympan hardware drivers and audio processing algorithms."
  },
  {
    "name": "U8g2",
    "version": "2.35.30",
    "sentence": "Monochrome LCD, OLED and eInk Library. Display controller: SSD1305, SSD1306, SSD1309, SSD1312, SSD1316, SSD1318, SSD1320, SSD1322, SSD1325, SSD1327, SSD1329, SSD1362, SSD1363, SSD1606, SSD1607, SH1106, SH1107, SH1108, SH1122, T6963, RA8835, LC7981, PCD8544, PCF8812, HX1230, UC1601, UC1604, UC1608, UC1610, UC1611, UC1617, UC1628, UC1638, UC1701, ST7302, ST7511, ST7528, ST7539, ST7565, ST7567, ST7571, ST7586, ST7588, ST75160, ST75161, ST75256, ST75320, NT7534, ST7920, IST3020, IST3088, IST7920, LD7032, KS0108, KS0713, HD44102, T7932, SSD1312, SED1330, SED1520, SBN1661, IL3820, MAX7219, GP1287, GP1247, GP1294, GU800. Interfaces: I2C, SPI, Parallel."
  },
  {
    "name": "U8g2_for_Adafruit_GFX",
    "version": "1.8.0",
    "sentence": "Add U8g2 fonts to any Adafruit GFX based graphics library."
  },
  {
    "name": "U8glib",
    "version": "1.19.1",
    "sentence": "A library for monochrome TFTs and OLEDs"
  },
  {
    "name": "U8glib-HAL",
    "version": "0.5.4",
    "sentence": "A library supporting monochrome TFTs and OLEDs, specifically for use with Marlin Firmware."
  },
  {
    "name": "U8xLaserDistance",
    "version": "1.1.0",
    "sentence": "U8 series laser distance sensor Arduino library"
  },
  {
    "name": "UARDECS Library",
    "version": "2.0.0",
    "sentence": "A library that provides communication functions conforming to UECS, a common standard for horticulture in Japan."
  },
  {
    "name": "UARDECS_MEGA Library",
    "version": "2.0.1",
    "sentence": "A library that provides communication functions conforming to UECS, a common standard for horticulture in Japan."
  },
  {
    "name": "UART_7Seg_Display",
    "version": "3.0.0",
    "sentence": "Arduino driver for BC759x series 7-segment LED display chips."
  },
  {
    "name": "UART_Keyboard",
    "version": "3.0.0",
    "sentence": "Arduino driver for BC6xxx & BC759x series chips with UART keyboard interface."
  },
  {
    "name": "UC121902-TNARX-A",
    "version": "1.0.0",
    "sentence": "Arduino library for controlling UC121902-TNARX-A LCD displays."
  },
  {
    "name": "UC1701",
    "version": "1.1.0",
    "sentence": "Library for the Industruino 128x64 LCD"
  },
  {
    "name": "UCR ESP8266",
    "version": "0.2.0",
    "sentence": "Enables an ESP8266 to be used as a WiFi output device for UCR."
  },
  {
    "name": "UCloudIoTSDK",
    "version": "0.0.1",
    "sentence": "An Arduino library for connecting ucloud iot platform made by UCloud IoT team."
  },
  {
    "name": "UHS2-MIDI",
    "version": "1.0.1",
    "sentence": "USB Host Shield Library 2.0 MIDI I/O for Arduino"
  },
  {
    "name": "UIComponents",
    "version": "1.0.2",
    "sentence": "A small toolset to simplify working with physical UI components."
  },
  {
    "name": "UIPEthernet",
    "version": "2.0.12",
    "sentence": "Ethernet library for ENC28J60"
  },
  {
    "name": "UKESF Sixth-Formers",
    "version": "2.0.2",
    "sentence": "Examples and libraries for the UKESF sixth-formers guide to the Grove Beginner kit for Arduino."
  },
  {
    "name": "ULWOS2",
    "version": "1.1.1",
    "sentence": "ULWOS2 - An Ultra LightWeight Operating System"
  },
  {
    "name": "UM RGB Touch Mini",
    "version": "1.0.0",
    "sentence": "Arduino Library for RGB Touch Mini"
  },
  {
    "name": "UMIRobot",
    "version": "22.4.0",
    "sentence": "UMIRobot library for Arduino."
  },
  {
    "name": "UMS3 Helper",
    "version": "2.0.0",
    "sentence": "Helper library for UnexpectedMaker S3 boards"
  },
  {
    "name": "UNIT_GLASS",
    "version": "0.0.1",
    "sentence": "Library for M5Stack UNIT GLASS"
  },
  {
    "name": "UNOR4WMatrixGFX",
    "version": "0.0.5",
    "sentence": "UNO R4 WIFI board Matrix CharliePlex library using Adafruit GFX"
  },
  {
    "name": "UPnP_Generic",
    "version": "3.5.0",
    "sentence": "Automatically add port mappings to router using UPnP SSDP."
  },
  {
    "name": "URLCode",
    "version": "1.0.1",
    "sentence": "Decode and Encode URL."
  },
  {
    "name": "USB Host Shield Library 2.0",
    "version": "1.7.0",
    "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library."
  },
  {
    "name": "USB-MIDI",
    "version": "1.1.2",
    "sentence": "USB-MIDI I/Os for Arduino"
  },
  {
    "name": "USBBlaster",
    "version": "1.0.1",
    "sentence": "USB Blaster emulation for Arduino boards"
  },
  {
    "name": "USBControllerLib",
    "version": "1.0.0",
    "sentence": "Arduino library for communication between USB controller and Arduino."
  },
  {
    "name": "USBHID",
    "version": "0.63.0",
    "sentence": "USB HID / MIDI / mass storage library for STM32F1"
  },
  {
    "name": "USBHost",
    "version": "1.0.5",
    "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives."
  },
  {
    "name": "USBMIDI",
    "version": "1.1.6",
    "sentence": "USB MIDI library for Arduino."
  },
  {
    "name": "USBPause",
    "version": "2.0.0",
    "sentence": "Pause and restore USB interrupts"
  },
  {
    "name": "USBPowerDelivery",
    "version": "1.0.4",
    "sentence": "USB Power Delivery for Arduino."
  },
  {
    "name": "USBStatus",
    "version": "1.0.0",
    "sentence": "Allows an Atmega32u4 based Arduino board to detect if the host, it is connected to, is active or shut down."
  },
  {
    "name": "USIWire",
    "version": "0.2.0",
    "sentence": "USI based TWI/I2C library for Arduino"
  },
  {
    "name": "UTF8 Print AdaGfx",
    "version": "1.0.2",
    "sentence": "Extends Adafruit GFX library family for printing UTF8 chara code"
  },
  {
    "name": "UTF8ToGB2312",
    "version": "1.1.52",
    "sentence": "A library that converts UTF-8 string to GB2312 string."
  },
  {
    "name": "UTFT_SdRaw",
    "version": "1.2.4",
    "sentence": "A library that adds high speed image drawing functions from SD to UTFT."
  },
  {
    "name": "UUID",
    "version": "0.1.6",
    "sentence": "Arduino library for generating UUID's. (experimental)."
  },
  {
    "name": "Ubidots Arduino YUN",
    "version": "2.0.0",
    "sentence": "Ubidots library for the Arduino YUN"
  },
  {
    "name": "Ubidots FONA Library",
    "version": "1.1.0",
    "sentence": "Ubidots library for the Adafruit FONA"
  },
  {
    "name": "Ubidots GPRS Library",
    "version": "4.0.1",
    "sentence": "Ubidots library for the GPRS module SIM900"
  },
  {
    "name": "Ubidots MQTT for ESP32 and ESP8266",
    "version": "1.0.12",
    "sentence": "Library for sending data to the Ubidots cloud using ESP8266 based systems"
  },
  {
    "name": "Ubidots MQTT for ESP8266",
    "version": "1.1.0",
    "sentence": "Library for sending data to the Ubidots cloud using ESP8266 based systems"
  },
  {
    "name": "UbidotsXLR8",
    "version": "1.1.0",
    "sentence": "Ubidots library for an XLR8 board with a WINC1500"
  },
  {
    "name": "UbxGps",
    "version": "1.5.2",
    "sentence": "A library for the fastest and simplest communication with u-blox GPS modules."
  },
  {
    "name": "Ucglib",
    "version": "1.5.2",
    "sentence": "True color TFT and OLED library, Up to 18 Bit color depth. Supported display controller: ST7735, ILI9163, ILI9325, ILI9341, ILI9486,LD50T6160, PCF8833, SEPS225, SSD1331, SSD1351, HX8352C."
  },
  {
    "name": "Ufox",
    "version": "1.1.0",
    "sentence": "Ufox devkit Sigfox RC4."
  },
  {
    "name": "UiUiUi",
    "version": "0.9.2",
    "sentence": "Library for complex user interfaces with automatic layouting and completely static data structures."
  },
  {
    "name": "Ulm_Weatherballoon",
    "version": "0.2.5",
    "sentence": "Library for high altitude applications."
  },
  {
    "name": "UltiBlox-ActiveThreshold",
    "version": "1.1.4",
    "sentence": "Library for threshold-based activation with callbacks."
  },
  {
    "name": "UltiBlox-DisplayValueLCD",
    "version": "1.1.6",
    "sentence": "A library for controlling 16x2 LCD displays with I2C."
  },
  {
    "name": "UltiBlox-DisplayValueNull",
    "version": "1.1.4",
    "sentence": "A library that provides no-operation implementations for display functions."
  },
  {
    "name": "UltiBlox-DisplayValueOLED",
    "version": "1.1.4",
    "sentence": "A library for controlling OLED displays using I2C."
  },
  {
    "name": "UltiBlox-Examples",
    "version": "1.1.10",
    "sentence": "A collection of example sketches for the UltiBlox library suite."
  },
  {
    "name": "UltiBlox-LCDI2C",
    "version": "2.0.8",
    "sentence": "A versatile library for managing I2C LCD displays."
  },
  {
    "name": "UltiBlox-SensorAnalog",
    "version": "1.1.7",
    "sentence": "A library for reading and calibrating analog sensors."
  },
  {
    "name": "UltiBlox-SerialCommands",
    "version": "1.0.6",
    "sentence": "Arduino library for parsing and handling serial commands."
  },
  {
    "name": "UltiBlox-SerialLogger",
    "version": "1.1.9",
    "sentence": "A lightweight logging library for Arduino"
  },
  {
    "name": "Ultimate_ESP_MQTT_Ubidots",
    "version": "1.0.3",
    "sentence": "WifiManager, ESP HTTP Update, Ubidots MQTT packaged in 1 library"
  },
  {
    "name": "UltraDistSensor",
    "version": "1.1.0",
    "sentence": "Interface the HC-SR04 sensor and ping sensor to Arduino."
  },
  {
    "name": "UltraSonic_Lib",
    "version": "1.0.0",
    "sentence": "A library for UltraSonic distance sensor."
  },
  {
    "name": "Ultrasonic",
    "version": "3.0.0",
    "sentence": "Minimalist library for ultrasound module to Arduino"
  },
  {
    "name": "UltrasonicHCSR04",
    "version": "1.0.0",
    "sentence": "Driver class to control HC-SR04 Ultrasonic Distance Sensor."
  },
  {
    "name": "UltrasonicSensor",
    "version": "1.1.0",
    "sentence": "Allows Arduino/Genuino boards to simplify the use of the Ultrasonic Sensor."
  },
  {
    "name": "Ultrasonic_hc_sr04",
    "version": "0.5.0",
    "sentence": "A library to use an HC-SR04 ultrasonic sensor"
  },
  {
    "name": "UncleRus",
    "version": "1.0.1",
    "sentence": "Uncle Rus' device drivers"
  },
  {
    "name": "Unified Log",
    "version": "0.1.0",
    "sentence": "Unified Log for Serial, MQTT, etc. output."
  },
  {
    "name": "Unishox Progmem Decompressor",
    "version": "1.0.0",
    "sentence": "Decompress short Unicode strings and messages compressed using Unishox technique and save space on Flash (PROGMEM)"
  },
  {
    "name": "Unistep2",
    "version": "1.0.0",
    "sentence": "A non-blocking Arduino library for controlling 28BYJ-48 stepper motors."
  },
  {
    "name": "Units",
    "version": "0.0.1",
    "sentence": "Arduino library for unit conversion"
  },
  {
    "name": "Universal Inputs",
    "version": "2.1.0",
    "sentence": "Arduino library for reading multiple input devices of different types."
  },
  {
    "name": "UniversalTelegramBot",
    "version": "1.3.0",
    "sentence": "Arduino Telegram Bot library for multiple different architectures."
  },
  {
    "name": "UniversalTimer",
    "version": "1.0.0",
    "sentence": "Easy to use, multifunctional and non-blocking timer."
  },
  {
    "name": "UniversalTransmitter",
    "version": "0.0.1",
    "sentence": "Customizable Teensy/Arduino handheld controller for RC projects"
  },
  {
    "name": "UnixTime",
    "version": "1.1.0",
    "sentence": "Unix time stamp to date time conversion and vice versa"
  },
  {
    "name": "Uno WiFi Developer Edition Serial1",
    "version": "1.0.5",
    "sentence": "Implements Serial1 of Arduino Uno WiFi Developer Edition board to access the on-board ESP8266"
  },
  {
    "name": "UnoCar",
    "version": "1.1.2",
    "sentence": "A library for controlling the car with Arduino Uno"
  },
  {
    "name": "Uno_HUB75_Driver",
    "version": "0.9.1",
    "sentence": "Minimal HUB75 LED Matrix Library for Uno"
  },
  {
    "name": "UnorderedMap",
    "version": "1.0.0",
    "sentence": "A Wrapper Library that is built on the Hashtable Library. The Eventual plan is to add more functionality to the library."
  },
  {
    "name": "UpbeatLabs MCP39F521",
    "version": "2.0.0",
    "sentence": "Library for Dr. Wattson Energy Monitoring Board using Microchip MCP39F521"
  },
  {
    "name": "Uptime",
    "version": "1.0.0",
    "sentence": "Get the device uptime in years, months, days, hours, minutes, seconds, milliseconds, total days, and total seconds."
  },
  {
    "name": "Uptime Library",
    "version": "1.0.0",
    "sentence": "Uptime library for Arduino boards and compatible systems"
  },
  {
    "name": "UrlEncode",
    "version": "1.0.1",
    "sentence": "Simple URL encoder (also known as percent encoding)"
  },
  {
    "name": "UselessLib",
    "version": "1.0.0",
    "sentence": "This library is just for testing purpose of the Arduino Library indexer."
  },
  {
    "name": "UserManager",
    "version": "1.0.3",
    "sentence": "a demo for user manager"
  },
  {
    "name": "Utilities",
    "version": "0.4.6",
    "sentence": "A library that makes using Arduino a breeze."
  },
  {
    "name": "Utils",
    "version": "1.0.2",
    "sentence": "Utility functions and macros to print with arguments"
  },
  {
    "name": "UtilsBoards",
    "version": "1.0.2",
    "sentence": "Auxiliary library to uniform the usage of the WiFi and I2C across different boards"
  },
  {
    "name": "VCNL3040 Proximity Sensor Library",
    "version": "0.1.0",
    "sentence": "Code for Vishay VCNL3040 Proximity sensor"
  },
  {
    "name": "VCNL36687",
    "version": "1.0.0",
    "sentence": "Arduino library for the VCNL36687 Proximity Sensor with VCSEL"
  },
  {
    "name": "VCNL4010",
    "version": "1.1.0",
    "sentence": "Arduino library to control the Vishay VCNL4010 proximity and ambient light sensor using I2C."
  },
  {
    "name": "VEDirect",
    "version": "1.0.3",
    "sentence": "A library for interfacing with Victron VE.Direct Hex protocol"
  },
  {
    "name": "VEGAIoT_BusIO",
    "version": "1.0.0",
    "sentence": "This is a library for abstracting away UART, I2C and SPI interfacing"
  },
  {
    "name": "VEGA_ArduinoBLE",
    "version": "1.0.0",
    "sentence": "Enables Bluetooth® Low Energy connectivity on the VEGA ARIES Boards, Arduino MKR WiFi 1010, Arduino UNO WiFi Rev.2, Arduino Nano 33 IoT, Arduino Nano 33 BLE, Nicla Sense ME and UNO R4 WiFi."
  },
  {
    "name": "VEGA_BMI088",
    "version": "1.0.0",
    "sentence": "Library for communicating with the Bosch BMI088 6 axis IMU."
  },
  {
    "name": "VEGA_ChainableLED",
    "version": "1.0.0",
    "sentence": "Arduino library to control Grove - Chainable RGB LED v2.0"
  },
  {
    "name": "VEGA_FirebaseArduino",
    "version": "1.0.1",
    "sentence": "Library for communicating with Firebase."
  },
  {
    "name": "VEGA_IRremote",
    "version": "1.0.0",
    "sentence": "Send and receive infrared signals with multiple protocols"
  },
  {
    "name": "VEGA_MAX30100",
    "version": "1.0.0",
    "sentence": "The MAX30100 is a pulse oximeter for heart beat and SPO2 measurements."
  },
  {
    "name": "VEGA_MAX30102",
    "version": "1.0.0",
    "sentence": "Maxim-IC MAX30100 heart-rate sensor driver and pulse-oximetry components"
  },
  {
    "name": "VEGA_MLX90614",
    "version": "1.0.0",
    "sentence": "The MLX90614 is an infrared thermometer for non-contact temperature measurements."
  },
  {
    "name": "VEGA_SH1106",
    "version": "1.0.0",
    "sentence": "This is a library for 1.3 inch XFP1116-07A Y OLED displays."
  },
  {
    "name": "VEGA_ST7735_and_ST7789",
    "version": "1.0.0",
    "sentence": "This is a library for the Adafruit ST7735 and ST7789 SPI displays."
  },
  {
    "name": "VEGA_SoftwareSerial",
    "version": "1.0.0",
    "sentence": "Enables serial communication on any digital pin."
  },
  {
    "name": "VEGA_WiFiNINA",
    "version": "1.0.1",
    "sentence": "Enables network connection (local and Internet) with VEGA ARIES IoT, ARIES v2, ARIES v3, ARIES MICRO"
  },
  {
    "name": "VEML6040",
    "version": "0.3.2",
    "sentence": "A library for Vishay's VEML6040 RGBW Color Sensor"
  },
  {
    "name": "VEML6070",
    "version": "1.1.0",
    "sentence": "A library for communication with VEML6070 UV sensor."
  },
  {
    "name": "VEML6075",
    "version": "1.0.1",
    "sentence": "An Arduino Library Specifically for the ESP32."
  },
  {
    "name": "VGAX",
    "version": "1.2.0",
    "sentence": "VGA signal generator for UNO and MEGA"
  },
  {
    "name": "VGAXUA",
    "version": "1.0.0",
    "sentence": "VGA UART signal generator for UNO and MEGA"
  },
  {
    "name": "VIDI-X_BQ24295",
    "version": "1.1.0",
    "sentence": "Allows ESP32 boards to control a BQ24295 battery charger."
  },
  {
    "name": "VL53L0X",
    "version": "1.3.1",
    "sentence": "VL53L0X distance sensor library"
  },
  {
    "name": "VL53L0X_mod",
    "version": "1.0.1",
    "sentence": "VL53L0X distance sensor library - non blocking pololu fork -"
  },
  {
    "name": "VL53L1X",
    "version": "1.3.1",
    "sentence": "VL53L1X distance sensor library"
  },
  {
    "name": "VL53L1X_ULD",
    "version": "1.2.3",
    "sentence": "Library for interaction with the time of flight sensor VL53L1X"
  },
  {
    "name": "VL6180X",
    "version": "1.4.0",
    "sentence": "VL6180X distance and ambient light sensor library"
  },
  {
    "name": "VL6180X_WE",
    "version": "1.1.8",
    "sentence": "A library for the VL6180X range and ambient light sensor."
  },
  {
    "name": "VMA11",
    "version": "1.0.0",
    "sentence": "The library for the Velleman VMA11 FM stereo arduino shield and the MM100 mini-module."
  },
  {
    "name": "VNCL4020C-Arduino",
    "version": "1.0.0",
    "sentence": "Library to use Vishay VNCL4020C PPG sensor"
  },
  {
    "name": "VNH3SP30",
    "version": "1.0.1",
    "sentence": "Library for the VNH3SP30 and VNH5019A-E motor controllers (H-bridge motor driver)"
  },
  {
    "name": "VRPC",
    "version": "3.0.0",
    "sentence": "Asynchronous RPC via MQTT"
  },
  {
    "name": "VS1053 for use with SdFat",
    "version": "1.3.0",
    "sentence": "Device library interfacing VS1053 MP3 player chip to Sd Card."
  },
  {
    "name": "VSCP",
    "version": "2.3.0",
    "sentence": "Very Simple Control Protocol L1 framework for all Arduino boards."
  },
  {
    "name": "VT100",
    "version": "1.0.0",
    "sentence": "Library to control a VT100 terminal via an Arduino"
  },
  {
    "name": "VanBus",
    "version": "0.4.1",
    "sentence": "Vehicle Area Network (VAN) bus packet reader/writer."
  },
  {
    "name": "VariableTimedAction",
    "version": "1.3.1",
    "sentence": "A library for creating timed events/actions."
  },
  {
    "name": "Variant",
    "version": "1.0.0",
    "sentence": "A template-based Variant class that supports single values and dynamic lists using ArrayList or SimpleVector."
  },
  {
    "name": "Vcc",
    "version": "2.2.0",
    "sentence": "Measure supply voltage (using optinally stored calibration value)"
  },
  {
    "name": "Vector",
    "version": "1.2.2",
    "sentence": "An array container similar to the C++ std::vector"
  },
  {
    "name": "Vector datatype",
    "version": "1.3.1",
    "sentence": "Library for 3d vectors and quaternions"
  },
  {
    "name": "VectorDisplay",
    "version": "0.35.1",
    "sentence": "Support a vector display via USB serial, WiFI or Bluetooth"
  },
  {
    "name": "VectorXf",
    "version": "0.1.0",
    "sentence": "Vector class 2f, 3f, 4f (port of ofVecXf (openFrameworks))"
  },
  {
    "name": "VernierLib",
    "version": "1.0.6",
    "sentence": "Library to read Vernier LabQuest sensors with a Vernier Arduino Interface Shield."
  },
  {
    "name": "VersatileSwitch",
    "version": "1.1.0",
    "sentence": "Arduino library for debouncing momeantary switches, detect press, release, single and double-click, long-click and repeat event."
  },
  {
    "name": "Versatile_RotaryEncoder",
    "version": "1.3.1",
    "sentence": "A rotary encoder library that allows the callback of up to 10 different functions representing the same number of different encoder events. These different functions can be associated with events like press rotate and long press among many others."
  },
  {
    "name": "VescMotorController",
    "version": "1.1.0",
    "sentence": "Arduino library for the Vesc Motor Controller to control two motors via the Arduino."
  },
  {
    "name": "Vibration",
    "version": "0.2.0",
    "sentence": "Arduino library for a vibration / tilt sensor."
  },
  {
    "name": "VibrationMotor",
    "version": "0.1.0",
    "sentence": "The Arduino VibrationMotor library provides a simple and modular way to manage a vibration motor connected to an Arduino board."
  },
  {
    "name": "VidorGraphics",
    "version": "1.1.0",
    "sentence": "Provides graphical functionalities on MKR Vidor 4000"
  },
  {
    "name": "VidorPeripherals",
    "version": "1.1.0",
    "sentence": "Provides extended IO functionalities and interfaces"
  },
  {
    "name": "ViewMarq",
    "version": "1.0.1",
    "sentence": "Library to communicate with ViewMarq LED Message Displays."
  },
  {
    "name": "ViraLink-MQTT-Client",
    "version": "0.1.0",
    "sentence": "ViraLink IoT Cloud Platform MQTT Client for ESP82266/ESP32."
  },
  {
    "name": "Virtual Joystick for LVGL",
    "version": "1.0.0",
    "sentence": "Joystick library supporting ESP-IDF and Arduino."
  },
  {
    "name": "VirtualButton",
    "version": "1.1.0",
    "sentence": "Library for advanced button operation for Arduino"
  },
  {
    "name": "VirtualScreen",
    "version": "2.0.2",
    "sentence": "Automatically span GFX Adafruit graphics functions across multiple screens"
  },
  {
    "name": "VirtualTherm",
    "version": "1.0.0",
    "sentence": "Calculates RTD thermometers' resistance for given temperatures."
  },
  {
    "name": "Virtuino",
    "version": "1.8.0",
    "sentence": "Required for communication with Virtuino app"
  },
  {
    "name": "Virtuino library for STM32 boards",
    "version": "1.6.3",
    "sentence": "Required for communication with Virtuino app"
  },
  {
    "name": "Virtuino library for all ESP8266 and ESP32 boards",
    "version": "1.7.2",
    "sentence": "Required for communication with Virtuino app"
  },
  {
    "name": "VirtuinoCM",
    "version": "1.0.2",
    "sentence": "Required for communication with Virtuino app"
  },
  {
    "name": "Vishay_VCNL4200",
    "version": "1.2.0",
    "sentence": "Vishay VCNL4200 Long Range Proximity and Ambilent Light Sensor."
  },
  {
    "name": "VitconCommon",
    "version": "1.0.4",
    "sentence": "A library package commonly used by the other libraries being published by vitcon"
  },
  {
    "name": "VitconIOT",
    "version": "1.1.2",
    "sentence": "A library for interfacing arduino device with VITCON IoT service."
  },
  {
    "name": "VitconLink",
    "version": "1.0.1",
    "sentence": "A library package for interfacing the microcontroller with VITCON Link modules."
  },
  {
    "name": "VitconMQTT",
    "version": "1.0.1",
    "sentence": "A library for interfacing arduino-based device with MQTT using VITCON WIFI-LINK."
  },
  {
    "name": "VivicoreSerial",
    "version": "3.2.0+07000013",
    "sentence": "Library to talk with VIVIWARE Cell Core."
  },
  {
    "name": "VizIoTMqttClient",
    "version": "1.0.1",
    "sentence": "A client library for connect to MQTT server VizIoT.com."
  },
  {
    "name": "VolAnalyzer",
    "version": "1.9.0",
    "sentence": "Library for sound amplitude analysis"
  },
  {
    "name": "VoltLora",
    "version": "1.0.2",
    "sentence": "Simplifies LoRa communication using AT commands."
  },
  {
    "name": "Voltage Reference",
    "version": "1.2.2",
    "sentence": "Arduino voltage reference library"
  },
  {
    "name": "Voltmeter",
    "version": "1.0.0",
    "sentence": "Calculates the voltage from voltmeter modules based on voltage divider concept."
  },
  {
    "name": "Volume",
    "version": "1.1.2",
    "sentence": "Gives tone functionality with 8 bit volume control with no extra parts"
  },
  {
    "name": "Volume 3",
    "version": "1.0.0",
    "sentence": "Gives tone functionality with 10-bit volume control with no extra parts!"
  },
  {
    "name": "Volume2",
    "version": "1.0.0",
    "sentence": "Gives tone() functionality with multiple waveforms and 8-bit volume control - with no extra parts!"
  },
  {
    "name": "VolumeConverter",
    "version": "0.1.1",
    "sentence": "Arduino library to convert volume units."
  },
  {
    "name": "Vrekrer SCPI parser",
    "version": "0.5.0",
    "sentence": "Simple SCPI parser for Arduino"
  },
  {
    "name": "Vulintus_ATWINC3400",
    "version": "0.1.0",
    "sentence": "WiFi and BLE driver for ATMEL WINC3400 module"
  },
  {
    "name": "W3bstreamClient",
    "version": "1.0.1",
    "sentence": "A W3bstream client for Arduino"
  },
  {
    "name": "WBIOExtMini",
    "version": "0.1.2",
    "sentence": "Library for the Lualtek WisBlock IO Extension Mini board"
  },
  {
    "name": "WD Easy",
    "version": "1.0.1",
    "sentence": "WD timer"
  },
  {
    "name": "WEDO 2.0 BLE for ESP32",
    "version": "1.0.0",
    "sentence": "A library that supports to use BLE to connect and cotnrol the wedo2.0"
  },
  {
    "name": "WIOTerminal_WiFiManager",
    "version": "1.2.1",
    "sentence": "SAMD51 WIO-Terminal MultiWiFi Connection Manager with enhanced GUI and fallback web ConfigPortal"
  },
  {
    "name": "WMM_Tinier",
    "version": "1.0.1",
    "sentence": "An adaptation of the miniwinwm/WMM_Tiny code for calculating magnetic variation."
  },
  {
    "name": "WMS7202",
    "version": "1.0.0",
    "sentence": "A library for the WMS7202 digital potentiometer."
  },
  {
    "name": "WPI430-VMA430 GPS",
    "version": "2.0.0",
    "sentence": "Velleman WPI430-VMA430 GPS module library"
  },
  {
    "name": "WS2812 Lib for Air001",
    "version": "1.0.0",
    "sentence": "An Arduino library for WS2812 led on Air.<br />"
  },
  {
    "name": "WS2812Capture",
    "version": "1.0.0",
    "sentence": "Capture and Analyze Timing of WS2812 LED Data"
  },
  {
    "name": "WS2812FX",
    "version": "1.4.5",
    "sentence": "WS2812 FX Library for Arduino and ESP microprocessors."
  },
  {
    "name": "WSN_RFM69",
    "version": "1.0.1",
    "sentence": "This is a library for developing Wireless Sensor Network using RFM69 LowPowerLab Library."
  },
  {
    "name": "WTV020SD16P",
    "version": "1.4.0",
    "sentence": "Arduino library for the WTV020-SD-16P sound module"
  },
  {
    "name": "WZ Library",
    "version": "1.0.0",
    "sentence": "Arduino library for Dart WZ-S and Prosense WZ-H3 formaldehyde sensors."
  },
  {
    "name": "WakeOnLan",
    "version": "1.1.7",
    "sentence": "Generate and send Wake On Lan (WOL) packet over UDP protocol."
  },
  {
    "name": "WalterModem",
    "version": "0.1.2",
    "sentence": "The LTE (NB-IoT and LTE-M) and GNSS library to use with Walter."
  },
  {
    "name": "WarmCat6x14backpack",
    "version": "0.9.3",
    "sentence": "Library for the WarmCat i2c 6x14 segment alphanumeric display backpack"
  },
  {
    "name": "Wasm3",
    "version": "0.5.0",
    "sentence": "The fastest WebAssembly interpreter (and the most universal runtime)"
  },
  {
    "name": "Watch",
    "version": "1.0.0",
    "sentence": "A library that makes working with watch-like formats easy."
  },
  {
    "name": "WatchDog",
    "version": "1.2.0",
    "sentence": "WatchDog Timer Functions"
  },
  {
    "name": "Watchdog",
    "version": "3.0.2",
    "sentence": "Watchdog resets the device if the timer expires before the watchdog is reset."
  },
  {
    "name": "Watchy",
    "version": "1.4.14",
    "sentence": "Watchy - An Open Source E-Paper Watch by SQFMI"
  },
  {
    "name": "WaterFlow",
    "version": "1.2.0",
    "sentence": "WaterFlow library for Arduino"
  },
  {
    "name": "WaterMix",
    "version": "0.1.3",
    "sentence": "Arduino library for mixing water with different temperatures."
  },
  {
    "name": "Watermeter",
    "version": "1.0.9",
    "sentence": "Control Library for reed switch pulse actuated water meters such as the DAE Water Meter Model V-100P"
  },
  {
    "name": "Waterproof_Ultrasonic",
    "version": "1.0.0",
    "sentence": "Waterproof_Ultrasonic library for AJ-SR-04M or JSN-SR04."
  },
  {
    "name": "WaveHC",
    "version": "1.0.5",
    "sentence": "WaveHC wave shield library"
  },
  {
    "name": "WaveMix",
    "version": "0.1.4",
    "sentence": "Arduino library to mix two signals (A and B) with an adaptive weight."
  },
  {
    "name": "Waveshare 4 Inch Tft Touchscreen",
    "version": "1.0.3",
    "sentence": "Graphics and touchscreen driver for Waveshare 4 inch touch screen (SKU 13587)"
  },
  {
    "name": "Waveshare ILI9486",
    "version": "2.0.0",
    "sentence": "Waveshare ILI9486 SPI driver for Arduino"
  },
  {
    "name": "Waveshare_ST7262_LVGL",
    "version": "0.1.0",
    "sentence": "Waveshare_ST7262_LVGL is an Arduino library designed for Waveshare ESP32-S3 SOC with 7 inch ST7262 LCD and GT911 touchscreen to facilitate rapid GUI development using LVGL."
  },
  {
    "name": "WearLeveling",
    "version": "1.0.0",
    "sentence": "EEPROMWearLevel reduces EEPROM wear by writting a new value to an other EEPROM location."
  },
  {
    "name": "WeatherFlowAPI",
    "version": "1.1.0",
    "sentence": "Easy access to network WeatherFlow data."
  },
  {
    "name": "WeatherMeters",
    "version": "2.0.2",
    "sentence": "Weather Meters library"
  },
  {
    "name": "WeatherStationDataRx",
    "version": "0.5.0",
    "sentence": "Library for reading data from radio weather stations"
  },
  {
    "name": "Web3JBC",
    "version": "0.2.0",
    "sentence": "Web3/Smart Contract for JBC Chain"
  },
  {
    "name": "WebConfig",
    "version": "1.4.2",
    "sentence": "A web based configuration editor."
  },
  {
    "name": "WebConsole",
    "version": "1.0.2",
    "sentence": "Console for Arduino to handle a simple Web Console for output and input."
  },
  {
    "name": "WebMonitor",
    "version": "0.4.3",
    "sentence": "Web Monitor Library for ESP8266 & ESP32"
  },
  {
    "name": "WebSerial",
    "version": "2.0.8",
    "sentence": "Remote terminal for wireless microcontrollers"
  },
  {
    "name": "WebSerialLite",
    "version": "2.3.0",
    "sentence": "A Web based Serial Monitor for ESP8266 & ESP32 to debug your code remotely."
  },
  {
    "name": "WebServerFileUpload",
    "version": "1.0.0",
    "sentence": "A library for handling web server file uploads."
  },
  {
    "name": "WebServer_ESP32_ENC",
    "version": "1.5.3",
    "sentence": "Simple Ethernet WebServer, HTTP/HTTPS Client wrapper library for ESP32 boards using ENC28J60 with LwIP Ethernet library."
  },
  {
    "name": "WebServer_ESP32_SC_ENC",
    "version": "1.2.1",
    "sentence": "Simple Ethernet WebServer, HTTP/HTTPS Client wrapper library for ESP32S2/S3/C3 boards using LwIP ENC28J60 Ethernet library."
  },
  {
    "name": "WebServer_ESP32_SC_W5500",
    "version": "1.2.1",
    "sentence": "Simple Ethernet WebServer, HTTP/HTTPS Client wrapper library for ESP32S2/S3/C3 boards using LwIP W5500 Ethernet library."
  },
  {
    "name": "WebServer_ESP32_SC_W6100",
    "version": "1.2.1",
    "sentence": "Simple Ethernet WebServer, HTTP/HTTPS Client wrapper library for ESP32S2/S3/C3 boards using LwIP W6100 Ethernet library."
  },
  {
    "name": "WebServer_ESP32_W5500",
    "version": "1.5.3",
    "sentence": "Simple Ethernet WebServer, HTTP/HTTPS Client wrapper library for ESP32 boards using W5500 with LwIP Ethernet library."
  },
  {
    "name": "WebServer_ESP32_W6100",
    "version": "1.5.3",
    "sentence": "Simple Ethernet WebServer, HTTP/HTTPS Client wrapper library for ESP32 boards using W6100 with LwIP Ethernet library."
  },
  {
    "name": "WebServer_WT32_ETH01",
    "version": "1.5.1",
    "sentence": "Simple Ethernet WebServer, HTTP/HTTPS Client wrapper library for WT32_ETH01 boards using LAN8720 Ethernet."
  },
  {
    "name": "WebSocketStreamClient",
    "version": "0.1.0",
    "sentence": "A WebSocketClient that can be used with PubCubClient for MQTT over WebSockets."
  },
  {
    "name": "WebSockets",
    "version": "2.6.1",
    "sentence": "WebSockets for Arduino (Server + Client)"
  },
  {
    "name": "WebSockets2_Generic",
    "version": "1.13.2",
    "sentence": "A WebSocket Server and Client library for Arduino, based on RFC6455, for writing modern Websockets applications."
  },
  {
    "name": "WebSockets_Generic",
    "version": "2.16.1",
    "sentence": "RFC6455-based WebSockets Server and Client for Arduino boards, such as nRF52, Portenta_H7, SAMD21, SAMD51, STM32F/L/H/G/WB/MP1, Teensy, SAM DUE, RP2040-based boards, besides ESP8266/ESP32 (ESP32, ESP32_S2, ESP32_S3 and ESP32_C3) and WT32_ETH01. Ethernet shields W5100, W5200, W5500, ENC28J60, Teensy 4.1 NativeEthernet/QNEthernet or Portenta_H7 WiFi/Ethernet. Supporting websocket only mode for Socket.IO. Ethernet_Generic library is used as default for W5x00. Now supporting RP2040W"
  },
  {
    "name": "WebTerminal",
    "version": "1.0.2",
    "sentence": "View Serial output in web browser"
  },
  {
    "name": "Webbino",
    "version": "20160709.0.0",
    "sentence": "Advanced webserver for Arduino"
  },
  {
    "name": "WeeklyAlarm",
    "version": "5.0.0",
    "sentence": "weekday timer ( thermostat like scheduler )"
  },
  {
    "name": "Wemos Matrix Adafruit GFX",
    "version": "1.4.0",
    "sentence": "Library for the WEMOS Matrix LED Shield that implements the Adafruit GFX Library"
  },
  {
    "name": "Whadda LED bar graph",
    "version": "1.0.0",
    "sentence": "Whadda WPI471 bar graph module library"
  },
  {
    "name": "WhareHauoraWiFiManager",
    "version": "0.15.0",
    "sentence": "ESP8266 WiFi Connection manager with fallback web configuration portal"
  },
  {
    "name": "WiFi",
    "version": "1.2.7",
    "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield."
  },
  {
    "name": "WiFi Link",
    "version": "1.0.1",
    "sentence": "Enables network connection (local and Internet) using the Arduino WiFi Boards."
  },
  {
    "name": "WiFi Picker",
    "version": "1.1.0",
    "sentence": "Allows an user to dynamically add and remove saved WiFi APs."
  },
  {
    "name": "WiFi101",
    "version": "0.16.1",
    "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)"
  },
  {
    "name": "WiFi101OTA",
    "version": "1.0.2",
    "sentence": "Update sketches on your board over WiFi"
  },
  {
    "name": "WiFi101_Generic",
    "version": "1.0.0",
    "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards). Modified from Arduino WiFi101 library."
  },
  {
    "name": "WiFiConnect",
    "version": "1.0.1",
    "sentence": "A WiFi Manager for ESP8266 or ESP32 with OLED support"
  },
  {
    "name": "WiFiConnect Lite",
    "version": "1.0.0",
    "sentence": "A simple WiFi Connection Manager (captive portal) for the ESP8266 or ESP32."
  },
  {
    "name": "WiFiConnector",
    "version": "1.0.4",
    "sentence": "Async WiFi connector auto with backup AP for esp8266/32"
  },
  {
    "name": "WiFiEsp",
    "version": "2.2.2",
    "sentence": "Arduino WiFi library for ESP8266"
  },
  {
    "name": "WiFiEspAT",
    "version": "1.5.0",
    "sentence": "Enables network connection with esp8266 or esp32 as network adapter."
  },
  {
    "name": "WiFiMQTTManager Library",
    "version": "1.0.1-beta",
    "sentence": "ESP32/ESP8266 library for managing your IoT devices"
  },
  {
    "name": "WiFiMan",
    "version": "1.4.3",
    "sentence": "WiFiMan and ESP8266OTA"
  },
  {
    "name": "WiFiManager",
    "version": "2.0.17",
    "sentence": "WiFi Configuration manager with web configuration portal for Espressif ESPx boards, by tzapu"
  },
  {
    "name": "WiFiManagerDesign",
    "version": "0.0.4",
    "sentence": "Change the design of the WiFiManager."
  },
  {
    "name": "WiFiManagerTz",
    "version": "1.3.3",
    "sentence": "A NTP/Timezone extension to @tzapu's WiFiManager"
  },
  {
    "name": "WiFiManager_Generic_Lite",
    "version": "1.8.0",
    "sentence": "Light-Weight MultiWiFi/Credentials Manager for Teensy, SAM DUE, SAMD21, SAMD51, STM32F/L/H/G/WB/MP1, nRF52, RTL8720, etc. boards running Generic WiFi (WiFiNINA, WiFi101, ESP8266-AT, ESP32-AT, etc.) modules/shields. Powerful-yet-simple-to-use feature to enable adding dynamic custom parameters."
  },
  {
    "name": "WiFiManager_NINA_Lite",
    "version": "1.7.1",
    "sentence": "Light-Weight MultiWiFi/Credentials Manager for AVR Mega, Teensy, SAM DUE, SAMD21, SAMD51, STM32F/L/H/G/WB/MP1, nRF52, RP2040-based (Nano RP2040 Connect, RASPBERRY_PI_PICO) boards, etc. using u-blox WiFiNINA / WiFi101 modules/shields. Powerful-yet-simple-to-use feature to enable adding dynamic custom parameters."
  },
  {
    "name": "WiFiManager_Portenta_H7_Lite",
    "version": "1.6.0",
    "sentence": "Light-Weight MultiWiFi/Credentials Manager for Portenta_H7 boards using built-in WiFi (Murata) modules/shields. Powerful-yet-simple-to-use feature to enable adding dynamic custom parameters."
  },
  {
    "name": "WiFiManager_RP2040W",
    "version": "1.0.0",
    "sentence": "MultiWiFi/Credentials Manager for RP2040W boards using built-in CYW43439 WiFi. Powerful-yet-simple-to-use feature to enable adding dynamic custom parameters."
  },
  {
    "name": "WiFiManager_RP2040W_Lite",
    "version": "1.6.0",
    "sentence": "Light-Weight MultiWiFi/Credentials Manager for RP2040W boards using built-in CYW43439 WiFi. Powerful-yet-simple-to-use feature to enable adding dynamic custom parameters."
  },
  {
    "name": "WiFiManager_RTL8720",
    "version": "1.2.0",
    "sentence": "Light-Weight MultiWiFi/Credentials Manager for Realtek RTL8720DN, RTL8722DM, RTM8722CSM, etc. boards. Powerful-yet-simple-to-use feature to enable adding dynamic custom parameters."
  },
  {
    "name": "WiFiMulti_Generic",
    "version": "1.2.2",
    "sentence": "Simple MultiWiFi library to adapt ESP32/ESP8266 MultiWiFi of WiFi libraries to all other WiFi modules and libraries."
  },
  {
    "name": "WiFiNINA",
    "version": "1.9.0",
    "sentence": "Enables network connection (local and Internet) with the Arduino MKR WiFi 1010, Arduino MKR VIDOR 4000, Arduino Uno WiFi Rev.2 and Nano 33 IoT."
  },
  {
    "name": "WiFiNINA_Generic",
    "version": "1.8.15-1",
    "sentence": "Enables network connection (local and Internet) and WiFiStorage for SAM DUE, SAMD21, SAMD51, Teensy, AVR (328P, 32u4, 16u4, etc.), Mega, STM32F/L/H/G/WB/MP1, nRF52, NINA_B302_ublox, NINA_B112_ublox, RP2040-based boards, etc. in addition to Arduino MKR WiFi 1010, Arduino MKR VIDOR 4000, Arduino UNO WiFi Rev.2, Nano 33 IoT, Nano RP2040 Connect. Now with fix of severe limitation to permit sending much larger data than total 4K and using new WiFi101_Generic library"
  },
  {
    "name": "WiFiProvision",
    "version": "1.0.0",
    "sentence": "A library for WiFi provisioning on ESP32 and node mcu."
  },
  {
    "name": "WiFiProvisioner",
    "version": "2.0.0",
    "sentence": "An easy-to-use Wi-Fi provisioning library for ESP32 devices."
  },
  {
    "name": "WiFiSpi",
    "version": "0.3.0",
    "sentence": "Arduino WiFi library connecting ESP8266 via SPI protocol"
  },
  {
    "name": "WiFiTri",
    "version": "1.0.0",
    "sentence": "WiFi Triangulation Library for ESP32."
  },
  {
    "name": "WiFiWebServer",
    "version": "1.10.1",
    "sentence": "Simple WiFiWebServer, HTTP Client and WebSocket Client library for AVR Mega, megaAVR, Portenta_H7, Teensy, SAM DUE, SAMD21, SAMD51, STM32F/L/H/G/WB/MP1, nRF52, RP2040-based (Nano-RP2040-Connect, RASPBERRY_PI_PICO, RASPBERRY_PI_PICO_W, ESP32/ESP8266, etc.) boards using WiFi, such as WiFiNINA, WiFi101, CYW43439, U-Blox W101, W102, ESP8266/ESP32-AT modules/shields, with functions similar to those of ESP8266/ESP32 WebServer libraries."
  },
  {
    "name": "WiFiWebServer_RTL8720",
    "version": "1.1.2",
    "sentence": "Simple WiFiWebServer, HTTP Client, MQTT and WebSocket Client library for Realtek RTL8720DN, RTL8722DM, RTM8722CSM boards using WiFi. Supporting WiFi at 2.4GHz and 5GHz"
  },
  {
    "name": "WiFiWire",
    "version": "0.0.2",
    "sentence": "Arduino library for Wire on WiFi."
  },
  {
    "name": "WiThrottle",
    "version": "1.0.1",
    "sentence": "JMRI WiThrottle Protocol implementation"
  },
  {
    "name": "WiThrottleProtocol",
    "version": "1.1.27",
    "sentence": "JMRI WiThrottle Protocol implementation for ESP32"
  },
  {
    "name": "WifiLocation",
    "version": "1.3.0",
    "sentence": "Library to get geographic position (lat, lon, accuracy), without GPS, by listening surrounding WiFi networks (Works with ESP8266 and ESP32 boards)"
  },
  {
    "name": "WiiChuck",
    "version": "0.3.3",
    "sentence": "A library to communicate with all Wii i2c devices, Classic Controllers, Nunchuks and other Wii extension devices."
  },
  {
    "name": "Winbond W25N",
    "version": "0.2.5",
    "sentence": "Library for use with the Winbond W25N and W25M series SPI Flash ICs"
  },
  {
    "name": "Wind Functions",
    "version": "1.1.1",
    "sentence": "Allows an Arduino to operate the RS485 wind speed and direction sensors from DFRobot"
  },
  {
    "name": "WindQX",
    "version": "1.0.1",
    "sentence": "Serial WindQX´s solid state anemometers library."
  },
  {
    "name": "WindSensorHWD_asukiaaa",
    "version": "1.0.0",
    "sentence": "It controls wind sensor HWD."
  },
  {
    "name": "Windows Virtual Shields for Arduino",
    "version": "1.2.0",
    "sentence": "Windows Virtual Shields for Arduino allows an Arduino to communicate and control Windows devices running open-source Windows Universal Application."
  },
  {
    "name": "WinkelICT ADXL362",
    "version": "1.3.0",
    "sentence": "Library for ADXL362 accelerometer: ultralow power (0,270uA) with autonomous motion switch functionality."
  },
  {
    "name": "WinkelICT Tiny AT Command Parser",
    "version": "1.0.2",
    "sentence": "0 RAM Hayes AT Command Parser by reference, fast, thoroughly tested, for both Bluetooth and GSM commands."
  },
  {
    "name": "WinsonLib",
    "version": "0.0.3",
    "sentence": "Winson product's Arduino Library"
  },
  {
    "name": "Wio 3G for Arduino",
    "version": "1.6.0",
    "sentence": "Wio 3G board dependencies and 3G module driver."
  },
  {
    "name": "Wio LTE Arduino Library",
    "version": "1.0.0",
    "sentence": "Arduino library to control Wio LTE Arduino Library."
  },
  {
    "name": "Wio LTE for Arduino",
    "version": "2.13.0",
    "sentence": "The LTE module driver for Wio LTE."
  },
  {
    "name": "Wio cell lib for Arduino",
    "version": "1.7.0",
    "sentence": "Wio 3G and Wio LTE M1/NB1(BG96) boards driver."
  },
  {
    "name": "WioCellular",
    "version": "0.3.4",
    "sentence": "This library to operate the Wio BG770A cellular module."
  },
  {
    "name": "WireData",
    "version": "1.0.0",
    "sentence": "A library to simplify sending data via I2C (aka TWI).<br />"
  },
  {
    "name": "WireGuard-ESP32",
    "version": "0.1.5",
    "sentence": "WireGuard implementation for Arduino ESP32"
  },
  {
    "name": "WireSusi",
    "version": "0.1.6",
    "sentence": "RCN-600 SUSI Messages Over I2c Wire bus."
  },
  {
    "name": "WireUpdate",
    "version": "1.2.0",
    "sentence": "Update firmware on SAMD based boards using I2C"
  },
  {
    "name": "WireUtility Library",
    "version": "1.0.0",
    "sentence": "Library for Wire : I2c protocol"
  },
  {
    "name": "WireWrapper",
    "version": "1.4.0",
    "sentence": "Arduino Wrapper for Wire librarry (for SAM, ESP8266...)"
  },
  {
    "name": "WiredController_asukiaaa",
    "version": "1.3.3",
    "sentence": "It communicate with WiredController"
  },
  {
    "name": "Wireling",
    "version": "0.1.1",
    "sentence": "Simple helper functions for using Wireling boards."
  },
  {
    "name": "WisBlock-API",
    "version": "1.1.19",
    "sentence": "API for WisBlock Core module"
  },
  {
    "name": "WisBlock-API-V2",
    "version": "2.0.22",
    "sentence": "API for WisBlock Core module"
  },
  {
    "name": "Witsanu",
    "version": "1.0.0",
    "sentence": "A library for controlling MAX7219 with Dot Matrix on Arduino Nano Shield"
  },
  {
    "name": "Witty",
    "version": "1.0.1",
    "sentence": "Witty Support Library"
  },
  {
    "name": "WizFi250",
    "version": "1.3.0",
    "sentence": "Helps using your Arduino board to Wi-Fi easily and fast"
  },
  {
    "name": "WizFi310",
    "version": "1.0.2",
    "sentence": "Helps using your Arduino board to Wi-Fi easily and fast"
  },
  {
    "name": "WizFi360",
    "version": "1.0.1",
    "sentence": "OrangeBoard WiFi+ library for WizFi360."
  },
  {
    "name": "WolkConnect",
    "version": "5.0.0",
    "sentence": "Arduino library which provides easy connectivity to WolkAbout IoT Platform."
  },
  {
    "name": "Word100 Library",
    "version": "5.1.1",
    "sentence": "Library for 100+ Word Shield and LBT"
  },
  {
    "name": "WrapperFreeRTOS",
    "version": "1.0.2",
    "sentence": "C++ FreeRTOS Wrapper."
  },
  {
    "name": "WroobImp",
    "version": "2.0.0",
    "sentence": "Use to connect your Arduino board to Wroob system."
  },
  {
    "name": "WsprEncoded",
    "version": "4.3.2",
    "sentence": "WSPR message encoding for extended data transfer outside of the typical WSPR protocol."
  },
  {
    "name": "X9C103S",
    "version": "1.3.0",
    "sentence": "A light library to control X9C103S digital potentiometers."
  },
  {
    "name": "X9C10X",
    "version": "0.2.3",
    "sentence": "Arduino Library for X9C10X series digital potentiometer."
  },
  {
    "name": "XBee-Arduino library",
    "version": "0.6.0",
    "sentence": "Library for talking to to various wireless XBee modules from Digi."
  },
  {
    "name": "XBeeATCmds",
    "version": "0.1.0",
    "sentence": "XBee AT Command Wrapper for Arduino"
  },
  {
    "name": "XBoxControllerHandler",
    "version": "1.0.1",
    "sentence": "Handle strings from an XBox controller receiver (ESP controller running BluePad) containing controller input status."
  },
  {
    "name": "XENSIV 3D Magnetic Sensor TLx493D",
    "version": "1.0.1",
    "sentence": "C/C++ library for Infineons XENSIV™ 3D magnetic sensors family"
  },
  {
    "name": "XENSIV Digital Pressure Sensor",
    "version": "1.0.0",
    "sentence": "Arduino library for the Infineon XENSIV(TM) Digital Pressure Sensors (DPS3xx)."
  },
  {
    "name": "XENSIV PAS CO2",
    "version": "3.2.0",
    "sentence": "C/C++ library for Infineon XENSIV™ PAS CO2 sensor"
  },
  {
    "name": "XGZP6897D",
    "version": "1.0.4",
    "sentence": "A library for XGZP6897D I2C differential pressure sensor and others from CFSensor."
  },
  {
    "name": "XInput",
    "version": "1.2.6",
    "sentence": "Library for emulating an Xbox controller over USB."
  },
  {
    "name": "XLR8ADC",
    "version": "1.1.1",
    "sentence": "Arduino library to take advantage of XLR8 ADC performance."
  },
  {
    "name": "XLR8AddrPack",
    "version": "1.0.0",
    "sentence": "Arduino header file defining addresses common to the XLR8 family."
  },
  {
    "name": "XLR8BuildTemplate",
    "version": "1.4.4",
    "sentence": "Template for building custom designs for XLR8"
  },
  {
    "name": "XLR8Core",
    "version": "1.4.4",
    "sentence": "OpenXLR8 Core components"
  },
  {
    "name": "XLR8DMem",
    "version": "1.0.1",
    "sentence": "Access library for XLR8 DMem XB"
  },
  {
    "name": "XLR8DigitalIO",
    "version": "1.0.0",
    "sentence": "Arduino library for access to the extra pins available on an XLR8 Snō."
  },
  {
    "name": "XLR8Float",
    "version": "2.0.1",
    "sentence": "Arduino library for hardware accelerated floating point math."
  },
  {
    "name": "XLR8HardwareSerial",
    "version": "1.0.0",
    "sentence": "Library to access UART XBs."
  },
  {
    "name": "XLR8Info",
    "version": "1.2.0",
    "sentence": "Arduino library for identifying features of XLR8 product"
  },
  {
    "name": "XLR8LFSR",
    "version": "1.1.0",
    "sentence": "Simple LFSR example on the XLR8 FPGA."
  },
  {
    "name": "XLR8NeoPixel",
    "version": "1.0.5",
    "sentence": "Arduino library for controlling single-wire-based LED pixels and strip."
  },
  {
    "name": "XLR8PID",
    "version": "1.0.0",
    "sentence": "Arduino library for hardware accelerated PID control."
  },
  {
    "name": "XLR8PWM",
    "version": "1.0.1",
    "sentence": "OpenXLR8 implementation of PWM"
  },
  {
    "name": "XLR8Pong",
    "version": "1.0.0",
    "sentence": "Pong game using the FPGA logic. For Alorium Technology's XLR8 board."
  },
  {
    "name": "XLR8Quadrature",
    "version": "1.2.0",
    "sentence": "Arduino library for hardware accelerated quadrature encoder control."
  },
  {
    "name": "XLR8RC",
    "version": "1.0.0",
    "sentence": "Captures outputs from an RC receiver (the signals that go to servos) and outputs a 16 bit integer representing the pulse width (in microseconds)"
  },
  {
    "name": "XLR8SPI",
    "version": "2.0.1",
    "sentence": "Library to use SPI interfaces through SPI XBs."
  },
  {
    "name": "XLR8Servo",
    "version": "2.2.0",
    "sentence": "Allows Arduino boards to control a variety of servo motors. For Alorium Technology's XLR8 board."
  },
  {
    "name": "XLR8USB",
    "version": "1.0.0",
    "sentence": "USB FullSpeed (Mouse) host interface"
  },
  {
    "name": "XLR8Wire",
    "version": "1.0.0",
    "sentence": "Library to access I2C XBs."
  },
  {
    "name": "XMC_Servo",
    "version": "1.0.1",
    "sentence": "Allows Infineon XMC arm boards using Hardware PWM to control a variety of servo motors and controls."
  },
  {
    "name": "XMLWriter",
    "version": "0.3.5",
    "sentence": "Arduino library for creating XML"
  },
  {
    "name": "XModem",
    "version": "1.0.3",
    "sentence": "A configurable XModem transfer library."
  },
  {
    "name": "XPT2046 Driver",
    "version": "1.0.2",
    "sentence": "An Arduino library for driving an XPT2046 touch controller."
  },
  {
    "name": "XPT2046_Bitbang",
    "version": "1.0.2",
    "sentence": "Bitbang library for the XPT2046 touch controller."
  },
  {
    "name": "XPT2046_Bitbang_Slim",
    "version": "2.0.1",
    "sentence": "Bitbang library for the XPT2046 touch controller."
  },
  {
    "name": "XPT2046_Calibrated",
    "version": "1.0.1",
    "sentence": "XPT2046_Touchscreen-based library with 3-point calibration"
  },
  {
    "name": "XPT2046_Touchscreen",
    "version": "1.4.0",
    "sentence": "Touchscreens using the XPT2046 controller chip."
  },
  {
    "name": "XPT2046_Touchscreen_TT",
    "version": "1.8.1",
    "sentence": "Support for touchscreens using the XPT2046 controller chip, cloned from PaulStoffregen's version."
  },
  {
    "name": "XP_Button",
    "version": "1.0.3",
    "sentence": "Library to debounce button switches, detect presses, releases, and long presses."
  },
  {
    "name": "XPowersLib",
    "version": "0.2.7",
    "sentence": "Arduino, CircuitPython, Micropython, esp-idf and other frameworks power management series library"
  },
  {
    "name": "XRA1405",
    "version": "1.0.0",
    "sentence": "16-bit SPI GPIO expander library for the XRA1405 chip."
  },
  {
    "name": "XRA1405_Button",
    "version": "1.0.0",
    "sentence": "Button debounce and detection library using XRA1405 SPI GPIO expander."
  },
  {
    "name": "XTEA-Cipher",
    "version": "1.0.0",
    "sentence": "XTEA-Cipher library for Arduino. cryptographic MAC function, symmetric-key data encryption/decryption"
  },
  {
    "name": "XY2-100",
    "version": "1.0.0",
    "sentence": "A library for controlling laser scanners that use the XY2-100 protocol."
  },
  {
    "name": "XYZgeomag",
    "version": "2.1.0",
    "sentence": "Calculate the magnetic field on earth using the World Magnetic Model(WMM)."
  },
  {
    "name": "XYZrobotServo",
    "version": "1.1.0",
    "sentence": "Pololu's Arduino library for the XYZrobot Smart Servo A1-16"
  },
  {
    "name": "Xbox 360 Controller LEDs",
    "version": "1.1.2",
    "sentence": "Mimic the Xbox 360 controller's LED patterns."
  },
  {
    "name": "XboxControllerNotificationParser",
    "version": "1.0.4",
    "sentence": "It parses value of notification from xbox controller."
  },
  {
    "name": "XboxSeriesXControllerESP32_asukiaaa",
    "version": "1.1.0",
    "sentence": "It communicate with a controller of Xbox series X from ESP32."
  },
  {
    "name": "XboxSeriesXHIDReportBuilder_asukiaaa",
    "version": "1.0.1",
    "sentence": "Report builder of HID for Xbox SeriesX Controller."
  },
  {
    "name": "Xiao NRF52840 Battery",
    "version": "1.0.0",
    "sentence": "Arduino library to sense Xiao NRF52840 Battery on non-Mbed 1.0.0 firmware"
  },
  {
    "name": "Xsens_MTi_I2C",
    "version": "2.0.0",
    "sentence": "This library demonstrates the basics of communicating with Xsens MTi 1-series devices through I2C."
  },
  {
    "name": "Xsens_MTi_SPI",
    "version": "1.0.0",
    "sentence": "This library demonstrates the basics of communicating with Xsens MTi 1-series devices through SPI."
  },
  {
    "name": "XxHash_arduino",
    "version": "2.1.0",
    "sentence": "xxHash library for arduino (NEW V2 API)."
  },
  {
    "name": "YAAWS",
    "version": "1.0.0",
    "sentence": "Yet Another Arduino Web Server"
  },
  {
    "name": "YACL",
    "version": "1.0.3",
    "sentence": "Yet Another CBOR Library."
  },
  {
    "name": "YAMLDuino",
    "version": "1.4.2",
    "sentence": "A simple and efficient YAML library for embedded C++"
  },
  {
    "name": "YASM",
    "version": "1.0.5",
    "sentence": "Easy finite state machine creation and management library"
  },
  {
    "name": "YDLidar",
    "version": "2.0.0",
    "sentence": "An Arduino library for The YDLiDar GS2"
  },
  {
    "name": "YK04_Module",
    "version": "1.0.5",
    "sentence": "Library for working with a remote control sensors based on the YK04 driver."
  },
  {
    "name": "YL-800N",
    "version": "1.0.0",
    "sentence": "A library for YL-800N LoRa mesh network module."
  },
  {
    "name": "YLEsp8266",
    "version": "1.0.0",
    "sentence": "Arduino library for Esp8266."
  },
  {
    "name": "YX5300 for ESP32",
    "version": "1.1.0",
    "sentence": "A library to support the YX5300 MP3 Module on the ESP32 platform."
  },
  {
    "name": "Yaesu FT857D CAT",
    "version": "0.2.2",
    "sentence": "Simulate a Yaesu FT-857D radio from the CAT point of view."
  },
  {
    "name": "Yeelight",
    "version": "1.1.0",
    "sentence": "A library for controlling Yeelight devices."
  },
  {
    "name": "Yet Another Arduino Debounce Library",
    "version": "1.0.0",
    "sentence": "An asynchronous Arduino Library for debouncing"
  },
  {
    "name": "Yet Another Arduino PcInt Library",
    "version": "2.1.0",
    "sentence": "A library to support Pin Change Interruptions (PCINT) on AVR Arduinos"
  },
  {
    "name": "Yet Another Arduino Wiegand Library",
    "version": "2.0.0",
    "sentence": "An Arduino Library to receive data from Wiegand card readers."
  },
  {
    "name": "YetAnotherButtonLibrary",
    "version": "0.1.1",
    "sentence": "Have your sketches respond to simple and advanced button events with only a few lines of code."
  },
  {
    "name": "Yfrobot Fingerprint Identification Sensor Library",
    "version": "0.0.3",
    "sentence": "Arduino library for yfrobot Fingerprint Identification sensor modules."
  },
  {
    "name": "Yfrobot I2C Line Follow Sensor Library",
    "version": "0.0.5",
    "sentence": "Arduino library for yfrobot i2c line follow sensor"
  },
  {
    "name": "Yfrobot Motor Driver IIC1508 Library",
    "version": "0.0.5",
    "sentence": "Arduino library for yfrobot iic1508 motor driver"
  },
  {
    "name": "Yfrobot Motor Driver Library",
    "version": "0.0.9",
    "sentence": "Arduino library for yfrobot motor driver"
  },
  {
    "name": "Yfrobot VALON-I3 Library",
    "version": "0.0.3",
    "sentence": "Arduino library for yfrobot VALON-I3_Arduino"
  },
  {
    "name": "YosemitechModbus",
    "version": "0.5.0",
    "sentence": "Arduino library for communication with Yosemitech sensors via Modbus."
  },
  {
    "name": "YouMadeIt",
    "version": "1.0.1",
    "sentence": "Library to connect to YouMadeIt! service."
  },
  {
    "name": "YouTube Sight",
    "version": "1.0.3",
    "sentence": "Retrieves YouTube channel statistics through YouTube Sight"
  },
  {
    "name": "YouTubeLiveStreamArduino",
    "version": "1.1.0",
    "sentence": "An arduino library for interacting with YouTube live streams. (supports ESP8266/ESP32 & probably others)"
  },
  {
    "name": "Youless Arduino Library",
    "version": "1.0.0",
    "sentence": "A library for use with Youless Energy Monitor."
  },
  {
    "name": "YoupiLabESP32_IOT",
    "version": "1.0.0",
    "sentence": "library for Esp32"
  },
  {
    "name": "YoupiLabEsp8266",
    "version": "1.0.2",
    "sentence": "library for Esp8266"
  },
  {
    "name": "YoutubeApi",
    "version": "2.0.0",
    "sentence": "A wrapper for the YouTube API for Arduino (supports ESP8266 & WiFi101 boards)"
  },
  {
    "name": "Z80",
    "version": "1.0.1",
    "sentence": "A Z80 CPU implementation for the Arduino Mega."
  },
  {
    "name": "Z80RetroShield",
    "version": "0.2.0",
    "sentence": "An interface to the Z80 RetroShield."
  },
  {
    "name": "ZACwire for TSic",
    "version": "2.0.0",
    "sentence": "Reading the ZACwire protocol of TSic sensors with ISRs."
  },
  {
    "name": "ZEEPROM",
    "version": "0.0.0",
    "sentence": "Simplified I2C EEPROM library for Arduino compatible boards for the Zetta 128Kbit EEPROM"
  },
  {
    "name": "ZEeprom",
    "version": "1.0.0",
    "sentence": "Library for eeprom AT24Cx"
  },
  {
    "name": "ZEncoder",
    "version": "1.0.0",
    "sentence": "Library for encoder of motor"
  },
  {
    "name": "ZMCP23017 Library",
    "version": "1.0.0",
    "sentence": "Library for MCP23017  I/O extender"
  },
  {
    "name": "ZMPT101B",
    "version": "1.0.1",
    "sentence": "Library to interact with the ZMPT101B Voltage sensor."
  },
  {
    "name": "ZMPT101B-Sensor",
    "version": "1.0.1",
    "sentence": "Library to interact with the ZMPT101B Voltage sensor."
  },
  {
    "name": "ZModbusRTU",
    "version": "1.2.0",
    "sentence": "ModbusRTU Slave Library."
  },
  {
    "name": "ZMotor2 Library",
    "version": "1.0.0",
    "sentence": "Library for a board called Motor2"
  },
  {
    "name": "ZMotor3Library",
    "version": "1.0.0",
    "sentence": "Library for a board called Motor3"
  },
  {
    "name": "ZOHO-IOT-SDK",
    "version": "0.1.0",
    "sentence": "A library that simplifies the process of connecting to Zoho IOT application."
  },
  {
    "name": "ZPA4756-0311A-R",
    "version": "1.1.0",
    "sentence": "Arduino library for controlling Murata ZPA4756-0311A-R barometric pressure sensor."
  },
  {
    "name": "ZPCA9685 Library",
    "version": "1.0.0",
    "sentence": "Library for PCA9685 PWM I/O extender"
  },
  {
    "name": "ZSSC3230 I2C Driver",
    "version": "0.2.0",
    "sentence": "Arduino library for the ZSSC3230 sensor"
  },
  {
    "name": "ZSharpIR Library",
    "version": "1.0.0",
    "sentence": "Library for Sharp telemeter"
  },
  {
    "name": "Zaber ASCII",
    "version": "2.0.1",
    "sentence": "Provides helpers for interacting with Zaber devices using the Zaber ASCII protocol."
  },
  {
    "name": "Zaber Binary",
    "version": "1.2.0",
    "sentence": "Provides helpers for interacting with Zaber devices using the Zaber Binary protocol."
  },
  {
    "name": "Zanduino SmoothLED Library 10-bit",
    "version": "1.0.1",
    "sentence": "Arduino library to control any number of LEDs on any available pins using 10-bit PWM with linear adjustment using CIE 1931 curves."
  },
  {
    "name": "Zanduino SmoothLED Library 8-bit",
    "version": "1.0.0",
    "sentence": "Arduino library to control any number of LEDs on any pins using 8-bit PWM with CIE 1931 curves for linear adjustment."
  },
  {
    "name": "ZcmdMotor Library",
    "version": "1.0.0",
    "sentence": "Library for a motor control with PID"
  },
  {
    "name": "Zentser ESP SDK",
    "version": "0.0.9",
    "sentence": "Zentser library for ESP8266 or ESP32"
  },
  {
    "name": "ZeroRegs",
    "version": "0.3.4",
    "sentence": "Prints the low-level configuration registers for the Arduino Zero (and similar boards)."
  },
  {
    "name": "ZeroTC45",
    "version": "1.1.0",
    "sentence": "Allows use of the ARM Cortex-M0 TC4 and TC5 counters for periodic interrupts."
  },
  {
    "name": "ZikoMatrix",
    "version": "0.9.5",
    "sentence": "A Matrix library"
  },
  {
    "name": "Zumo32U4",
    "version": "2.0.1",
    "sentence": "Zumo 32U4 Arduino library"
  },
  {
    "name": "ZumoAutomation",
    "version": "1.0.3",
    "sentence": "Arduino library to allow for automatic zumo match play"
  },
  {
    "name": "ZumoShield",
    "version": "2.1.0",
    "sentence": "Arduino library for the Pololu Zumo Shield and Zumo robot kit for Arduino"
  },
  {
    "name": "ZzzButton",
    "version": "1.0.0",
    "sentence": "Arduino / C++ library to manage buttons"
  },
  {
    "name": "ZzzMovingAvg",
    "version": "1.0.0",
    "sentence": "Simple Arduino / C++ library to compute moving average"
  },
  {
    "name": "aE2",
    "version": "1.0.0",
    "sentence": "E+E E2-sensor library for Arduino."
  },
  {
    "name": "aREST",
    "version": "2.9.7",
    "sentence": "RESTful API for the Arduino platform."
  },
  {
    "name": "aREST UI",
    "version": "1.1.1",
    "sentence": "A graphical user interface for Arduino based on the aREST API."
  },
  {
    "name": "aTalkArduino",
    "version": "0.2.1",
    "sentence": "Real Time Data communication protocol"
  },
  {
    "name": "aWOT",
    "version": "3.5.0",
    "sentence": "Arduino web server library."
  },
  {
    "name": "absmouse",
    "version": "1.0.0",
    "sentence": "Absolute positioning USB HID mouse library."
  },
  {
    "name": "ad5243",
    "version": "0.4.0",
    "sentence": "Arduino library to control the AD5243 family of digital potentiometers / rheostats"
  },
  {
    "name": "ad7124",
    "version": "1.0.0",
    "sentence": "Arduino library for AD7124 ADC"
  },
  {
    "name": "adafruit_fram_i2c_mock",
    "version": "1.0.1",
    "sentence": "MOCK Library for I2C-FRAM Chip."
  },
  {
    "name": "adafruit_ina219_mock",
    "version": "1.0.0",
    "sentence": "MOCK Library for INA219 Current Sensor."
  },
  {
    "name": "advancedSerial",
    "version": "1.2.4",
    "sentence": "An Arduino library with additions to vanilla Serial.print(). Chainable methods and verbosity levels. Suitable for debug messages."
  },
  {
    "name": "alarm",
    "version": "1.0.1",
    "sentence": "Alarms implementation for Arduino."
  },
  {
    "name": "analogComp",
    "version": "1.2.4",
    "sentence": "Set and manage the integrated analog comparator"
  },
  {
    "name": "anto-esp8266-arduino",
    "version": "0.7.3",
    "sentence": "Enables ESP8266 to connect to Anto.io IoT platform."
  },
  {
    "name": "arduFPGA-app-common-arduino",
    "version": "0.1.2",
    "sentence": "The common libraries and drivers for arduFPGA development boards."
  },
  {
    "name": "ardubson",
    "version": "1.4.2",
    "sentence": "Arduino Library for BSON (Binary JSON)"
  },
  {
    "name": "arducam_dvp",
    "version": "1.0.0",
    "sentence": "Library to capture pixels from supported cameras on Arduino boards."
  },
  {
    "name": "arduino-NVM",
    "version": "0.9.1",
    "sentence": "Direct flash memory access, round robin virtual pages and EEPROM like memory. (Flash, VirtualPage, NVRAM)"
  },
  {
    "name": "arduino-async-duplex",
    "version": "1.1.0",
    "sentence": "Easily and asynchronously with a serial device requiring call-and-response style commands."
  },
  {
    "name": "arduino-async-modem",
    "version": "1.1.0",
    "sentence": "Asynchronously interact with your GSM or LTE modem."
  },
  {
    "name": "arduino-display-lcdkeypad",
    "version": "5.0.2",
    "sentence": "Arduino LCD Keypad Shield driver."
  },
  {
    "name": "arduino-ess",
    "version": "0.5.4",
    "sentence": "Support for Sensirion's Environmental Sensor Shield"
  },
  {
    "name": "arduino-fsm",
    "version": "2.2.0",
    "sentence": "A library for implementing a finite state machine"
  },
  {
    "name": "arduino-managed-serial-device",
    "version": "1.2.0",
    "sentence": "Easily and asynchronously with a serial device requiring call-and-response style commands."
  },
  {
    "name": "arduino-menusystem",
    "version": "3.0.0",
    "sentence": "A library for implementing a menu system"
  },
  {
    "name": "arduino-sht",
    "version": "1.2.6",
    "sentence": "Support for Sensirion's humidity and temperature sensors."
  },
  {
    "name": "arduino-timer",
    "version": "3.0.1",
    "sentence": "Timer library for delaying function calls"
  },
  {
    "name": "arduino-timer-api",
    "version": "0.1.0",
    "sentence": "Simple cross-platform API for multitasking on timer interrupt handlers"
  },
  {
    "name": "arduinoFFT",
    "version": "2.0.4",
    "sentence": "A library for implementing floating point Fast Fourier Transform calculations on the Arduino framework."
  },
  {
    "name": "arduinoVNC",
    "version": "1.4.0",
    "sentence": "VNC Client for Arduino"
  },
  {
    "name": "ardukit",
    "version": "1.1.1",
    "sentence": "Foundation library toolkit for easier arduino programming"
  },
  {
    "name": "ardyno",
    "version": "0.9.0",
    "sentence": "A library to control dynamixel motors"
  },
  {
    "name": "array-helpers",
    "version": "1.0.0",
    "sentence": "Array helper classes and functions."
  },
  {
    "name": "artemis-cubesat",
    "version": "1.0.0",
    "sentence": "The software available in this library is designed to break down the flight software from the Artemis CubeSat Kit into individual components, enabling users to effectively test and evaluate various systems and elements of their satellite."
  },
  {
    "name": "asip",
    "version": "0.1.0",
    "sentence": "A library to control a board using a stream (e.g., serial)"
  },
  {
    "name": "asip-services",
    "version": "0.1.0",
    "sentence": "A library to extend the core Asip library with additional services"
  },
  {
    "name": "astra_esp8266",
    "version": "0.1.0",
    "sentence": "Easily access a Cassandra database from an ESP8266."
  },
  {
    "name": "asyncino",
    "version": "0.0.3",
    "sentence": "asynchronous library for the Arduino family"
  },
  {
    "name": "atlas OEM module",
    "version": "1.0.1",
    "sentence": "Basic function to accessing atlas OEM module."
  },
  {
    "name": "attiny85FasterPin",
    "version": "0.2.6",
    "sentence": "\"Library which lets you to control pins in more efficient way\""
  },
  {
    "name": "autorequest",
    "version": "1.0.1",
    "sentence": "Autorequests implementation for Arduino."
  },
  {
    "name": "autowp-mcp2515",
    "version": "1.2.1",
    "sentence": "Arduino MCP2515 CAN interface library"
  },
  {
    "name": "avdweb_AnalogReadFast",
    "version": "1.0.0",
    "sentence": "Fast analogRead 10/12 bit ADC for the Arduino Zero and Uno"
  },
  {
    "name": "avdweb_SAMDtimer",
    "version": "1.0.0",
    "sentence": "Timer library for the SAMD21 and Arduino Zero"
  },
  {
    "name": "avdweb_VirtualDelay",
    "version": "1.1.1",
    "sentence": "Allows using (multiple) delays without blocking code execution. Arduino Uno and Zero."
  },
  {
    "name": "avr-fast-div",
    "version": "1.3.0",
    "sentence": "Optimized integer division for AVR hardware"
  },
  {
    "name": "avr-fast-map",
    "version": "1.0.0",
    "sentence": "A faster implementation of the Arduino map() function"
  },
  {
    "name": "avr-fast-shift",
    "version": "1.1.0",
    "sentence": "Optimised left and right shifting of `uint32_t` up to 31 places."
  },
  {
    "name": "avrCalibrate",
    "version": "1.1.3",
    "sentence": "This library determines OSCCAL calibration values for MCU clock frequency and internal reference voltage and loads them at setup."
  },
  {
    "name": "avr_stl",
    "version": "1.2.3",
    "sentence": "A port of ArduinoSTL Arduino library."
  },
  {
    "name": "avrtos",
    "version": "1.3.1",
    "sentence": "RTOS for AVR Arduino microcontrollers (Uno & Mega)"
  },
  {
    "name": "base64",
    "version": "1.3.0",
    "sentence": "Base64 encoder/decoder for arduino repo"
  },
  {
    "name": "base64_encode",
    "version": "2.0.4",
    "sentence": "Convert between binary and base64 encoded string."
  },
  {
    "name": "basicCalculus",
    "version": "0.1.0",
    "sentence": "Perform real-time 1D integration and differentiation"
  },
  {
    "name": "basicGLCD",
    "version": "1.0.1",
    "sentence": "This library is for QY-12854BG(= GLCD)."
  },
  {
    "name": "basicMPU6050",
    "version": "0.3.1",
    "sentence": "lightweight library for the MPU6050."
  },
  {
    "name": "bb_captouch",
    "version": "1.2.2",
    "sentence": "Capacitive touch sensor library for FT6x36, MXT144, CST820, CST226 and GT911 I2C devices."
  },
  {
    "name": "bb_epaper",
    "version": "1.1.1",
    "sentence": "A frustration-free e-paper library."
  },
  {
    "name": "bb_hx1230",
    "version": "1.0.1",
    "sentence": "BitBank HX1230 96x68 LCD display library."
  },
  {
    "name": "bb_ltr390",
    "version": "1.0.1",
    "sentence": "LTR-390 light sensor library."
  },
  {
    "name": "bb_rtc",
    "version": "1.1.2",
    "sentence": "realtime clock library for DS3231, RV3032, and PCF8563."
  },
  {
    "name": "bb_scd41",
    "version": "1.1.0",
    "sentence": "Sensiron SCD4x CO2 sensor library."
  },
  {
    "name": "bb_spi_lcd",
    "version": "2.8.1",
    "sentence": "Color SPI LCD+OLED library with many unique features."
  },
  {
    "name": "bb_truetype",
    "version": "1.0.0",
    "sentence": "A fast+small TrueType font renderer."
  },
  {
    "name": "bb_uc1701",
    "version": "1.0.0",
    "sentence": "Optimized 128x64 monochrome LCD display library for ST7565/UC1701 conrollers."
  },
  {
    "name": "bcl",
    "version": "0.0.5",
    "sentence": "A fork of Nayukis Bitcoin Cryptography Library."
  },
  {
    "name": "bitHelpers",
    "version": "0.1.12",
    "sentence": "Arduino library with functions on bit level"
  },
  {
    "name": "bitluni ESP32Lib",
    "version": "0.4.0",
    "sentence": "Multimedia library for the ESP32"
  },
  {
    "name": "bits_asukiaaa",
    "version": "1.0.9",
    "sentence": "A library to handle bits or bytes."
  },
  {
    "name": "ble_definitions",
    "version": "0.0.4",
    "sentence": "A library that contains ready to use definitions for different BLE Services and Characteristics"
  },
  {
    "name": "blesdlib",
    "version": "1.0.0",
    "sentence": "Emulate a keystrok via bluetooth wirelessly"
  },
  {
    "name": "blite",
    "version": "0.1.2",
    "sentence": "Dev kit for buildybee blite breakout board"
  },
  {
    "name": "bluemicro_engine",
    "version": "0.0.2",
    "sentence": "Engine to implement a loop in order to decouple the progression of time from user input and processor speed."
  },
  {
    "name": "bluemicro_exmpl",
    "version": "0.0.3",
    "sentence": "Keyboard examples that uses the BlueMicro libraries."
  },
  {
    "name": "bluemicro_hid",
    "version": "0.0.12",
    "sentence": "Creates a unified facade to both TinyUSB and nRF52 BlueFruit HID interfaces."
  },
  {
    "name": "bluemicro_nrf52",
    "version": "0.0.4",
    "sentence": "A nRF52 Library for controler-specific functions like setting up GPIOs, Watchdog Timer and sleeping."
  },
  {
    "name": "bluemicro_rp2040",
    "version": "0.0.2",
    "sentence": "A RP2040 Library for controler-specific functions like setting up GPIOs, Watchdog Timer and other hardware specific functions."
  },
  {
    "name": "bluemicro_samd",
    "version": "0.0.0",
    "sentence": "A SAMD Library for controler-specific functions like setting up GPIOs, Watchdog Timer and sleeping."
  },
  {
    "name": "bosejis_AMV",
    "version": "0.0.10",
    "sentence": "The AMV Protocol Implementation"
  },
  {
    "name": "bosejis_Bin",
    "version": "0.0.7",
    "sentence": "Bosejis Bin Library"
  },
  {
    "name": "bosejis_PString",
    "version": "0.0.4",
    "sentence": "Print to String Library"
  },
  {
    "name": "bosejis_TWI",
    "version": "0.0.0",
    "sentence": "TWI operations Library"
  },
  {
    "name": "bosejis_Types",
    "version": "1.0.1",
    "sentence": "Generic Type to Value Conversion Library."
  },
  {
    "name": "bsec2",
    "version": "1.8.2610",
    "sentence": "Bosch Sensortec Environmental Cluster (BSEC) Software library"
  },
  {
    "name": "btnapi",
    "version": "1.0.1",
    "sentence": "Library for conecting buttons"
  },
  {
    "name": "buildTime",
    "version": "1.0.0",
    "sentence": "Library will help you to get compile time"
  },
  {
    "name": "button_asukiaaa",
    "version": "1.0.4",
    "sentence": "Supply classes for Button."
  },
  {
    "name": "button_moarbue",
    "version": "1.0.0",
    "sentence": "Button library with callbacks for press events"
  },
  {
    "name": "byte-sized-encoder-decoder",
    "version": "2.2.4",
    "sentence": "communicate over I2C with an encoder reading module"
  },
  {
    "name": "cI2C",
    "version": "1.3.0",
    "sentence": "Arduino Hardware I2C for AVR (in plain c)"
  },
  {
    "name": "cQueue",
    "version": "2.0.0",
    "sentence": "Queue handling library (written in plain c)"
  },
  {
    "name": "cSerialWatcher",
    "version": "2.1.5",
    "sentence": "Monitor and modify arduino variables via serial usb"
  },
  {
    "name": "car robot vip",
    "version": "0.1.0",
    "sentence": "This Arduino library provides the car robot code."
  },
  {
    "name": "cerebro",
    "version": "1.0.0",
    "sentence": "A library that makes cerebro works easly."
  },
  {
    "name": "cgnuino",
    "version": "1.0.4",
    "sentence": "Arduino library for behavioral task controls in cognitive psychology and neuroscience."
  },
  {
    "name": "clicli",
    "version": "1.2.0",
    "sentence": "Command Line Interface for Arduino."
  },
  {
    "name": "cloud4rpi-esp-arduino",
    "version": "1.1.0",
    "sentence": "Connect a board to the Cloud4RPi control panel using MQTT - https://cloud4rpi.io."
  },
  {
    "name": "cmd",
    "version": "1.0.0",
    "sentence": "A serial command line interface with buffer editing."
  },
  {
    "name": "cmdArduino",
    "version": "1.0.0",
    "sentence": "A small command-line library to make development easier."
  },
  {
    "name": "controlKeyboard",
    "version": "1.0.0",
    "sentence": "A library for checking keyboard events like whether a key is pressed or released."
  },
  {
    "name": "controlVoltage",
    "version": "1.0.1",
    "sentence": "A simple library for generating CV signals to control modular synthesizers."
  },
  {
    "name": "crc_asukiaaa",
    "version": "1.0.2",
    "sentence": "A library of functions about crc."
  },
  {
    "name": "cronos",
    "version": "0.1.6",
    "sentence": "A std::chrono wrapper for target system's native tick count."
  },
  {
    "name": "cst816t",
    "version": "1.5.1",
    "sentence": "cst816t capacitive touch screen"
  },
  {
    "name": "currency",
    "version": "0.1.9",
    "sentence": "Arduino library to help formatting integers as currency e.g. $ 1.000.000,00."
  },
  {
    "name": "custom_PortentaBreakout",
    "version": "1.0.2",
    "sentence": "Library for Arduino Portenta Breakout Carrier modified by alessandromrc (Alessandro Marcon)"
  },
  {
    "name": "dWin",
    "version": "1.1.3",
    "sentence": "Dwin HMI LCD Screen Library."
  },
  {
    "name": "databot",
    "version": "1.2.1",
    "sentence": "Official databot library supporting databot, based on Arduino"
  },
  {
    "name": "databot2",
    "version": "2.9.1",
    "sentence": "Official databot library supporting databot, based on Arduino"
  },
  {
    "name": "dateTimeHelpers",
    "version": "0.1.3",
    "sentence": "Arduino library with date and time helper functions."
  },
  {
    "name": "dbg-trace",
    "version": "1.1.0",
    "sentence": "Debug Trace component for Embedded Applications - Debug and Trace Log message system based on trace ports with adjustable levels."
  },
  {
    "name": "dcf77_xtal",
    "version": "3.3.7",
    "sentence": "DCF77 decoder with excellent noise tolerance."
  },
  {
    "name": "ddns-nightly",
    "version": "1.0.0",
    "sentence": "Official nightly duinodns (ddns) builds"
  },
  {
    "name": "debounce",
    "version": "0.2.1",
    "sentence": "A library for button debouncing."
  },
  {
    "name": "debug-cli",
    "version": "1.3.0",
    "sentence": "Debug CLI for Embedded Applications - Command Line Interface for debugging and testing based on an object oriented tree structure."
  },
  {
    "name": "debuggery",
    "version": "1.2.2",
    "sentence": "A helper library for getting information (including an assert and print macros) from Arduino including the Esp32 via the usual serial port."
  },
  {
    "name": "deepC",
    "version": "0.12.0",
    "sentence": "Allows you to run machine learning models locally on arduino boards."
  },
  {
    "name": "deploii",
    "version": "0.1.1",
    "sentence": "Library for enabling communication between a MCU and Deploii"
  },
  {
    "name": "desklab",
    "version": "1.1.5",
    "sentence": "Implement methods for the use of desklab (www.desk-lab.de) devices."
  },
  {
    "name": "detaBaseArduinoESP32",
    "version": "1.0.0",
    "sentence": "Makes working with Deta.sh Base easy"
  },
  {
    "name": "detaBaseESP8266",
    "version": "1.1.6",
    "sentence": "Makes working with deta.space Base easy on esp8266"
  },
  {
    "name": "dht11esp8266",
    "version": "1.0.10",
    "sentence": "Arduino library for DHT11, DHT22, etc Temp & Humidity Sensors"
  },
  {
    "name": "dht11esp8266examples",
    "version": "1.0.10",
    "sentence": "Arduino library for DHT11, DHT22, etc Temp & Humidity Sensors"
  },
  {
    "name": "dhtESP32-rmt",
    "version": "2.0.2",
    "sentence": "Minimal, non-blocking, DHT11/DHT22 sensor library for ESP32 using RMT pheripheral for Arduino 3.0.0 based on ESP-IDF v5.1.4"
  },
  {
    "name": "digiedge_frame_generator",
    "version": "1.0.1",
    "sentence": "Streamline data frame transmission from equipment to an edge device with this microcontroller library."
  },
  {
    "name": "digitalPinFast",
    "version": "1.0.2",
    "sentence": "More speed for digitalPin operations."
  },
  {
    "name": "digitalWriteFast",
    "version": "1.3.0",
    "sentence": "Fast pin access for AVR microcontrollers"
  },
  {
    "name": "directADC",
    "version": "1.1.0",
    "sentence": "Library for advanced ADC control (AVR)"
  },
  {
    "name": "directTimers",
    "version": "1.0.0",
    "sentence": "Library for advanced hardware timers control"
  },
  {
    "name": "diwa",
    "version": "0.0.8",
    "sentence": "Lightweight simple implementation of ANN for Arduino platform, PlayStation Portable SDK, and even Windows on AMD64."
  },
  {
    "name": "ds3231FS",
    "version": "1.1.1",
    "sentence": "Arduino Library for Maxim Integrated DS3231 Real-Time Clock."
  },
  {
    "name": "dswpainelpro",
    "version": "2.4.4",
    "sentence": "Library for software DSW painel pro"
  },
  {
    "name": "due_can",
    "version": "2.0.1",
    "sentence": "Allows for CAN bus communications with the Arduino Due"
  },
  {
    "name": "dustSensor_kocoa",
    "version": "1.0.0",
    "sentence": "Arduino Particulate Matter Sensors for PM-D4."
  },
  {
    "name": "dwarf433",
    "version": "0.0.3",
    "sentence": "Arduino libary to transmit arbitrary RF433 signals"
  },
  {
    "name": "dwiBus",
    "version": "1.0.1",
    "sentence": "A library for UART communication between multiple devices using the dwiBus protocol."
  },
  {
    "name": "dynaHTML",
    "version": "1.2.6",
    "sentence": "dynamic HTML library for ESP8266/ESP32"
  },
  {
    "name": "dynaconfig",
    "version": "0.0.1",
    "sentence": "Arduino WiFi dynamic configuration library for ESP32 using captive portal authentication."
  },
  {
    "name": "eBoard shackle the Arduino",
    "version": "3.2.53",
    "sentence": "All in one library to run qfixSoccerBoard code on the Arduino"
  },
  {
    "name": "eBtn",
    "version": "1.0.0",
    "sentence": "A library to handle Buttons based on events."
  },
  {
    "name": "eFLL",
    "version": "1.4.1",
    "sentence": "eFLL (Embedded Fuzzy Logic Library)."
  },
  {
    "name": "eFlexPwm",
    "version": "0.2.11",
    "sentence": "Arduino eFlexPwm library for Teensy 4.x"
  },
  {
    "name": "eForth1",
    "version": "2.4.0",
    "sentence": "eForth for Arduino UNO"
  },
  {
    "name": "eHaJo Absolute Pressure Addon",
    "version": "1.0.0",
    "sentence": "Support for I²C absolute pressure board with WSEN-PADS chip."
  },
  {
    "name": "eHaJo LM75-Addon-Board",
    "version": "1.0.1",
    "sentence": "Support for I²C digital temperature sensor addon-board LM75."
  },
  {
    "name": "eOS",
    "version": "1.2.0",
    "sentence": "ETC EOS library for OSC"
  },
  {
    "name": "easyConfig",
    "version": "1.4.0",
    "sentence": "WebPortal and WiFi management for ESP32/ESP8266"
  },
  {
    "name": "easyLiDAR",
    "version": "0.0.1",
    "sentence": "Using vl53l5cx(tof64) LiDAR driver easy."
  },
  {
    "name": "eeprom_25AA02EXX",
    "version": "1.1.0",
    "sentence": "Library to read and write Microchip SPI EEPROM 25AA02E48 or 25AA02E64"
  },
  {
    "name": "efont Unicode Font Data",
    "version": "1.0.9",
    "sentence": "Arduino Unicode Font libraries."
  },
  {
    "name": "egoShieldS",
    "version": "1.1.1",
    "sentence": "Library offering support for uStepper S egoShield"
  },
  {
    "name": "egoShieldTeach",
    "version": "1.1.0",
    "sentence": "Library offering support for uStepper egoShield"
  },
  {
    "name": "egoShieldTimeLapse",
    "version": "1.1.0",
    "sentence": "Library offering support for uStepper egoShield"
  },
  {
    "name": "elapsedMillis",
    "version": "1.0.6",
    "sentence": "Makes coding responsive sketches easier."
  },
  {
    "name": "electricui-embedded",
    "version": "0.8.0",
    "sentence": "Connect your microcontroller to a high performance user interface, run entirely locally and under your control."
  },
  {
    "name": "electuno",
    "version": "0.1.3",
    "sentence": "Electuno library, simulates vintage organ sound type Electone or Hammond."
  },
  {
    "name": "elk",
    "version": "2.2.0",
    "sentence": "Tiny JavaScript Engine"
  },
  {
    "name": "ellipse",
    "version": "0.1.4",
    "sentence": "Arduino library for ellipse class"
  },
  {
    "name": "eloquent_remote",
    "version": "0.0.2",
    "sentence": "Access your ESP32 camera stream from anywhere in the world"
  },
  {
    "name": "em4095",
    "version": "1.0.1",
    "sentence": "A library for reading and writing rfid chips with em4095 and esp32"
  },
  {
    "name": "emGUI",
    "version": "1.0.0",
    "sentence": "GUI for embedded devices"
  },
  {
    "name": "emWin",
    "version": "1.0.6",
    "sentence": "emWin V6.46 Professional graphics library"
  },
  {
    "name": "enum_asukiaaa",
    "version": "1.0.2",
    "sentence": "A library to share enum on arduino."
  },
  {
    "name": "escornabot",
    "version": "0.2.1",
    "sentence": "Arduino library for control of the Escornabot robot"
  },
  {
    "name": "escposprinter",
    "version": "1.0.2",
    "sentence": "Library for ESC/POS Printer"
  },
  {
    "name": "esp-brookesia",
    "version": "0.4.2",
    "sentence": "ESP-Brookesia is a human-machine interaction development framework designed for AIoT devices."
  },
  {
    "name": "esp-echonet-lite",
    "version": "0.0.3",
    "sentence": "Echonet Lite library for ESP"
  },
  {
    "name": "esp-fipsy",
    "version": "0.0.20241004",
    "sentence": "Fipsy FPGA programmer."
  },
  {
    "name": "esp-fs-webserver",
    "version": "2.0.6",
    "sentence": "From FSBrowser.ino example to library"
  },
  {
    "name": "esp-iot-core",
    "version": "0.7.0",
    "sentence": "A framework to implement IoT devices/gateways based on the ESP8266/ESP32 hardware."
  },
  {
    "name": "esp-lib-utils",
    "version": "0.2.0",
    "sentence": "esp-lib-utils is a library designed for ESP SoCs to provide utility functions, including logging, checking, and memory."
  },
  {
    "name": "esp32-BG95",
    "version": "1.0.6",
    "sentence": "BGxx modem - GPRS and LTE communications"
  },
  {
    "name": "esp32-BLE112",
    "version": "1.0.3",
    "sentence": "BLE112 - BLE modem"
  },
  {
    "name": "esp32-ds18b20",
    "version": "2.0.2",
    "sentence": "Minimal, non-blocking, DS18B20 sensor library for ESP32 using RMT pheripheral, supports multiple sensors, lightweight, no dependencies, will need Arduino esp32 3.x based on IDF 5.X"
  },
  {
    "name": "esp32-flashz",
    "version": "1.1.5",
    "sentence": "ESP32-FlashZ arduino library"
  },
  {
    "name": "esp32-rmt-ir",
    "version": "1.0.2",
    "sentence": "Minimal, non-blocking, IR library for ESP32 using RMT pheripheral, supports NEC, Sony, Samsung and RC5 transmit and receive, lightweight, no dependencies, will need Arduino esp32 3.x based on IDF 5.X"
  },
  {
    "name": "esp32FOTA",
    "version": "0.2.9",
    "sentence": "A simple library for firmware OTA updates"
  },
  {
    "name": "esp32_codec2",
    "version": "1.0.5",
    "sentence": "Codec2 Arduino library for ESP32."
  },
  {
    "name": "esp32_epd",
    "version": "1.0.8",
    "sentence": "A library that makes coding a E-paper a breeze."
  },
  {
    "name": "esp32_ftpclient",
    "version": "0.1.4",
    "sentence": "An FTP-Client for the ESP32."
  },
  {
    "name": "esp32_gamepad",
    "version": "1.0.1",
    "sentence": "connect ESP32 to SteelSeries:Free bluetooth gamepad."
  },
  {
    "name": "esp32_https_server_compat",
    "version": "1.0.0",
    "sentence": "An Arduino library for an alternative ESP32 HTTP/HTTPS web server implementation"
  },
  {
    "name": "esp32_idf5_https_server_compat",
    "version": "1.1.1",
    "sentence": "An Arduino library for an alternative ESP32 HTTP/HTTPS web server implementation"
  },
  {
    "name": "esp32_moga",
    "version": "1.0.0",
    "sentence": "connect ESP32 to MOGA bluetooth gamepads"
  },
  {
    "name": "esp32_opus",
    "version": "1.0.3",
    "sentence": "OPUS Arduino library for ESP32."
  },
  {
    "name": "esp8266-framework",
    "version": "1.1.5",
    "sentence": "esp8266 framework stack for easy configurable applications"
  },
  {
    "name": "esp8266-google-home-notifier",
    "version": "1.0.8",
    "sentence": "Send notifications to Google Home from esp8266/32."
  },
  {
    "name": "esp8266-google-tts",
    "version": "1.1.0",
    "sentence": "generate the link to speech mp3 on esp8266/32."
  },
  {
    "name": "esp826611",
    "version": "1.0.16",
    "sentence": "Arduino library for DHT11, DHT22, etc Temp & Humidity Sensors"
  },
  {
    "name": "esp8266_mdns",
    "version": "1.1.8",
    "sentence": "mDNS queries and responses on esp8266."
  },
  {
    "name": "esp8266channel3lib",
    "version": "1.0.0",
    "sentence": "Analogue TV Out with an ESP8266!"
  },
  {
    "name": "esp_abus",
    "version": "0.0.6",
    "sentence": "ABUS Socket Communication library for PLCs (Cybro-2 and Cybro-3) from Cybrotech and ESP32 / ESP8266 over WiFi"
  },
  {
    "name": "esp_dmx",
    "version": "4.1.0",
    "sentence": "Transmit and receive DMX and RDM using an ESP32."
  },
  {
    "name": "esp_sds011",
    "version": "2.2.0",
    "sentence": "ESP8266/ESP32 library for the SDS011 particulate matter sensor."
  },
  {
    "name": "espwifiarduino",
    "version": "0.0.3",
    "sentence": "Library for espwifiarduino board"
  },
  {
    "name": "ev3-arduino",
    "version": "0.1.1",
    "sentence": "Enables the communication with an ev3 brick"
  },
  {
    "name": "ev3lego",
    "version": "2.1.0",
    "sentence": "PID controlled motor"
  },
  {
    "name": "everytime",
    "version": "1.0.0",
    "sentence": "A easy to use library for periodic code execution."
  },
  {
    "name": "evive",
    "version": "2.0.3",
    "sentence": "This ia a arduino libray for using evive."
  },
  {
    "name": "evo_bsp",
    "version": "1.1.0",
    "sentence": "Evo BSP components"
  },
  {
    "name": "evo_build_template",
    "version": "1.1.0",
    "sentence": "Evo Build Template"
  },
  {
    "name": "evo_pmux_csr",
    "version": "1.0.1",
    "sentence": "Evo PMUX CSR"
  },
  {
    "name": "evo_servo",
    "version": "1.0.0",
    "sentence": "Evo Servo"
  },
  {
    "name": "extEEPROM",
    "version": "3.4.1",
    "sentence": "Arduino library to support external I2C EEPROMs."
  },
  {
    "name": "extendFor",
    "version": "0.0.1",
    "sentence": "Add and subtract from 0 to 10 in 2 steps each."
  },
  {
    "name": "ezAnalogKeypad",
    "version": "1.0.2",
    "sentence": "Analog Keypad and Analog Buttons library for Arduino, ESP32"
  },
  {
    "name": "ezButton",
    "version": "1.0.6",
    "sentence": "Button library for Arduino, ESP32, ESP8266..."
  },
  {
    "name": "ezBuzzer",
    "version": "1.0.0",
    "sentence": "Buzzer library for Arduino"
  },
  {
    "name": "ezLED",
    "version": "1.0.1",
    "sentence": "LED library for Arduino"
  },
  {
    "name": "ezOutput",
    "version": "1.2.0",
    "sentence": "Output library for Arduino"
  },
  {
    "name": "ezTime",
    "version": "0.8.3",
    "sentence": "ezTime - pronounced \"Easy Time\" - is a very easy to use Arduino time and date library that provides NTP network time lookups, extensive timezone support, formatted time and date strings, user events, millisecond precision and more."
  },
  {
    "name": "ez_SIPO8_lib",
    "version": "1.0.8",
    "sentence": "Support for multiple serial-in/paralle-out (SIPO) shift registers."
  },
  {
    "name": "ez_switch_lib",
    "version": "3.0.1",
    "sentence": "Support for single and multiple switches for Arduino and ESP 32 microcontrollers."
  },
  {
    "name": "fANSI",
    "version": "1.1.0",
    "sentence": "Control the PC screen using ANSI graphics"
  },
  {
    "name": "fDigitsSegtPin",
    "version": "1.1.7",
    "sentence": "Power the basic 4 digit 7 segment display"
  },
  {
    "name": "fastIO",
    "version": "1.1.0",
    "sentence": "Fast pin control for ATmega328."
  },
  {
    "name": "fast_math",
    "version": "0.2.3",
    "sentence": "Arduino library for fast math algorithms"
  },
  {
    "name": "fast_samd21_tc",
    "version": "0.3.0",
    "sentence": "TC3, TC4 or TC5 timer library for SAMD21 microcontrollers."
  },
  {
    "name": "fishyDIYdevices",
    "version": "1.0.0",
    "sentence": "A library to simplify creating, operating, and using your DIY Internet of Things devices using NodeMCU (ESP8266) devices."
  },
  {
    "name": "fix_fft",
    "version": "1.0.0",
    "sentence": "A library for implementing fixed-point in-place Fast Fourier Transform on Arduino. It sacrifices precision and instead it is way faster than floating-point implementations."
  },
  {
    "name": "fixed",
    "version": "1.0.0",
    "sentence": "Implementation of fixed poind calculations"
  },
  {
    "name": "flagsapi",
    "version": "1.0.0",
    "sentence": "Library for packing bits"
  },
  {
    "name": "flex_DST",
    "version": "1.0.1",
    "sentence": "A library for observing DST according to user predefined parameters."
  },
  {
    "name": "float16",
    "version": "0.3.0",
    "sentence": "Arduino library to implement float16 data type."
  },
  {
    "name": "float16ext",
    "version": "0.2.0",
    "sentence": "Arduino library to implement float16ext data type."
  },
  {
    "name": "floatToString",
    "version": "1.3.1",
    "sentence": "Provides a function to convert a float to a string with a specified number of digits after decimal."
  },
  {
    "name": "fmt",
    "version": "10.1.1",
    "sentence": "Port of the {fmt} library to Arduino"
  },
  {
    "name": "fog",
    "version": "1.0.1",
    "sentence": "Programming water mist."
  },
  {
    "name": "forcedBMX280",
    "version": "1.1.2",
    "sentence": "A library that makes using a BME280 or BMP280 easy and lightweight."
  },
  {
    "name": "fork-webbino-ahmsec",
    "version": "0.0.8",
    "sentence": "Experimental fork of Webbino library."
  },
  {
    "name": "fp64lib",
    "version": "1.1.20",
    "sentence": "Handcrafted 64-bit floating point routines for AVR/arduino microprocessors."
  },
  {
    "name": "frt",
    "version": "0.9.5",
    "sentence": "Lightweight, easy-to-use wrapper around the Arduino_FreeRTOS_Library."
  },
  {
    "name": "ft817",
    "version": "1.0.0",
    "sentence": "Serial CAT interface to control a Yaesu FT-817 transceiver"
  },
  {
    "name": "ftp32",
    "version": "1.0.0",
    "sentence": "FTP client for esp32"
  },
  {
    "name": "functional_button",
    "version": "1.0.0",
    "sentence": "simple button library"
  },
  {
    "name": "gButton",
    "version": "1.0.0",
    "sentence": "Provides an easy way to work with buttons and other momentary contact switches."
  },
  {
    "name": "generic-Arduino",
    "version": "0.1.1",
    "sentence": "Generic Arduino Headers, to increase compatibility of code."
  },
  {
    "name": "genieArduino",
    "version": "1.5.3",
    "sentence": "4D Systems ViSi-Genie library for Arduino"
  },
  {
    "name": "genieArduinoDEV",
    "version": "1.0.5",
    "sentence": "4D Systems ViSi-Genie library for Arduino, DEV *STABLE*"
  },
  {
    "name": "geomath",
    "version": "0.1.1",
    "sentence": "Arduino library with geographic math functions."
  },
  {
    "name": "gfxDraw",
    "version": "0.4.1",
    "sentence": "GFXDraw is a powerful and easy-to-use GUI library for Arduino offering path-based vector drawing for displays with GFX support."
  },
  {
    "name": "ggwave",
    "version": "0.1.10",
    "sentence": "Tiny data-over-sound library<br/><br/>"
  },
  {
    "name": "ghaemShopSmSim",
    "version": "3.1.0",
    "sentence": "arduino SMS Remote Controler over ghaemShopSmSim protocol"
  },
  {
    "name": "ghostl",
    "version": "1.0.1",
    "sentence": "Lock-free queue; C++ coroutines; and a nano-sized C++ STL adapter for MCUs like ESP8266/ESP32."
  },
  {
    "name": "glpi_esp8266",
    "version": "0.0.2",
    "sentence": "It performs the integration between the GLPi system and the ESP8266"
  },
  {
    "name": "gma3",
    "version": "4.0.0",
    "sentence": "GrandMA3 library for OSC"
  },
  {
    "name": "gmp-ino",
    "version": "0.1.0",
    "sentence": "GNU Multiple Precision (GMP) Arithmetic Library for Arduino."
  },
  {
    "name": "gob_unifiedButton",
    "version": "0.1.7",
    "sentence": "Add touch buttons for CoreS3 / Tough and commonality with conventional buttons (M5.BtnX)"
  },
  {
    "name": "goblin3d",
    "version": "0.0.2",
    "sentence": "Graphics engine for rendering 3D wireframe on monochromatic displays and TFT LCDs without any dependency required for Arduino platform."
  },
  {
    "name": "gpiobj",
    "version": "0.5.0",
    "sentence": "Manage and access GPIOs as objects."
  },
  {
    "name": "gyroturn",
    "version": "1.5.1",
    "sentence": "Gyro Turn Interface for Arduino"
  },
  {
    "name": "hackAIR",
    "version": "1.0.0",
    "sentence": "A library for using a variety of air quality sensors."
  },
  {
    "name": "haversine",
    "version": "1.0.0",
    "sentence": "A library to find the distance and azimuth angle between two GPS cordinates based on haversine formula."
  },
  {
    "name": "hd44780",
    "version": "1.3.2",
    "sentence": "Extensible hd44780 LCD library."
  },
  {
    "name": "hellothing_BG96_NBIoT",
    "version": "2.0.2",
    "sentence": "NB-IoT library for hellothing BG96 Arduino shield"
  },
  {
    "name": "hellschreiberlib",
    "version": "0.1.0",
    "sentence": "Modulate Hellscriber OOK signal"
  },
  {
    "name": "heltec-eink-modules",
    "version": "4.4.0",
    "sentence": "Third party graphics library for Heltec E-Ink modules."
  },
  {
    "name": "high-side-switch-ino",
    "version": "1.2.0",
    "sentence": "C++ library for the Infineon PROFET high-side switch product family"
  },
  {
    "name": "home-assistant-integration",
    "version": "2.1.0",
    "sentence": "Home Assistant MQTT integration for Arduino"
  },
  {
    "name": "homecontrol-mqtt",
    "version": "1.0.0",
    "sentence": "A client library for MQTT messaging."
  },
  {
    "name": "hp_BH1750",
    "version": "1.0.2",
    "sentence": "Digital light sensor breakout boards containing the BH1750FVI IC"
  },
  {
    "name": "hsmcpp",
    "version": "1.0.2",
    "sentence": "C++ library for Hierarchical State Machines (HSM, FSM)"
  },
  {
    "name": "htcw_bits",
    "version": "1.0.16",
    "sentence": "Provides advanced bit manipulation"
  },
  {
    "name": "htcw_button",
    "version": "0.3.0",
    "sentence": "Provides button functionality"
  },
  {
    "name": "htcw_data",
    "version": "1.4.3",
    "sentence": "Provides STL free containers"
  },
  {
    "name": "htcw_gfx",
    "version": "2.0.9",
    "sentence": "Provides cross platform graphics"
  },
  {
    "name": "htcw_io",
    "version": "1.2.3",
    "sentence": "Provides STL free streams"
  },
  {
    "name": "htcw_json",
    "version": "0.2.4",
    "sentence": "Provides JSON parsing"
  },
  {
    "name": "htcw_lcd_miser",
    "version": "0.2.2",
    "sentence": "Provides a timeout for your LCD backlight"
  },
  {
    "name": "htcw_ml",
    "version": "0.2.4",
    "sentence": "Provides HTML and XML parsing"
  },
  {
    "name": "htcw_rmt_led_strip",
    "version": "0.2.0",
    "sentence": "Provides neopixel driving facilities"
  },
  {
    "name": "htcw_uix",
    "version": "1.3.1",
    "sentence": "Provides cross user interface functionality"
  },
  {
    "name": "hueDino",
    "version": "1.0.1",
    "sentence": "Philips Hue library for Arduino."
  },
  {
    "name": "hw262",
    "version": "2.0.4",
    "sentence": "A library that enables the use of the HW262 shield."
  },
  {
    "name": "hx1838decoder",
    "version": "1.0.0",
    "sentence": "A simple IR Decoder for HX1388 type receivers."
  },
  {
    "name": "hx710b_arduino",
    "version": "1.0.0",
    "sentence": "Arduino library for Air Pressure Sensor HX710B."
  },
  {
    "name": "i2c-for-esp32",
    "version": "0.4.3",
    "sentence": "I2C library for ESP32 (unofficial)"
  },
  {
    "name": "i2c_adc_ads7828",
    "version": "2.0.2",
    "sentence": "Arduino library for the Texas Instruments ADS7828 12-bit, 8-channel I2C A/D converter."
  },
  {
    "name": "i2cdetect",
    "version": "1.0.0",
    "sentence": "Arduino library for scanning I2C bus for devices"
  },
  {
    "name": "iAQ-CoreMI",
    "version": "0.0.2",
    "sentence": "A library for the Austria Microsystems iAQ-Core Air Quality Sensor."
  },
  {
    "name": "iBit_Arduino",
    "version": "1.0.2",
    "sentence": "A control library for iBit Board."
  },
  {
    "name": "iBotX",
    "version": "1.0.0",
    "sentence": "Arduino library for \"i-Bot X\" to be used in i-Bot Camp by Robot Club KMITL (Thailand)"
  },
  {
    "name": "iKB1_Arduino",
    "version": "0.5.1",
    "sentence": "A control library for IKB-1 Extension I/O Board."
  },
  {
    "name": "iMakeBeta",
    "version": "1.0.3",
    "sentence": "Library for beginner."
  },
  {
    "name": "iMakerPS2",
    "version": "0.0.1",
    "sentence": "A library that allows interfacing with PlayStation 1/2 controllers"
  },
  {
    "name": "iParol",
    "version": "1.0.2",
    "sentence": "Library for controlling a matrix of LEDs using LedControl."
  },
  {
    "name": "iSYNC",
    "version": "0.2.4",
    "sentence": "A library that makes Internet of Things for iSYNC IoT Cloud Platform."
  },
  {
    "name": "iSYNC_BC95_Arduino",
    "version": "0.8.4",
    "sentence": "A network library for BC95 NB-IOT module on Arduino platform (iSYNC.pro platform support)."
  },
  {
    "name": "iarduino Frequency",
    "version": "1.0.2",
    "sentence": "Библиотека для определения частоты на аналоговом входе."
  },
  {
    "name": "iarduino GSM",
    "version": "1.1.2",
    "sentence": "Библиотека для работы с GSM/GPRS Shield A6 и GSM/GPRS Shield A9."
  },
  {
    "name": "iarduino_4LED",
    "version": "1.0.6",
    "sentence": "Библиотека для работы с 4 разрядным LED индикатором"
  },
  {
    "name": "iarduino_ACS712",
    "version": "1.0.2",
    "sentence": "Библиотека для работы с аналоговым датчиком тока ACS712 (Analog Current Sensor)"
  },
  {
    "name": "iarduino_ADC_CS1237",
    "version": "1.0.4",
    "sentence": "Библиотека для работы с одноканальным дифференциальным АЦП CS1237."
  },
  {
    "name": "iarduino_AM2320",
    "version": "1.1.4",
    "sentence": "Библиотека для работы с датчиком температуры и влажности AM2320"
  },
  {
    "name": "iarduino_APDS9930",
    "version": "1.0.4",
    "sentence": "Библиотека для работы датчиком освещённости APDS9930."
  },
  {
    "name": "iarduino_Bluetooth_HC05",
    "version": "1.1.3",
    "sentence": "Библиотека для работы с Bluetooth Trema-модулем HC05."
  },
  {
    "name": "iarduino_DHT",
    "version": "1.1.2",
    "sentence": "Библиотека для работы с датчиками температуры и влажности DHT11 и(или) DHT22."
  },
  {
    "name": "iarduino_DS18XXX",
    "version": "1.0.2",
    "sentence": "Библиотека для работы с датчиками температуры: «DS18S20», «DS18B20», «DS1822»."
  },
  {
    "name": "iarduino_Encoder_tmr",
    "version": "1.0.3",
    "sentence": "Библиотека для работы с энкодерами используя второй аппаратный таймер."
  },
  {
    "name": "iarduino_GPS_ATGM336",
    "version": "1.1.2",
    "sentence": "Библиотека управления GPS модулем ATGM336."
  },
  {
    "name": "iarduino_GPS_NMEA",
    "version": "1.1.2",
    "sentence": "Библиотека парсинга протокола NMEA."
  },
  {
    "name": "iarduino_GprsClient_A9",
    "version": "1.0.2",
    "sentence": "Arduino Client for ai-thinker A9 GPRS modem"
  },
  {
    "name": "iarduino_HC_SR04",
    "version": "1.0.3",
    "sentence": "Библиотека для работы с ультразвуковым датчиком расстояния HC-SR04."
  },
  {
    "name": "iarduino_HC_SR04_int",
    "version": "1.0.3",
    "sentence": "Библиотека для работы с ультразвуковым датчиком расстояния HC-SR04."
  },
  {
    "name": "iarduino_HC_SR04_tmr",
    "version": "1.0.2",
    "sentence": "Библиотека для работы с ультразвуковым датчиком расстояния HC-SR04."
  },
  {
    "name": "iarduino_Hexapod",
    "version": "1.0.2",
    "sentence": "Библиотека для управления Hexapod'ом (шестиногим пауком), через MultiServoShield."
  },
  {
    "name": "iarduino_I2C_4LED",
    "version": "1.0.5",
    "sentence": "Библиотека для работы с I2C-flash LED индикатором."
  },
  {
    "name": "iarduino_I2C_Address",
    "version": "1.0.4",
    "sentence": "Библиотека установки адресов для модулей серии FLASH-I2C."
  },
  {
    "name": "iarduino_I2C_Bumper",
    "version": "1.0.9",
    "sentence": "Библиотека для работы с I2C-flash модулем бампер."
  },
  {
    "name": "iarduino_I2C_DSL",
    "version": "1.0.5",
    "sentence": "Библиотека для работы с I2C-flash датчиком освещённости."
  },
  {
    "name": "iarduino_I2C_Encoder",
    "version": "1.1.4",
    "sentence": "Библиотека для работы с I2C-flash модулем энкодер-потенциометр."
  },
  {
    "name": "iarduino_I2C_Expander",
    "version": "1.1.0",
    "sentence": "Библиотека для работы с I2C-flash модулем расширитель выводов."
  },
  {
    "name": "iarduino_I2C_IO",
    "version": "1.1.3",
    "sentence": "Библиотека для работы с Trema I2C расширителями выводов."
  },
  {
    "name": "iarduino_I2C_IR",
    "version": "1.0.3",
    "sentence": "Библиотека для работы с I2C-flash модулем ИК-приёмник/передатчик."
  },
  {
    "name": "iarduino_I2C_Joystick",
    "version": "1.0.4",
    "sentence": "Библиотека для работы с I2C-flash модулем джойстик."
  },
  {
    "name": "iarduino_I2C_Keyboard",
    "version": "1.0.4",
    "sentence": "Библиотека для работы с I2C-flash клавиатурой."
  },
  {
    "name": "iarduino_I2C_Matrix_8x8",
    "version": "1.0.8",
    "sentence": "Библиотека для работы с I2C-flash светодиодной матрицей 8x8."
  },
  {
    "name": "iarduino_I2C_Motor",
    "version": "1.1.6",
    "sentence": "Библиотека для работы с I2C-flash драйвером мотора."
  },
  {
    "name": "iarduino_I2C_ORP",
    "version": "1.0.4",
    "sentence": "Библиотека для работы с I2C-flash модулем ORP-метр."
  },
  {
    "name": "iarduino_I2C_Relay",
    "version": "1.1.7",
    "sentence": "Библиотека для работы с I2C-flash модулями силовых ключей и реле."
  },
  {
    "name": "iarduino_I2C_SHT",
    "version": "1.0.7",
    "sentence": "Библиотека для работы с I2C-flash датчиком температуры и влажности."
  },
  {
    "name": "iarduino_I2C_Software",
    "version": "1.0.4",
    "sentence": "Библиотека для работы с программной шиной I2C."
  },
  {
    "name": "iarduino_I2C_TDS",
    "version": "1.3.3",
    "sentence": "Библиотека для работы с I2C-flash модулем TDS/EC-метр."
  },
  {
    "name": "iarduino_I2C_Track",
    "version": "1.0.6",
    "sentence": "Библиотека для работы с I2C-flash модулями трассы."
  },
  {
    "name": "iarduino_I2C_connect",
    "version": "1.1.3",
    "sentence": "Библиотека для удобства соединения нескольких Arduino по шине I2C."
  },
  {
    "name": "iarduino_I2C_pH",
    "version": "1.2.3",
    "sentence": "Библиотека для работы с I2C-flash модулем pH-метр."
  },
  {
    "name": "iarduino_IR",
    "version": "1.0.3",
    "sentence": "Библиотека для работы с ИК-приёмником и(или) ИК-передатчиком."
  },
  {
    "name": "iarduino_IR_Thermometer",
    "version": "1.0.1",
    "sentence": "Библиотека позволяет работать с ИК-термометром на базе чипа MLX90614ESF-AAA"
  },
  {
    "name": "iarduino_KB",
    "version": "1.0.1",
    "sentence": "Библиотека для работы с матричными клавиатурами"
  },
  {
    "name": "iarduino_MB_HTL",
    "version": "1.0.3",
    "sentence": "Библиотека для работы с модулем датчиков влажности (H), температуры (T) и освещённости (L) по протоколу Modbus RTU/ASCII."
  },
  {
    "name": "iarduino_MB_Pump",
    "version": "1.0.5",
    "sentence": "Библиотека для работы с насосами по протоколу Modbus RTU/ASCII."
  },
  {
    "name": "iarduino_MB_ShtSgpLtr",
    "version": "1.0.4",
    "sentence": "Библиотека для работы с модулем климатических датчиков по протоколу Modbus RTU/ASCII."
  },
  {
    "name": "iarduino_MB_Socket",
    "version": "1.0.4",
    "sentence": "Библиотека для работы с розеткой по протоколу Modbus RTU/ASCII."
  },
  {
    "name": "iarduino_MB_TDS",
    "version": "1.1.5",
    "sentence": "Библиотека для работы с TDS/EC-метром (датчиком минерализации жидкости) по протоколу Modbus RTU/ASCII."
  },
  {
    "name": "iarduino_MB_eCO2",
    "version": "1.0.3",
    "sentence": "Библиотека для работы с датчиком углекислого газа по протоколу Modbus RTU/ASCII."
  },
  {
    "name": "iarduino_MB_pH",
    "version": "1.2.5",
    "sentence": "Библиотека для работы с pH-метром (датчиком кислотности жидкости) по протоколу Modbus RTU/ASCII."
  },
  {
    "name": "iarduino_Metro",
    "version": "1.3.5",
    "sentence": "Библиотека для работы с модулями из линейки Metro."
  },
  {
    "name": "iarduino_Modbus",
    "version": "1.0.3",
    "sentence": "Библиотека для работы с шиной UART->RS485 по протоколу Modbus RTU/ASCII."
  },
  {
    "name": "iarduino_MultiServo",
    "version": "1.1.5",
    "sentence": "Библиотека для работы с Multi Servo Shield рассчитанным для работы с 16 сервоприводами."
  },
  {
    "name": "iarduino_NeoPixel",
    "version": "1.0.2",
    "sentence": "Библиотека для работы с адресными светодиодами WS2812B"
  },
  {
    "name": "iarduino_OLED",
    "version": "1.2.3",
    "sentence": "Библиотека для работы с OLED дисплеями 128x64."
  },
  {
    "name": "iarduino_OLED_txt",
    "version": "1.2.3",
    "sentence": "Библиотека для вывода текста и чисел на OLED дисплеи 128x64."
  },
  {
    "name": "iarduino_PCA9555",
    "version": "1.0.2",
    "sentence": "Библиотека для работы с I2C расширителем выводов PCA9555."
  },
  {
    "name": "iarduino_Position_BMX055",
    "version": "1.2.4",
    "sentence": "Библиотека для работы с Trema модулем IMU 9 DOF на базе чипа BMX055."
  },
  {
    "name": "iarduino_Pressure_BMP",
    "version": "2.0.5",
    "sentence": "Библиотека для работы с датчиками атмосферного давления и температуры BMP180 и(или) BMP280."
  },
  {
    "name": "iarduino_REG_595",
    "version": "1.0.3",
    "sentence": "Библиотека для работы с 8-и битными сдвиговыми регистрами HC595/HTC595."
  },
  {
    "name": "iarduino_RF433",
    "version": "1.0.2",
    "sentence": "Библиотека для работы с радиопередатчиком FS1000A и(или) радиоприёмником MX-RM-5V, работающими на частоте 433,920 МГц."
  },
  {
    "name": "iarduino_RTC",
    "version": "2.0.6",
    "sentence": "Библиотека для работы с часами реального времени."
  },
  {
    "name": "iarduino_SensorPulse",
    "version": "1.0.3",
    "sentence": "Библиотека для работы с датчиком пульса."
  },
  {
    "name": "iarduino_VCC",
    "version": "1.0.1",
    "sentence": "Библиотека для получения напряжения питания Arduino."
  },
  {
    "name": "iarduino_VpH",
    "version": "1.0.0",
    "sentence": "Библиотека для преобразования напряжения с щупа pH-метра в кислотность жидкости."
  },
  {
    "name": "iarduino_Wattmeter",
    "version": "1.0.0",
    "sentence": "Библиотека для работы с датчиком тока и напряжения ..."
  },
  {
    "name": "iarduino_nLED",
    "version": "1.0.3",
    "sentence": "Библиотека для работы с последовательными LED индикаторами."
  },
  {
    "name": "imuFilter",
    "version": "1.6.3",
    "sentence": "Sensor fusion for an IMU to obtain heading and velocity."
  },
  {
    "name": "incbin",
    "version": "0.1.2",
    "sentence": "Include binary and text files in your Arduino project with ease."
  },
  {
    "name": "indhilib",
    "version": "3.0.5",
    "sentence": "ESP32 developer library for using with Indhi platform."
  },
  {
    "name": "infiniteAverage",
    "version": "0.1.7",
    "sentence": "Experimental Arduino Library to calculate a high precision average of many samples"
  },
  {
    "name": "integer24",
    "version": "0.1.2",
    "sentence": "integer24 types uint24_t and int24_t for Arduino."
  },
  {
    "name": "iocontrol",
    "version": "1.0.2",
    "sentence": "iocontrol.ru interface for Arduino IDE"
  },
  {
    "name": "iotNetESP32",
    "version": "1.0.1",
    "sentence": "A library for ESP32 providing WiFi, MQTT, and HTTP client functionality for IoT applications."
  },
  {
    "name": "iotec_MAX7319",
    "version": "1.0.0",
    "sentence": "A library for using the MAX7319 from MAXIM Integrated."
  },
  {
    "name": "iotsa",
    "version": "2.7.0",
    "sentence": "An Internet Of Things Server Architecture for ESP8266."
  },
  {
    "name": "ipMIDI",
    "version": "1.0.3",
    "sentence": "ipMIDI for Arduino"
  },
  {
    "name": "irBoard Library for ESP32",
    "version": "1.0.0",
    "sentence": "This library is to become a host of irBoard app by the ESP32 device."
  },
  {
    "name": "is31fl3733",
    "version": "1.0.1",
    "sentence": "This is arduino library for IC ISSI IS31FL3733A"
  },
  {
    "name": "jeager-one",
    "version": "1.0.0",
    "sentence": "Easy use of jeager connection with LoRa, WiFi, and GSM connections"
  },
  {
    "name": "jm_CPPM",
    "version": "1.0.1",
    "sentence": "A CPPM Library for Arduino."
  },
  {
    "name": "jm_LCM2004A_I2C",
    "version": "1.0.2",
    "sentence": "jm_LCM2004A_I2C Arduino Library."
  },
  {
    "name": "jm_LiquidCrystal_I2C",
    "version": "1.0.2",
    "sentence": "My enhanced fm_LiquidCrystal_I2C Arduino Library."
  },
  {
    "name": "jm_PCF8574",
    "version": "1.0.7",
    "sentence": "PCF8574 Arduino Library."
  },
  {
    "name": "jm_Pin",
    "version": "1.0.3",
    "sentence": "Pin Arduino Library."
  },
  {
    "name": "jm_Scheduler",
    "version": "1.1.0",
    "sentence": "A Cooperative Scheduler Library for Arduino."
  },
  {
    "name": "jm_Wire",
    "version": "1.0.1",
    "sentence": "Revisited Arduino Wire Library."
  },
  {
    "name": "jm_crc-ccitt",
    "version": "1.0.0",
    "sentence": "jm_crc-ccitt CRC-CCITT Arduino Library."
  },
  {
    "name": "joystick_module",
    "version": "1.0.0",
    "sentence": "Provide function to using joystick module"
  },
  {
    "name": "jsnsr04t",
    "version": "1.1.0",
    "sentence": "A library that provides a simple to use object for using JSN-SR-04T ultrasonic measure board."
  },
  {
    "name": "json2asw",
    "version": "0.0.2",
    "sentence": "Reads json sf2 data from a file and converts it to a Teensy Audio Library AudioSynthWavetable::instrument_data object."
  },
  {
    "name": "jsonlib",
    "version": "0.1.1",
    "sentence": "A simple JSON parsing library."
  },
  {
    "name": "jsons",
    "version": "0.4.0",
    "sentence": "Read and write JSON documents as a stream."
  },
  {
    "name": "kMeans",
    "version": "1.1.3",
    "sentence": "k-Means Arduino library - Unsupervised machine learning clustering method of vector quantization."
  },
  {
    "name": "kRPC",
    "version": "0.5.4",
    "sentence": "Client library for kRPC, a Remote Procedure Call server for Kerbal Space Program."
  },
  {
    "name": "kc868-arduino-library",
    "version": "1.0.1",
    "sentence": "KC868 library for Arduino"
  },
  {
    "name": "keyboardButton",
    "version": "1.0.1",
    "sentence": "Convinient way to map a push-button to a keyboard key. This library utilize the ability of 32u4-based Arduino-compatible boards to emulate USB-keyboard."
  },
  {
    "name": "keyboard_peripheral_modules",
    "version": "0.1.8",
    "sentence": "A set of general modules for keyboard firmware."
  },
  {
    "name": "keybrd",
    "version": "0.6.7",
    "sentence": "A library for creating custom-keyboard firmware."
  },
  {
    "name": "kidLibrary",
    "version": "1.0.1",
    "sentence": "A multifunctional library for Arduino, starting with signal processing tools."
  },
  {
    "name": "kxnTask",
    "version": "1.0.2",
    "sentence": "Simple state machine"
  },
  {
    "name": "laboratorioFW-DIY",
    "version": "1.0.0",
    "sentence": "Biblioteca para uso com a placa Laboratório DIY - Franzininho Wifi."
  },
  {
    "name": "lansium-arduino",
    "version": "1.0.2",
    "sentence": "Connect board to Lansium Server"
  },
  {
    "name": "lazyjson",
    "version": "1.0.2",
    "sentence": "Lazy JSON parser for embedded systems"
  },
  {
    "name": "lcdgfx",
    "version": "1.1.5",
    "sentence": "VGA, SSD1306, SSD1331, SSD1325/SSD1327, SSD1351, IL9163/ST7735, ST7789, ILI9341, PCD8544, SH1106/SH1107 spi/i2c OLED/LED Display driver."
  },
  {
    "name": "ld2410",
    "version": "0.1.4",
    "sentence": "An Arduino library for the Hi-Link LD2410 24Ghz FMCW radar sensor."
  },
  {
    "name": "leOS",
    "version": "1.2.2",
    "sentence": "Simple scheduler that run little tasks within IRSs"
  },
  {
    "name": "leOS2",
    "version": "2.3.3",
    "sentence": "Simple scheduler based on watchdog that runs little tasks within IRS"
  },
  {
    "name": "ledflasher",
    "version": "1.0.0",
    "sentence": "Responsively flash LEDs"
  },
  {
    "name": "libCBOR",
    "version": "1.6.1",
    "sentence": "A CBOR (RFC 7049) processing library."
  },
  {
    "name": "libTrial",
    "version": "1.1.2",
    "sentence": "Library to add two numbers"
  },
  {
    "name": "libasm",
    "version": "1.6.52",
    "sentence": "Cross assembler and disassembler for retro CPUs"
  },
  {
    "name": "libcli",
    "version": "1.4.2",
    "sentence": "Command Line Interface library"
  },
  {
    "name": "libdivide",
    "version": "5.2.0",
    "sentence": "Optimised integer division."
  },
  {
    "name": "libedge",
    "version": "1.0.0",
    "sentence": "A client library for MQTT messaging."
  },
  {
    "name": "libnapc",
    "version": "1.5.40",
    "sentence": "libnapc implementation."
  },
  {
    "name": "liboshima",
    "version": "5.4.8",
    "sentence": "大島商船高等専門学校ロボット研究部用ライブラリ"
  },
  {
    "name": "light_CD74HC4067",
    "version": "1.0.1",
    "sentence": "A lightweight library for interfacing with CD74HC4067 Mux."
  },
  {
    "name": "linaGFX",
    "version": "0.1.2",
    "sentence": "Draw a line segment and one number on the memory."
  },
  {
    "name": "log4Esp",
    "version": "1.0.1",
    "sentence": "Extendable logging library for ESP8266"
  },
  {
    "name": "log4arduino",
    "version": "1.1.0",
    "sentence": "Lightweight, no-frills logging for Arduino and friends"
  },
  {
    "name": "looper",
    "version": "1.1.1",
    "sentence": "Proto-scheduler based on the use of millis()"
  },
  {
    "name": "loremipsum",
    "version": "0.1.0",
    "sentence": "An Arduino library to do lorem ipsum generation."
  },
  {
    "name": "losant-mqtt-arduino",
    "version": "2.0.1",
    "sentence": "MQTT library to easily communicate with the Losant IoT platform."
  },
  {
    "name": "lv_arduino",
    "version": "3.0.1",
    "sentence": "Full-featured Graphics Library for embedded systems"
  },
  {
    "name": "lv_examples",
    "version": "8.1.0",
    "sentence": "Examples for LVGL grapics library"
  },
  {
    "name": "lvgl",
    "version": "9.2.2",
    "sentence": "Full-featured Graphics Library for Embedded Systems"
  },
  {
    "name": "lvglCpp",
    "version": "0.1.6",
    "sentence": "LVGL C++ wrapper."
  },
  {
    "name": "lwIOLink",
    "version": "0.2.0",
    "sentence": "Lightweight IOLink Device library."
  },
  {
    "name": "lwIP",
    "version": "1.0.0",
    "sentence": "LWIP Library port for Arduino"
  },
  {
    "name": "lx16a-servo",
    "version": "0.9.3",
    "sentence": "Simple Arduino library to operate ALX-16A, LX-224, HTS-35H and LX-15D serial servos."
  },
  {
    "name": "m0_tweak",
    "version": "1.2.1",
    "sentence": "Bring out hardware performance of SAMD21 such as overclock."
  },
  {
    "name": "mDNSResolver",
    "version": "1.0.0",
    "sentence": "Resolves MDNS names for the ESP8266."
  },
  {
    "name": "mDash",
    "version": "1.2.16",
    "sentence": "Remote control and OTA for ESP32 via mdash.net IoT backend"
  },
  {
    "name": "mDriver",
    "version": "1.0.3",
    "sentence": "LM398n motor driver library(SKU:LM398n)."
  },
  {
    "name": "mPower",
    "version": "0.0.1",
    "sentence": "Control a Ubiquiti mPower pro IP power switch"
  },
  {
    "name": "mString",
    "version": "1.7.3",
    "sentence": "Static lightweight analog of String class"
  },
  {
    "name": "mWebSockets",
    "version": "1.6.0",
    "sentence": "Simple to use implementation of WebSockets for microcontrollers"
  },
  {
    "name": "madflight",
    "version": "1.3.1",
    "sentence": "Flight Controller for ESP32-S3 / ESP32 / RP2350 / RP2040 / STM32"
  },
  {
    "name": "map2bits",
    "version": "0.1.0",
    "sentence": "Arduino library for mapping a float to a number of bits."
  },
  {
    "name": "map2colour",
    "version": "0.2.1",
    "sentence": "Arduino library for mapping a float to colour spectrum"
  },
  {
    "name": "maqui",
    "version": "0.0.3",
    "sentence": "Library for the maqui sequencer"
  },
  {
    "name": "max7219",
    "version": "1.0.0",
    "sentence": "Lightweight library for the MAX7219 7 segment 8 digit display"
  },
  {
    "name": "mbino",
    "version": "2.0.0",
    "sentence": "Port of mbed OS 2 APIs to the Arduino platform"
  },
  {
    "name": "mc74hc595a",
    "version": "1.0.1",
    "sentence": "A library to use 8-Bit Serial-Input/Serial or Parallel-Output Shift mc74hc595a"
  },
  {
    "name": "mcp_can",
    "version": "1.5.1",
    "sentence": "MCP_CAN Library"
  },
  {
    "name": "mcp_canbus",
    "version": "1.0.0",
    "sentence": "A library for MCP2515"
  },
  {
    "name": "mcu-max",
    "version": "1.0.5",
    "sentence": "An MCU-optimized C-language chess game engine based on micro-Max."
  },
  {
    "name": "mcu-renderer",
    "version": "1.0.4",
    "sentence": "A low-resource graphics library, focused on rendering non-flickering, anti-aliased text on both monochrome and color LCD displays."
  },
  {
    "name": "mdif",
    "version": "1.0.2",
    "sentence": "Minimal Data Image Format (MDIF) is a lightweight image format with minimal data structure and integration with Diwa in mind that balances both simplicity and functionality."
  },
  {
    "name": "megaAVR_PWM",
    "version": "1.0.1",
    "sentence": "This library enables you to use Hardware-based PWM channels on megaAVR-based boards, such as UNO WiFi Rev2, AVR_Nano_Every, etc., to create and output PWM."
  },
  {
    "name": "megaAVR_Slow_PWM",
    "version": "1.2.1",
    "sentence": "This library enables you to use ISR-based PWM channels on an Arduino megaAVR board, such as UNO WiFi Rev2, AVR_Nano_Every, etc., to create and output PWM any GPIO pin."
  },
  {
    "name": "megaAVR_TimerInterrupt",
    "version": "1.7.0",
    "sentence": "This library enables you to use Interrupt from Hardware Timers on an Arduino megaAVR board, such as UNO WiFi Rev2, AVR_NANO_EVERY, etc."
  },
  {
    "name": "mergCBUS",
    "version": "1.0.1",
    "sentence": "Allow building Merg modules communicating with CBUS."
  },
  {
    "name": "micro Maqueen",
    "version": "1.1.1",
    "sentence": "Simple library for the DF Robot micro:Maqueen BBC Micro:Bit Robot"
  },
  {
    "name": "micro-ecc",
    "version": "1.0.0",
    "sentence": "uECC"
  },
  {
    "name": "micro-prompts",
    "version": "1.0.0",
    "sentence": "Client library for prompting LLMs"
  },
  {
    "name": "microDS18B20",
    "version": "3.10.0",
    "sentence": "Light library for DS18b20 sensor"
  },
  {
    "name": "microDS3231",
    "version": "2.7.0",
    "sentence": "Light library for DS3231 RTC module"
  },
  {
    "name": "microLED",
    "version": "3.6.0",
    "sentence": "Light library for addressable LEDs"
  },
  {
    "name": "microWire",
    "version": "2.2.0",
    "sentence": "Light library for I2C communication"
  },
  {
    "name": "micro_ros_arduino",
    "version": "3.0.0-iron",
    "sentence": "micro-ROS Arduino library"
  },
  {
    "name": "micro_ros_kaia",
    "version": "2.0.7-rolling.4",
    "sentence": "micro-ROS Arduino library with additional Kaia.ai message types"
  },
  {
    "name": "microgear-nbiot",
    "version": "0.8.0",
    "sentence": "NETPIE client library for BC95 NB-IOT module on Arduino platform."
  },
  {
    "name": "microlzw",
    "version": "1.1.0",
    "sentence": "Embeddable micro Lempel-Ziv-Welch compression library for strings."
  },
  {
    "name": "milesTag",
    "version": "0.1.0",
    "sentence": "An Arduino library to implement milesTag lasertag with an ESP32 using the RMT peripheral."
  },
  {
    "name": "millis64",
    "version": "0.1.1",
    "sentence": "Arduino library for millis64 micros64 millis32 micros32, time counters with optional offset."
  },
  {
    "name": "mimuz-ch55x",
    "version": "0.1.2",
    "sentence": "mi:muz (a part of MIDI) library for ch55xduino"
  },
  {
    "name": "minIniFS",
    "version": "1.0.0",
    "sentence": "Library to read and write .ini files."
  },
  {
    "name": "minbasecli",
    "version": "1.2.0",
    "sentence": "A minimal Command Line Interface C++ library implementation with HAL emphasis to be used in different kind of devices and frameworks."
  },
  {
    "name": "mini-ppm-info",
    "version": "1.0.1",
    "sentence": "Get PPM header information, relying only on enough data for the initial header"
  },
  {
    "name": "miniDAC",
    "version": "1.0.0",
    "sentence": "Library for Arduino miniDAC module by Tamojit Saha and Sandeepan Sengupta."
  },
  {
    "name": "mjson",
    "version": "1.2.7",
    "sentence": "JSON parser, emitter, and JSON-RPC engine"
  },
  {
    "name": "modbus-esp8266",
    "version": "4.1.0",
    "sentence": "Modbus Library for Arduino. ModbusRTU, ModbusTCP and ModbusTCP Security"
  },
  {
    "name": "modbusrtu",
    "version": "1.0.1",
    "sentence": "ModbusRTU implementation for Arduino."
  },
  {
    "name": "modem-freeRTOS",
    "version": "1.0.6",
    "sentence": "process to manage network interfaces"
  },
  {
    "name": "moduloMap",
    "version": "0.1.2",
    "sentence": "Arduino library for modulo mapping"
  },
  {
    "name": "monitor_printf",
    "version": "1.6.1",
    "sentence": "Provides a class with member function printf() that prints to a serial port."
  },
  {
    "name": "motix-btn99x0",
    "version": "1.1.0",
    "sentence": "Arduino library for the Infineon DC Motor Control Shield with BTN9970LV and BTN9990LV"
  },
  {
    "name": "motor system IC TLE956x",
    "version": "2.0.0",
    "sentence": "This library provides an interface for Infineons motor system IC TLE956x"
  },
  {
    "name": "movingAvg",
    "version": "2.3.2",
    "sentence": "A simple Arduino library for calculating moving averages."
  },
  {
    "name": "mpbToSwitch",
    "version": "3.0.3",
    "sentence": "An Arduino-Esp32 library that implements all kind of switches out of simple push buttons (Momentary Buttons)"
  },
  {
    "name": "mpu6050_FastAngles",
    "version": "1.0.2",
    "sentence": "Library for reading fast and accurate angles from the MPU6050 sensor with selectable filters."
  },
  {
    "name": "mqtt5nano",
    "version": "0.7.0",
    "sentence": "Mqtt5 based library implements remote command line and utilities. Supports the app at knotfree.net."
  },
  {
    "name": "mqtt_fuota_duino",
    "version": "1.0.1",
    "sentence": "Update the firmware of your IoT devices through MQTT protocol!"
  },
  {
    "name": "mr76_radar",
    "version": "1.0.0",
    "sentence": "Help you parse CAN data from MR76 radar from nanoradar aslo works for similar module like mr72."
  },
  {
    "name": "mrm-8x8a",
    "version": "0.0.7",
    "sentence": "CAN Bus library for MRMS mrm-8x8a, 8x8 LED array + switches"
  },
  {
    "name": "mrm-bldc2x50",
    "version": "0.0.6",
    "sentence": "CAN Bus library for MRMS mrm-bldc2x50, 2x50A BLDC motor controller"
  },
  {
    "name": "mrm-bldc4x2.5",
    "version": "0.0.4",
    "sentence": "CAN Bus library for MRMS mrm-bldc4x2.5, 4x2.5 A BLDC motor controller"
  },
  {
    "name": "mrm-board",
    "version": "0.0.12",
    "sentence": "CAN Bus library for MRMS mrm-board"
  },
  {
    "name": "mrm-can-bus",
    "version": "0.0.6",
    "sentence": "CAN Bus library"
  },
  {
    "name": "mrm-col-b",
    "version": "0.0.3",
    "sentence": "CAN Bus library for MRMS mrm-col-b"
  },
  {
    "name": "mrm-col-can",
    "version": "0.0.9",
    "sentence": "CAN Bus library for MRMS mrm-col-can"
  },
  {
    "name": "mrm-common",
    "version": "0.0.14",
    "sentence": "Common library for MRMS CAN Bus boards"
  },
  {
    "name": "mrm-fet-can",
    "version": "0.0.9",
    "sentence": "CAN Bus library for MRMS mrm-fet-can"
  },
  {
    "name": "mrm-imu",
    "version": "0.0.6",
    "sentence": "Library for Bosch BNO055 IMU for MRMS"
  },
  {
    "name": "mrm-ir-finder-can",
    "version": "0.0.2",
    "sentence": "CAN Bus library for MRMS mrm-ir-finder-can"
  },
  {
    "name": "mrm-ir-finder2",
    "version": "0.0.3",
    "sentence": "CAN Bus library for MRMS mrm-ir-finder2"
  },
  {
    "name": "mrm-ir-finder3",
    "version": "0.0.9",
    "sentence": "CAN Bus library for MRMS mrm-ir-finder3"
  },
  {
    "name": "mrm-lid-can-b",
    "version": "0.0.8",
    "sentence": "CAN Bus library for MRMS mrm-lid-can-b"
  },
  {
    "name": "mrm-lid-can-b2",
    "version": "0.0.9",
    "sentence": "CAN Bus library for MRMS mrm-lid-can-b2"
  },
  {
    "name": "mrm-lid-d",
    "version": "0.0.1",
    "sentence": "CAN Bus library for MRMS mrm-lid-d"
  },
  {
    "name": "mrm-lid1",
    "version": "0.0.3",
    "sentence": "Library for MRMS mrm-lid1 board"
  },
  {
    "name": "mrm-lid2",
    "version": "0.0.3",
    "sentence": "Library for MRMS mrm-lid2"
  },
  {
    "name": "mrm-mot2x50",
    "version": "0.0.5",
    "sentence": "CAN Bus library for MRMS mrm-mot2x50"
  },
  {
    "name": "mrm-mot4x10",
    "version": "0.0.5",
    "sentence": "CAN Bus library for MRMS mrm-mot4x10"
  },
  {
    "name": "mrm-mot4x3.6can",
    "version": "0.0.5",
    "sentence": "CAN Bus library for MRMS mrm-mot4x3.6can"
  },
  {
    "name": "mrm-node",
    "version": "0.0.7",
    "sentence": "CAN Bus library for MRMS mrm-node"
  },
  {
    "name": "mrm-pid",
    "version": "0.0.5",
    "sentence": "Library for a very simple PID"
  },
  {
    "name": "mrm-ref-can",
    "version": "0.0.9",
    "sentence": "CAN Bus library for MRMS mrm-ref-can"
  },
  {
    "name": "mrm-robot",
    "version": "0.0.22",
    "sentence": "CAN Bus library for a base class for used-defined robots."
  },
  {
    "name": "mrm-servo",
    "version": "0.0.9",
    "sentence": "Library for MRMS mrm-servo"
  },
  {
    "name": "mrm-switch",
    "version": "0.0.5",
    "sentence": "Library for MRMS mrm-switch"
  },
  {
    "name": "mrm-therm-b-can",
    "version": "0.0.7",
    "sentence": "CAN Bus library for MRMS mrm-therm-b-can."
  },
  {
    "name": "mrm-us-b",
    "version": "0.0.5",
    "sentence": "CAN Bus library for MRMS mrm-us-b"
  },
  {
    "name": "mrm-us1",
    "version": "0.0.4",
    "sentence": "CAN Bus library for MRMS mrm-us1"
  },
  {
    "name": "ms5540c",
    "version": "1.1.0",
    "sentence": "Arduino library for MS5540C-series sensors"
  },
  {
    "name": "msTask",
    "version": "1.0.3",
    "sentence": "Use hardware Timer1 to run tasks in time preset"
  },
  {
    "name": "msToString",
    "version": "1.2.1",
    "sentence": "Provides a function to convert a number of milliseconds into a string."
  },
  {
    "name": "muCom",
    "version": "2.0.0",
    "sentence": "The reliable, fast and easy way to exchange binary data via UART"
  },
  {
    "name": "muTimer",
    "version": "0.1.1",
    "sentence": "Arduino library to easily use on/off delays and cycle timers with non-blocking functions."
  },
  {
    "name": "mudlink",
    "version": "0.0.3",
    "sentence": "Modular UART Duplex Link: COBS, CRC, flow control and delivery guarantees on any UART port."
  },
  {
    "name": "mufonts",
    "version": "0.2.0",
    "sentence": "Fonts for GFX library and muwerk mupplets"
  },
  {
    "name": "multi-half-bridge",
    "version": "4.1.0",
    "sentence": "Library of Infineon Multi Half-Bridge IC controllers family"
  },
  {
    "name": "multiLogger",
    "version": "0.0.9",
    "sentence": "Ever wanted to log easily using one or multiple outputs (serial, spiffs, tcp, udp)?"
  },
  {
    "name": "multiplePinOps",
    "version": "0.2.1",
    "sentence": "An Arduino library to drive multiple pins with the same API."
  },
  {
    "name": "munet",
    "version": "0.4.2",
    "sentence": "Modules for Wifi connectivity, NTP, OTA, MQTT on ESP32/ESP8266 compatible with muwerk scheduler, serial link for other platforms"
  },
  {
    "name": "mupplet-core",
    "version": "0.5.7",
    "sentence": "muwerk mupplet Core Library"
  },
  {
    "name": "mupplet-display",
    "version": "0.2.0",
    "sentence": "muwerk mupplet Display Library"
  },
  {
    "name": "mupplet-sensor",
    "version": "0.2.2",
    "sentence": "muwerk mupplet Sensor Library"
  },
  {
    "name": "mwc_stepper",
    "version": "1.2.0",
    "sentence": "two-pin stepper motor driver library."
  },
  {
    "name": "my92xx",
    "version": "3.0.3",
    "sentence": "MY9291 and MY9231 LED driver library for Arduino AVR and ESP8266"
  },
  {
    "name": "my_STL",
    "version": "1.0.4",
    "sentence": "A port of uClibc++ Arduino library with (multiple definition of std::nothrow) error fix"
  },
  {
    "name": "n2cmu",
    "version": "0.0.2",
    "sentence": "Feedforward Neural Network Coprocessing Microcontroller Unit (CPC via UART) for STM32F103C8T6 Bluepill Development Board written purely in TinyGo."
  },
  {
    "name": "nRF52_MBED_PWM",
    "version": "1.0.3",
    "sentence": "This library enables you to use Hardware-based PWM to create and output PWM to pins on an nRF52840-based Nano_33_BLE board."
  },
  {
    "name": "nRF52_MBED_Slow_PWM",
    "version": "1.2.2",
    "sentence": "This library enables you to use ISR-based PWM channels on an nRF52-based board using Arduino-mbed mbed_nano core such as Nano-33-BLE to create and output PWM any GPIO pin."
  },
  {
    "name": "nRF52_OLED",
    "version": "1.0.0",
    "sentence": "An I2C/SPI display driver for SSD1306/SH1106 oled displays"
  },
  {
    "name": "nRF52_PWM",
    "version": "1.0.1",
    "sentence": "This library enables you to use Hardware-based PWM channels on nRF52-based boards to create and output PWM to pins."
  },
  {
    "name": "nRF52_Slow_PWM",
    "version": "1.2.2",
    "sentence": "This library enables you to use ISR-based PWM channels on an nRF52-based board using Adafruit_nRF52_Arduino core such as Itsy-Bitsy nRF52840 to create and output PWM any GPIO pin."
  },
  {
    "name": "nRF905 Radio Library",
    "version": "4.0.2",
    "sentence": "nRF905 Radio Library for Arduino"
  },
  {
    "name": "nanoFORTH",
    "version": "2.0.0",
    "sentence": "A simple and useful Forth for Nano."
  },
  {
    "name": "nb-twi-cmd",
    "version": "0.7.3",
    "sentence": "NB TWI command set."
  },
  {
    "name": "nlohmann-json",
    "version": "3.11.3",
    "sentence": "Arduino/ESP-IDF library wrapper for https://github.com/nlohmann/json"
  },
  {
    "name": "nodepp",
    "version": "0.0.32",
    "sentence": "nodepp is a C++ library that allow building applications in C++ as if it were being written in NodeJS compatible with Arduino Uno."
  },
  {
    "name": "nonblockingtimer",
    "version": "1.0.0",
    "sentence": "The library offers a straightforward interface for creating and managing non-blocking timers."
  },
  {
    "name": "noolite_tx",
    "version": "0.2.0",
    "sentence": "TX library for noolite 433 MHz communication protocol."
  },
  {
    "name": "nrf_rng",
    "version": "1.1.0",
    "sentence": "True non-deterministic random numbers for nRF5 series chips.  MIT License."
  },
  {
    "name": "nrf_to_nrf",
    "version": "1.2.13",
    "sentence": "OSI Layer 2 - NRF52x to NRF24L01+ ESB communication"
  },
  {
    "name": "nuMROBO",
    "version": "0.0.2",
    "sentence": "An Arduino library for programming nuMROBO robot made by nuMectro Technology."
  },
  {
    "name": "num7",
    "version": "1.0.0",
    "sentence": "ARBITRARY PRECISION GENERAL PURPOSE ARITHMETIC-LOGIC DECIMAL CLASS"
  },
  {
    "name": "nw2s_portenta_SSD1322",
    "version": "0.2.0",
    "sentence": "ssd1322 display driver for Portenta H7"
  },
  {
    "name": "oatmeal-protocol",
    "version": "1.1.0",
    "sentence": "A protocol to control and communicate with Arduino devices from Python."
  },
  {
    "name": "omnicrystal",
    "version": "1.0.8",
    "sentence": "Modular Library for HITACHI HD44780"
  },
  {
    "name": "openafe",
    "version": "0.1.1",
    "sentence": "Library for the OpenAFE Shield"
  },
  {
    "name": "openafe_comm",
    "version": "0.1.1",
    "sentence": "Communication library for the OpenAFE library"
  },
  {
    "name": "oprintstream",
    "version": "0.0.2",
    "sentence": "Work with Arduino Serial libraries in a stream-like manner."
  },
  {
    "name": "optoma",
    "version": "0.1.6",
    "sentence": "Arduino library to control Optoma W305ST beamer over RS232."
  },
  {
    "name": "osap",
    "version": "0.5.0",
    "sentence": "Multi-microcontroller plumbing, etc."
  },
  {
    "name": "pImpl",
    "version": "1.1.3",
    "sentence": "pImpl Idiom in C++"
  },
  {
    "name": "pRNG",
    "version": "1.2.2",
    "sentence": "Pseudo-random number generator"
  },
  {
    "name": "palindrome",
    "version": "0.1.3",
    "sentence": "Palindrome library"
  },
  {
    "name": "pca9633",
    "version": "1.0.0",
    "sentence": "Control NXP PCA9633 (and 9632) four channel PWM led driver chips."
  },
  {
    "name": "pcf8574",
    "version": "1.0.3",
    "sentence": "Arduino library for PCF8574 io expander module"
  },
  {
    "name": "pdulib",
    "version": "0.5.9",
    "sentence": "A library written in C++ to encode/decode PDU data for GSM modems. Both GSM 7-bit and UCS-2 16 bit alphabets are supported which mean, in practice, you can send/receive SMS in any language (including emojis)."
  },
  {
    "name": "pepstep",
    "version": "1.0.0",
    "sentence": "Stepper Motor Scheduler for Arduino"
  },
  {
    "name": "percent_encode",
    "version": "2.0.4",
    "sentence": "Convert between URL-unsafe string and percent encoded string."
  },
  {
    "name": "pfodParser",
    "version": "3.63.1",
    "sentence": "A library to parse pfod messages sent from pfodApp and provides support for sending drawing commands to pfodApp"
  },
  {
    "name": "pgm_utils",
    "version": "1.0.4",
    "sentence": "Wrappers and helpers for Arduino PROGMEM functions"
  },
  {
    "name": "phyphox BLE",
    "version": "1.2.3",
    "sentence": "Use the app phyphox to visualize your sensor data on your phone or tablet!"
  },
  {
    "name": "pid-autotune",
    "version": "1.0.0",
    "sentence": "PID autotuning library"
  },
  {
    "name": "pimoroniTrackball",
    "version": "0.1.3",
    "sentence": "Connect the Pimoroni RGBW trackball breakout to a microcontroller."
  },
  {
    "name": "ping-arduino",
    "version": "0.1.2",
    "sentence": "A messaging and device api for the Blue Robotics Ping1D echosounder"
  },
  {
    "name": "pixels-dice-interface",
    "version": "1.2.0",
    "sentence": "An Arduino library for Pixels Dice"
  },
  {
    "name": "plotutils",
    "version": "1.0.1",
    "sentence": "2-D vector graphics composition library"
  },
  {
    "name": "pm25senses",
    "version": "1.1.0",
    "sentence": "A library provided to send dust quality data report on PM25 platform."
  },
  {
    "name": "pngle",
    "version": "1.0.2",
    "sentence": "A stream based portable PNG Loader for Embedding"
  },
  {
    "name": "pocketBME280",
    "version": "1.2.4",
    "sentence": "Compact library to interface BME280 sensors"
  },
  {
    "name": "portenta-pro-community-solutions",
    "version": "1.0.0",
    "sentence": "PortentaH7, LoRa and Ethernet Vision Shields and Breakout Board Organized: Robotics, Machine Learning and General Examples"
  },
  {
    "name": "precise_sntp",
    "version": "0.2.5",
    "sentence": "This library is an implementation of the Simple Network Time Protocol (SNTPv4) for the arduino platform providing sub-second precision."
  },
  {
    "name": "pressure",
    "version": "0.3.2",
    "sentence": "Arduino library for pressure conversion."
  },
  {
    "name": "printHelpers",
    "version": "0.4.6",
    "sentence": "Arduino library to help formatting data for printing. 64 bit integers (base 10 and 16). Engineering and scientific notation."
  },
  {
    "name": "programmable_air",
    "version": "1.1.7",
    "sentence": "Basic functions to control the Programmable-Air board."
  },
  {
    "name": "protectedAES",
    "version": "0.1.0",
    "sentence": "AES library with protection against Side Channel Attacks."
  },
  {
    "name": "ps2dev",
    "version": "0.0.4",
    "sentence": "Library to emulate PS2 keyboard/mouse using arduino"
  },
  {
    "name": "ps2shebei",
    "version": "1.0.0",
    "sentence": "将arduino开发板作为ps/2设备端与主机通讯。"
  },
  {
    "name": "ps2zhuji",
    "version": "1.0.0",
    "sentence": "用于arduino开发板与ps/2协议的设备通讯。"
  },
  {
    "name": "pseudospectrum",
    "version": "0.1.0",
    "sentence": "A library that adds spectrum data to a pseudospectrum (additive) using linear interpolation"
  },
  {
    "name": "ptScheduler",
    "version": "2.2.0",
    "sentence": "Arduino timing library for writing non-blocking periodic tasks without using delay or millis routines."
  },
  {
    "name": "pulseAny",
    "version": "1.0.1",
    "sentence": "Arduino library to pulse any digital port in any frequency"
  },
  {
    "name": "pulseInput",
    "version": "1.1.0",
    "sentence": "Non-blocking alternative to pulseIn"
  },
  {
    "name": "pushButton",
    "version": "1.0.5",
    "sentence": "A simple library for Push Buttons."
  },
  {
    "name": "pzem-edl",
    "version": "1.2.0",
    "sentence": "PZEM event-driven library"
  },
  {
    "name": "qlibs",
    "version": "1.3.4",
    "sentence": "A collection of useful libraries for embedded systems."
  },
  {
    "name": "r4SwRTC",
    "version": "1.0.1",
    "sentence": "A simple software RTC library for Arduino UNO R4."
  },
  {
    "name": "r89m Buttons",
    "version": "2.0.1",
    "sentence": "A library that makes working with buttons simple."
  },
  {
    "name": "r89m CapacitiveButton",
    "version": "1.0.0",
    "sentence": "Handle CapacitiveButtons, powered by the CapacitiveSensor library"
  },
  {
    "name": "r89m MPR121Button",
    "version": "1.0.0",
    "sentence": "Handle MPR121Buttons, powered by Adafruit's MPR121 library"
  },
  {
    "name": "r89m PushButton",
    "version": "1.0.1",
    "sentence": "Handle PushButtons, debounced using the Bounce2 library."
  },
  {
    "name": "radar-bgt60",
    "version": "1.1.2",
    "sentence": "C++ library for the BGT60LTR11AIP - XENSIV™ 60 Ghz Radar from Infineon"
  },
  {
    "name": "randomHelpers",
    "version": "0.2.7",
    "sentence": "Arduino library with helper function for faster random bits"
  },
  {
    "name": "rastr",
    "version": "0.1.1",
    "sentence": "A small, lightweight header-only graphics library"
  },
  {
    "name": "rc-switch",
    "version": "2.6.4",
    "sentence": "Operate 433/315Mhz devices."
  },
  {
    "name": "readguy",
    "version": "1.4.1",
    "sentence": "A free E-paper display driver library supports 16-level greyscale."
  },
  {
    "name": "redkea",
    "version": "1.1.0",
    "sentence": "Build custom user interfaces to control your devices using your smartphone."
  },
  {
    "name": "relativity",
    "version": "0.1.5",
    "sentence": "library with relativity functions."
  },
  {
    "name": "retroTerm",
    "version": "0.1.6",
    "sentence": "A library for creating GUI-esque interfaces in a terminal emulator with a microcontroller."
  },
  {
    "name": "rgbled",
    "version": "0.1.1",
    "sentence": "A library for using a RGB LED."
  },
  {
    "name": "rhio-LIS2HH12",
    "version": "0.1.2",
    "sentence": "Measure acceleration with the LIS2HH12"
  },
  {
    "name": "rhio-pinmap",
    "version": "2.1.0",
    "sentence": "Macro definitions for compatibility among rhomb.io Master modules"
  },
  {
    "name": "roo_backport",
    "version": "1.0.1",
    "sentence": "Backport of some of C++17 and C++20 functionality, so that it can be used with older compilers."
  },
  {
    "name": "roo_collections",
    "version": "1.1.6",
    "sentence": "Memory-conscious collections, supporting flat small hashtables, hash maps, and hash sets."
  },
  {
    "name": "roo_control",
    "version": "1.0.2",
    "sentence": "Arduino relays, port extenders, debouncing, retries: common abstractions and implementations."
  },
  {
    "name": "roo_display",
    "version": "2.0.0",
    "sentence": "Graphics library, supporting variety of display devices and touch panels."
  },
  {
    "name": "roo_flags",
    "version": "1.0.0",
    "sentence": "Minimalistic library for run-time configuration flags."
  },
  {
    "name": "roo_icons",
    "version": "1.1.0",
    "sentence": "Collection of icons for use with the roo_display library."
  },
  {
    "name": "roo_io",
    "version": "1.1.0",
    "sentence": "Unified I/O library for microcontrollers."
  },
  {
    "name": "roo_io_arduino",
    "version": "1.1.0",
    "sentence": "Arduino filesystem adapters for the roo_io library."
  },
  {
    "name": "roo_logging",
    "version": "1.0.6",
    "sentence": "Logging library, targeted at ESP32 and related boards."
  },
  {
    "name": "roo_material_icons",
    "version": "1.0.2",
    "sentence": "Collection of icons for use with the roo_display library."
  },
  {
    "name": "roo_onewire",
    "version": "1.0.1",
    "sentence": "Arduino library for OneWire thermometers."
  },
  {
    "name": "roo_prefs",
    "version": "1.0.3",
    "sentence": "ESP32 'Preferences' utility library for management of persistent settings, avoiding name clashes by using namespaces and transactions."
  },
  {
    "name": "roo_scheduler",
    "version": "2.0.0",
    "sentence": "Allows scheduling delayed and/or repetitive tasks."
  },
  {
    "name": "roo_temperature",
    "version": "1.1.0",
    "sentence": "Type-safe and unit-independent representation of temperature and thermometers."
  },
  {
    "name": "roo_time",
    "version": "1.1.1",
    "sentence": "Basic management of elapsed time, wall time, and date time, with multi-timezone support."
  },
  {
    "name": "roo_time_ds3231",
    "version": "1.0.0",
    "sentence": "Arduino driver for DS3231 real-time clock, compliant with roo_time."
  },
  {
    "name": "roo_wifi",
    "version": "1.0.1",
    "sentence": "WiFi controller library for ESP32, supporting storing persistent configuration in flash, and abstracting away the architecture."
  },
  {
    "name": "roo_windows",
    "version": "1.3.0",
    "sentence": "GUI library, targeted at ESP32 and related boards, for building interactive, touch-based, mobile-phone-like UI interfaces."
  },
  {
    "name": "roo_windows_onewire",
    "version": "1.0.0",
    "sentence": "GUI OneWire thermometers configurator for ESP32, using roo_windows."
  },
  {
    "name": "roo_windows_wifi",
    "version": "1.0.0",
    "sentence": "GUI library, targeted at ESP32 and related boards, for building interactive, touch-based, mobile-phone-like UI interfaces."
  },
  {
    "name": "ros2arduino",
    "version": "0.2.1",
    "sentence": "ROS2 Library for Arduino"
  },
  {
    "name": "rotaryDecoder",
    "version": "0.4.0",
    "sentence": "Arduino library for a PCF8574 based rotary decoder."
  },
  {
    "name": "rotaryDecoder8",
    "version": "0.1.1",
    "sentence": "Arduino library for a PCF8575 based rotary decoder."
  },
  {
    "name": "rotaryDecoderSwitch",
    "version": "0.4.0",
    "sentence": "Arduino library for a PCF8574 based rotary decoder + switch."
  },
  {
    "name": "rotaryDecoderSwitch5",
    "version": "0.1.0",
    "sentence": "Arduino library for a PCF8575 based rotary decoder + switch."
  },
  {
    "name": "rp2040-encoder-library",
    "version": "0.2.0",
    "sentence": "Quadrature Encoder library for RP2040/RP2350"
  },
  {
    "name": "rrdtool",
    "version": "1.0.0",
    "sentence": "Round Robin Database Tool"
  },
  {
    "name": "rs485_asukiaaa",
    "version": "1.2.8",
    "sentence": "Functions and classes about rs485 modbus."
  },
  {
    "name": "rssRead",
    "version": "0.1.0",
    "sentence": "Read rss (xml) and return an array of strings."
  },
  {
    "name": "rtc_utils",
    "version": "1.0.3",
    "sentence": "Wrapper for esp8266 rtc functions"
  },
  {
    "name": "runner",
    "version": "0.2.0",
    "sentence": "A kind of shell for Arduino."
  },
  {
    "name": "runningAngle",
    "version": "0.2.1",
    "sentence": "Library to average angles by means of low pass filtering with wrapping."
  },
  {
    "name": "rupertobot",
    "version": "1.0.0",
    "sentence": "Biblioteca de Arduino para el control del robot Rupertobot"
  },
  {
    "name": "sACN",
    "version": "1.1.0",
    "sentence": "Library for sACN ANSI E1.31"
  },
  {
    "name": "sACNSource",
    "version": "0.0.2",
    "sentence": "defines sACN (ANSI E1.31) protocol packets for DMX-512 lighting control."
  },
  {
    "name": "sMQTTBroker",
    "version": "0.1.8",
    "sentence": "A simple broker library for MQTT messaging."
  },
  {
    "name": "sTune",
    "version": "2.4.0",
    "sentence": "Open loop PID autotuner using a novel s-curve inflection point test method."
  },
  {
    "name": "sarmfsw",
    "version": "3.6.0",
    "sentence": "sarmfsw"
  },
  {
    "name": "scd30_modbus",
    "version": "1.0.0",
    "sentence": "Arduino library for the SCD30 sensors"
  },
  {
    "name": "sclm-p105_shield",
    "version": "0.0.2",
    "sentence": "SCLM-P105 SHIELD library"
  },
  {
    "name": "sd-ducky-v1",
    "version": "1.0.0",
    "sentence": "HID attack with SD card support"
  },
  {
    "name": "secTimer",
    "version": "1.0.0",
    "sentence": "Simple seconds counter"
  },
  {
    "name": "semilimes",
    "version": "1.1.4",
    "sentence": "sdk to allow MCUs to connect to semilimes"
  },
  {
    "name": "sensirion-sps",
    "version": "1.1.2",
    "sentence": "Support for Sensirion's SPS30 particulate matter sensor"
  },
  {
    "name": "serial-readline",
    "version": "0.1.0",
    "sentence": "Arduino library for buffered serial line reading"
  },
  {
    "name": "serial-transport",
    "version": "0.2.0",
    "sentence": "ASCII based protocol to communicate reliably over a serial connection without hardware flow control."
  },
  {
    "name": "serialEEPROM",
    "version": "2.0.1",
    "sentence": "Arduino Library for I2C EEPROM"
  },
  {
    "name": "serialIO",
    "version": "0.2.4",
    "sentence": "RC protocol"
  },
  {
    "name": "serialMux",
    "version": "1.1.0",
    "sentence": "Serial multiplexer for Arduino"
  },
  {
    "name": "servodht11",
    "version": "1.0.10",
    "sentence": "Arduino library for DHT11, DHT22, etc Temp & Humidity Sensors"
  },
  {
    "name": "settingsManager",
    "version": "1.0.2",
    "sentence": "Simple settings management for ESP8266"
  },
  {
    "name": "sevenSegment",
    "version": "2.5.0",
    "sentence": "Control infinite seven segment displays with your arduino!"
  },
  {
    "name": "sevenSegmentDisplay",
    "version": "1.0.0",
    "sentence": "Allow to control both common-anode or common-cathode 7 segment displays"
  },
  {
    "name": "sf22aswt",
    "version": "0.1.5",
    "sentence": "Lazy loading a Soundfont2 sf2 file that can then be converted into a object, that can then be used with Teensy AudioSynthWavetable. Latest release uses automatic use of extmem if available, and also have early check if available ram is sufficient."
  },
  {
    "name": "sharpIRSensor",
    "version": "0.0.2",
    "sentence": "Toolbox for IR meters by Sharp"
  },
  {
    "name": "shift7seg",
    "version": "2.0.0",
    "sentence": "A library to simplify the use of 74hc595 serial in/parallel out shift registers as drivers for a 4 digit 7 segment display."
  },
  {
    "name": "sht3x-dis-arduino-lib",
    "version": "1.0.0",
    "sentence": "A library for SHT3X-DIS sensor from Sensirion"
  },
  {
    "name": "simple ht16k33 library",
    "version": "1.0.2",
    "sentence": "Arduino library code for the htk1633 chip to do things like turn on LEDs or scan keys."
  },
  {
    "name": "simple-web-dashboard",
    "version": "0.1.0",
    "sentence": "Displays variable values on a simple web page"
  },
  {
    "name": "simpleDSTadjust",
    "version": "1.2.0",
    "sentence": "Automatic Daylight Saving Time adjust functionality for Arduino/ESP8266"
  },
  {
    "name": "simpleEvents",
    "version": "1.0.0",
    "sentence": "Implement simple event loops for micro-controllers using Arduino’s millis()."
  },
  {
    "name": "simpleRPC",
    "version": "3.2.0",
    "sentence": "Simple RPC implementation for Arduino."
  },
  {
    "name": "siot_core_lib",
    "version": "2.2.0",
    "sentence": "Platform for IoT devices connect to SIOT Data Hub"
  },
  {
    "name": "sipf-arduino-client",
    "version": "0.2.0",
    "sentence": "SIPF Library for Arduino"
  },
  {
    "name": "six-digit-seven-segment",
    "version": "2.1.0",
    "sentence": "A library that allows you to easily controll a 6-digit 7-Segment Multiplex Matrix"
  },
  {
    "name": "slight_ButtonInput",
    "version": "1.0.0",
    "sentence": "Event based button input."
  },
  {
    "name": "slight_DebugMenu",
    "version": "1.0.0",
    "sentence": "Helper Library to create Simple Menu."
  },
  {
    "name": "slight_FDC1004",
    "version": "1.0.0",
    "sentence": "A library to interface to an TI FDC1004 Capacitiv sensor."
  },
  {
    "name": "slight_Fade",
    "version": "3.1.2",
    "sentence": "Timed value fading."
  },
  {
    "name": "slight_LiquidCrystalDummy",
    "version": "1.0.0",
    "sentence": "Helper Library for LCD usage."
  },
  {
    "name": "slight_PlainTime",
    "version": "2.0.0",
    "sentence": "basic time formating"
  },
  {
    "name": "slight_RotaryEncoder",
    "version": "1.0.0",
    "sentence": "Event based rotary ecnoder input."
  },
  {
    "name": "slight_TLC5957",
    "version": "1.0.0",
    "sentence": "Easy Access to lots of RGB-LEDs."
  },
  {
    "name": "slight_easing",
    "version": "1.0.0",
    "sentence": "very simple easing functions."
  },
  {
    "name": "slight_mapping",
    "version": "2.0.1",
    "sentence": "simple range mapping helper"
  },
  {
    "name": "slowAES",
    "version": "1.0.0",
    "sentence": "slowAES bypass the test cookie with nodeMcu"
  },
  {
    "name": "smart-input-filter",
    "version": "0.3.2",
    "sentence": "A stable, unit-tested filter library"
  },
  {
    "name": "smooth",
    "version": "0.1.1",
    "sentence": "Anlaog input smoother"
  },
  {
    "name": "snakelights",
    "version": "0.0.2",
    "sentence": "SnakeLights library for snake wired NeoPixels"
  },
  {
    "name": "solar2lunar",
    "version": "1.0.0",
    "sentence": "Arduino library for convert Gregorian calendar to Vietnamese lunar."
  },
  {
    "name": "solarfunctions",
    "version": "1.0.3",
    "sentence": "A library to precisely compute the position of the sun, sunrise/sunset and other solar metrics."
  },
  {
    "name": "somo-ii-lib",
    "version": "0.1.1",
    "sentence": "A controller library for the SOMO-II MP3 decoder"
  },
  {
    "name": "souliss",
    "version": "7.4.1-beta",
    "sentence": "SmartHome Networking Framework"
  },
  {
    "name": "spaiot-lib",
    "version": "1.2.4",
    "sentence": "Supervision and Control library for Intxx PxxxSPA with an ESP8266 or ESP32"
  },
  {
    "name": "spartan_edge_esp32_boot",
    "version": "1.1.1",
    "sentence": "Enables the use of the Spartan Edge Accelerator's on-board ESP32 to load FPGA bitstream from SD card on boot"
  },
  {
    "name": "spi_lcd_read",
    "version": "1.0.0",
    "sentence": "Tiny simple library to read data from registers on this class of simple and cheap SPI LCD controllers (ILI9341, ST7789, etc)."
  },
  {
    "name": "spin-timer",
    "version": "3.0.0",
    "sentence": "Universal Timer with 1 millisecond resolution, supporting OOP principles."
  },
  {
    "name": "spreGnssRtcLib",
    "version": "0.1.1",
    "sentence": "A simple library for using Spresense GNSS and RTC."
  },
  {
    "name": "spreLgfxTouch",
    "version": "0.1.1",
    "sentence": "Library for displaying JPEG images on ILI9341 and handling touch input with XPT2046 for Spresense."
  },
  {
    "name": "spreMP3Lib",
    "version": "0.1.0",
    "sentence": "A simple library for MP3 playback on Spresense"
  },
  {
    "name": "sprinkler-system",
    "version": "1.0.3",
    "sentence": "Automated irrigation system with webui, valve controls, metering and other sensors."
  },
  {
    "name": "ss_oled",
    "version": "4.3.1",
    "sentence": "Small and simple OLED display library."
  },
  {
    "name": "ssd1306",
    "version": "1.8.5",
    "sentence": "Display driver for VGA, SSD1306, SSD1325/SSD1327, SSD1331, SSD1351, ILI9163/ST7735, ILI9341, PCD8544."
  },
  {
    "name": "ssd1306xled",
    "version": "0.0.1",
    "sentence": "SSD1306, SSD1315 or SSH1106 OLED screen driver"
  },
  {
    "name": "ssd1327",
    "version": "2.0.0",
    "sentence": "BitBank SSD1327+SSD1322 OLED display library."
  },
  {
    "name": "st7567sfGK 128x64 i2c LCD driver for Generation Klick",
    "version": "0.4.3",
    "sentence": "st7567s i2c LC display library 128 x 64 pixel monochrome"
  },
  {
    "name": "stackchan-arduino",
    "version": "0.0.2",
    "sentence": "Stackchan library for M5Stack"
  },
  {
    "name": "statHelpers",
    "version": "0.2.0",
    "sentence": "Arduino library with a number of statistic helper functions."
  },
  {
    "name": "staticFunctional",
    "version": "0.1.0",
    "sentence": "Drop in replacement for std::function for use in embedded systems"
  },
  {
    "name": "statsdclient",
    "version": "0.0.1",
    "sentence": "Report metrics using statsd"
  },
  {
    "name": "statusled",
    "version": "1.1.0",
    "sentence": "Library to drive a status LED like off/on, blinking, counting, flashing..."
  },
  {
    "name": "stdcol",
    "version": "0.1.2",
    "sentence": "Collections/Data Structures library"
  },
  {
    "name": "steamrocket",
    "version": "0.9.0",
    "sentence": "Simpe & secure telemetry"
  },
  {
    "name": "stemi-hexapod",
    "version": "3.0.0",
    "sentence": "Library for controlling STEMI Hexapod v3."
  },
  {
    "name": "string_asukiaaa",
    "version": "1.0.7",
    "sentence": "Functions about string for Arduino."
  },
  {
    "name": "sunezy-mon",
    "version": "1.0.2",
    "sentence": "Arduino Library to communicate with SunEzy / Orion inverters."
  },
  {
    "name": "sunset",
    "version": "1.1.7",
    "sentence": "Allows calculation of sunrise, sunset, and moonphase"
  },
  {
    "name": "super_easing",
    "version": "1.0.0",
    "sentence": "A comprehensive servo easing library for Arduino"
  },
  {
    "name": "surf-checker",
    "version": "0.0.1",
    "sentence": "This library, in conjunction with the Surf Checker hardware, enables an Arduino Nano 33 IoT to display your local surf info."
  },
  {
    "name": "swRTC",
    "version": "1.2.8",
    "sentence": "Software implementation of a Real-Time Clock for Arduino boards and Atmel microcontrollers."
  },
  {
    "name": "sx1280OverSpi",
    "version": "1.1.6",
    "sentence": "Arduino library interacting and sending messages with a 2.4Ghz Lora modem."
  },
  {
    "name": "sysfile",
    "version": "1.0.3",
    "sentence": "sysfile manager for Arduino. It uses littlefs"
  },
  {
    "name": "t6iot",
    "version": "2.0.12",
    "sentence": "Library to connect Arduino Sensors to t6iot framework SaaS or On-Premise."
  },
  {
    "name": "tcMenu",
    "version": "4.4.0",
    "sentence": "Menu library for Arduino with IoT capabilities that supports many input and display devices with a designer UI, code generator, CLI, and strong remote control capability."
  },
  {
    "name": "tcUnicodeHelper",
    "version": "1.2.1",
    "sentence": "Adds tcUnicode UTF-8 support to Adafruit_GFX, U8G2, tcMenu, and TFT_eSPI graphics libraries with a graphical font creation utility available. Works with existing libraries"
  },
  {
    "name": "tca9544a",
    "version": "0.1.0",
    "sentence": "Arduino library to control the TCA9544A I2C bus multiplexer"
  },
  {
    "name": "tcs3200",
    "version": "1.3.1",
    "sentence": "tcs3200 color sensor library"
  },
  {
    "name": "tdslite",
    "version": "0.8.0",
    "sentence": "A lightweight MSSQL connector/TDS driver for embedded devices."
  },
  {
    "name": "text1306",
    "version": "1.0.0",
    "sentence": "Light weight text display for SSD1306 displays"
  },
  {
    "name": "textparser",
    "version": "1.1.0",
    "sentence": "Line based text parser."
  },
  {
    "name": "tflm_cortexm",
    "version": "1.0.0",
    "sentence": "TensorFlow for ARM Cortex-M"
  },
  {
    "name": "tflm_esp32",
    "version": "2.0.0",
    "sentence": "TensorFlow for ESP32"
  },
  {
    "name": "tgx",
    "version": "1.0.3",
    "sentence": "A tiny 2D and 3D graphics library."
  },
  {
    "name": "thinger.io",
    "version": "2.31.0",
    "sentence": "Arduino library for IOTMP protocol used on Thinger.io IOT Platform."
  },
  {
    "name": "timersapi",
    "version": "1.0.0",
    "sentence": "Library for timers, countdowns and counters."
  },
  {
    "name": "timestamp32bits",
    "version": "1.1.0",
    "sentence": "A library for calculating UNIX-like timestamps for dates AFTER January 1, 1970 or January 1 of whichever year is selected as EPOCH."
  },
  {
    "name": "timing",
    "version": "0.2.6",
    "sentence": "Arduino library with wrapper classes for seconds, millis and micros."
  },
  {
    "name": "tiny-collections",
    "version": "0.2.1",
    "sentence": "Lightweight, compact templated collections classes."
  },
  {
    "name": "tinyCommand",
    "version": "0.1.0",
    "sentence": "A simple Arduino IDE library for serial command processing."
  },
  {
    "name": "tinyCore",
    "version": "0.3.0",
    "sentence": "A mechanism to easily describe multi-core (esp32/Arduino)."
  },
  {
    "name": "tinyECC",
    "version": "1.0.0",
    "sentence": "Elliptic Curve Cryptography for Arduino Micro-controllers."
  },
  {
    "name": "tinyESPNow",
    "version": "0.0.1",
    "sentence": "Arduino library for tinyESPNow."
  },
  {
    "name": "tinyI2S",
    "version": "0.0.1",
    "sentence": "Arduino library for tinyI2S."
  },
  {
    "name": "tinySHT2x",
    "version": "0.2.0",
    "sentence": "Arduino library for the SHT20, SHT21 and SHT25 temperature and humidity sensor. Optimized for AVR tiny."
  },
  {
    "name": "tinySPI",
    "version": "1.1.2",
    "sentence": "tinySPI is an Arduino SPI master library for ATtiny24/44/84, 25/45/85, 261/461/861, 2313/4313 MCUs."
  },
  {
    "name": "tinyServo84",
    "version": "1.0.0",
    "sentence": "A small library to control servos on ATtiny84 (Timer1 interrupt, CTC mode)"
  },
  {
    "name": "tinyServo85",
    "version": "1.0.0",
    "sentence": "A small library to control servos on ATtiny85 (Timer1 interrupt, CTC mode)"
  },
  {
    "name": "tinyTimeR",
    "version": "0.0.2",
    "sentence": "Easily implement timer interrupts."
  },
  {
    "name": "tinyUDP",
    "version": "0.0.2",
    "sentence": "tiny UDP send & recv."
  },
  {
    "name": "tinyhal",
    "version": "0.1.1",
    "sentence": "Tiny platform hardware abstraction layer"
  },
  {
    "name": "tinyml4all",
    "version": "0.0.1",
    "sentence": "Companion library for the book"
  },
  {
    "name": "tinyproto",
    "version": "1.0.0",
    "sentence": "Allows to communicate other boards/PC via physical connection."
  },
  {
    "name": "toneAC",
    "version": "1.5.0",
    "sentence": "Replacement to the standard tone library with many advantages"
  },
  {
    "name": "toolbox",
    "version": "0.6.1",
    "sentence": "Collection of common utilities and functions."
  },
  {
    "name": "ttestTable",
    "version": "1.0.0",
    "sentence": "Definition file for t-Tesst alpha level look-up tables for different degrees of freedom."
  },
  {
    "name": "twilio-esp32-client",
    "version": "0.1.0",
    "sentence": "Library for sending and receiving SMS/MMS using Twilio."
  },
  {
    "name": "tynyDC",
    "version": "0.0.1",
    "sentence": "Using mx1919 dual DC motor driver tiny."
  },
  {
    "name": "u-blox GNSS",
    "version": "0.0.1",
    "sentence": "GNSS GPS library without bells and whistles, simply works, low power."
  },
  {
    "name": "uArmLibrary",
    "version": "2.2.1",
    "sentence": "uArm Library for Arduino"
  },
  {
    "name": "uBitcoin",
    "version": "0.2.0",
    "sentence": "Brings Bitcoin to embedded devices"
  },
  {
    "name": "uCDB",
    "version": "0.5.5",
    "sentence": "API for querying Constant DataBase file store."
  },
  {
    "name": "uCOS-II",
    "version": "2.92.10",
    "sentence": "MicroC/OS-II 2.92.10 for ARM Cortex M3."
  },
  {
    "name": "uCOS-III_Due",
    "version": "0.0.1",
    "sentence": "MicroC/OS-III 3.08.01 for ARM Cortex M3."
  },
  {
    "name": "uCRC16BPBLib",
    "version": "2.0.0",
    "sentence": "Tiny and cross-device compatible CCITT CRC16 Bit Per Bit or Byte Per Byte calculator library - uCRC16BPBLib"
  },
  {
    "name": "uCRC16Lib",
    "version": "2.0.0",
    "sentence": "Tiny and cross-device compatible CCITT CRC16 calculator library - uCRC16Lib"
  },
  {
    "name": "uCRC16XModemLib",
    "version": "1.0.0",
    "sentence": "Tiny and cross-device compatible CRC16 XModem calculator library UKHAS.org.uk compatible - uCRC16XModemLib"
  },
  {
    "name": "uClock",
    "version": "2.1.0",
    "sentence": "BPM clock generator for Arduino platform."
  },
  {
    "name": "uCompression",
    "version": "0.1.1",
    "sentence": "Simple and fast compression/decompression library."
  },
  {
    "name": "uConfigLib",
    "version": "1.0.0",
    "sentence": "Arduino (standard C) library to store configuration values in a registry-like structure"
  },
  {
    "name": "uDebugLib",
    "version": "1.0.2",
    "sentence": "Simple convenient header file to centralize simple serial debug with simple activation/deactivation and some custmization"
  },
  {
    "name": "uECG",
    "version": "1.1.3",
    "sentence": "Allows to get data from uECG device using nRF24 module."
  },
  {
    "name": "uEEPROMLib",
    "version": "1.2.1",
    "sentence": "I2C EEPROM library. Split from uRTCLib https://github.com/Naguissa/uRTCLib - This library controls any I2C EEPROM, independent ones or incorporated on DS1307 or DS3231 RTCs."
  },
  {
    "name": "uEspConfigLib",
    "version": "1.0.0",
    "sentence": "The deffinitive ESP32 and ESP8266 configuration Arduino library, uEspConfigLib"
  },
  {
    "name": "uFire PAR Sensor",
    "version": "1.0.0",
    "sentence": "Measure photosynthetically active radiation (PAR)."
  },
  {
    "name": "uFire SHT20",
    "version": "1.1.2",
    "sentence": "Measure atmospheric temperature and humdity."
  },
  {
    "name": "uHexLib",
    "version": "2.1.0",
    "sentence": "Arduino (standard C) tiny and cross-device compatible hexadecimal coding/decoding library"
  },
  {
    "name": "uICAL",
    "version": "0.0.2",
    "sentence": "Library for parsing iCalendar file format."
  },
  {
    "name": "uKit Explore",
    "version": "1.2.28",
    "sentence": "Use to drive all devices provided by UBTECH company."
  },
  {
    "name": "uMFMLib",
    "version": "0.1.0",
    "sentence": "Tiny lib to enode and decode FM and MFM data streams"
  },
  {
    "name": "uMT",
    "version": "2.6.0",
    "sentence": "Micro Multi Tasker specifically designed for ARDUINO UNO, MEGA and DUE boards."
  },
  {
    "name": "uMessagesBrokerLib",
    "version": "1.1.0",
    "sentence": "Arduino (standard C) library to communicate between devices"
  },
  {
    "name": "uMulti",
    "version": "0.1.1",
    "sentence": "Cooperative multitasking for the AVR line of microcontrollers."
  },
  {
    "name": "uMuxOutputLib",
    "version": "1.0.3",
    "sentence": "Arduino, ESP8266 and STM32 7-segment multiplexed outputs library"
  },
  {
    "name": "uMyo_BLE",
    "version": "1.1.2",
    "sentence": "Allows to get data from uMyo devices using BLE-enabled Arduinos (nRF52x and ESP32)."
  },
  {
    "name": "uMyo_RF24",
    "version": "1.1.0",
    "sentence": "Allows to get data from uMyo devices using nRF24 module AND nRF52840 boards."
  },
  {
    "name": "uNeurai",
    "version": "0.0.1",
    "sentence": "Brings Neurai to embedded devices"
  },
  {
    "name": "uRTCLib",
    "version": "6.9.2",
    "sentence": "Really tiny library to basic RTC functionality on Arduino. DS1307, DS3231 and DS3232 RTCs are supported. See https://github.com/Naguissa/uEEPROMLib for EEPROM support. Temperature, Alarms, SQWG, Power lost and RAM support."
  },
  {
    "name": "uS82",
    "version": "1.1.1",
    "sentence": "A control library for uS82 and uS112+ Board."
  },
  {
    "name": "uSevenSegmentLib",
    "version": "1.1.0",
    "sentence": "Really tiny library to basic 7 segments displays"
  },
  {
    "name": "uStepper",
    "version": "1.3.0",
    "sentence": "Library offering support for uStepper"
  },
  {
    "name": "uStepper S",
    "version": "2.3.2",
    "sentence": "Library offering support for uStepperS"
  },
  {
    "name": "uStepper S-lite",
    "version": "1.2.0",
    "sentence": "Library offering support for uStepper S-lite"
  },
  {
    "name": "uStepperS32",
    "version": "1.1.0",
    "sentence": "Library offering support for uStepper S32"
  },
  {
    "name": "uTLGBotLib",
    "version": "1.0.0",
    "sentence": "Universal Telegram Bot library for Arduino, ESP-IDF and Native (Windows and Linux) devices, that let you create Telegram Bots."
  },
  {
    "name": "uTimerBrokerLib",
    "version": "1.0.2",
    "sentence": "Broker for multiple timed functions for uTimerLib"
  },
  {
    "name": "uTimerLib",
    "version": "1.7.2",
    "sentence": "Tiny and cross-device compatible timer library"
  },
  {
    "name": "uUnixDate",
    "version": "1.2.0",
    "sentence": "Tiny and simplified library to convert to and from UNIX timestamps"
  },
  {
    "name": "ucPack",
    "version": "0.1.7",
    "sentence": "Unified C++ Packetizer"
  },
  {
    "name": "uiwidgets",
    "version": "0.1.0",
    "sentence": "A library for drawing graphical user interfaces via the TFT_eSPI library."
  },
  {
    "name": "ultrasonic",
    "version": "1.0.0",
    "sentence": "nothing"
  },
  {
    "name": "um3750-library",
    "version": "0.1.0",
    "sentence": "Emulate the UM3750 encoder and decoder."
  },
  {
    "name": "unPhoneLibrary",
    "version": "9.0.0",
    "sentence": "An Arduino library for the unPhone."
  },
  {
    "name": "unit-system",
    "version": "0.8.0-rc9",
    "sentence": "Si unit types for C++"
  },
  {
    "name": "unoHID",
    "version": "0.1.3",
    "sentence": "Use Uno R3 as USB Mouse + Keyboard."
  },
  {
    "name": "unzipLIB",
    "version": "1.0.0",
    "sentence": "A library to extract files from ZIP archives"
  },
  {
    "name": "usb_midi_host",
    "version": "1.1.6",
    "sentence": "Pico USB MIDI Host library for Arduino"
  },
  {
    "name": "utils_asukiaaa",
    "version": "1.0.6",
    "sentence": "Utility functions for Arduino."
  },
  {
    "name": "vbus-arduino",
    "version": "1.1.0",
    "sentence": "Allows arduino to read data from some vbus compatible controllers."
  },
  {
    "name": "vdp-gl",
    "version": "1.0.5",
    "sentence": "Fork of FabGL 1.0.8 customized for agon-vdp."
  },
  {
    "name": "virtmem",
    "version": "1.0.0",
    "sentence": "Virtual memory library to easily extend RAM."
  },
  {
    "name": "vl53l0xTOFA",
    "version": "1.0.5",
    "sentence": "modification of Pololu VL53L0X distance sensor library with amplitude (signal and ambient) sensing"
  },
  {
    "name": "vn_lunar",
    "version": "1.0.0",
    "sentence": "Arduino library for convert Gregorian calendar to Vietnamese lunar."
  },
  {
    "name": "vovagorodok_ArduinoBleChess",
    "version": "0.2.0",
    "sentence": "Bluetooth low energy (BLE) library for communication via CECP chess protocol."
  },
  {
    "name": "vovagorodok_ArduinoBleOTA",
    "version": "1.1.0",
    "sentence": "Bluetooth low energy (BLE) library for uploads."
  },
  {
    "name": "vovagorodok_ArduinoPin",
    "version": "1.1.0",
    "sentence": "Objective arduino pin"
  },
  {
    "name": "vovagorodok_ArduinoStreamLogger",
    "version": "1.1.4",
    "sentence": "Simple ostream logger"
  },
  {
    "name": "vovagorodok_ArrayUtils",
    "version": "1.2.2",
    "sentence": "Helps to create complex arrays and maps as arrays of pairs"
  },
  {
    "name": "vovagorodok_PicChess",
    "version": "0.9.0",
    "sentence": "PicChess engine"
  },
  {
    "name": "vovagorodok_Servo",
    "version": "1.0.0",
    "sentence": "Simple servo library"
  },
  {
    "name": "waver",
    "version": "2.0.3",
    "sentence": "waver wireless avr board for ISM band,2.54Ghz"
  },
  {
    "name": "wdt_samd21",
    "version": "1.1.0",
    "sentence": "A very simple library for the management of the WDT on ATSAMD21."
  },
  {
    "name": "weathercall",
    "version": "1.0.10",
    "sentence": "An efficient openweather data caller."
  },
  {
    "name": "webthing-arduino",
    "version": "0.12.0",
    "sentence": "A library for creating Web Things using the Web of Things API"
  },
  {
    "name": "weight",
    "version": "0.3.1",
    "sentence": "Library of weight conversion functions"
  },
  {
    "name": "wire_asukiaaa",
    "version": "1.1.13",
    "sentence": "Functions about wire for Arduino."
  },
  {
    "name": "wiring-timer",
    "version": "2.9.0",
    "sentence": "Universal Timer with 1 millisecond resolution, based on system uptime (i.e. Arduino: millis() function or STM32: HAL_GetTick() function), supporting OOP principles."
  },
  {
    "name": "wiring_analog_SAMD_TT",
    "version": "1.1.1",
    "sentence": "Provides same functions as SAMD wiring_analog.c with several changes to fix problems, and a function for ADC calibration."
  },
  {
    "name": "wm8978-esp32",
    "version": "1.0.5",
    "sentence": "An esp32 library for the wm8978 dac."
  },
  {
    "name": "wolfssl",
    "version": "5.7.6",
    "sentence": "A lightweight SSL/TLS library written in ANSI C and targeted for embedded, RTOS, and resource-constrained environments."
  },
  {
    "name": "wordwrap",
    "version": "0.1.0",
    "sentence": "An Arduino word wrap library."
  },
  {
    "name": "wpi-32u4-library",
    "version": "3.5.3",
    "sentence": "Forked Romi 32U4 Arduino library"
  },
  {
    "name": "xbee_serial_array",
    "version": "1.0.5",
    "sentence": "sends and receive string data in mode api with variable length."
  },
  {
    "name": "xsens_mti",
    "version": "0.1.1",
    "sentence": "Portable, unit-tested, from-scratch implementation for serial comms with xsens MTi AHRS modules."
  },
  {
    "name": "xy6020l",
    "version": "1.1.0",
    "sentence": "UART control of XY6020L dcdc"
  },
  {
    "name": "yatest",
    "version": "0.3.0",
    "sentence": "Yet another unit testing framework for Arduino libraries and projects."
  },
  {
    "name": "yfrobot_tts",
    "version": "0.0.4",
    "sentence": "Arduino library for yfrobot TTS modules."
  },
  {
    "name": "youkey_stepper",
    "version": "1.0.0",
    "sentence": "This is a library dedicated to stepper motors for Arduino and microcontrollers."
  },
  {
    "name": "zForce Air Library",
    "version": "1.8.0",
    "sentence": "A library that makes it easy to communicate with the zForce AIR Sensor."
  },
  {
    "name": "zlib_turbo",
    "version": "1.0.0",
    "sentence": "A library to inflate deflated data and unpack gzip files"
  }
]
